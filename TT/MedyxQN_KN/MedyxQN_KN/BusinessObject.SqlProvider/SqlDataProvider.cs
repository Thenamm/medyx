using System.Diagnostics;
using System.Data;
using System.Collections;
using Microsoft.VisualBasic;
using System.Collections.Generic;
using System;
using System.Configuration;
using Microsoft.ApplicationBlocks.Data;
using Csla;
using Csla.Data;
namespace HTC.BusinessObject.Data
{
    public class SqlDataProvider : HTC.Business.DataProvider
    {

        #region "Private Members"
        private const string ProviderType = "data";

        //  private Nobita.Framework.Providers.ProviderConfiguration _providerConfiguration = Nobita.Framework.Providers.ProviderConfiguration.GetProviderConfiguration(ProviderType);        
        
        private string _connectionString;
        private string _providerPath;
        private string _objectQualifier = "";
        private string _databaseOwner;
        private System.Data.SqlClient.SqlConnection _sqlConnection;
        private System.Data.SqlClient.SqlConnection _sqlConnectionserver;
        // noi tru
        private string _connectionStringNoiT;
        private string _providerPathNoiT;
        private string _objectQualifierNoiT = "";
        private string _databaseOwnerNoiT;
        private System.Data.SqlClient.SqlConnection _sqlConnectionserverNoiT;
        // chuyenbn
        private string _connectionStringChuyenBN;
        private string _providerPathChuyenBN;
        private string _objectQualifierChuyenBN = "";
        private string _databaseOwnerChuyenBN;
        private System.Data.SqlClient.SqlConnection _sqlConnectionserverChuyenBN;

        // bc
        private string _connectionStringBC;
        private string _providerPathBC;
        private string _objectQualifierBC = "";
        private string _databaseOwnerBC;
        private System.Data.SqlClient.SqlConnection _sqlConnectionserverBC;
        #endregion

        #region "Constructors"

        public SqlDataProvider()
        {

            // Read the configuration specific information for this provider
            //Nobita.Framework.Providers.Provider objProvider = (Nobita.Framework.Providers.Provider) _providerConfiguration.Providers[_providerConfiguration.DefaultProvider];            


            //// Read the attributes for this provider
            //if (objProvider.Attributes["connectionStringName"] != "" && Nobita.Common.Utilities.Config.GetSetting(objProvider.Attributes["connectionStringName"]) != "")           
            //{
            //    _connectionString = Nobita.Common.Utilities.Config.GetSetting(objProvider.Attributes["connectionStringName"]) + "connection timeout=3000 ";                		
            //}
            //else
            //{
            //    _connectionString = objProvider.Attributes["connectionString"] + "connection timeout=300000;";
            //}
            _connectionString = ConfigurationManager.ConnectionStrings["SqlDataProvider"].ConnectionString + "; connection timeout=600; pooling=true; Max Pool Size=6000;Timeout=600;MultipleActiveResultSets=True";
            _providerPath = "~/Providers/DataProviders/SqlDataProvider/";
            _objectQualifier = "";
            //_objectQualifier = objProvider.Attributes["objectQualifier"];
            //if (_objectQualifier != "" && _objectQualifier.EndsWith("_") == false)
            //{
            //    _objectQualifier += "_";
            //}
            //_objectQualifier = "";
            //_databaseOwner = objProvider.Attributes["databaseOwner"];
            //if (_databaseOwner != "" && _databaseOwner.EndsWith(".") == false)
            //{
            //    _databaseOwner += ".";
            //}
            _databaseOwner = "dbo.";
            _connectionStringNoiT = ConfigurationManager.ConnectionStrings["SqlDataProviderNoiT"].ConnectionString + "; connection timeout=600; pooling=true; Max Pool Size=6000;Timeout=600;MultipleActiveResultSets=True";
            _providerPathNoiT = "~/Providers/DataProviders/SqlDataProvider/";
            _objectQualifierNoiT = "";
            _databaseOwnerNoiT = "dbo.";

            _connectionStringChuyenBN = ConfigurationManager.ConnectionStrings["SqlDataProviderChuyenBN"].ConnectionString + "; connection timeout=600; pooling=true; Max Pool Size=6000;Timeout=600;MultipleActiveResultSets=True";
            _providerPathChuyenBN = "~/Providers/DataProviders/SqlDataProvider/";
            _objectQualifierChuyenBN = "";
            _databaseOwnerChuyenBN = "dbo.";

            _connectionStringBC = ConfigurationManager.ConnectionStrings["SqlDataProviderBC"].ConnectionString + "; connection timeout=600; pooling=true; Max Pool Size=6000;Timeout=600;MultipleActiveResultSets=True";
            _providerPathBC = "~/Providers/DataProviders/SqlDataProvider/";
            _objectQualifierBC = "";
            _databaseOwnerBC = "dbo.";
        }
        #endregion

        #region "Properties"
        public string ConnectionString
        {
            get
            {
                return _connectionString;
            }
        }
        public string ConnectionStringNoiT
        {
            get
            {
                return _connectionStringNoiT;
            }
        }
        public string ConnectionStringChuyenBN
        {
            get
            {
                return _connectionStringChuyenBN;
            }
        }
        public string ConnectionStringBC
        {
            get
            {
                return _connectionStringBC;
            }
        }
        public System.Data.SqlClient.SqlConnection SQLConnectionData
        {
            get
            {
                if (_sqlConnectionserver == null)
                {
                    _sqlConnectionserver = new System.Data.SqlClient.SqlConnection(_connectionString);

                }
                if (_sqlConnectionserver.State == System.Data.ConnectionState.Closed)
                    _sqlConnectionserver.Open();

                return _sqlConnectionserver;

                //System.Data.SqlClient.SqlConnection _connectionserver = new System.Data.SqlClient.SqlConnection(_connectionString);
                //_connectionserver.Open();
                //return _connectionserver;
            }

        }
        public System.Data.SqlClient.SqlConnection SQLConnectionDataNoiT
        {
            get
            {
                if (_sqlConnectionserverNoiT == null)
                {
                    _sqlConnectionserverNoiT = new System.Data.SqlClient.SqlConnection(_connectionStringNoiT);

                }
                if (_sqlConnectionserverNoiT.State == System.Data.ConnectionState.Closed)
                    _sqlConnectionserverNoiT.Open();

                return _sqlConnectionserverNoiT;

                //System.Data.SqlClient.SqlConnection _connectionserver = new System.Data.SqlClient.SqlConnection(_connectionString);
                //_connectionserver.Open();
                //return _connectionserver;
            }

        }
        public System.Data.SqlClient.SqlConnection SQLConnectionDataChuyenBN
        {
            get
            {
                if (_sqlConnectionserverChuyenBN == null)
                {
                    _sqlConnectionserverChuyenBN = new System.Data.SqlClient.SqlConnection(_connectionStringChuyenBN);

                }
                if (_sqlConnectionserverChuyenBN.State == System.Data.ConnectionState.Closed)
                    _sqlConnectionserverChuyenBN.Open();

                return _sqlConnectionserverChuyenBN;

                //System.Data.SqlClient.SqlConnection _connectionserver = new System.Data.SqlClient.SqlConnection(_connectionString);
                //_connectionserver.Open();
                //return _connectionserver;
            }

        }
      
        public System.Data.SqlClient.SqlConnection SQLConnectionBD
        {
            get
            {
                //if (_sqlConnection == null)
                //{
                //    _sqlConnection = new System.Data.SqlClient.SqlConnection(_connectionString);

                //}
                //if (_sqlConnection.State == System.Data.ConnectionState.Closed)
                //    _sqlConnection.Open();

                //return _sqlConnection;

                System.Data.SqlClient.SqlConnection _connectionserver = new System.Data.SqlClient.SqlConnection(_connectionString);
                _connectionserver.Open();
                return _connectionserver;
            }

        }
        public System.Data.SqlClient.SqlConnection SQLConnectionBDNoiT
        {
            get
            {
                //if (_sqlConnection == null)
                //{
                //    _sqlConnection = new System.Data.SqlClient.SqlConnection(_connectionString);

                //}
                //if (_sqlConnection.State == System.Data.ConnectionState.Closed)
                //    _sqlConnection.Open();

                //return _sqlConnection;

                System.Data.SqlClient.SqlConnection _connectionserverNoiT = new System.Data.SqlClient.SqlConnection(_connectionStringNoiT);
                _connectionserverNoiT.Open();
                return _connectionserverNoiT;
            }

        }
        public System.Data.SqlClient.SqlConnection SQLConnectionDataBC
        {
            get
            {
                //if (_sqlConnection == null)
                //{
                //    _sqlConnection = new System.Data.SqlClient.SqlConnection(_connectionString);

                //}
                //if (_sqlConnection.State == System.Data.ConnectionState.Closed)
                //    _sqlConnection.Open();

                //return _sqlConnection;

                System.Data.SqlClient.SqlConnection _connectionserverBC = new System.Data.SqlClient.SqlConnection(_connectionStringBC);
                _connectionserverBC.Open();
                return _connectionserverBC;
            }

        }
        public string ProviderPath
        {
            get
            {
                return _providerPath;
            }
        }

        public string ObjectQualifier
        {
            get
            {
                return _objectQualifier;
            }
        }

        public string DatabaseOwner
        {
            get
            {
                return _databaseOwner;
            }
        }
        #endregion

        #region "General Public Methods"
        //private Object GetNull(Object Field)
        //{
        //    return GetNull(Field, DBNull.Value);
        //}
        #region Close
        public override void CloseDB()
        {


            //if (_sqlConnection != null)
            //{
            //    if (_sqlConnection.State == System.Data.ConnectionState.Open)
            //    {
            //        SQLConnectionBD.Close(); SQLConnectionBD.Dispose();
            //        _sqlConnection.Close(); _sqlConnection.Dispose();
            //        _sqlConnection = null;
            //    }
            //}
        }
        #endregion
        #region Public Methods

        #region Category List

        #region DM Hanh chinh

        #region HocSinh
        public override System.Data.IDataReader GetHocSinh(int idHS)
        {
            return (IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spHocSinh_Get", idHS);

        }
        public override int DeleteHocSinh(int idHS)
        {
            return (int)SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spHocSinh_Delete", idHS);
        }
        public override int InsertHocSinh(string Name, DateTime BrithDay, bool Sex, int idOccupation, int idProvince, int idDistrict, int idRace, int idReligion, int idCountry)
        {
            return (int)SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spHocSinh_Create", Name, BrithDay, Sex, idOccupation, idDistrict, idRace, idReligion, idCountry);
        }
        public override int UpdateHocSinh(int idHS, string Name, DateTime BrithDay, bool Sex, int idOccupation, int idProvince, int idDistrict, int idRace, int idReligion, int idCountry)
        {
            return (int)SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spHocSinh_Update", idHS, Name, BrithDay, Sex, idOccupation, idProvince, idDistrict, idRace, idReligion, idCountry);
        }
        #endregion

        #region GetList
        public override System.Data.IDataReader GetCountryList()
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDM_Country_Gets"));
        }

        public override System.Data.IDataReader GetDistrictList(int idProvince)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDM_District_Gets", idProvince));
        }

        public override System.Data.IDataReader GetProvinceList()
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDM_Province_Gets"));
        }

        public override System.Data.IDataReader GetOccupationList()
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDM_Occupation_Gets"));
        }


        public override System.Data.IDataReader GetReligionList()
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDM_Religion_Gets"));
        }

        public override System.Data.IDataReader GetRaceList()
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDM_Race_Gets"));
        }


        public override System.Data.IDataReader GetDiseaseList()
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDM_Disease_Gets"));
        }


        public override System.Data.IDataReader GetMarriageList()
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDM_Marriage_Gets"));
        }

        public override IDataReader GetEmployeeCVList()
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDM_ChucVu_Gets"));
        }

        public override IDataReader GetEmployeeHVList()
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDM_HocVan_Gets"));
        }

        public override IDataReader GetAllDMKhamDY(String _macl)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMKhamDY_GetAll", _macl));

        }
        public override IDataReader GetDMQuocGia(String _maQG)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMQUOCGIA_Get", _maQG));

        }
        public override IDataReader GetAllDMQuocGia()
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMQUOCGIA_GetAll"));
        }
        public override DataSet GetAllDMQuocGiaDT()
        {
            return SqlHelper.ExecuteDataset(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMQUOCGIA_GetAll");

        }
        public override IDataReader GetDMVungLanhTho(String _maVungLT)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMVungLanhTho_Get", _maVungLT));
        }
        public override IDataReader GetAllDMVungLanhTho()
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMVungLanhTho_GetAll"));
        }
        public override IDataReader GetDMChucVu(String _maCV)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMChucVu_Get", _maCV));
        }
        public override IDataReader GetAllDMChucVu()
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMChucVu_GetAll"));
        }
        public override IDataReader GetDMNgheNghiep(String _maNN)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMNgheNghiep_Get", _maNN));
        }
        public override IDataReader GetAllDMNgheNghiep()
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMNgheNghiep_GetAll"));
        }
        public override IDataReader GetDMBenhTat(String _maBenhID) //lay benh tat theo Id
        {            //chuoi ket noi  //thu tuc         //gia tri cua tham so cho thu tuc              
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMBENHTAT_Get", _maBenhID));
        }
        public override IDataReader GetAllDMBenhTat()//lay tat ca DMBenhTat
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMBENHTAT_GetAll"));
        }
        public override IDataReader GetsDMBenhTatByID(string id) //lay danh muc benh tat theo maTinh
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMBENHTAT_GetsByID", id));
        }
        public override IDataReader GetDMBenhDanh(String _maBenhID) //lay benh tat theo Id
        {            //chuoi ket noi  //thu tuc         //gia tri cua tham so cho thu tuc              
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMBenhDanh_Get", _maBenhID));
        }
        public override IDataReader GetAllDMBenhDanh()//lay tat ca DMBenhDanh
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMBenhDanh_GetAll"));
        }
        public override IDataReader GetsDMBenhDanhByID(string id) //lay danh muc benh tat theo maTinh
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMBenhDanh_GetsByID", id));
        }
        public override IDataReader GetDMBenhVien(String _maBV)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMBENHVIEN_Get", _maBV));
        }
        public override IDataReader GetAllDMBenhVien()
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMBENHVIEN_GetAll"));
        }

        public override IDataReader GetDMChucDanh(String _maCD)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMChucDanh_Get", _maCD));
        }

        public override IDataReader GetAllDMChucDanh()
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMChucDanh_GetAll"));
        }
        public override IDataReader GetDMDonVi(String _maDonVi)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMDonVi_Get", _maDonVi));
        }

        public override IDataReader GetAllDMDonVi(Boolean _qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMDonVi_GetAll", _qadmin));
        }
        public override IDataReader GetDMQuanHam(String _maQuanHam)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMQuanHam_Get", _maQuanHam));
        }

        public override IDataReader GetAllDMQuanHam(Boolean _qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMQuanHam_GetAll", _qadmin));
        }
        public override IDataReader GetDMQuanHeQD(String _maQuanHeQD)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMQuanHeQD_Get", _maQuanHeQD));
        }

        public override IDataReader GetAllDMQuanHeQD(Boolean _qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMQuanHeQD_GetAll", _qadmin));
        }
        public override IDataReader GetDMCachGayMe(String _maCGM)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMCachGayMe_Get", _maCGM));
        }

        public override IDataReader GetAllDMCachGayMe()
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMCachGayMe_GetAll"));
        }

        public override IDataReader GetDMNhomBN(String _maDT)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMNhomBN_Get", _maDT));
        }
        public override IDataReader GetAllDMNhomBN()
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMNhomBN_GetAll"));
        }
        public override IDataReader GetDMDantoc(String _maDT)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMDantoc_Get", _maDT));
        }
        public override IDataReader GetAllDMDantoc()
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMDantoc_GetAll"));
        }
        public override IDataReader GetDMDoiTuong(String _maDT)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMDOITUONG_Get", _maDT));
        }
        public override IDataReader GetAllDMDoiTuong()
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMDOITUONG_GetAll"));
          
            //System.Data.SqlClient.SqlCommand cmd = SqlHelper.CreateCommand(SQLConnectionBD, DatabaseOwner + ObjectQualifier + "spDMDOITUONG_GetAll");
            //cmd.CommandTimeout = 18000;

            //cmd.CommandType = System.Data.CommandType.StoredProcedure;
            ////cmd.Parameters.AddWithValue("tungay", tungay);
            ////cmd.Parameters.AddWithValue("denngay", denngay);
            ////cmd.Parameters.AddWithValue("maKhoa", maKhoa);
            ////cmd.Parameters.AddWithValue("loai", loai);
            ////cmd.Parameters.AddWithValue("DK", dk);
            //IDataReader dt;
            //dt = (IDataReader)cmd.ExecuteReader(CommandBehavior.CloseConnection);
            //cmd.Dispose(); 
            //cmd = null;
            //return dt;

        }

        public override IDataReader GetDMQuanHuyen(String _maqh)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMQuanHuyen_Get", _maqh));
        }
        public override IDataReader GetAllDMQuanHuyen()
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMQuanHuyen_GetAll"));
        }
        public override IDataReader GetsByTinh(string idTinh)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMQuanHuyen_Finds", " a.matinh = '" + idTinh + "'"));
                      
            //System.Data.SqlClient.SqlCommand cmd = SqlHelper.CreateCommand(_connectionserver, DatabaseOwner + ObjectQualifier + "spDMQuanHuyen_Finds");
            //cmd.CommandTimeout = 18000;

            //cmd.CommandType = System.Data.CommandType.StoredProcedure;
            ////cmd.Parameters.AddWithValue("tungay", tungay);
            ////cmd.Parameters.AddWithValue("denngay", denngay);
            ////cmd.Parameters.AddWithValue("maKhoa", maKhoa);
            ////cmd.Parameters.AddWithValue("loai", loai);
            //cmd.Parameters.AddWithValue("DK", " a.matinh = '" + idTinh + "'");
            //IDataReader dt;
            //dt = (IDataReader)cmd.ExecuteReader(CommandBehavior.CloseConnection);
            //cmd.Dispose();
            //cmd = null;
            //return dt;
        }
        public override IDataReader GetDMPhuongXa(String _maqh)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMPhuongXa_Get", _maqh));
        }
        public override IDataReader GetAllDMPhuongXa()
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMPhuongXa_GetAll"));
        }
        public override IDataReader GetsByQH(string idTinh)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMPhuongXa_Finds", " a.maqh = '" + idTinh + "'"));
        }
        public override IDataReader GetDMTinh(String _matinh)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMTinh_Get", _matinh));
        }
        public override IDataReader GetAllDMTinh()
        {
            //return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMTinh_GetAll"));
            System.Data.SqlClient.SqlCommand cmd = SqlHelper.CreateCommand(SQLConnectionBD, DatabaseOwner + ObjectQualifier + "spDMTinh_GetAll");
            cmd.CommandTimeout = 18000;

            cmd.CommandType = System.Data.CommandType.StoredProcedure;
            //cmd.Parameters.AddWithValue("tungay", tungay);
            //cmd.Parameters.AddWithValue("denngay", denngay);
            //cmd.Parameters.AddWithValue("maKhoa", maKhoa);
            //cmd.Parameters.AddWithValue("loai", loai);
            //cmd.Parameters.AddWithValue("DK", dk);
            //cmd.Parameters.AddWithValue("qadmin", _qadmin);
            IDataReader dt;
            dt = (IDataReader)cmd.ExecuteReader(CommandBehavior.CloseConnection);
            cmd.Dispose();
            cmd = null;
            return dt;
        }
        public override IDataReader GetDMChuyenKhoa(String _mack)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMChuyenKhoa_Get", _mack));
        }
        public override IDataReader GetAllDMChuyenKhoa()
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMChuyenKhoa_GetAll"));
        }
        public override IDataReader GetDMViTriST(String _maViTri)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMViTriST_Get", _maViTri));
        }
        public override IDataReader GetAllDMViTriST()
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMViTriST_GetAll"));
        }
        public override IDataReader GetDMBenhPham(String _mabp)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMBenhPham_Get", _mabp));
        }
        public override IDataReader GetAllDMBenhPham()
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMBenhPham_GetAll"));
        }
        public override IDataReader GetDMCoQuan(String maCQ)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMCOQUAN_Get", maCQ));
        }
        public override IDataReader GetAllDMCoQuan()
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMCOQUAN_GetAll"));
        }
        public override IDataReader GetDMBatThuong(String maCQ)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMBatThuong_Get", maCQ));
        }
        public override IDataReader GetAllDMBatThuong()
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMBatThuong_GetAll"));
        }
        public override IDataReader GetDMNoiGT(String maNoiGT)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMNoiGT_Get", maNoiGT));
        }
        public override IDataReader GetAllDMNoiGT()
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMNoiGT_GetAll"));
        }
        public override IDataReader GetDMHuongDT(String mahdt)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMHuongDT_Get", mahdt));
        }
        public override IDataReader GetAllDMHuongDT(Byte _loai, Boolean _qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMHuongDT_GetAll", _loai, _qadmin));
        }
        public override IDataReader GetDMChuyenMon(String maCM)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMChuyenMon_Get", maCM));
        }
        public override IDataReader GetAllDMChuyenMon()
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMChuyenMon_GetAll"));
        }

        public override IDataReader GetDMChuyenNganh(String _maChuyenNganh)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMChuyenNganh_Get", _maChuyenNganh));
        }
        public override IDataReader GetAllDMChuyenNganh()
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMChuyenNganh_GetAll"));
        }
        public override IDataReader GetDMDDHoiChan(String _maDDHoiChan)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMDDHoiChan_Get", _maDDHoiChan));
        }
        public override IDataReader GetAllDMDDHoiChan(Boolean qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMDDHoiChan_GetAll", qadmin));
        }
        public override IDataReader GetDMLDHoiChan(String _maLDHoiChan)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMLDHoiChan_Get", _maLDHoiChan));
        }
        public override IDataReader GetAllDMLDHoiChan(Boolean qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMLDHoiChan_GetAll", qadmin));
        }
        public override IDataReader GetDMHTHoiChan(String _maHTHoiChan)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMHTHoiChan_Get", _maHTHoiChan));
        }
        public override IDataReader GetAllDMHTHoiChan(Boolean qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMHTHoiChan_GetAll", qadmin));
        }
        public override IDataReader GetDMTaiBien(String _maTaiBien)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMTaiBien_Get", _maTaiBien));
        }
        public override IDataReader GetAllDMTaiBien(byte loai, Boolean qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMTaiBien_GetAll", loai, qadmin));
        }
        public override IDataReader GetDMDanhGiaHoSo(String _maDGHS)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMDanhGiaHoSo_Get", _maDGHS));
        }
        public override IDataReader GetAllDMDanhGiaHoSo(Boolean qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMDanhGiaHoSo_GetAll", qadmin));
        }
        public override IDataReader GetDMKQTaiBien(String _maKQTaiBien)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMKQTaiBien_Get", _maKQTaiBien));
        }
        public override IDataReader GetAllDMKQTaiBien(byte loai, Boolean qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMKQTaiBien_GetAll", loai, qadmin));
        }
        public override IDataReader GetDMGiuong(String _maGiuong)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMGiuong_Get", _maGiuong));
        }
        public override IDataReader GetAllDMGiuong(Boolean qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMGiuong_GetAll", qadmin));
        }
        public override IDataReader GetAllDMGiuong_KhoaSoPhong(string _makhoa, string _dk, Boolean qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMGiuong_KhoaSoPhong_Finds", _makhoa, _dk, qadmin));
        }
        public override IDataReader GetAllDMGiuong_KhoaSoGiuong(string _makhoa, string _sophong, string _dk, Boolean qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMGiuong_KhoaSoGiuong_Finds", _makhoa, _sophong, _dk, qadmin));
        }
        public override IDataReader GetDMTDNgoaiNgu(String _maTDNgoaiNgu)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMTDNgoaiNgu_Get", _maTDNgoaiNgu));
        }
        public override IDataReader GetAllDMTDNgoaiNgu(Boolean _qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMTDNgoaiNgu_GetAll", _qadmin));
        }
        public override IDataReader GetDMThanhPhan(String _maThanhPhan)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMThanhPhan_Get", _maThanhPhan));
        }
        public override IDataReader GetAllDMThanhPhan(Boolean _qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMThanhPhan_GetAll", _qadmin));
        }
        public override IDataReader GetDMTDDaoTao(String _maTDDaoTao)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMTDDaoTao_Get", _maTDDaoTao));
        }
        public override IDataReader GetAllDMTDDaoTao(Boolean _qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMTDDaoTao_GetAll", _qadmin));
        }


        public override IDataReader GetDMNgoaiNgu(String _maNgoaiNgu)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMNgoaiNgu_Get", _maNgoaiNgu));
        }
        public override IDataReader GetAllDMNgoaiNgu(Boolean _qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMNgoaiNgu_GetAll", _qadmin));
        }


        public override IDataReader GetDMTDChinhTri(String _maTDChinhTri)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMTDChinhTri_Get", _maTDChinhTri));
        }
        public override IDataReader GetAllDMTDChinhTri(Boolean _qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMTDChinhTri_GetAll", _qadmin));
        }
        public override IDataReader GetDMNgach(String _maNgach)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMNgach_Get", _maNgach));
        }
        public override IDataReader GetAllDMNgach(Boolean _qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMNgach_GetAll", _qadmin));
        }
        public override IDataReader GetDMNgachBac(String _maNgach, int _Bac)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMNgachBac_Get", _maNgach, _Bac));
        }
        public override IDataReader GetAllDMNgachBac(string _MaNgach, Boolean _qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMNgachBac_GetAll", _MaNgach, _qadmin));
        }
        public override IDataReader GetDMDanhHieu(String _maDanhHieu)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMDanhHieu_Get", _maDanhHieu));
        }
        public override IDataReader GetAllDMDanhHieu(Boolean _qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMDanhHieu_GetAll", _qadmin));
        }
        public override IDataReader GetDMDienCSach(String _maDienCSach)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMDienCSach_Get", _maDienCSach));
        }
        public override IDataReader GetAllDMDienCSach(Boolean _qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMDienCSach_GetAll", _qadmin));
        }
        public override IDataReader GetDMHocVan(String _maHocVan)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMHocVan_Get", _maHocVan));
        }
        public override IDataReader GetAllDMHocVan(Boolean _qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMHocVan_GetAll", _qadmin));
        }
        public override IDataReader GetDMHocVi(String _maHocVi)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMHocVi_Get", _maHocVi));
        }
        public override IDataReader GetAllDMHocVi(Boolean _qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMHocVi_GetAll", _qadmin));
        }
        public override IDataReader GetDMTonGiao(String _maTG)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMTonGiao_Get", _maTG));
        }
        public override IDataReader GetAllDMTonGiao(Boolean _qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMTonGiao_GetAll", _qadmin));
        }
        public override IDataReader GetDMHTRaVien(String _maHTRaVien)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMHTRaVien_Get", _maHTRaVien));
        }
        public override IDataReader GetAllDMHTRaVien(Boolean _qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMHTRaVien_GetAll", _qadmin));
        }
        public override IDataReader GetDMHinhThucDaoTao(String _MaHTDaoTao)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMHTDaoTao_Get", _MaHTDaoTao));
        }
        public override IDataReader GetAllDMHinhThucDaoTao(Boolean _qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMHTDaoTao_GetAll", _qadmin));
        }

        public override IDataReader GetDMQHGiaDinh(String _maQHGiaDinh)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMQHGiaDinh_Get", _maQHGiaDinh));
        }
        public override IDataReader GetAllDMQHGiaDinh(Boolean _qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMQHGiaDinh_GetAll", _qadmin));
        }

        public override IDataReader GetDMHocHam(String _maHocHam)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMHocHam_Get", _maHocHam));
        }
        public override IDataReader GetAllDMHocHam(Boolean _qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMHocHam_GetAll", _qadmin));
        }
        public override IDataReader GetAllDMTinhThan(Boolean _qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMTinhThan_GetAll", _qadmin));
        }
        public override IDataReader GetAllDMPhu(Boolean _qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMPhu_GetAll", _qadmin));
        }
        public override IDataReader GetAllDMCTC(Boolean _qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMCTC_GetAll", _qadmin));
        }
        public override IDataReader GetAllDMDauOi(Boolean _qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMDauOi_GetAll", _qadmin));
        }
        public override IDataReader GetAllDMNuocOi(Boolean _qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMNuocOi_GetAll", _qadmin));
        }

        public override IDataReader GetDMSucKhoe(String _maSucKhoe)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMSucKhoe_Get", _maSucKhoe));
        }
        public override IDataReader GetAllDMSucKhoe(Boolean _qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMSucKhoe_GetAll", _qadmin));
        }
        public override IDataReader GetDMHTKhenThuong(String _MAHTKhen)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMHTKhen_Get", _MAHTKhen));
        }
        public override IDataReader GetAllDMHTKhenThuong(Boolean _qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMHTKhen_GetAll", _qadmin));
        }


        public override IDataReader GetDMLoaiHopDong(String _TenLoaiHopDong)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMLoaiHD_Get", _TenLoaiHopDong));
        }
        public override IDataReader GetAllDMLoaiHopDong(Boolean _qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMLoaiHD_GetAll", _qadmin));
        }




        public override IDataReader GetDMTrangThaiLV(String _maTrangThaiLV)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMTrangThaiLV_Get", _maTrangThaiLV));
        }
        public override IDataReader GetAllDMTrangThaiLV(Boolean _qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMTrangThaiLV_GetAll", _qadmin));
        }


        public override IDataReader GetDMLuong(String _maLuong)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMLuong_Get", _maLuong));
        }
        public override IDataReader GetAllDMLuong(Boolean _qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMLuong_GetAll", _qadmin));
        }

        public override IDataReader GetDMTrangThaiTB(String _maTrangThaiTB)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMTrangThai_Get", _maTrangThaiTB));
        }
        public override IDataReader GetAllDMTrangThaiTB(Boolean _qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMTrangThai_GetAll", _qadmin));
        }
        public override IDataReader GetDMTheBH(String _maTheBH)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMTheBH_Get", _maTheBH));
        }
        public override IDataReader GetAllDMTheBH(Boolean _qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMTheBH_GetAll", _qadmin));
        }

        public override IDataReader GetDMMGThueThuNhap(String _maMGThueThuNhap)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMMGThueThuNhap_Get", _maMGThueThuNhap));
        }

        public override IDataReader GetAllDMMGThueThuNhap(Boolean _qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMMGThueThuNhap_GetAll", _qadmin));
        }
        public override IDataReader GetDMDongThueThuNhap(String _maMGThueThuNhap)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMDongThueThuNhap_Get", _maMGThueThuNhap));
        }

        public override IDataReader GetAllDMDongThueThuNhap(Boolean _qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMDongThueThuNhap_GetAll", _qadmin));
        }
        public override IDataReader GetThamSoLuong()
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spThamSoLuong_GET"));
        }


        public override IDataReader GetDMTenTat(String _maTenTat)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMTenTat_Get", _maTenTat));
        }
        public override IDataReader GetAllDMTenTat(Boolean _qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMTenTat_GetAll", _qadmin));
        }

        public override IDataReader GetDMLDNghi(String _maLDNghi)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMLDNghi_Get", _maLDNghi));
        }
        public override IDataReader GetAllDMLDNghi(Boolean _qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMLDNghi_GetAll", _qadmin));
        }
        public override IDataReader GetDMCapKTKL(String _maCapKTKL)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMCapKTKL_Get", _maCapKTKL));
        }
        #endregion
        #region DMKyHieu
        // public abstract String InsertThongBao(string _maNCC, String _soHD, String _soCT, SmartDate _ngayPNhap, String _maKho, decimal _chietKhau, Boolean _thanhToan, SmartDate _ngayTToan, SmartDate _ngayNhapTT, String _NVNhap, decimal _Tong, String _ghiChu, Boolean _huy, String _nguoiSD, string _maMay, String _nguoiGiao);
        public override String InsertDMKyHieu(String _makho, String _KyHieu, String _nguoiLap)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMKyHieu_Create", _makho, _KyHieu, _nguoiLap));
        }
        public override void UpdateDMKyHieu(String _makho, String _STT, String _KyHieu, Boolean _huy, String _nguoiSD, String _nguoiSD1)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMKyHieu_Update", _makho, _STT, _KyHieu, _huy, _nguoiSD, _nguoiSD1);
        }
        public override void DeleteDMKyHieu(String _MaKho, String _STT)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMKyHieu_Deleted", _MaKho, _STT);
        }


        public override IDataReader GetDMKyHieu_GetAll(String _MaKho, bool _qAdmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMKyHieu_GetAll", _MaKho, _qAdmin));
        }
        public override IDataReader GetDMKyHieu_Get(String _MaKho, String _STT)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMKyHieu_Get", _MaKho, _STT));
        }

        #endregion

        #region Find List
        public override IDataReader FindDMCapKTKL(string _DK, Boolean _qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMCapKTKL_Finds", _DK, _qadmin));
        }
        public override IDataReader FindDMBenhPham(string _DK, Boolean _qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMBenhPham_Finds", _DK, _qadmin));
        }
        public override IDataReader FindDMViTriST(string _DK, Boolean _qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMViTriST_Finds", _DK, _qadmin));
        }
        public override IDataReader FindDMBenhTat(string _DK)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMBenhTat_Finds", _DK));
        }
        public override IDataReader FindDMBenhDanh(string _DK)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMBenhDanh_Finds", _DK));
        }
        public override IDataReader FindDMBenhVien(string _DK)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMBenhVien_Finds", _DK));
        }
        public override IDataReader FindDMChucDanh(string _DK, Boolean _qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMChucDanh_Finds", _DK, _qadmin));
        }
        public override IDataReader FindDMCachGayMe(string _DK, Boolean _qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMCachGayMe_Finds", _DK, _qadmin));
        }
        public override IDataReader FindDMChucVu(string _DK, Boolean _qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMChucVu_Finds", _DK, _qadmin));
        }
        public override IDataReader FindDMChuyenKhoa(string _DK, Boolean _qadmin)
        {
            //return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMChuyenKhoa_Finds", _DK, _qadmin));
            System.Data.SqlClient.SqlCommand cmd = SqlHelper.CreateCommand(SQLConnectionBD, DatabaseOwner + ObjectQualifier + "spDMChuyenKhoa_Finds");
            cmd.CommandTimeout = 18000;

            cmd.CommandType = System.Data.CommandType.StoredProcedure;

            cmd.Parameters.AddWithValue("DK", _DK);
            cmd.Parameters.AddWithValue("qadmin", _qadmin);
            IDataReader dt;
            dt = (IDataReader)cmd.ExecuteReader(CommandBehavior.CloseConnection);
            cmd.Dispose();
            cmd = null;
            return dt;
        }
        public override IDataReader FindDMChuyenMon(string _DK, Boolean _qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMChuyenMon_Finds", _DK, _qadmin));
        }

        public override IDataReader FindDMChuyenNganh(string _DK, Boolean _qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMChuyenNganh_FINDS", _DK, _qadmin));
        }
        public override IDataReader FindDMCoQuan(string _DK, Boolean _qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMCoQuan_Finds", _DK, _qadmin));
        }
        public override IDataReader FindDMBatThuong(string _DK, Boolean _qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMBatThuong_Finds", _DK, _qadmin));
        }
        public override IDataReader FindDMDantoc(string _DK, Boolean _qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMDantoc_Finds", _DK, _qadmin));
        }
        public override IDataReader FindDMNhomBN(string _DK, Boolean _qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMNhomBN_Finds", _DK, _qadmin));
        }
        public override IDataReader FindDMDoiTuong(string _DK, Boolean _qadmin)
        {
            //  return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMDOITUONG_FINDS", _DK, _qadmin));
            System.Data.SqlClient.SqlCommand cmd = SqlHelper.CreateCommand(SQLConnectionBD, DatabaseOwner + ObjectQualifier + "spDMDOITUONG_FINDS");
            cmd.CommandTimeout = 18000;

            cmd.CommandType = System.Data.CommandType.StoredProcedure;
            //cmd.Parameters.AddWithValue("tungay", tungay);
            //cmd.Parameters.AddWithValue("denngay", denngay);
            //cmd.Parameters.AddWithValue("maKhoa", maKhoa);
            //cmd.Parameters.AddWithValue("loai", loai);
            cmd.Parameters.AddWithValue("DK", _DK);
            cmd.Parameters.AddWithValue("qadmin", _qadmin);
            IDataReader dt;
            dt = (IDataReader)cmd.ExecuteReader(CommandBehavior.CloseConnection);
            cmd.Dispose();
            cmd = null;
            return dt;
        }
        public override IDataReader FindDMDoiTuongKHO(string _DK, Boolean _qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMDOITUONG_Kho", _DK, _qadmin));
        }
        public override IDataReader FindCBDMDoiTuong(string _DK, Boolean _qadmin)
        {
            // return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMDOITUONG_CB", _DK, _qadmin));
            System.Data.SqlClient.SqlCommand cmd = SqlHelper.CreateCommand(SQLConnectionBD, DatabaseOwner + ObjectQualifier + "spDMDOITUONG_CB");
            cmd.CommandTimeout = 18000;

            cmd.CommandType = System.Data.CommandType.StoredProcedure;
            //cmd.Parameters.AddWithValue("tungay", tungay);
            //cmd.Parameters.AddWithValue("denngay", denngay);
            //cmd.Parameters.AddWithValue("maKhoa", maKhoa);
            //cmd.Parameters.AddWithValue("loai", loai);
            cmd.Parameters.AddWithValue("DK", _DK);
            cmd.Parameters.AddWithValue("qadmin", _qadmin);
            IDataReader dt;
            dt = (IDataReader)cmd.ExecuteReader(CommandBehavior.CloseConnection);
            cmd.Dispose();
            cmd = null;
            return dt;
        }
        public override IDataReader FindDMHuongDT(string _DK, Boolean _qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMHuongDT_Finds", _DK, _qadmin));
        }
        public override IDataReader FindDMNgheNghiep(string _DK, Boolean _qadmin)
        {
            //  return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMNgheNghiep_Finds", _DK, _qadmin));
            System.Data.SqlClient.SqlConnection _connectionserver = new System.Data.SqlClient.SqlConnection(_connectionString);
            _connectionserver.Open();

            System.Data.SqlClient.SqlCommand cmd = SqlHelper.CreateCommand(_connectionserver, DatabaseOwner + ObjectQualifier + "spDMNgheNghiep_Finds");
            cmd.CommandTimeout = 18000;

            cmd.CommandType = System.Data.CommandType.StoredProcedure;
            //cmd.Parameters.AddWithValue("tungay", tungay);
            //cmd.Parameters.AddWithValue("denngay", denngay);
            //cmd.Parameters.AddWithValue("maKhoa", maKhoa);
            //cmd.Parameters.AddWithValue("loai", loai);
            cmd.Parameters.AddWithValue("DK", _DK);
            cmd.Parameters.AddWithValue("qadmin", _qadmin);
            IDataReader dt;
            dt = (IDataReader)cmd.ExecuteReader(CommandBehavior.CloseConnection);
            cmd.Dispose();
            cmd = null;
            return dt;
        }
        public override IDataReader FindDMNoiGT(string _DK, Boolean _qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMNoiGT_Finds", _DK, _qadmin));
        }
        public override IDataReader FindDMQuanHuyen(string _DK)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMQuanHuyen_Finds", _DK));
        }
        public override IDataReader FindDMPhuongXa(string _DK)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMPhuongXa_Finds", _DK));
        }
        public override IDataReader FindDMQuocGia(string _DK, Boolean _qadmin)
        {
            // return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMQuocGia_Finds", _DK, _qadmin));
            System.Data.SqlClient.SqlCommand cmd = SqlHelper.CreateCommand(SQLConnectionBD, DatabaseOwner + ObjectQualifier + "spDMQuocGia_Finds");
            cmd.CommandTimeout = 18000;

            cmd.CommandType = System.Data.CommandType.StoredProcedure;

            cmd.Parameters.AddWithValue("DK", _DK);
            cmd.Parameters.AddWithValue("qadmin", _qadmin);
            IDataReader dt;
            dt = (IDataReader)cmd.ExecuteReader(CommandBehavior.CloseConnection);
            cmd.Dispose();
            cmd = null;
            return dt;
        }
        public override IDataReader FindDMTinh(string _DK, Boolean _qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMTinh_Finds", _DK, _qadmin));
        }
        public override IDataReader FindDMVungLanhTho(string _DK, Boolean _qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMVungLanhTho_Finds", _DK, _qadmin));
        }
        public override IDataReader FindDMDDHoiChan(string _DK, Boolean _qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMDDHoiChan_FINDS", _DK, _qadmin));
        }
        public override IDataReader FindDMLDHoiChan(string _DK, Boolean _qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMLDHoiChan_FINDS", _DK, _qadmin));
        }

        public override IDataReader FindDMHTHoiChan(string _DK, Boolean _qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMHTHoiChan_FINDS", _DK, _qadmin));
        }
        public override IDataReader FindDMTaiBien(string _DK, Boolean _qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMTaiBien_FINDS", _DK, _qadmin));
        }
        public override IDataReader FindDMKQTaiBien(string _DK, Boolean _qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMKQTaiBien_FINDS", _DK, _qadmin));
        }
        public override IDataReader FindDMGiuong(string _DK, Boolean _qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMGiuong_FINDS", _DK, _qadmin));
        }
        public override IDataReader FindDMTDNgoaiNgu(string _DK, Boolean _qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMTDNgoaiNgu_Finds", _DK, _qadmin));
        }

        public override IDataReader FindDMThanhPhan(string _DK, Boolean _qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMThanhPhan_Finds", _DK, _qadmin));
        }

        public override IDataReader FindDMTDDaoTao(string _DK, Boolean _qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMTDDaoTao_Finds", _DK, _qadmin));
        }

        public override IDataReader FindDMNgoaiNgu(string _DK, Boolean _qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMNgoaiNgu_Finds", _DK, _qadmin));
        }

        public override IDataReader FindDMTDChinhTri(string _DK, Boolean _qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMTDChinhTri_Finds", _DK, _qadmin));
        }

        public override IDataReader FindDMNgach(string _DK, Boolean _qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMNgach_Finds", _DK, _qadmin));
        }

        public override IDataReader FindDMNgachBac(string _DK, Boolean _qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMNgachBac_FINDS", _DK, _qadmin));
        }

        public override IDataReader FindDMDanhHieu(string _DK, Boolean _qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMDanhHieu_Finds", _DK, _qadmin));
        }
        public override IDataReader FindDMDienCSach(string _DK, Boolean _qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMDienCSach_Finds", _DK, _qadmin));
        }
        public override IDataReader FindDMHocVan(string _DK, Boolean _qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMHocVan_Finds", _DK, _qadmin));
        }
        public override IDataReader FindDMHocVi(string _DK, Boolean _qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMHocVi_Finds", _DK, _qadmin));
        }
        public override IDataReader FindDMTonGiao(string _DK, Boolean _qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMTonGiao_Finds", _DK, _qadmin));
        }
        public override IDataReader FindDMHTRaVien(string _DK, Boolean _qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMHTRaVien_Finds", _DK, _qadmin));
        }
        public override IDataReader FindDMQuanHeQD(string _DK, Boolean _qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMQuanHeQD_Finds", _DK, _qadmin));
        }
        public override IDataReader FindDMQuanHam(string _DK, Boolean _qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMQuanHam_Finds", _DK, _qadmin));
        }
        public override IDataReader FindDMDonVi(string _DK, Boolean _qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMDonVi_Finds", _DK, _qadmin));
        }
        public override IDataReader FindDMHinhThucDaoTao(String _DK, Boolean _qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMHTDaoTao_FINDS", _DK, _qadmin));
        }
        public override IDataReader FindDMQHGiaDinh(String _DK, Boolean _qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMQHGiaDinh_FINDS", _DK, _qadmin));
        }
        public override IDataReader FindDMHocHam(String _DK, Boolean _qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMHocHam_FINDS", _DK, _qadmin));
        }
        public override IDataReader FindDMSucKhoe(String _DK, Boolean _qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMSucKhoe_FINDS", _DK, _qadmin));
        }

        public override IDataReader FindDMHTKhenThuong(String _DK, Boolean _qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMHTKhen_FINDS", _DK, _qadmin));
        }

        public override IDataReader FindDMLoaiHopDong(String _DK, Boolean _qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMLoaiHD_FINDS", _DK, _qadmin));
        }

        public override IDataReader FindDMTrangThaiLV(String _DK, Boolean _qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMTrangThai_FINDS", _DK, _qadmin));
        }
        public override IDataReader FindDMLuong(String _DK, Boolean _qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMLuong_FINDS", _DK, _qadmin));
        }
        public override IDataReader FindDMTrangThaiTB(String _DK, Boolean _qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMTrangThai_FINDS", _DK, _qadmin));
        }
        public override IDataReader FindDMTheBH(String _DK, Boolean _qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMTheBH_FINDS", _DK, _qadmin));
        }
        public override IDataReader FindDMMGThueThuNhap(String _DK, Boolean _qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMMGThueThuNhap_FINDS", _DK, _qadmin));
        }
        public override IDataReader FindDMDongThueThuNhap(String _DK, Boolean _qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMDongThueThuNhap_FINDS", _DK, _qadmin));
        }
        public override IDataReader FindDMTenTat(string _DK, Boolean _qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMTenTat_FINDS", _DK, _qadmin));
        }
        #endregion

       #region DM XuatTruc
        public override String InsertDMXuatTruc(String _MaKhoa, String _MaCD, int XuatTruc, String _ghiChu, String _maMay, String _nguoiSD)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMXuatTruc_Create", _MaKhoa, _MaCD, XuatTruc, _ghiChu, _maMay, _nguoiSD));
        }
        public override void UpdateDMXuatTruc(String _MaKhoa, String _MaCD, String _MaKhoaCu, String _MaCDCu, int XuatTruc, Boolean _huy, String _ghiChu, String _maMay, String _nguoiSD)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMXuatTruc_Update", _MaKhoa, _MaCD, _MaKhoaCu, _MaCDCu, XuatTruc, _huy, _ghiChu, _maMay, _nguoiSD);
        }
        public override void DeleteDMXuatTruc(String _MaKhoa, String MaCD, String _maMay, String _nguoiSD)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMXuatTruc_Delete", _MaKhoa, MaCD, _maMay, _nguoiSD);
        }
        public override IDataReader GetAllDMXuatTruc(String _MaKhoa)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMXuatTruc_GetAllByMaKhoa", _MaKhoa));
        }
        public override IDataReader FindDMXuatTruc(String _MaKhoa, String _MaCD)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMXuatTruc_Find", _MaKhoa, _MaCD));
        }
        #endregion

        #region DM TGTruc
        public override String InsertDMTGTruc(String _TenTGTruc, String _ghiChu)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMTGTruc_Create", _TenTGTruc, _ghiChu));
        }
        public override void UpdateDMTGTruc(String _MaTGTruc, String _TenTGTruc, String _ghiChu, String _maMay, Boolean _huy, String _nguoiSD)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMTGTruc_Update", _MaTGTruc, _TenTGTruc, _ghiChu, _maMay, _huy, _nguoiSD);
        }
        public override void DeleteDMTGTruc(String _MaTGTruc, String _maMay, String _nguoiSD)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMTGTruc_Delete", _MaTGTruc, _maMay, _nguoiSD);
        }
        public override IDataReader GetAllDMTGTruc()
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMTGTruc_GetAll"));
        }
        #endregion

        #region DM CapKTKL
        public override String InsertDMCapKTKL(String _tenCapKTKL, String _ghiChu, string _maMay, String _nguoiSD)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMCapKTKL_CREATE", _tenCapKTKL, _ghiChu, _maMay, _nguoiSD));
        }
        public override void UpdateDMCapKTKL(String _maCapKTKL, String _tenCapKTKL, String _ghiChu, string _maMay, String _nguoiSD, Boolean _huy)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMCapKTKL_UPDATE", _maCapKTKL, _tenCapKTKL, _ghiChu, _maMay, _nguoiSD, _huy);
        }
        public override void DeleteDMCapKTKL(String _maMay, String _nguoiSD, String _maCapKTKL)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMCapKTKL_DELETED", _maMay, _nguoiSD, _maCapKTKL);
        }
        #endregion
        #region Country
        public override void InsertCountry(string CountryName, string CountryCode)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spDM_Country_Create", CountryName, CountryCode);
        }

        public override void DeleteCountry(int IdCountry)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spDM_Country_Delete", IdCountry);
        }

        public override void UpdateCountry(int IdCountry, string CountryName, string CountryCode)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spDM_Country_Update", IdCountry, CountryName, CountryCode);
        }
        #endregion

        #region DMQuocGia
        public override String InsertDMQuocGia(String _tenQG, string _maMay, String _nguoiSD)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMQUOCGIA_CREATE", _tenQG, _maMay, _nguoiSD));
        }
        public override void UpdateDMQuocGia(String _maQG, String _tenQG, string _maMay, String _nguoiSD)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMQUOCGIA_UPDATE", _maQG, _tenQG, _maMay, _nguoiSD);
        }
        public override void DeleteDMQuocGia(String _MaMay, String _nguoiSD, String _maQG)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMQUOCGIA_DELETED", _MaMay, _nguoiSD, _maQG);
        }
        #endregion

        #region DMVungLanhTho
        public override String InsertDMVungLanhTho(String _tenVungLT, string _maMay, String _nguoiSD)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMVungLanhTho_CREATE", _tenVungLT, _maMay, _nguoiSD));
        }
        public override void UpdateDMVungLanhTho(String _maVungLT, String _tenVungLT, string _maMay, String _nguoiSD)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMVungLanhTho_update", _maVungLT, _tenVungLT, _maMay, _nguoiSD);
        }
        public override void DeleteDMVungLanhTho(String _maMay, String _nguoiSD, String _maVungLT)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMVungLanhTho_Deleted", _maMay, _nguoiSD, _maVungLT);
        }
        #endregion

        #region DMChucVu
        public override String InsertDMChucVu(String _tenCV, string _maMay, String _nguoiSD)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMChucVu_CREATE", _tenCV, _maMay, _nguoiSD));
        }
        public override void UpdateDMChucVu(String _maCV, String _tenCV, string _maMay, String _nguoiSD)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMChucVu_update", _maCV, _tenCV, _maMay, _nguoiSD);
        }
        public override void DeleteDMChucVu(String _maMay, String _nguoiSD, String _maCV)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMChucVu_Deleted", _maMay, _nguoiSD, _maCV);
        }
        #endregion

        #region DMNgheNghiep
        public override String InsertDMNgheNghiep(String _tenNN, string _maMay, String _nguoiSD)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMNgheNghiep_CREATE", _tenNN, _maMay, _nguoiSD));
        }
        public override void UpdateDMNgheNghiep(String _maNN, String _tenNN, string _maMay, String _nguoiSD)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMNgheNghiep_update", _maNN, _tenNN, _maMay, _nguoiSD);
        }
        public override void DeleteDMNgheNghiep(String _maMay, String _nguoiSD, String _maNN)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMNgheNghiep_Deleted", _maMay, _nguoiSD, _maNN);
        }
        #endregion

        #region DMBenhtat
        public override String InsertDMBenhTat(String _maICD, String _tenBenh, String _tenBenhICD, String _maNhom, String _maVN, string _maMay, String _nguoiSD, string _idparent, string _tenta, Boolean _khongsd, string mabhxh, string _maNhomICD)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMBENHTAT_CREATE", _maICD, _tenBenh, _tenBenhICD, _maNhom, _maVN, _maMay, _nguoiSD, _idparent, _tenta, _khongsd, mabhxh, _maNhomICD));
        }
        public override void UpdateDMBenhTat(String _maBenhID, String _maICD, String _tenBenh, String _tenBenhICD, String _maNhom, String _maVN, Byte _cap, string _maMay, String _nguoiSD, string _tenta, Boolean _khongsd, string mabhxh, string _maNhomICD)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMBENHTAT_UPDATE", _maBenhID, _maICD, _tenBenh, _tenBenhICD, _maNhom, _maVN, _cap, _maMay, _nguoiSD, _tenta, _khongsd, mabhxh, _maNhomICD);
        }
        public override void DeleteDMBenhTat(String _maMay, String _nguoiSD, String _maBenhID)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMBENHTAT_DELETED", _maMay, _nguoiSD, _maBenhID);
        }
        #endregion

        #region DMBenhDanh
        public override String InsertDMBenhDanh(String _maICD, String _tenBenh, String _tenBenhICD, String _maNhom, String _maVN, string _maMay, String _nguoiSD, string _idparent, string _tenta, Boolean _khongsd, string mabhxh, string _maNhomICD)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMBenhDanh_CREATE", _maICD, _tenBenh, _tenBenhICD, _maNhom, _maVN, _maMay, _nguoiSD, _idparent, _tenta, _khongsd, mabhxh, _maNhomICD));
        }
        public override void UpdateDMBenhDanh(String _maBenhID, String _maICD, String _tenBenh, String _tenBenhICD, String _maNhom, String _maVN, Byte _cap, string _maMay, String _nguoiSD, string _tenta, Boolean _khongsd, string mabhxh, string _maNhomICD)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMBenhDanh_UPDATE", _maBenhID, _maICD, _tenBenh, _tenBenhICD, _maNhom, _maVN, _cap, _maMay, _nguoiSD, _tenta, _khongsd, mabhxh, _maNhomICD);
        }
        public override void DeleteDMBenhDanh(String _maMay, String _nguoiSD, String _maBenhID)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMBenhDanh_DELETED", _maMay, _nguoiSD, _maBenhID);
        }
        #endregion

        #region DMBenhVien
        public override String InsertDMBenhVien(String _tenBV, String _maBHXH, String _matinh, String _diachi, String _tel, string _maMay, String _nguoiSD, string tenTA)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMBENHVIEN_CREATE", _tenBV, _maBHXH, _matinh, _diachi, _tel, _maMay, _nguoiSD, tenTA));
        }
        public override void UpdateDMBenhVien(String _maBV, String _tenBV, String _maBHXH, String _matinh, String _diachi, String _tel, string _maMay, String _nguoiSD, string tenTA)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMBENHVIEN_UPDATE", _maBV, _tenBV, _maBHXH, _matinh, _diachi, _tel, _maMay, _nguoiSD, tenTA);
        }
        public override void DeleteDMBenhVien(String _maMay, String _nguoiSD, String _maBV)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMBENHVIEN_DELETED", _maMay, _nguoiSD, _maBV);
        }
        #endregion

        #region DMChucDanh
        public override String InsertDMChucDanh(String _tenCD, string _maMay, String _nguoiSD)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMChucDanh_CREATE", _tenCD, _maMay, _nguoiSD));
        }
        public override void UpdateDMChucDanh(String _maCD, String _tenCD, string _maMay, String _nguoiSD)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMChucDanh_update", _maCD, _tenCD, _maMay, _nguoiSD);
        }
        public override void DeleteDMChucDanh(String _maMay, String _nguoiSD, String _maCD)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMChucDanh_Deleted", _maMay, _nguoiSD, _maCD);
        }
        #endregion

        #region DMCachGayMe
        public override String InsertDMCachGayMe(String _tenCGM, string _maMay, String _nguoiSD)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMCachGayMe_CREATE", _tenCGM, _maMay, _nguoiSD));
        }
        public override void UpdateDMCachGayMe(String _maCGM, String _tenCGM, string _maMay, String _nguoiSD)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMCachGayMe_update", _maCGM, _tenCGM, _maMay, _nguoiSD);
        }
        public override void DeleteDMCachGayMe(String _maMay, String _nguoiSD, String _maCGM)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMCachGayMe_Deleted", _maMay, _nguoiSD, _maCGM);
        }
        #endregion
        #region DMDantoc
        public override String InsertDMDantoc(String _tenDT, string _maMay, String _nguoiSD)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMDantoc_CREATE", _tenDT, _maMay, _nguoiSD));
        }
        public override void UpdateDMDantoc(String _maDT, String _tenDT, string _maMay, String _nguoiSD)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMDantoc_update", _maDT, _tenDT, _maMay, _nguoiSD);
        }
        public override void DeleteDMDantoc(String _maMay, String _nguoiSD, String _maDT)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMDantoc_Deleted", _maMay, _nguoiSD, _maDT);
        }
        #endregion
        #region DMNhomBN
        public override String InsertDMNhomBN(String _tenDT, string _maMay, String _nguoiSD)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMNhomBN_CREATE", _tenDT, _maMay, _nguoiSD));
        }
        public override void UpdateDMNhomBN(String _maDT, String _tenDT, string _maMay, String _nguoiSD)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMNhomBN_update", _maDT, _tenDT, _maMay, _nguoiSD);
        }
        public override void DeleteDMNhomBN(String _maMay, String _nguoiSD, String _maDT)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMNhomBN_Deleted", _maMay, _nguoiSD, _maDT);
        }
        #endregion
        #region DMDoiTuong
        public override String InsertDMDoiTuong(String _tenDT, Decimal _tutuc, Decimal _sotien, Decimal _sotienktc, string _maMay, String _nguoiSD, String _kieuthe)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMDoiTuong_CREATE", _tenDT, _tutuc, _sotien, _sotienktc, _maMay, _nguoiSD, _kieuthe));
        }
        public override void UpdateDMDoiTuong(String _maDT, String _tenDT, Decimal _tutuc, Decimal _sotien, Decimal _sotienktc, string _maMay, String _nguoiSD, String _kieuthe)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMDoiTuong_UPDATE", _maDT, _tenDT, _tutuc, _sotien, _sotienktc, _maMay, _nguoiSD, _kieuthe);
        }
        public override void DeleteDMDoiTuong(String _maMay, String _nguoiSD, String _maDT)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMDoiTuong_Deleted", _maMay, _nguoiSD, _maDT);
        }
        #endregion

        #region DMQuanHuyen
        public override String InsertDMQuanHuyen(String _maTinh, String _tenQH, String _maBHXH, string _tentat, string _maMay, String _nguoiSD)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMQuanHuyen_CREATE", _maTinh, _tenQH, _maBHXH,_tentat, _maMay, _nguoiSD));
        }
        public override void UpdateDMQuanHuyen(String _maQH, String _maTinh, String _tenQH, String _maBHXH, string _tentat, string _maMay, String _nguoiSD)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMQuanHuyen_UPDATE", _maQH, _maTinh, _tenQH, _maBHXH,_tentat, _maMay, _nguoiSD);
        }
        public override void DeleteDMQuanHuyen(String _maMay, String _nguoiSD, String _maQH)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMQuanHuyen_DELETED", _maMay, _nguoiSD, _maQH);
        }
        #endregion

        #region DMPhuongXa
        public override String InsertDMPhuongXa(String _maTinh, String _tenQH, String _maBHXH, String _tentat, string _maMay, String _nguoiSD)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMPhuongXa_CREATE", _maTinh, _tenQH, _maBHXH,_tentat , _maMay, _nguoiSD));
        }
        public override void UpdateDMPhuongXa(String _maQH, String _maTinh, String _tenQH, String _maBHXH, String _tentat, string _maMay, String _nguoiSD)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMPhuongXa_UPDATE", _maQH, _maTinh, _tenQH, _maBHXH, _tentat, _maMay, _nguoiSD);
        }
        public override void DeleteDMPhuongXa(String _maMay, String _nguoiSD, String _maQH)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMPhuongXa_DELETED", _maMay, _nguoiSD, _maQH);
        }
        #endregion

        #region DMTinh
        public override String InsertDMTinh(String _maQU, String _maVungLT, String _tenTinh, String _maBHYT, string _maMay, String _nguoiSD)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMTinh_CREATE", _maQU, _maVungLT, _tenTinh, _maBHYT, _maMay, _nguoiSD));
        }
        public override void UpdateDMTinh(String _maTinh, String _maQU, String _maVungLT, String _tenTinh, String _maBHYT, string _maMay, String _nguoiSD)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMTinh_UPDATE", _maTinh, _maQU, _maVungLT, _tenTinh, _maBHYT, _maMay, _nguoiSD);
        }
        public override void DeleteDMTinh(String _maMay, String _nguoiSD, String _maTinh)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMTinh_DELETED", _maMay, _nguoiSD, _maTinh);
        }
        #endregion

        #region DMChuyenKhoa
        public override String InsertDMChuyenKhoa(String _tenCK, string _maMay, String _nguoiSD)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMChuyenKhoa_create", _tenCK, _maMay, _nguoiSD));
        }
        public override void UpdateDMChuyenKhoa(String _maCK, String _tenCK, string _maMay, String _nguoiSD)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMChuyenKhoa_update", _maCK, _tenCK, _maMay, _nguoiSD);
        }
        public override void DeleteDMChuyenKhoa(String _maMay, String _nguoiSD, String _maCK)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMChuyenKhoa_DELETED", _maMay, _nguoiSD, _maCK);
        }
        #endregion

        #region DMViTriST
        public override String InsertDMViTriST(String _tenViTri, string _maMay, String _nguoiSD, String maql, String ghichu)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMViTriST_CREATE", _tenViTri, _maMay, _nguoiSD, maql, ghichu));
        }
        public override void UpdateDMViTriST(String _maViTri, String _tenViTri, string _maMay, String _nguoiSD, String maql, String ghichu)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMViTriST_UPDATE", _maViTri, _tenViTri, _maMay, _nguoiSD, maql, ghichu);
        }
        public override void DeleteDMViTriST(String _maMay, String _nguoiSD, String _maViTri)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMViTriST_DELETED", _maMay, _nguoiSD, _maViTri);
        }
        #endregion


        #region DMBenhPham
        public override String InsertDMBenhPham(String _tenBP, string _maMay, String _nguoiSD)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMBenhPham_CREATE", _tenBP, _maMay, _nguoiSD));
        }
        public override void UpdateDMBenhPham(String _maBP, String _tenBP, string _maMay, String _nguoiSD)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMBenhPham_UPDATE", _maBP, _tenBP, _maMay, _nguoiSD);
        }
        public override void DeleteDMBenhPham(String _maMay, String _nguoiSD, String _maBP)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMBENHPHAM_DELETED", _maMay, _nguoiSD, _maBP);
        }
        #endregion

        #region DMCoQuan
        public override String InsertDMCoQuan(String _tenCQ, Boolean _khongSD, string _maMay, String _nguoiSD)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMCoQuan_CREATE", _tenCQ, _khongSD, _maMay, _nguoiSD));
        }
        public override void UpdateDMCoQuan(String _maCQ, String _tenCQ, Boolean _khongSD, string _maMay, String _nguoiSD)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMCoQuan_UPDATE", _maCQ, _tenCQ, _khongSD, _maMay, _nguoiSD);
        }
        public override void DeleteDMCoQuan(String _maMay, String _nguoiSD, String _maCQ)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMCOQUAN_DELETED", _maMay, _nguoiSD, _maCQ);
        }
        #endregion

        #region DMBatThuong
        public override String InsertDMBatThuong(String _tenCQ, Boolean _khongSD, string _maMay, String _nguoiSD)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMBatThuong_CREATE", _tenCQ, _khongSD, _maMay, _nguoiSD));
        }
        public override void UpdateDMBatThuong(String _maCQ, String _tenCQ, Boolean _khongSD, string _maMay, String _nguoiSD)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMBatThuong_UPDATE", _maCQ, _tenCQ, _khongSD, _maMay, _nguoiSD);
        }
        public override void DeleteDMBatThuong(String _maMay, String _nguoiSD, String _maCQ)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMBatThuong_DELETED", _maMay, _nguoiSD, _maCQ);
        }
        #endregion


        #region DMNoiGT
        public override String InsertDMNoiGT(String _tenNoiGT, string _maMay, String _nguoiSD)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMNoiGT_CREATE", _tenNoiGT, _maMay, _nguoiSD));
        }
        public override void UpdateDMNoiGT(String _maNoiGT, String _tenNoiGT, string _maMay, String _nguoiSD)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMNoiGT_UPDATE", _maNoiGT, _tenNoiGT, _maMay, _nguoiSD);
        }
        public override void DeleteDMNoiGT(String _maMay, String _nguoiSD, String _maNoiGT)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMNoiGT_DELETED", _maMay, _nguoiSD, _maNoiGT);
        }
        #endregion

        #region DMHuongDT
        public override String InsertDMHuongDT(String _tenHDT, String _ghichu, string _maMay, Byte _lOAI, String _nguoiSD)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMHUONGDT_CREATE", _tenHDT, _ghichu, _maMay, _lOAI, _nguoiSD));
        }
        public override void UpdateDMHuongDT(String _maHDT, String _tenHDT, String _ghichu, string _maMay, Byte _lOAI, bool _huy, String _nguoiSD)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMHUONGDT_UPDATE", _maHDT, _tenHDT, _ghichu, _maMay, _lOAI, _huy, _nguoiSD);
        }
        public override void DeleteDMHuongDT(String _maMay, String _nguoiSD, String _maHDT)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMHUONGDT_DELETED", _maMay, _nguoiSD, _maHDT);
        }
        #endregion

        #region DMChuyenMon
        public override String InsertDMChuyenMon(String _tenChuyenMon, string _maMay, String _nguoiSD, String _loai, String _idparent)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMChuyenMon_CREATE", _tenChuyenMon, _maMay, _nguoiSD, _loai, _idparent));
        }
        public override void UpdateDMChuyenMon(String _maChuyenMon, String _tenChuyenMon, string _maMay, bool _huy, String _nguoiSD, String _loai)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMChuyenMon_UPDATE", _maChuyenMon, _tenChuyenMon, _maMay, _huy, _nguoiSD, _loai);
        }
        public override void DeleteDMChuyenMon(String _maMay, String _nguoiSD, string _maChuyenMon)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMCHUYENMON_DELETED", _maMay, _nguoiSD, _maChuyenMon);
        }
        #endregion

        #region DM ChuyenNganh
        public override String InsertDMChuyenNganh(String _tenChuyenNganh, string _maMay, String _nguoiSD, String _loai, String _idparent)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMChuyenNganh_CREATE", _tenChuyenNganh, _maMay, _nguoiSD, _loai, _idparent));
        }
        public override void UpdateDMChuyenNganh(String _maChuyenNganh, String _tenChuyenNganh, string _maMay, bool _huy, String _nguoiSD, String _loai)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMChuyenNganh_UPDATE", _maChuyenNganh, _tenChuyenNganh, _maMay, _huy, _nguoiSD, _loai);
        }
        public override void DeleteDMChuyenNganh(String _maMay, String _nguoiSD, string _maChuyenNganh)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMChuyenNganh_DELETED", _maMay, _nguoiSD, _maChuyenNganh);
        }
        #endregion
        #region DMTenTat
        public override String InsertDMTenTat(String _tenTenTat, string _ghchu, String _maMay, String _nguoiSD)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMTenTat_CREATE", _tenTenTat, _ghchu, _maMay, _nguoiSD));
        }
        public override void UpdateDMTenTat(String _matentat, String _tententat, String _ghichu, String _maMay, String _nguoiSD, Boolean _huy)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMTenTat_UPDATE", _matentat, _tententat, _ghichu, _maMay, _nguoiSD, _huy);
        }
        public override void DeleteDMTenTat(String _maMay, String _nguoiSD, String _matentat)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMTenTat_DELETED", _maMay, _nguoiSD, _matentat);
        }
        #endregion
        #region Occupation
        public override void DeleteOccupation(int IdOccupation)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spDM_Occupation_Delete", IdOccupation);
        }
        public override void InsertOccupation(string OccupationName)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spDM_Occupation_Create", OccupationName);
        }
        public override void UpdateOccupation(int IdOccupation, string OccupationName)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spDM_Occupation_Update", IdOccupation, OccupationName);
        }
        #endregion

        #region District
        public override void InsertDistrict(string DistrictName, int IdProvince, string DistrictCode)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spDM_District_Create", DistrictName, IdProvince, DistrictCode);
        }
        public override void UpdateDistrict(int IdDistrict, string DistrictName, string DistrictCode)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spDM_District_Update", IdDistrict, DistrictName, DistrictCode);
        }
        public override void DeleteDistrict(int IdDistrict)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spDM_District_Delete", IdDistrict);
        }
        #endregion

        #region Province
        public override void InsertProvince(string ProvinceName, string ProvinceCode)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spDM_Province_Create", ProvinceName, ProvinceCode);
        }
        public override void UpdateProvince(int IdProvince, string ProvinceName, string ProvinceCode)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spDM_Province_Update", IdProvince, ProvinceName, ProvinceCode);
        }
        public override void DeleteProvince(int IdProvince)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spDM_Province_Delete", IdProvince);
        }
        #endregion

        #region Race
        public override void InsertRace(string RaceName)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spDM_Race_Create", RaceName);
        }
        public override void UpdateRace(int IdRace, string RaceName)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spDM_Race_Update", IdRace, RaceName);
        }
        public override void DeleteRace(int IdRace)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spDM_Race_Delete", IdRace);
        }
        #endregion

        #region Religion
        public override void InsertReligion(string ReligionName)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spDM_Religion_Create", ReligionName);
        }
        public override void UpdateReligion(int IdReligion, string ReligionName)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spDM_Religion_Update", IdReligion, ReligionName);
        }
        public override void DeleteReligion(int IdReligion)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spDM_Religion_Delete", IdReligion);
        }
        #endregion

        #region DM Dia Diem Hoi chan
        public override String InsertDMDDHoiChan(String _tenDDHoiChan, String _ghiChu, String _maMay, String _nguoiSD)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMDDHoiChan_CREATE", _tenDDHoiChan, _ghiChu, _maMay, _nguoiSD));
        }
        public override void UpdateDMDDHoiChan(String _maDDHoiChan, String _tenDDHoiChan, String _ghiChu, String _maMay, Boolean _huy, String _nguoiSD)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMDDHoiChan_UPDATE", _maDDHoiChan, _tenDDHoiChan, _ghiChu, _maMay, _huy, _nguoiSD);
        }
        public override void DeleteDMDDHoiChan(String _maMay, String _nguoiSD, String _maDDHoiChan)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMDDHoiChan_DELETED", _maMay, _nguoiSD, _maDDHoiChan);
        }
        #endregion

        #region DM Ly do Hoi chan
        public override String InsertDMLDHoiChan(String _tenLDHoiChan, String _ghiChu, String _maMay, String _nguoiSD)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMLDHoiChan_CREATE", _tenLDHoiChan, _ghiChu, _maMay, _nguoiSD));
        }
        public override void UpdateDMLDHoiChan(String _maLDHoiChan, String _tenLDHoiChan, String _ghiChu, String _maMay, Boolean _huy, String _nguoiSD)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMLDHoiChan_UPDATE", _maLDHoiChan, _tenLDHoiChan, _ghiChu, _maMay, _huy, _nguoiSD);
        }
        public override void DeleteDMLDHoiChan(String _maMay, String _nguoiSD, String _maLDHoiChan)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMLDHoiChan_DELETED", _maMay, _nguoiSD, _maLDHoiChan);
        }
        #endregion

        #region DM hinh thuc Hoi chan
        public override String InsertDMHTHoiChan(String _tenHTHoiChan, String _ghiChu, String _maMay, String _nguoiSD)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMHTHoiChan_CREATE", _tenHTHoiChan, _ghiChu, _maMay, _nguoiSD));
        }
        public override void UpdateDMHTHoiChan(String _maHTHoiChan, String _tenHTHoiChan, String _ghiChu, String _maMay, String _nguoiSD, Boolean _huy)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMHTHoiChan_UPDATE", _maHTHoiChan, _tenHTHoiChan, _ghiChu, _maMay, _nguoiSD, _huy);
        }
        public override void DeleteDMHTHoiChan(String _maMay, String _nguoiSD, String _maHTHoiChan)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMHTHoiChan_DELETED", _maMay, _nguoiSD, _maHTHoiChan);
        }
        #endregion

        #region DM Tai Bien
        public override String InsertDMTaiBien(String _tenTaiBien, String _tenTA, String _ghichu, String _maMay, Byte _loai, String _nguoiSD)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMTaiBien_CREATE", _tenTaiBien, _tenTA, _ghichu, _maMay, _loai, _nguoiSD));
        }
        public override void UpdateDMTaiBien(String _maTaiBien, String _tenTaiBien, String _tenTA, String _ghichu, String _maMay, Byte _loai, Boolean _huy, String _nguoiSD)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMTaiBien_UPDATED", _maTaiBien, _tenTaiBien, _tenTA, _ghichu, _maMay, _loai, _huy, _nguoiSD);
        }
        public override void DeleteDMTaiBien(String _maMay, String _nguoiSD, String _maTaiBien)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMTaiBien_DELETED", _maMay, _nguoiSD, _maTaiBien);
        }
        #endregion

        #region dm  danh gia
        public override String InsertDMDanhGiaHoSo(String tenDGHS, Decimal diemToiDa, String ghichu, String maMay, String _nguoiLap)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMDanhGiaHoSo_CREATE", tenDGHS, diemToiDa, ghichu, maMay, _nguoiLap));
        }
        public override void UpdateDMDanhGiaHoSo(String maDGHS, String tenDGHS, Decimal diemToiDa, String ghichu, String maMay, String nguoiSD, Boolean _huy)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMDanhGiaHoSo_UPDATE", maDGHS, tenDGHS, diemToiDa, ghichu, maMay, nguoiSD, _huy);
        }
        public override void DeleteDMDanhGiaHoSo(String maMay, String nguoiSD, String _maDGHS)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMDanhGiaHoSo_DELETED", maMay, nguoiSD, _maDGHS);
        }
#endregion

        #region DM Ket Qua TTDD
        public override void InsertDMKetQuaTTDD(String _TenKQ, Int32 _Loai, String _ghiChu, String _maMay, String _nguoiLap, Decimal _NguongDG)
        {
            SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMKetQuaTTDD_CREATE", _TenKQ, _Loai, _ghiChu, _maMay, _nguoiLap, _NguongDG);
        }
        public override void UpdateDMKetQuaTTDD(Int32 _maKQ, String _TenKQ, Int32 _Loai, String _ghiChu, Boolean _huy, String _maMay, String _nguoiSD, Decimal _NguongDG)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMKetQuaTTDD_UPDATE", _maKQ, _TenKQ, _Loai, _ghiChu, _huy, _maMay, _nguoiSD, _NguongDG);
        }
        public override void DeleteDMKetQuaTTDD(String _maMay, String _nguoiSD, Int32 _MaKQ, Int32 _Loai)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMKetQuaTTDD_DELETED", _maMay, _nguoiSD, _MaKQ, _Loai);
        }
        public override IDataReader GetAllDMKetQuaTTDD(Int32 MaKQ, bool qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMKetQuaTTDD_GetAll", MaKQ, qadmin));
        }
        public override IDataReader GetDMKetQuaTTDD(Int32 MaKQ, Int32 Loai)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMKetQuaTTDD_Get", MaKQ, Loai));
        }
        #endregion
        #region DM Ket qua Tai Bien
        public override String InsertDMKQTaiBien(String _tenKQTaiBien, String _tenTA, String _ghichu, String _maMay, Byte _loai, String _nguoiSD)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMKQTaiBien_CREATE", _tenKQTaiBien, _tenTA, _ghichu, _maMay, _loai, _nguoiSD));
        }
        public override void UpdateDMKQTaiBien(String _maKQTaiBien, String _tenKQTaiBien, String _tenTA, String _ghichu, String _maMay, Byte _loai, Boolean _huy, String _nguoiSD)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMKQTaiBien_UPDATED", _maKQTaiBien, _tenKQTaiBien, _tenTA, _ghichu, _maMay, _loai, _huy, _nguoiSD);
        }
        public override void DeleteDMKQTaiBien(String _maMay, String _nguoiSD, String _maKQTaiBien)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMKQTaiBien_DELETED", _maMay, _nguoiSD, _maKQTaiBien);
        }
        #endregion

        #region DM TDNgoaiNgu
        public override String InsertDMTDNgoaiNgu(String _tenTDNgoaiNgu, String _ghiChu, string _maMay, String _nguoiSD)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMTDNgoaiNgu_CREATE", _tenTDNgoaiNgu, _ghiChu, _maMay, _nguoiSD));
        }
        public override void UpdateDMTDNgoaiNgu(String _maTDNgoaiNgu, String _tenTDNgoaiNgu, String _ghiChu, string _maMay, String _nguoiSD, Boolean _huy)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMTDNgoaiNgu_UPDATE", _maTDNgoaiNgu, _tenTDNgoaiNgu, _ghiChu, _maMay, _nguoiSD, _huy);
        }
        public override void DeleteDMTDNgoaiNgu(String _maMay, String _nguoiSD, String _maTDNgoaiNgu)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMTDNgoaiNgu_DELETED", _maMay, _nguoiSD, _maTDNgoaiNgu);
        }
        #endregion

        #region DM ThanhPhan
        public override String InsertDMThanhPhan(String _tenThanhPhan, String _ghiChu, string _maMay, String _nguoiSD)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMThanhPhan_CREATE", _tenThanhPhan, _ghiChu, _maMay, _nguoiSD));
        }
        public override void UpdateDMThanhPhan(String _maThanhPhan, String _tenThanhPhan, String _ghiChu, string _maMay, String _nguoiSD, Boolean _huy)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMThanhPhan_UPDATE", _maThanhPhan, _tenThanhPhan, _ghiChu, _maMay, _nguoiSD, _huy);
        }
        public override void DeleteDMThanhPhan(String _maMay, String _nguoiSD, String _maThanhPhan)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMThanhPhan_DELETED", _maMay, _nguoiSD, _maThanhPhan);
        }
        #endregion

        #region DMHinhThucDaoTao
        public override String InsertDMHinhThucDaoTao(String _tenHinhThucDaoTao, String _ghiChu, string _maMay, String _nguoiSD)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMHTDaoTao_CREATE", _tenHinhThucDaoTao, _ghiChu, _maMay, _nguoiSD));
        }
        public override void UpdateDMHinhThucDaoTao(String _MaHTDaoTao, String _tenHinhThucDaoTao, String _ghiChu, string _maMay, String _nguoiSD, Boolean _huy)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMHTDaoTao_UPDATE", _MaHTDaoTao, _tenHinhThucDaoTao, _ghiChu, _maMay, _nguoiSD, _huy);
        }
        public override void DeleteDMHinhThucDaoTao(String _maMay, String _nguoiSD, String _MaHTDaoTao)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMHTDaoTao_DELETED", _maMay, _nguoiSD, _MaHTDaoTao);
        }
        #endregion

        #region DMHTKyLuat
        public override String InsertDMHTKyLuat(String _tenHTKyLuat, String _ghiChu, string _maMay, String _nguoiSD)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMHTKyLuat_CREATE", _tenHTKyLuat, _ghiChu, _maMay, _nguoiSD));
        }
        public override void UpdateDMHTKyLuat(String _MaHTKyLuat, String _tenHTKyLuat, String _ghiChu, string _maMay, String _nguoiSD, Boolean _huy)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMHTKyLuat_UPDATE", _MaHTKyLuat, _tenHTKyLuat, _ghiChu, _maMay, _nguoiSD, _huy);
        }
        public override void DeleteDMHTKyLuat(String _maMay, String _nguoiSD, String _MaHTKyLuat)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMHTKyLuat_DELETED", _maMay, _nguoiSD, _MaHTKyLuat);
        }
        #endregion

        #region DMQHGiaDinh
        public override String InsertDMQHGiaDinh(String _tenQHGiaDinh, String _ghiChu, string _maMay, String _nguoiSD)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMQHGiaDinh_CREATE", _tenQHGiaDinh, _ghiChu, _maMay, _nguoiSD));
        }
        public override void UpdateDMQHGiaDinh(String _maQHGiaDinh, String _tenQHGiaDinh, String _ghiChu, string _maMay, String _nguoiSD, Boolean _huy)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMQHGiaDinh_UPDATE", _maQHGiaDinh, _tenQHGiaDinh, _ghiChu, _maMay, _nguoiSD, _huy);
        }
        public override void DeleteDMQHGiaDinh(String _maMay, String _nguoiSD, String _maQHGiaDinh)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMQHGiaDinh_DELETED", _maMay, _nguoiSD, _maQHGiaDinh);
        }
        #endregion

        #region DMHocHam
        public override String InsertDMHocHam(String _tenHocHam, String _ghiChu, string _maMay, String _nguoiSD)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMHocHam_CREATE", _tenHocHam, _ghiChu, _maMay, _nguoiSD));
        }
        public override void UpdateDMHocHam(String _maHocHam, String _tenHocHam, String _ghiChu, string _maMay, String _nguoiSD, Boolean _huy)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMHocHam_UPDATE", _maHocHam, _tenHocHam, _ghiChu, _maMay, _nguoiSD, _huy);
        }
        public override void DeleteDMHocHam(String _maMay, String _nguoiSD, String _maHocHam)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMHocHam_DELETED", _maMay, _nguoiSD, _maHocHam);
        }
        #endregion

        #region DMSucKhoe
        public override String InsertDMSucKhoe(String _tenSucKhoe, String _ghiChu, string _maMay, String _nguoiSD)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMSucKhoe_CREATE", _tenSucKhoe, _ghiChu, _maMay, _nguoiSD));
        }
        public override void UpdateDMSucKhoe(String _maSucKhoe, String _tenSucKhoe, String _ghiChu, string _maMay, String _nguoiSD, Boolean _huy)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMSucKhoe_UPDATE", _maSucKhoe, _tenSucKhoe, _ghiChu, _maMay, _nguoiSD, _huy);
        }
        public override void DeleteDMSucKhoe(String _maMay, String _nguoiSD, String _maSucKhoe)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMSucKhoe_DELETED", _maMay, _nguoiSD, _maSucKhoe);
        }
        #endregion

        #region DMHTKhenThuong
        public override String InsertDMHTKhenThuong(String _tenHTKhen, String _ghiChu, string _maMay, String _nguoiSD)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMHTKhen_CREATE", _tenHTKhen, _ghiChu, _maMay, _nguoiSD));
        }
        public override void UpdateDMHTKhenThuong(String _MAHTKhen, String _tenHTKhen, String _ghiChu, string _maMay, String _nguoiSD, Boolean _huy)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMHTKhen_UPDATE", _MAHTKhen, _tenHTKhen, _ghiChu, _maMay, _nguoiSD, _huy);
        }
        public override void DeleteDMHTKhenThuong(String _maMay, String _nguoiSD, String _MAHTKhen)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMHTKhen_DELETED", _maMay, _nguoiSD, _MAHTKhen);
        }
        #endregion

        #region DMLoaiHopDong
        public override String InsertDMLoaiHopDong(String _TenLoaiHopDong, String _ghiChu, string _maMay, String _nguoiSD)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMLoaiHD_CREATE", _TenLoaiHopDong, _ghiChu, _maMay, _nguoiSD));
        }
        public override void UpdateDMLoaiHopDong(String _MaLoaiHopDong, String _TenLoaiHopDong, String _ghiChu, string _maMay, String _nguoiSD, Boolean _huy)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMLoaiHD_UPDATE", _MaLoaiHopDong, _TenLoaiHopDong, _ghiChu, _maMay, _nguoiSD, _huy);
        }
        public override void DeleteDMLoaiHopDong(String _maMay, String _nguoiSD, String _TenLoaiHopDong)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMLoaiHD_DELETED", _maMay, _nguoiSD, _TenLoaiHopDong);
        }
        #endregion
        #region DMTrangThaiLV
        public override String InsertDMTrangThaiLV(String _tenTrangThaiLV, String _ghiChu, string _maMay, String _nguoiSD)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMTrangThaiLV_CREATE", _tenTrangThaiLV, _ghiChu, _maMay, _nguoiSD));
        }
        public override void UpdateDMTrangThaiLV(String _maTrangThaiLV, String _tenTrangThaiLV, String _ghiChu, string _maMay, String _nguoiSD, Boolean _huy)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMTrangThaiLV_UPDATE", _maTrangThaiLV, _tenTrangThaiLV, _ghiChu, _maMay, _nguoiSD, _huy);
        }
        public override void DeleteDMTrangThaiLV(String _maMay, String _nguoiSD, String _maTrangThaiLV)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMTrangThaiLV_DELETED", _maMay, _nguoiSD, _maTrangThaiLV);
        }
        #endregion
        #region DMLuong
        public override String InsertDMLuong(String _tenLuong, String _ghiChu, Decimal _MucLuong, string _maMay, String _nguoiSD)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMLuong_CREATE", _tenLuong, _ghiChu, _MucLuong, _maMay, _nguoiSD));
        }
        public override void UpdateDMLuong(String _maLuong, String _tenLuong, String _ghiChu, Decimal _MucLuong, string _maMay, String _nguoiSD, Boolean _huy)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMLuong_UPDATED", _maLuong, _tenLuong, _ghiChu, _MucLuong, _maMay, _nguoiSD, _huy);
        }
        public override void DeleteDMLuong(String _maMay, String _nguoiSD, String _maLuong)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMLuong_DELETED", _maMay, _nguoiSD, _maLuong);
        }
        #region DMMGThueThuNhap
        public override String InsertDMMGThueThuNhap(String _tenMGThueThuNhap, String _ghiChu, decimal _mucLuong, string _maMay, String _nguoiSD)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMMGThueThuNhap_CREATE", _tenMGThueThuNhap, _ghiChu, _mucLuong, _maMay, _nguoiSD));
        }
        public override void UpdateDMMGThueThuNhap(String _maMGThueThuNhap, String _tenMGThueThuNhap, String _ghiChu, decimal _mucLuong, string _maMay, String _nguoiSD, Boolean _huy)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMMGThueThuNhap_UPDATED", _maMGThueThuNhap, _tenMGThueThuNhap, _ghiChu, _mucLuong, _maMay, _nguoiSD, _huy);
        }
        public override void DeleteDMMGThueThuNhap(String _maMay, String _nguoiSD, String _maMGThueThuNhap)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMMGThueThuNhap_DELETED", _maMay, _nguoiSD, _maMGThueThuNhap);
        }
        #endregion
        #endregion
        #region DMTrangThaiTB
        public override String InsertDMTrangThaiTB(String _tenTrangThaiTB, String _ghiChu, string _maMay, String _nguoiSD)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMTrangThai_CREATE", _tenTrangThaiTB, _ghiChu, _maMay, _nguoiSD));
        }
        public override void UpdateDMTrangThaiTB(String _maTrangThaiTB, String _tenTrangThaiTB, String _ghiChu, string _maMay, String _nguoiSD, Boolean _huy)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMTrangThai_UPDATE", _maTrangThaiTB, _tenTrangThaiTB, _ghiChu, _maMay, _nguoiSD, _huy);
        }
        public override void DeleteDMTrangThaiTB(String _maMay, String _nguoiSD, String _maTrangThaiTB)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMTrangThai_DELETED", _maMay, _nguoiSD, _maTrangThaiTB);
        }
        #endregion
        #region DM TDDaoTao
        public override String InsertDMTDDaoTao(String _tenTDDaoTao, String _ghiChu, string _maMay, String _nguoiSD)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMTDDaoTao_CREATE", _tenTDDaoTao, _ghiChu, _maMay, _nguoiSD));
        }
        public override void UpdateDMTDDaoTao(String _maTDDaoTao, String _tenTDDaoTao, String _ghiChu, string _maMay, String _nguoiSD, Boolean _huy)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMTDDaoTao_UPDATE", _maTDDaoTao, _tenTDDaoTao, _ghiChu, _maMay, _nguoiSD, _huy);
        }
        public override void DeleteDMTDDaoTao(String _maMay, String _nguoiSD, String _maTDDaoTao)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMTDDaoTao_DELETED", _maMay, _nguoiSD, _maTDDaoTao);
        }
        #endregion

        #region DM TDChinhTri
        public override String InsertDMTDChinhTri(String _tenTDChinhTri, String _ghiChu, string _maMay, String _nguoiSD)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMTDChinhTri_CREATE", _tenTDChinhTri, _ghiChu, _maMay, _nguoiSD));
        }
        public override void UpdateDMTDChinhTri(String _maTDChinhTri, String _tenTDChinhTri, String _ghiChu, string _maMay, String _nguoiSD, Boolean _huy)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMTDChinhTri_UPDATE", _maTDChinhTri, _tenTDChinhTri, _ghiChu, _maMay, _nguoiSD, _huy);
        }
        public override void DeleteDMTDChinhTri(String _maMay, String _nguoiSD, String _maTDChinhTri)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMTDChinhTri_DELETED", _maMay, _nguoiSD, _maTDChinhTri);
        }
        #endregion

        #region DM Ngach
        public override String InsertDMNgach(String _MaQL, String _tenNgach, String _ghiChu, string _maMay, String _nguoiSD)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMNgach_CREATE", _MaQL, _tenNgach, _ghiChu, _maMay, _nguoiSD));
        }
        public override void UpdateDMNgach(String _maNgach, string _MaQL, String _tenNgach, String _ghiChu, string _maMay, String _nguoiSD, Boolean _huy)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMNgach_UPDATE", _maNgach, _MaQL, _tenNgach, _ghiChu, _maMay, _nguoiSD, _huy);
        }
        public override void DeleteDMNgach(String _maMay, String _nguoiSD, String _maNgach)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMNgach_DELETED", _maMay, _nguoiSD, _maNgach);
        }
        #endregion

        #region DM Dong thue thu nhap
        public override String InsertDMDongThueThuNhap(String _tenDongThueThuNhap, String _ghiChu, Decimal _soTienTu, Decimal _soTienDen, Decimal _heSo, String _maMay, String _nguoiSD)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMDongThueThuNhap_CREATE", _tenDongThueThuNhap, _ghiChu, _soTienTu, _soTienDen, _heSo, _maMay, _nguoiSD));
        }
        public override void UpdateDMDongThueThuNhap(String _maLuong, String _tenDongThueThuNhap, String _ghiChu, Decimal _soTienTu, Decimal _soTienDen, Decimal _heSo, String _maMay, String _nguoiSD, bool _huy)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMDongThueThuNhap_UPDATED", _maLuong, _tenDongThueThuNhap, _ghiChu, _soTienTu, _soTienDen, _heSo, _maMay, _nguoiSD, _huy);
        }
        public override void DeleteDMDongThueThuNhap(String _maMay, String _nguoiSD, String _maLuong)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMDongThueThuNhap_DELETED", _maMay, _nguoiSD, _maLuong);
        }
        #endregion
        #region Tham so luong
        public override void UpdateThamSoLuong(Decimal _mucLuongCB, Decimal _bHYT, Decimal _bHXH, Decimal _congDoan, Decimal _heSoThamNien, Decimal _donGiaTruc, Decimal _donGiaXQuang, Decimal _donGiaM2, Decimal _donGiaNTHSCC, Decimal _donGiaNNHSCC, Decimal _donGiaNLHSCC, Decimal _donGiaQCCTNBHSCC, Decimal _donGiaND1142002HSCC, Decimal _donGiaNTCM, Decimal _donGiaNNCM, Decimal _donGiaNLCM, Decimal _donGiaQCCTNBCM, Decimal _donGiaNTLD, Decimal _donGiaNNLD, Decimal _donGiaNLLD, Decimal _donGiaCocIHSCC, Decimal _donGiaCocIIHSCC, Decimal _donGiaDDHSCC, Decimal _donGiaCocICM, Decimal _donGiaCocIICM, Decimal _donGiaDDCM, Decimal _dONGIADBAP1, Decimal _dONGIADBAP2, Decimal _dONGIADBBC, Decimal _dONGIADBBP1, Decimal _dONGIADBBP2, Decimal _dONGIADBCC, Decimal _dONGIADBCP1, Decimal _dONGIADBCP2, Decimal _dONGIAIC, Decimal _dONGIADB1P1, Decimal _dONGIAKC, Decimal _dONGIAKP1, Decimal _dONGIANgoaiVien, Decimal _dONGIAChuTri, Decimal _dONGIAThuKy, Decimal _dONGIABacSy, Decimal _dONGIADD, Decimal _dONGIANVien, Decimal _dONGIADBBS, Decimal _dONGIADBDD, Decimal _dONGIAIBS, Decimal _dONGIAIDD, Decimal _dONGIAIIBS, Decimal _dONGIAIIDD, Decimal _dONGIAIIIBS, Decimal _dONGIAIIIDD, Decimal _heSoPTHS, Decimal _dONGIAA, Decimal _dONGIAB, Decimal _dONGIAC, Decimal _mucTTThue, Decimal _heSoLamDem, Decimal _heSoNgoaiGio, Decimal _heSoNgoaiGio7, Decimal _heSoNgoaiGioLe, Decimal _dONGIADBAC, Decimal _dONGIADCDBAP1, Decimal _dONGIADCDBAP2, Decimal _dONGIADCDBBC, Decimal _dONGIADCDBBP1, Decimal _dONGIADCDBBP2, Decimal _dONGIADCDBCC, Decimal _dONGIADCDBCP1, Decimal _dONGIADCDBCP2, Decimal _dONGIADCIC, Decimal _dONGIADCDB1P1, Decimal _dONGIADCKC, Decimal _dONGIADCKP1, Decimal _dONGIADCDBAC, Decimal _dONGIAGMDBAP1, Decimal _dONGIAGMDBAP2, Decimal _dONGIAGMDBBC, Decimal _dONGIAGMDBBP1, Decimal _dONGIAGMDBBP2, Decimal _dONGIAGMDBCC, Decimal _dONGIAGMDBCP1, Decimal _dONGIAGMDBCP2, Decimal _dONGIAGMIC, Decimal _dONGIAGMDB1P1, Decimal _dONGIAGMKC, Decimal _dONGIAGMKP1, Decimal _dONGIAGMDBAC, Decimal _dONGIACECDBAP1, Decimal _dONGIACECDBAP2, Decimal _dONGIACECDBBC, Decimal _dONGIACECDBBP1, Decimal _dONGIACECDBBP2, Decimal _dONGIACECDBCC, Decimal _dONGIACECDBCP1, Decimal _dONGIACECDBCP2, Decimal _dONGIACECIC, Decimal _dONGIACECDB1P1, Decimal _dONGIACECKC, Decimal _dONGIACECKP1, Decimal _dONGIACECDBAC, Decimal _donGiaAnTrua, Decimal _donGiaAnToi, Decimal _mucLuongDocHai, Decimal _dONGIADCDB1P2, Decimal _dONGIADCKP2, Decimal _dONGIACECDB1P2, Decimal _dONGIACECKP2, Decimal _dONGIAGMDB1P2, Decimal _dONGIAGMKP2, Decimal _dONGIATMDBAP1, Decimal _dONGIATMDBAP2, Decimal _dONGIATMDBBC, Decimal _dONGIATMDBBP1, Decimal _dONGIATMDBBP2, Decimal _dONGIATMDBCC, Decimal _dONGIATMDBCP1, Decimal _dONGIATMDBCP2, Decimal _dONGIATMIC, Decimal _dONGIATMDB1P1, Decimal _dONGIATMKC, Decimal _dONGIATMKP1, Decimal _dONGIATMDBAC, Decimal _dONGIATMDCDBAP1, Decimal _dONGIATMDCDBAP2, Decimal _dONGIATMDCDBBC, Decimal _dONGIATMDCDBBP1, Decimal _dONGIATMDCDBBP2, Decimal _dONGIATMDCDBCC, Decimal _dONGIATMDCDBCP1, Decimal _dONGIATMDCDBCP2, Decimal _dONGIATMDCIC, Decimal _dONGIATMDCDB1P1, Decimal _dONGIATMDCKC, Decimal _dONGIATMDCKP1, Decimal _dONGIATMDCDBAC, Decimal _dONGIATMGMDBAP1, Decimal _dONGIATMGMDBAP2, Decimal _dONGIATMGMDBBC, Decimal _dONGIATMGMDBBP1, Decimal _dONGIATMGMDBBP2, Decimal _dONGIATMGMDBCC, Decimal _dONGIATMGMDBCP1, Decimal _dONGIATMGMDBCP2, Decimal _dONGIATMGMIC, Decimal _dONGIATMGMDB1P1, Decimal _dONGIATMGMKC, Decimal _dONGIATMGMKP1, Decimal _dONGIATMGMDBAC, Decimal _dONGIATMCECDBAP1, Decimal _dONGIATMCECDBAP2, Decimal _dONGIATMCECDBBC, Decimal _dONGIATMCECDBBP1, Decimal _dONGIATMCECDBBP2, Decimal _dONGIATMCECDBCC, Decimal _dONGIATMCECDBCP1, Decimal _dONGIATMCECDBCP2, Decimal _dONGIATMCECIC, Decimal _dONGIATMCECDB1P1, Decimal _dONGIATMCECKC, Decimal _dONGIATMCECKP1, Decimal _dONGIATMCECDBAC, Decimal _dONGIATMDB1P2, Decimal _dONGIATMKP2, Decimal _dONGIATMDCDB1P2, Decimal _dONGIATMDCKP2, Decimal _dONGIATMCECDB1P2, Decimal _dONGIATMCECKP2, Decimal _dONGIATMGMDB1P2, Decimal _dONGIATMGMKP2, Boolean _huy, String _nguoiSD, String _maMay, Decimal _dONGIADB1P2, Decimal _dONGIAKP2, Decimal _dONGIAGMTE)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spThamSoLuong_UPDATE", _mucLuongCB, _bHYT, _bHXH, _congDoan, _heSoThamNien, _donGiaTruc, _donGiaXQuang, _donGiaM2, _donGiaNTHSCC, _donGiaNNHSCC, _donGiaNLHSCC, _donGiaQCCTNBHSCC, _donGiaND1142002HSCC, _donGiaNTCM, _donGiaNNCM, _donGiaNLCM, _donGiaQCCTNBCM, _donGiaNTLD, _donGiaNNLD, _donGiaNLLD, _donGiaCocIHSCC, _donGiaCocIIHSCC, _donGiaDDHSCC, _donGiaCocICM, _donGiaCocIICM, _donGiaDDCM, _dONGIADBAP1, _dONGIADBAP2, _dONGIADBBC, _dONGIADBBP1, _dONGIADBBP2, _dONGIADBCC, _dONGIADBCP1, _dONGIADBCP2, _dONGIAIC, _dONGIADB1P1, _dONGIAKC, _dONGIAKP1, _dONGIANgoaiVien, _dONGIAChuTri, _dONGIAThuKy, _dONGIABacSy, _dONGIADD, _dONGIANVien, _dONGIADBBS, _dONGIADBDD, _dONGIAIBS, _dONGIAIDD, _dONGIAIIBS, _dONGIAIIDD, _dONGIAIIIBS, _dONGIAIIIDD, _heSoPTHS, _dONGIAA, _dONGIAB, _dONGIAC, _mucTTThue, _heSoLamDem, _heSoNgoaiGio, _heSoNgoaiGio7, _heSoNgoaiGioLe, _dONGIADBAC, _dONGIADCDBAP1, _dONGIADCDBAP2, _dONGIADCDBBC, _dONGIADCDBBP1, _dONGIADCDBBP2, _dONGIADCDBCC, _dONGIADCDBCP1, _dONGIADCDBCP2, _dONGIADCIC, _dONGIADCDB1P1, _dONGIADCKC, _dONGIADCKP1, _dONGIADCDBAC, _dONGIAGMDBAP1, _dONGIAGMDBAP2, _dONGIAGMDBBC, _dONGIAGMDBBP1, _dONGIAGMDBBP2, _dONGIAGMDBCC, _dONGIAGMDBCP1, _dONGIAGMDBCP2, _dONGIAGMIC, _dONGIAGMDB1P1, _dONGIAGMKC, _dONGIAGMKP1, _dONGIAGMDBAC, _dONGIACECDBAP1, _dONGIACECDBAP2, _dONGIACECDBBC, _dONGIACECDBBP1, _dONGIACECDBBP2, _dONGIACECDBCC, _dONGIACECDBCP1, _dONGIACECDBCP2, _dONGIACECIC, _dONGIACECDB1P1, _dONGIACECKC, _dONGIACECKP1, _dONGIACECDBAC, _donGiaAnTrua, _donGiaAnToi, _mucLuongDocHai, _dONGIADCDB1P2, _dONGIADCKP2, _dONGIACECDB1P2, _dONGIACECKP2, _dONGIAGMDB1P2, _dONGIAGMKP2, _dONGIATMDBAP1, _dONGIATMDBAP2, _dONGIATMDBBC, _dONGIATMDBBP1, _dONGIATMDBBP2, _dONGIATMDBCC, _dONGIATMDBCP1, _dONGIATMDBCP2, _dONGIATMIC, _dONGIATMDB1P1, _dONGIATMKC, _dONGIATMKP1, _dONGIATMDBAC, _dONGIATMDCDBAP1, _dONGIATMDCDBAP2, _dONGIATMDCDBBC, _dONGIATMDCDBBP1, _dONGIATMDCDBBP2, _dONGIATMDCDBCC, _dONGIATMDCDBCP1, _dONGIATMDCDBCP2, _dONGIATMDCIC, _dONGIATMDCDB1P1, _dONGIATMDCKC, _dONGIATMDCKP1, _dONGIATMDCDBAC, _dONGIATMGMDBAP1, _dONGIATMGMDBAP2, _dONGIATMGMDBBC, _dONGIATMGMDBBP1, _dONGIATMGMDBBP2, _dONGIATMGMDBCC, _dONGIATMGMDBCP1, _dONGIATMGMDBCP2, _dONGIATMGMIC, _dONGIATMGMDB1P1, _dONGIATMGMKC, _dONGIATMGMKP1, _dONGIATMGMDBAC, _dONGIATMCECDBAP1, _dONGIATMCECDBAP2, _dONGIATMCECDBBC, _dONGIATMCECDBBP1, _dONGIATMCECDBBP2, _dONGIATMCECDBCC, _dONGIATMCECDBCP1, _dONGIATMCECDBCP2, _dONGIATMCECIC, _dONGIATMCECDB1P1, _dONGIATMCECKC, _dONGIATMCECKP1, _dONGIATMCECDBAC, _dONGIATMDB1P2, _dONGIATMKP2, _dONGIATMDCDB1P2, _dONGIATMDCKP2, _dONGIATMCECDB1P2, _dONGIATMCECKP2, _dONGIATMGMDB1P2, _dONGIATMGMKP2, _huy, _nguoiSD, _maMay, _dONGIADB1P2, _dONGIAKP2, _dONGIAGMTE);
        }
        #endregion

        #region DM NgachBac
        public override String InsertDMNgachBac(string _maNgach, int _Bac, string _ghiChu, decimal _Heso, string _maMay, string _nguoiSD)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMNgachBac_CREATE", _maNgach, _Bac, _ghiChu, _Heso, _maMay, _nguoiSD));
        }
        public override void UpdateDMNgachBac(string _maNgach, int _Bac, string _ghiChu, decimal _Heso, string _maMay, Boolean _huy, string _nguoiSD)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMNgachBac_UPDATED", _maNgach, _Bac, _ghiChu, _Heso, _maMay, _huy, _nguoiSD);
        }
        public override void DeleteDMNgachBac(String _maMay, String _nguoiSD, String _maNgach, decimal _Bac)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMNgachBac_DELETED", _maMay, _nguoiSD, _maNgach, _Bac);
        }
        #endregion
        #region DM NgoaiNgu
        public override String InsertDMNgoaiNgu(String _tenNgoaiNgu, String _ghiChu, string _maMay, String _nguoiSD)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMNgoaiNgu_CREATE", _tenNgoaiNgu, _ghiChu, _maMay, _nguoiSD));
        }
        public override void UpdateDMNgoaiNgu(String _maNgoaiNgu, String _tenNgoaiNgu, String _ghiChu, string _maMay, String _nguoiSD, Boolean _huy)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMNgoaiNgu_UPDATE", _maNgoaiNgu, _tenNgoaiNgu, _ghiChu, _maMay, _nguoiSD, _huy);
        }
        public override void DeleteDMNgoaiNgu(String _maMay, String _nguoiSD, String _maNgoaiNgu)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMNgoaiNgu_DELETED", _maMay, _nguoiSD, _maNgoaiNgu);
        }
        #endregion

        #region DM DanhHieu
        public override String InsertDMDanhHieu(String _tenDanhHieu, String _ghiChu, string _maMay, String _nguoiSD)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMDanhHieu_CREATE", _tenDanhHieu, _ghiChu, _maMay, _nguoiSD));
        }
        public override void UpdateDMDanhHieu(String _maDanhHieu, String _tenDanhHieu, String _ghiChu, string _maMay, String _nguoiSD, Boolean _huy)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMDanhHieu_UPDATE", _maDanhHieu, _tenDanhHieu, _ghiChu, _maMay, _nguoiSD, _huy);
        }
        public override void DeleteDMDanhHieu(String _maMay, String _nguoiSD, String _maDanhHieu)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMDanhHieu_DELETED", _maMay, _nguoiSD, _maDanhHieu);
        }
        #endregion

        #region DM Dien CS
        public override String InsertDMDienCSach(String _tenDienCSach, String _ghiChu, string _maMay, String _nguoiSD)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMDienCSach_CREATE", _tenDienCSach, _ghiChu, _maMay, _nguoiSD));
        }
        public override void UpdateDMDienCSach(String _maDienCSach, String _tenDienCSach, String _ghiChu, string _maMay, String _nguoiSD, Boolean _huy)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMDienCSach_UPDATE", _maDienCSach, _tenDienCSach, _ghiChu, _maMay, _nguoiSD, _huy);
        }
        public override void DeleteDMDienCSach(String _maMay, String _nguoiSD, String _maDienCSach)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMDienCSach_DELETED", _maMay, _nguoiSD, _maDienCSach);
        }
        #endregion

        #region DM Hoc van
        public override String InsertDMHocVan(String _tenHocVan, String _ghiChu, string _maMay, String _nguoiSD)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMHocVan_CREATE", _tenHocVan, _ghiChu, _maMay, _nguoiSD));
        }
        public override void UpdateDMHocVan(String _maHocVan, String _tenHocVan, String _ghiChu, string _maMay, String _nguoiSD, Boolean _huy)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMHocVan_UPDATE", _maHocVan, _tenHocVan, _ghiChu, _maMay, _nguoiSD, _huy);
        }
        public override void DeleteDMHocVan(String _maMay, String _nguoiSD, String _maHocVan)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMHocVan_DELETED", _maMay, _nguoiSD, _maHocVan);
        }
        #endregion

        #region DM Hoc vi
        public override String InsertDMHocVi(String _tenHocVi, String _ghiChu, string _maMay, String _nguoiSD)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMHocVi_CREATE", _tenHocVi, _ghiChu, _maMay, _nguoiSD));
        }
        public override void UpdateDMHocVi(String _maHocVi, String _tenHocVi, String _ghiChu, string _maMay, String _nguoiSD, Boolean _huy)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMHocVi_UPDATE", _maHocVi, _tenHocVi, _ghiChu, _maMay, _nguoiSD, _huy);
        }
        public override void DeleteDMHocVi(String _maMay, String _nguoiSD, String _maHocVi)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMHocVi_DELETED", _maMay, _nguoiSD, _maHocVi);
        }
        #endregion

        #region DM Ton Giao
        public override String InsertDMTonGiao(String _tenTonGiao, String _ghiChu, string _maMay, String _nguoiSD)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMTonGiao_CREATE", _tenTonGiao, _ghiChu, _maMay, _nguoiSD));
        }
        public override void UpdateDMTonGiao(String _maTonGiao, String _tenTonGiao, String _ghiChu, string _maMay, String _nguoiSD, Boolean _huy)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMTonGiao_UPDATE", _maTonGiao, _tenTonGiao, _ghiChu, _maMay, _nguoiSD, _huy);
        }
        public override void DeleteDMTonGiao(String _maMay, String _nguoiSD, String _maTonGiao)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMTonGiao_DELETED", _maMay, _nguoiSD, _maTonGiao);
        }
        #endregion

        #region DM hinh thuc ra vien
        public override String InsertDMHTRaVien(String _tenHTRaVien, String _ghiChu, string _maMay, String _nguoiSD)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMHTRaVien_CREATE", _tenHTRaVien, _ghiChu, _maMay, _nguoiSD));
        }
        public override void UpdateDMHTRaVien(String _maHTRaVien, String _tenHTRaVien, String _ghiChu, string _maMay, String _nguoiSD, Boolean _huy)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMHTRaVien_UPDATE", _maHTRaVien, _tenHTRaVien, _ghiChu, _maMay, _nguoiSD, _huy);
        }
        public override void DeleteDMHTRaVien(String _maMay, String _nguoiSD, String _maHTRaVien)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMHTRaVien_DELETED", _maMay, _nguoiSD, _maHTRaVien);
        }
        #endregion

        #region DM don vi tai ngu
        public override String InsertDMDonVi(String _tenDonVi, String _ghiChu, string _maMay, String _nguoiSD, String _manhom)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMDonVi_CREATE", _tenDonVi, _ghiChu, _maMay, _nguoiSD, _manhom));
        }
        public override void UpdateDMDonVi(String _maDonVi, String _tenDonVi, String _ghiChu, string _maMay, String _nguoiSD, Boolean _huy, String _manhom)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMDonVi_UPDATE", _maDonVi, _tenDonVi, _ghiChu, _maMay, _nguoiSD, _huy, _manhom);
        }
        public override void DeleteDMDonVi(String _maMay, String _nguoiSD, String _maDonVi)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMDonVi_DELETED", _maMay, _nguoiSD, _maDonVi);
        }
        #endregion
        #region DM quan ham
        public override String InsertDMQuanHam(String _tenQuanHam, String _ghiChu, string nhom, string _maMay, String _nguoiSD)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMQuanHam_CREATE", _tenQuanHam, _ghiChu, nhom, _maMay, _nguoiSD));
        }
        public override void UpdateDMQuanHam(String _maQuanHam, String _tenQuanHam, String _ghiChu, string nhom, string _maMay, String _nguoiSD, Boolean _huy)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMQuanHam_UPDATE", _maQuanHam, _tenQuanHam, _ghiChu, nhom, _maMay, _nguoiSD, _huy);
        }
        public override void DeleteDMQuanHam(String _maMay, String _nguoiSD, String _maQuanHam)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMQuanHam_DELETED", _maMay, _nguoiSD, _maQuanHam);
        }
        #endregion

        #region DM quan he voi quan doi
        public override String InsertDMQuanHeQD(String _tenQuanHeQD, String _ghiChu, string nhom, string _maMay, String _nguoiSD)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMQuanHeQD_CREATE", _tenQuanHeQD, _ghiChu, nhom, _maMay, _nguoiSD));
        }
        public override void UpdateDMQuanHeQD(String _maQuanHeQD, String _tenQuanHeQD, String _ghiChu, string nhom, string _maMay, String _nguoiSD, Boolean _huy)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMQuanHeQD_UPDATE", _maQuanHeQD, _tenQuanHeQD, _ghiChu, nhom, _maMay, _nguoiSD, _huy);
        }
        public override void DeleteDMQuanHeQD(String _maMay, String _nguoiSD, String _maQuanHeQD)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMQuanHeQD_DELETED", _maMay, _nguoiSD, _maQuanHeQD);
        }
        #endregion

        #region DM the BH

        public override String InsertDMTheBH(String _tenTheBH, String _doituong, Int32 _miengiam, Int32 _loaithe, Byte _dTThe, String _maDT, String _nguoiSD, String _maMay)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMTheBH_CREATE", _tenTheBH, _doituong, _miengiam, _loaithe, _dTThe, _maDT, _nguoiSD, _maMay));
        }
        public override void UpdateDMTheBH(String _maTheBH, String _tenTheBH, String _doituong, Int32 _miengiam, Int32 _loaithe, Byte _dTThe, String _maDT, String _nguoiSD, Boolean _huy, String _maMay)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMTheBH_UPDATE", _maTheBH, _tenTheBH, _doituong, _miengiam, _loaithe, _dTThe, _maDT, _nguoiSD, _huy, _maMay);
        }
        public override void DeleteDMTheBH(String _maMay, String _nguoiSD, String _maTheBH)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMTheBH_DELETED", _maMay, _nguoiSD, _maTheBH);
        }
        #endregion

        #region DM Nhan su

        #region GetList
        public override IDataReader GetAllDMCheDoLV(Boolean _qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMCheDoLV_GetAll", _qadmin));
        }
        #endregion

        #endregion
        #region DM LDNghi
        public override String InsertDMLDNghi(String _tenLDNghi, String _ghiChu, string _maMay, String _nguoiSD)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMLDNghi_CREATE", _tenLDNghi, _ghiChu, _maMay, _nguoiSD));
        }
        public override void UpdateDMLDNghi(String _maLDNghi, String _tenLDNghi, String _ghiChu, string _maMay, String _nguoiSD, Boolean _huy)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMLDNghi_UPDATE", _maLDNghi, _tenLDNghi, _ghiChu, _maMay, _nguoiSD, _huy);
        }
        public override void DeleteDMLDNghi(String _maMay, String _nguoiSD, String _maLDNghi)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMLDNghi_DELETED", _maMay, _nguoiSD, _maLDNghi);
        }
        #endregion
        #endregion

        #region DM Duoc

        #region DMLoaiThau
        public override IDataReader GetDMLoaiThau(String _maLOAITHAU)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMLoaiThau_Get", _maLOAITHAU));
        }
        public override IDataReader GetAllDMLoaiThau(byte loai, bool qAdmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMLoaiThau_GetAll", loai, qAdmin));
        }
        public override IDataReader FindDMLoaiThau(String _DK, Boolean qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMLoaiThau_FINDS", _DK, qadmin));
        }
        public override String InsertDMLoaiThau(String _TenLoaiThau, String _GhiChu, String _maMay, Byte _Loai, String _nguoiSD, String _TenTA)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMLoaiThau_CREATE", _TenLoaiThau, _GhiChu, _maMay, _Loai, _nguoiSD, _TenTA));
        }
        public override void UpdateDMLoaiThau(String _MaLoaiThau, String _TenLoaiThau, String _GhiChu, String _maMay, Byte _Loai, Boolean _huy, Boolean _KhongSD, String _nguoiSD, String _TenTA)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMLoaiThau_UPDATED", _MaLoaiThau, _TenLoaiThau, _GhiChu, _maMay, _Loai, _huy, _KhongSD, _nguoiSD, _TenTA);
        }
        public override void DeleteDMLoaiThau(String _maMay, String _nguoiSD, String _maLOAITHAU)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMLoaiThau_DELETED", _maMay, _nguoiSD, _maLOAITHAU);
        }

        #endregion
        #region GetList
        public override IDataReader GetAllDMDanhGia_CS_KQ(string MaCS_KQ, bool qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMDanhGia_CS_KQ_GetAll", MaCS_KQ, qadmin));
        }
        public override IDataReader GetDMDanhGia_CS_KQ(String _maCS_KQ)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMDanhGia_CS_KQ_Get", _maCS_KQ));
        }
        public override IDataReader GetDMDonvitinh(String _maDVT)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMDONVITINH_Get", _maDVT));
        }
        public override IDataReader GetAllDMDonvitinh(Boolean _qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMDONVITINH_GetAll", _qadmin));
        }
        public override IDataReader GetDMNCC(String _maNCC)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMNCC_Get", _maNCC));
        }
        public override IDataReader GetAllDMNCC(Byte _loai, Boolean _qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMNCC_GetAll", _loai, _qadmin));
        }
        public override IDataReader GetDMNoiSua(String _maNoiSua)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMNoiSua_Get", _maNoiSua));
        }
        public override IDataReader GetAllDMNoiSua(Boolean _qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMNoiSua_GetAll", _qadmin));
        }
        public override IDataReader GetAllDMNoiSua(Boolean _qadmin, Byte _loai)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMNoiSua_Gets", _qadmin, _loai));
        }
        public override IDataReader GetDMHinhThuc(String _maHinhThuc)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMHinhThuc_Get", _maHinhThuc));
        }
        public override IDataReader GetAllDMHinhThuc(Byte _loai, Boolean _qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMHinhThuc_GetAll", _loai, _qadmin));
        }


        public override IDataReader GetAllDMCapKTKL(Boolean _qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMCapKTKL_GetAll", _qadmin));
        }

        public override IDataReader GetDMHTKyLuat(String _maHTKyLuat)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMHTKyLuat_Get", _maHTKyLuat));
        }
        public override IDataReader GetAllDMHTKyLuat(Boolean _qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMHTKyLuat_GetAll", _qadmin));
        }


        public override IDataReader GetDMNguon(String _maNguon)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMNguon_Get", _maNguon));
        }
        public override IDataReader GetAllDMNguon(Byte _loai, Boolean _qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMNguon_GetAll", _loai, _qadmin));
        }
        public override IDataReader GetDMNhaSX(String _maNSX)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMNhaSX_Get", _maNSX));
        }
        public override IDataReader GetAllDMNhaSX(Byte _loai, Boolean _qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMNhaSX_GetAll", _loai, _qadmin));
        }
        //public override IDataReader GetAllAdminDMNhaSX(int _loai, string _nguoisd)
        //{
        //    return ((IDataReader)SqlHelper.ExecuteReader( ConnectionString, DatabaseOwner + ObjectQualifier + "spDMNhaSX_GetAllAdmin", _loai, _nguoisd));
        //}


        public override IDataReader GetDMKho(String _makho)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMKho_Get", _makho));
        }
        public override IDataReader GetAllDMKho(Byte _loai, Boolean _qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMKho_GetAll", _loai, _qadmin));
        }
        public override IDataReader GetDMNhom(String _mant)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMNhom_Get", _mant));
        }
        public override IDataReader GetAllDMNhom(Byte _loai, Boolean _qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMNhom_GetAll", _loai, _qadmin));
        }


        public override IDataReader GetDMThuoc(String _mathuoc)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMThuoc_Get", _mathuoc));
        }
        public override IDataReader GetAllDMThuoc(Boolean qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMThuoc_GetAll", qadmin));
        }
        public override IDataReader GetDMThuoc_Ke(String _mathuoc)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMThuoc_Ke_Get", _mathuoc));
        }
        public override IDataReader GetAllDMThuoc_Ke(Boolean qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMThuoc_Ke_GetAll", qadmin));
        }
        public override IDataReader GetDMThuoc_GiaQ(String _mathuoc)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMThuoc_Get", _mathuoc));
        }
        public override IDataReader GetAllDMThuoc_GiaQ(Boolean qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMThuoc_GiaQ_GetAll", qadmin));
        }
        public override IDataReader GetDMThuoc_Gia(String madt, String mathuoc)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMThuoc_Gia_Get", madt, mathuoc));
        }
        public override IDataReader GetAllDMThuoc_Gia(string madt, string dk, Boolean qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMThuoc_Gia_GetAll", madt, dk, qadmin));
        }
        //public override IDataReader GetAllDMThuoc_GiaFilter(string madt, string dk, string dkfilter, Boolean qadmin)
        //{
        //    return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMThuoc_GiaFilter_GetAll", madt, dk, dkfilter, qadmin));
        //}
        public override IDataReader GetAllDMThuoc_GiaFilter(string madt, string dk, string dkfilter, Boolean qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMThuoc_GiaFilter_GetAll", madt, dk, dkfilter, qadmin));
        }

        public override IDataReader GetDMThuoc_GiaDuyet(String madt, String mathuoc)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMThuoc_GiaDuyet_Get", madt, mathuoc));
        }
        public override IDataReader GetAllDMThuoc_GiaDuyet(string madt, string dk, Boolean qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMThuoc_GiaDuyet_GetAll", madt, dk, qadmin));
        }
        public override IDataReader GetAllDMThuoc_GiaDuyetFilter(string madt, string dk, string dkfilter, Boolean qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMThuoc_GiaDuyetFilter_GetAll", madt, dk, dkfilter, qadmin));
        }
        public override IDataReader GetDMPPSoche(String madt, String mathuoc)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMPPSoche_Get", madt, mathuoc));
        }
        public override IDataReader GetAllDMPPSoche(string maThuoc, string dk, Boolean qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMPPSoche_GetAll", maThuoc, dk, qadmin));
        }


        public override IDataReader GetDMPhanLoai(String _mapl)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMPhanloai_Get", _mapl));
        }
        public override IDataReader GetAllDMPhanLoai(Boolean _qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMPhanloai_GetAll", _qadmin));
        }
        public override IDataReader GetDMChungLoai(String maCL)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMChungLoai_Get", maCL));
        }
        public override IDataReader GetAllDMChungLoai(Byte _loai, Boolean _qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMChungLoai_GetAll", _loai, _qadmin));
        }
        public override IDataReader GetDMDanhGia(String madg)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMDanhGia_Get", madg));
        }
        public override IDataReader GetAllDMDanhGia(Byte _loai, Boolean _qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMDanhGia_GetAll", _loai, _qadmin));
        }
        public override IDataReader GetDMDanhGia_CS(String _maCS)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMDanhGia_CS_Get", _maCS));
        }
        public override IDataReader GetAllDMDanhGia_CS(Boolean _qadmin, string _maDanhGia)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMDanhGia_CS_GetAll", _qadmin, _maDanhGia));
        }
        public override IDataReader GetDMPhuCap(String maPhuCap)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMPhuCap_Get", maPhuCap));
        }
        public override IDataReader GetAllDMPhuCap(Boolean _qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMPhuCap_GetAll", _qadmin));
        }
        public override IDataReader GetDMThueTN(String maThueTN)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMThueTN_Get", maThueTN));
        }
        public override IDataReader GetAllDMThueTN(Boolean _qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMThueTN_GetAll", _qadmin));
        }
        public override IDataReader GetDMDTsudung(Decimal _maDTsudung)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMDTsudung_Get", _maDTsudung));
        }
        public override IDataReader GetAllDMDTsudung(Boolean _qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMDTsudung_GetAll", _qadmin));
        }
        public override IDataReader GetDMLoaiHinh(String _malh)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMLoaiHinh_Get", _malh));
        }
        public override IDataReader GetAllDMLoaiHinh(Boolean _qadmin, string _machungloai)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMLoaiHinh_GetAll", _qadmin, _machungloai));
        }
        public override IDataReader GetAllDMMoiTruong(Boolean _qadmin, string _macs)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMMoiTruong_GetAll", _qadmin, _macs));
        }
        public override IDataReader GetDMThanhPham(String _malh)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMThanhPham_Get", _malh));
        }
        public override IDataReader GetAllDMThanhPham(Boolean _qadmin, string _machungloai)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMThanhPham_GetAll", _qadmin, _machungloai));
        }
        public override IDataReader GetDMTaiKhoan(String _matk)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMTaiKhoan_Get", _matk));
        }
        public override IDataReader GetAllDMTaiKhoan(Boolean _qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMTaiKhoan_GetAll", _qadmin));
        }

        public override IDataReader GetAllDMThuoc_GiaQuay56(Boolean qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMThuoc_GiaQuay56_GetAll", qadmin));
        }

        //public override IDataReader FindDMThuoc_GiaQFilter(string _DK, string _DKFilter, Boolean _qadmin)
        //{
        //    return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMThuoc_FilterFinds", _DK, _DKFilter, _qadmin));
        //}
        public override IDataReader GetDMThuoc_GiaQuay56(String _mathuoc)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMThuoc_Get", _mathuoc));
        }


        public override IDataReader GetDMThuocKhoa(String maKhoa, String maDT, String maThuoc, byte loai)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMTHUOC_TON_GETKHOA", maKhoa, maDT, maThuoc, loai));
        }
        public override IDataReader GetAllDMThuocKhoa(String maKhoa, String maDT, String DK, byte loai)
        {
            // return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMTHUOC_TON_GETSKHOA", maKhoa, maDT, DK, loai));
            System.Data.SqlClient.SqlCommand cmd = SqlHelper.CreateCommand(SQLConnectionBD, DatabaseOwner + ObjectQualifier + "spDMTHUOC_TON_GETSKHOA");
            cmd.CommandTimeout = 18000;

            cmd.CommandType = System.Data.CommandType.StoredProcedure;
            cmd.Parameters.AddWithValue("madt", maDT);
            cmd.Parameters.AddWithValue("maKhoa", maKhoa);
            cmd.Parameters.AddWithValue("DK", DK);
            cmd.Parameters.AddWithValue("loai", loai);
            IDataReader dt;
            dt = (IDataReader)cmd.ExecuteReader(CommandBehavior.CloseConnection);
            cmd.Dispose();
            cmd = null;
            return dt;
        }
        public override IDataReader GetAllDMThuocKhoaMaSoKham(String maKhoa, String maDT, String DK, byte loai)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMTHUOC_TON_GETSKHOAM", maKhoa, maDT, DK, loai));
        }
        public override IDataReader GetAllDMThuocKhoaG(String maKhoa, String maDT, String DK, byte loai)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMTHUOC_TON_GETSKHOAG", maKhoa, maDT, DK, loai));
        }
        public override IDataReader GetAllDMThuocKhoaBT(String maKhoa, String maDT, String DK, byte loai)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMTHUOC_TON_GETSKHOABT", maKhoa, maDT, DK, loai));
        }
        public override IDataReader ThuocSD_ListBYBN(String _MaBN, String _Dk)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spKHAMBENH_ThuocSD_ListBYBN", _MaBN, _Dk));
        }
        public override IDataReader GetAllKhambenh_ThuocSD_BN_List(DateTime TuNgay, DateTime DenNgay, Boolean Duyet, Boolean Phat, String MaDT, String MaKho, String MAKHOA, Boolean dadung, String dk)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spKhambenh_ThuocSD_BN_List", TuNgay, DenNgay, Duyet, Phat, MaDT, MaKho, MAKHOA, dadung, dk));
            //System.Data.SqlClient.SqlCommand cmd = SqlHelper.CreateCommand(SQLConnectionBD, DatabaseOwner + ObjectQualifier + "spKhambenh_ThuocSD_BN_List");

            //cmd.CommandTimeout = 18000;
            //cmd.CommandType = System.Data.CommandType.StoredProcedure;
            //cmd.Parameters.AddWithValue("TuNgay", TuNgay);
            //cmd.Parameters.AddWithValue("DenNgay", DenNgay);
            //cmd.Parameters.AddWithValue("Duyet", Duyet);
            //cmd.Parameters.AddWithValue("Phat", Phat);
            //cmd.Parameters.AddWithValue("MaDT", MaDT);
            //cmd.Parameters.AddWithValue("MaKho", MaKho);
            //cmd.Parameters.AddWithValue("MaKhoa", MAKHOA);
            //cmd.Parameters.AddWithValue("dadung", dadung);
            //cmd.Parameters.AddWithValue("DK", dk);
            //IDataReader dt;
            //dt = (IDataReader)cmd.ExecuteReader(CommandBehavior.CloseConnection);;
            //cmd.Dispose();
            //cmd = null;
            // if (SQLConnectionBD.State == System.Data.ConnectionState.Closed)
            //SQLConnectionBD.Close();
            //if (_sqlConnection.State == System.Data.ConnectionState.Closed)
            //{
            //    _sqlConnection.Close();
            //    //_sqlConnection = null;
            //}
            // return dt;
        }
        public override IDataReader GetAllKhambenh_ThuocSD_BNNOITRU_List(DateTime TuNgay, DateTime DenNgay, Boolean Duyet, Boolean Phat, String MaDT, String MaKho, String MAKHOA, Boolean dadung)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spKhambenh_ThuocSD_BNNOITRU_List", TuNgay, DenNgay, Duyet, Phat, MaDT, MaKho, MAKHOA, dadung));
            // System.Data.SqlClient.SqlCommand cmd = SqlHelper.CreateCommand(SQLConnectionBD, DatabaseOwner + ObjectQualifier + "spKhambenh_ThuocSD_BNNOITRU_List");

            // cmd.CommandTimeout = 18000;
            // cmd.CommandType = System.Data.CommandType.StoredProcedure;
            // cmd.Parameters.AddWithValue("TuNgay", TuNgay);
            // cmd.Parameters.AddWithValue("DenNgay", DenNgay);
            // cmd.Parameters.AddWithValue("Duyet", Duyet);
            // cmd.Parameters.AddWithValue("Phat", Phat);
            // cmd.Parameters.AddWithValue("MaDT", MaDT);
            // cmd.Parameters.AddWithValue("MaKho", MaKho);
            // cmd.Parameters.AddWithValue("MaKhoa", MAKHOA);
            // cmd.Parameters.AddWithValue("dadung", dadung);
            // // cmd.Parameters.AddWithValue("DK", dk);
            // IDataReader dt;
            // dt = (IDataReader)cmd.ExecuteReader(CommandBehavior.CloseConnection);;
            // cmd.Dispose();
            // cmd = null;
            ////// if (SQLConnectionBD.State == System.Data.ConnectionState.Closed)
            ////     SQLConnectionBD.Close();
            //// //if (_sqlConnection.State == System.Data.ConnectionState.Closed)
            //// {
            ////     _sqlConnection.Close();
            ////     //_sqlConnection = null;
            //// }
            // return dt;
        }

        public override IDataReader GetAllKhambenh_ThuocSD_BNNOITRU_gets(DateTime TuNgay, DateTime DenNgay, Boolean Duyet, Boolean Phat, String MaDT, String MaKho, String MAKHOA, Boolean dadung, String dk)
        {

            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spKhambenh_ThuocSD_BNNOITRU_gets", TuNgay, DenNgay, Duyet, Phat, MaDT, MaKho, MAKHOA, dadung, dk));
            // System.Data.SqlClient.SqlCommand cmd = SqlHelper.CreateCommand(SQLConnectionBD, DatabaseOwner + ObjectQualifier + "spKhambenh_ThuocSD_BNNOITRU_gets");

            // cmd.CommandTimeout = 18000;
            // cmd.CommandType = System.Data.CommandType.StoredProcedure;
            // cmd.Parameters.AddWithValue("TuNgay", TuNgay);
            // cmd.Parameters.AddWithValue("DenNgay", DenNgay);
            // cmd.Parameters.AddWithValue("Duyet", Duyet);
            // cmd.Parameters.AddWithValue("Phat", Phat);
            // cmd.Parameters.AddWithValue("MaDT", MaDT);
            // cmd.Parameters.AddWithValue("MaKho", MaKho);
            // cmd.Parameters.AddWithValue("MaKhoa", MAKHOA);
            // cmd.Parameters.AddWithValue("dadung", dadung);
            // cmd.Parameters.AddWithValue("DK", "");
            // IDataReader dt;
            // dt = (IDataReader)cmd.ExecuteReader(CommandBehavior.CloseConnection);;
            // cmd.Dispose();
            // cmd = null;
            ////// if (SQLConnectionBD.State == System.Data.ConnectionState.Closed)
            ////     SQLConnectionBD.Close();
            //// //if (_sqlConnection.State == System.Data.ConnectionState.Closed)
            //// {
            ////     _sqlConnection.Close();
            ////     //_sqlConnection = null;
            //// }
            // return dt;
        }
        public override IDataReader GetAllKhambenh_ThuocSD_DY_BNNOITRU_gets(DateTime TuNgay, DateTime DenNgay, Boolean Duyet, Boolean Phat, String MaDT, String MaKho, String MAKHOA, Boolean dadung, String dk)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spKhamBenh_ThuocSD_DY_BNNOITRU_gets", TuNgay, DenNgay, Duyet, Phat, MaDT, MaKho, MAKHOA, dadung, dk));
            // System.Data.SqlClient.SqlCommand cmd = SqlHelper.CreateCommand(SQLConnectionBD, DatabaseOwner + ObjectQualifier + "spKhamBenh_ThuocSD_DY_BNNOITRU_gets");

            // cmd.CommandTimeout = 18000;
            // cmd.CommandType = System.Data.CommandType.StoredProcedure;
            // cmd.Parameters.AddWithValue("TuNgay", TuNgay);
            // cmd.Parameters.AddWithValue("DenNgay", DenNgay);
            // cmd.Parameters.AddWithValue("Duyet", Duyet);
            // cmd.Parameters.AddWithValue("Phat", Phat);
            // cmd.Parameters.AddWithValue("MaDT", MaDT);
            // cmd.Parameters.AddWithValue("MaKho", MaKho);
            // cmd.Parameters.AddWithValue("MaKhoa", MAKHOA);
            // cmd.Parameters.AddWithValue("dadung", dadung);
            // cmd.Parameters.AddWithValue("DK", "");
            // IDataReader dt;
            // dt = (IDataReader)cmd.ExecuteReader(CommandBehavior.CloseConnection);;
            // cmd.Dispose();
            // cmd = null;
            ////// if (SQLConnectionBD.State == System.Data.ConnectionState.Closed)
            ////     SQLConnectionBD.Close();
            //// //if (_sqlConnection.State == System.Data.ConnectionState.Closed)
            //// {
            ////     _sqlConnection.Close();
            ////     //_sqlConnection = null;
            //// }
            // return dt;
        }
        public override IDataReader GetAllKhambenh_ThuocSD_DY_TONNOITRU_gets(DateTime TuNgay, DateTime DenNgay, Boolean Duyet, Boolean Phat, String MaDT, String MaKho, String MAKHOA, Boolean dadung, String dk)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spKhamBenh_ThuocSD_DY_TONNOITRU_gets", TuNgay, DenNgay, Duyet, Phat, MaDT, MaKho, MAKHOA, dadung, dk));
            // System.Data.SqlClient.SqlCommand cmd = SqlHelper.CreateCommand(SQLConnectionBD, DatabaseOwner + ObjectQualifier + "spKhamBenh_ThuocSD_DY_TONNOITRU_gets");

            // cmd.CommandTimeout = 18000;
            // cmd.CommandType = System.Data.CommandType.StoredProcedure;
            // cmd.Parameters.AddWithValue("TuNgay", TuNgay);
            // cmd.Parameters.AddWithValue("DenNgay", DenNgay);
            // cmd.Parameters.AddWithValue("Duyet", Duyet);
            // cmd.Parameters.AddWithValue("Phat", Phat);
            // cmd.Parameters.AddWithValue("MaDT", MaDT);
            // cmd.Parameters.AddWithValue("MaKho", MaKho);
            // cmd.Parameters.AddWithValue("MaKhoa", MAKHOA);
            // cmd.Parameters.AddWithValue("dadung", dadung);
            // cmd.Parameters.AddWithValue("DK", "");
            // IDataReader dt;
            // dt = (IDataReader)cmd.ExecuteReader(CommandBehavior.CloseConnection);;
            // cmd.Dispose();
            // cmd = null;
            ////// if (SQLConnectionBD.State == System.Data.ConnectionState.Closed)
            ////     SQLConnectionBD.Close();
            //// //if (_sqlConnection.State == System.Data.ConnectionState.Closed)
            //// {
            ////     _sqlConnection.Close();
            ////     //_sqlConnection = null;
            //// }
            // return dt;
        }
        public override IDataReader GetAllKhambenh_ThuocSD_TONNOITRU_gets(DateTime TuNgay, DateTime DenNgay, Boolean Duyet, Boolean Phat, String MaDT, String MaKho, String MAKHOA, Boolean dadung, String dk)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spKhambenh_ThuocSD_TONNOITRU_gets", TuNgay, DenNgay, Duyet, Phat, MaDT, MaKho, MAKHOA, dadung, dk));
            // System.Data.SqlClient.SqlCommand cmd = SqlHelper.CreateCommand(SQLConnectionBD, DatabaseOwner + ObjectQualifier + "spKhambenh_ThuocSD_TONNOITRU_gets");

            // cmd.CommandTimeout = 18000;
            // cmd.CommandType = System.Data.CommandType.StoredProcedure;
            // cmd.Parameters.AddWithValue("TuNgay", TuNgay);
            // cmd.Parameters.AddWithValue("DenNgay", DenNgay);
            // cmd.Parameters.AddWithValue("Duyet", Duyet);
            // cmd.Parameters.AddWithValue("Phat", Phat);
            // cmd.Parameters.AddWithValue("MaDT", MaDT);
            // cmd.Parameters.AddWithValue("MaKho", MaKho);
            // cmd.Parameters.AddWithValue("MaKhoa", MAKHOA);
            // cmd.Parameters.AddWithValue("dadung", dadung);
            // cmd.Parameters.AddWithValue("DK", "");
            // IDataReader dt;
            // dt = (IDataReader)cmd.ExecuteReader(CommandBehavior.CloseConnection);;
            // cmd.Dispose();
            // cmd = null;
            ////// if (SQLConnectionBD.State == System.Data.ConnectionState.Closed)
            ////     SQLConnectionBD.Close();
            //// //if (_sqlConnection.State == System.Data.ConnectionState.Closed)
            //// {
            ////     _sqlConnection.Close();
            ////     //_sqlConnection = null;
            //// }
            // return dt;
        }

        public override IDataReader GetDMThuocTonKho(String maKho, DateTime ngayyclinh, String maThuoc)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMTHUOC_TON_GETKHO", maKho, ngayyclinh, maThuoc));
        }
        public override IDataReader GetAllDMThuocTonKho(String maKho, DateTime Thang, String DK)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMTHUOC_TON_GETSKHO", maKho, Thang, DK));
        }
        public override IDataReader GetDMThuocTonKhoHD(String maKho, DateTime ngayyclinh, String maThuoc)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMTHUOC_TONHD_GETKHO", maKho, ngayyclinh, maThuoc, "", null));
        }
        public override IDataReader GetAllDMThuocTonKhoHD(String maKho, DateTime Thang, String DK)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMTHUOC_TONHD_GETSKHO", maKho, Thang, DK, "", null));
        }
        public override IDataReader GetDMThuocTonKhoHD(String maKho, DateTime ngayyclinh, String maThuoc, string solo, DateTime hansd)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMTHUOC_TONHD_GETKHO", maKho, ngayyclinh, maThuoc, solo, hansd));
        }
        public override IDataReader GetAllDMThuocTonKhoHD(String maKho, DateTime Thang, String DK, string solo, DateTime hansd)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMTHUOC_TONHD_GETSKHO", maKho, Thang, DK, solo, hansd));
        }
        public override IDataReader GetDMThuoc_KhoKhoa(String _makho, Decimal _sTT, String _makhoa)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMThuoc_KhoKhoa_GET", _makho, _sTT, _makhoa));
        }
        public override IDataReader GetAllDMThuoc_KhoKhoa(String makho, String makhoa, Boolean qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMThuoc_KhoKhoa_GETALL", makho, makhoa, qadmin));
        }
        public override IDataReader GetAllDMThuoc_KhoKhoaFilter(String makho, String makhoa, String dkfilter, Boolean qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMThuoc_KhoKhoa_GETALL", makho, makhoa, dkfilter, qadmin));
        }
        public override IDataReader GetAllDMThuoc_KhoKhoaDT(String makho, String makhoa, Boolean qadmin, String _MADT)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMThuoc_KhoKhoaDT_GETALL", makho, makhoa, qadmin, _MADT));
        }
        public override IDataReader GetDMThuoc_KhoKhoaG(String _makho, Decimal _sTT, String _makhoa)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMThuoc_KhoKhoaG_GET", _makho, _sTT, _makhoa));
        }
        public override IDataReader GetAllDMThuoc_KhoKhoaG(String makho, String makhoa, Boolean qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMThuoc_KhoKhoaG_GETALL", makho, makhoa, qadmin));
        }

        //thuy sua
        public override IDataReader GetDMThuocTonKho(String maKho, String MADT, DateTime ngayyclinh, String maThuoc)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMTHUOC_TON_GETKHODT", maKho, MADT, ngayyclinh, maThuoc));
        }
        public override IDataReader GetAllDMThuocTonKho(String maKho, String MADT, DateTime ngayyclinh, String DK)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMTHUOC_TON_GETSKHODT", maKho, MADT, ngayyclinh, DK));
        }
        public override IDataReader GetDMThuocTonKhoHD(String maKho, String MADT, DateTime ngayyclinh, String maThuoc)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMTHUOC_TONHD_GETKHODT", maKho, MADT, ngayyclinh, maThuoc, "", null));
        }
        public override IDataReader GetAllDMThuocTonKhoHD(String maKho, String MADT, DateTime ngayyclinh, String DK)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMTHUOC_TONHD_GETSKHODT", maKho, MADT, ngayyclinh, DK, "", null));
        }
        public override IDataReader GetDMThuocTonKhoHD(String maKho, String MADT, DateTime ngayyclinh, String maThuoc, string solo, DateTime hansd)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMTHUOC_TONHD_GETKHODT", maKho, MADT, ngayyclinh, maThuoc, solo, hansd));
        }
        public override IDataReader GetAllDMThuocTonKhoHD(String maKho, String MADT, DateTime ngayyclinh, String DK, string solo, DateTime hansd)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMTHUOC_TONHD_GETSKHODT", maKho, MADT, ngayyclinh, DK, solo, hansd));
        }
        //
        public override IDataReader GetAllDMThuocTonKhoHD(String maKho, String MaNCC, String SoHD, String DK, string solo, DateTime hansd)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMTHUOC_PHIEUNHAP_GETSKHO", maKho, MaNCC, SoHD, DK, solo, hansd));
        }
        //het
        public override IDataReader GetAllDuoc_BCThuoc_DMListcb(byte loaiBC)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDUOC_BCTHUOC_DM", loaiBC));
        }
        public override IDataReader GetAllKhambenh_ThuocSD_BN_List(DateTime TuNgay, DateTime DenNgay, Boolean Duyet, Boolean Phat, String MaDT, String MaKho, String MAKHOA, Boolean dadung)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spKhambenh_ThuocSD_BN_List", TuNgay, DenNgay, Duyet, Phat, MaDT, MaKho, MAKHOA, dadung));
            // System.Data.SqlClient.SqlCommand cmd = SqlHelper.CreateCommand(SQLConnectionBD, DatabaseOwner + ObjectQualifier + "spKhambenh_ThuocSD_BN_List");

            // cmd.CommandTimeout = 18000;
            // cmd.CommandType = System.Data.CommandType.StoredProcedure;
            // cmd.Parameters.AddWithValue("TuNgay", TuNgay);
            // cmd.Parameters.AddWithValue("DenNgay", DenNgay);
            // cmd.Parameters.AddWithValue("Duyet", Duyet);
            // cmd.Parameters.AddWithValue("Phat", Phat);
            // cmd.Parameters.AddWithValue("MaDT", MaDT);
            // cmd.Parameters.AddWithValue("MaKho", MaKho);
            // cmd.Parameters.AddWithValue("MaKhoa", MAKHOA);
            // cmd.Parameters.AddWithValue("dadung", dadung);
            // // cmd.Parameters.AddWithValue("DK", dk);
            // IDataReader dt;
            // dt = (IDataReader)cmd.ExecuteReader(CommandBehavior.CloseConnection);;
            // cmd.Dispose();
            // cmd = null;
            ////// if (SQLConnectionBD.State == System.Data.ConnectionState.Closed)
            ////     SQLConnectionBD.Close();
            //// //if (_sqlConnection.State == System.Data.ConnectionState.Closed)
            //// {
            ////     _sqlConnection.Close();
            ////     //_sqlConnection = null;
            //// }
            // return dt;
        }
        public override IDataReader GetAllKhambenh_ThuocSD_BN_gets(DateTime TuNgay, DateTime DenNgay, Boolean Duyet, Boolean Phat, String MaDT, String MaKho, String MAKHOA, Boolean dadung, String dk)
        {
            // return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spKhambenh_ThuocSD_BN_gets", TuNgay, DenNgay, Duyet, Phat, MaDT, MaKho, MAKHOA, dadung, dk));
            System.Data.SqlClient.SqlCommand cmd = SqlHelper.CreateCommand(SQLConnectionBD, DatabaseOwner + ObjectQualifier + "spKhambenh_ThuocSD_BN_gets");

            cmd.CommandTimeout = 18000;
            cmd.CommandType = System.Data.CommandType.StoredProcedure;
            cmd.Parameters.AddWithValue("TuNgay", TuNgay);
            cmd.Parameters.AddWithValue("DenNgay", DenNgay);
            cmd.Parameters.AddWithValue("Duyet", Duyet);
            cmd.Parameters.AddWithValue("Phat", Phat);
            cmd.Parameters.AddWithValue("MaDT", MaDT);
            cmd.Parameters.AddWithValue("MaKho", MaKho);
            cmd.Parameters.AddWithValue("MaKhoa", MAKHOA);
            cmd.Parameters.AddWithValue("dadung", dadung);
            cmd.Parameters.AddWithValue("DK", dk);
            IDataReader dt;
            dt = (IDataReader)cmd.ExecuteReader(CommandBehavior.CloseConnection); ;
            cmd.Dispose();
            cmd = null;
            // if (SQLConnectionBD.State == System.Data.ConnectionState.Closed)
            //  SQLConnectionBD.Close();
            //if (_sqlConnection.State == System.Data.ConnectionState.Closed)
            //{
            //    _sqlConnection.Close();
            //    //_sqlConnection = null;
            //}
            return dt;
        }
        public override IDataReader GetAllKhambenh_ThuocSD_DY_BN_gets(DateTime TuNgay, DateTime DenNgay, Boolean Duyet, Boolean Phat, String MaDT, String MaKho, String MAKHOA, Boolean dadung, String dk)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spKhamBenh_ThuocSD_DY_BN_gets", TuNgay, DenNgay, Duyet, Phat, MaDT, MaKho, MAKHOA, dadung, dk));
            // System.Data.SqlClient.SqlCommand cmd = SqlHelper.CreateCommand(SQLConnectionBD, DatabaseOwner + ObjectQualifier + "spKhamBenh_ThuocSD_DY_BN_gets");

            // cmd.CommandTimeout = 18000;
            // cmd.CommandType = System.Data.CommandType.StoredProcedure;
            // cmd.Parameters.AddWithValue("TuNgay", TuNgay);
            // cmd.Parameters.AddWithValue("DenNgay", DenNgay);
            // cmd.Parameters.AddWithValue("Duyet", Duyet);
            // cmd.Parameters.AddWithValue("Phat", Phat);
            // cmd.Parameters.AddWithValue("MaDT", MaDT);
            // cmd.Parameters.AddWithValue("MaKho", MaKho);
            // cmd.Parameters.AddWithValue("MaKhoa", MAKHOA);
            // cmd.Parameters.AddWithValue("dadung", dadung);
            // cmd.Parameters.AddWithValue("DK", dk);
            // IDataReader dt;
            // dt = (IDataReader)cmd.ExecuteReader(CommandBehavior.CloseConnection);;
            // cmd.Dispose();
            // cmd = null;
            ////// if (SQLConnectionBD.State == System.Data.ConnectionState.Closed)
            ////     SQLConnectionBD.Close();
            //// //if (_sqlConnection.State == System.Data.ConnectionState.Closed)
            //// {
            ////     _sqlConnection.Close();
            ////     //_sqlConnection = null;
            //// }
            // return dt;
        }
        public override IDataReader GetAllKhambenh_ThuocSD_TON_gets(DateTime TuNgay, DateTime DenNgay, Boolean Duyet, Boolean Phat, String MaDT, String MaKho, String MAKHOA, Boolean dadung, String dk)
        {
            //return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spKhambenh_ThuocSD_TON_gets", TuNgay, DenNgay, Duyet, Phat, MaDT, MaKho, MAKHOA, dadung, dk));
            System.Data.SqlClient.SqlCommand cmd = SqlHelper.CreateCommand(SQLConnectionBD, DatabaseOwner + ObjectQualifier + "spKhambenh_ThuocSD_TON_gets");

            cmd.CommandTimeout = 18000;
            cmd.CommandType = System.Data.CommandType.StoredProcedure;
            cmd.Parameters.AddWithValue("TuNgay", TuNgay);
            cmd.Parameters.AddWithValue("DenNgay", DenNgay);
            cmd.Parameters.AddWithValue("Duyet", Duyet);
            cmd.Parameters.AddWithValue("Phat", Phat);
            cmd.Parameters.AddWithValue("MaDT", MaDT);
            cmd.Parameters.AddWithValue("MaKho", MaKho);
            cmd.Parameters.AddWithValue("MaKhoa", MAKHOA);
            cmd.Parameters.AddWithValue("dadung", dadung);
            cmd.Parameters.AddWithValue("DK", dk);
            IDataReader dt;
            dt = (IDataReader)cmd.ExecuteReader(CommandBehavior.CloseConnection); ;
            cmd.Dispose();
            cmd = null;
            return dt;
        }
        public override IDataReader GetAllKhambenh_ThuocSD_DY_TON_gets(DateTime TuNgay, DateTime DenNgay, Boolean Duyet, Boolean Phat, String MaDT, String MaKho, String MAKHOA, Boolean dadung, String dk)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spKhamBenh_ThuocSD_DY_TON_gets", TuNgay, DenNgay, Duyet, Phat, MaDT, MaKho, MAKHOA, dadung, dk));
            // System.Data.SqlClient.SqlCommand cmd = SqlHelper.CreateCommand(SQLConnectionBD, DatabaseOwner + ObjectQualifier + "spKhamBenh_ThuocSD_DY_TON_gets");

            // cmd.CommandTimeout = 18000;
            // cmd.CommandType = System.Data.CommandType.StoredProcedure;
            // cmd.Parameters.AddWithValue("TuNgay", TuNgay);
            // cmd.Parameters.AddWithValue("DenNgay", DenNgay);
            // cmd.Parameters.AddWithValue("Duyet", Duyet);
            // cmd.Parameters.AddWithValue("Phat", Phat);
            // cmd.Parameters.AddWithValue("MaDT", MaDT);
            // cmd.Parameters.AddWithValue("MaKho", MaKho);
            // cmd.Parameters.AddWithValue("MaKhoa", MAKHOA);
            // cmd.Parameters.AddWithValue("dadung", dadung);
            // cmd.Parameters.AddWithValue("DK", dk);
            // IDataReader dt;
            // dt = (IDataReader)cmd.ExecuteReader(CommandBehavior.CloseConnection);;
            // cmd.Dispose();
            // cmd = null;
            ////// if (SQLConnectionBD.State == System.Data.ConnectionState.Closed)
            ////     SQLConnectionBD.Close();
            //// //if (_sqlConnection.State == System.Data.ConnectionState.Closed)
            //// {
            ////     _sqlConnection.Close();
            ////     //_sqlConnection = null;
            //// }
            // return dt;
        }
        public override IDataReader BenhAnNhapTra_BN_gets(DateTime TuNgay, String MaKho, String MaDT, String MAKHOA, Boolean Tra, String dk)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spBenhan_Thuoctra_BN_Gets", TuNgay, MaKho, MaDT, MAKHOA, Tra, dk));
        }

        public override IDataReader Benhan_Thuoctra_List(DateTime TuNgay, String MaKho, String MaDT, String MAKHOA, Boolean Tra, String dk)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spBenhan_Thuoctra_List", TuNgay, MaKho, MaDT, MAKHOA, Tra, dk));
        }
        public override IDataReader GetDMNoiXuat(String _maNoiXuat)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMNoiXuat_Get", _maNoiXuat));
        }
        public override IDataReader GetAllDMNoiXuat(Byte _loai, Boolean _qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMNoiXuat_GetAll", _loai, _qadmin));
        }
        public override IDataReader GetDMBaiThuoc(String _maBThuoc, string _dk, Boolean _qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMBaiThuoc_Get", _maBThuoc, _dk, _qadmin));
        }
        public override IDataReader GetDMBaiThuoc_C(String _maBThuoc, Byte _sTT)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMBaiThuoc_C_Get", _maBThuoc, _sTT));
        }
        public override IDataReader GetAllDMBaiThuoc(Boolean qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMBaiThuoc_GetAll", qadmin));
        }
        public override IDataReader GetDMLieuDung(String _maLieuDung)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMLieuDung_Get", _maLieuDung));
        }
        public override IDataReader GetAllDMLieuDung(Byte _loai, Boolean _qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMLieuDung_GetAll", _loai, _qadmin));
        }
        public override IDataReader GetDMCachDung(String _maCachDung)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMCachDung_Get", _maCachDung));
        }
        public override IDataReader GetAllDMCachDung(Byte _loai, Boolean _qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMCachDung_GetAll", _loai, _qadmin));
        }
        public override IDataReader GetDMDuongDung(String _maDuongDung)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMDuongDung_Get", _maDuongDung));
        }
        public override IDataReader GetAllDMDuongDung(Byte _loai, Boolean _qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMDuongDung_GetAll", _loai, _qadmin));
        }
        public override IDataReader GetAllNhapTra_C_TonBN_gets(String MaKho, String MAKHOA, String dk)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spNhapTra_C_TonBN_Gets", MaKho, MAKHOA, dk));
        }
        #endregion


        public override IDataReader GetAllHCNhapTra_C_TonBN_gets(String MaKho, String MAKHOA, String dk)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spHCNhapTra_C_TonBN_Gets", MaKho, MAKHOA, dk));
        }
        #endregion

        #region FindList
        public override IDataReader FindDMDanhGia_CS_KQ(string _DK, Boolean _qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMDanhGia_CS_KQ_Finds", _DK, _qadmin));
        }
        public override IDataReader FindDMLieuDung(string _DK, Boolean _qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMLieuDung_Finds", _DK, _qadmin));
        }
        public override IDataReader FindDMCachDung(string _DK, Boolean _qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMCachDung_Finds", _DK, _qadmin));
        }
        public override IDataReader FindDMDuongDung(string _DK, Boolean _qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMDuongDung_Finds", _DK, _qadmin));
        }
        public override IDataReader FindDMChungLoai(string _DK, Boolean _qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMChungLoai_Finds", _DK, _qadmin));
        }
        public override IDataReader FindDMDanhGia(string _DK, Boolean _qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMDanhGia_Finds", _DK, _qadmin));
        }
        public override IDataReader FindDMDanhGia_CS(string _DK, Boolean _qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMDanhGia_CS_Finds", _DK, _qadmin));
        }
        public override IDataReader FindDMPhuCap(string _DK, Boolean _qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMPhuCap_FINDS", _DK, _qadmin));
        }
        public override IDataReader FindDMThueTN(string _DK, Boolean _qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMThueTN_FINDS", _DK, _qadmin));
        }
        public override IDataReader FindDMDonvitinh(string _DK, Boolean _qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMDonVitinh_Finds", _DK, _qadmin));
        }
        public override IDataReader FindDMDTsudung(string _DK, Boolean _qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMDTsudung_Finds", _DK, _qadmin));
        }
        public override IDataReader FindDMKho(string _DK)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMKho_Finds", _DK));
        }
        public override IDataReader FindDMNCC(string _DK, Boolean _qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMNCC_Finds", _DK, _qadmin));
        }
        public override IDataReader FindDMNoiSua(string _DK, Boolean _qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMNoiSua_FINDS", _DK, _qadmin));
        }
        public override IDataReader FindDMTaiKhoan(string _DK, Boolean _qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMTaiKhoan_Finds", _DK, _qadmin));
        }
        public override IDataReader FindDMNguon(string _DK, Boolean _qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMNguon_Finds", _DK, _qadmin));
        }
        public override IDataReader FindDMHinhThuc(string _DK, Boolean _qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMHinhThuc_Finds", _DK, _qadmin));
        }
        public override IDataReader FindDMHTKyLuat(string _DK, Boolean _qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMHTKyLuat_Finds", _DK, _qadmin));
        }
        public override IDataReader FindDMNhaSX(string _DK, Boolean _qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMNhaSX_Finds", _DK, _qadmin));
        }
        public override IDataReader FindDMPhanLoai(string _DK, Boolean _qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMPhanloai_Finds", _DK, _qadmin));
        }
        public override IDataReader FindDMLoaiHinh(string _DK, Boolean _qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMLoaiHinh_Finds", _DK, _qadmin));
        }
        public override IDataReader FindDMMoiTruong(string _DK, Boolean _qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMMoiTruong_Finds", _DK, _qadmin));
        }
        public override IDataReader FindDMThanhPham(string _DK, Boolean _qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMThanhPham_Finds", _DK, _qadmin));
        }
        public override IDataReader FindDMThuoc(string _DK, Boolean _qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMThuoc_Finds", _DK, _qadmin));
        }
        public override IDataReader FindDMThuocFilter(string _DK, string _DKFilter, Boolean _qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMThuoc_FilterFinds", _DK, _DKFilter, _qadmin));
        }
        public override IDataReader FindDMThuoc_Ke(string _DK, Boolean _qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMThuoc_Ke_Finds", _DK, _qadmin));
        }
        public override IDataReader FindDMThuoc_KeFilter(string _DK, string _DKFilter, Boolean _qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMThuoc_Ke_FilterFinds", _DK, _DKFilter, _qadmin));
        }
        public override IDataReader FindDMThuoc_Gia(string _DK, string _madt, Boolean _qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMThuoc_Gia_Finds", _DK, _madt, _qadmin));
        }
        public override IDataReader FindDMThuoc_GiaDuyet(string _DK, string _madt, Boolean _qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMThuoc_GiaDuyet_Finds", _DK, _madt, _qadmin));
        }
        public override IDataReader FindDMBaiThuoc(string _DK, Boolean _qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMBaiThuoc_FINDS", _DK, _qadmin));
        }
        public override IDataReader FindDMThuoc_GiaQ(string _DK, Boolean _qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMThuoc_Finds", _DK, _qadmin));
        }
        //public override IDataReader FindDMThuoc_GiaQFilter(string _DK, string _DKFilter, Boolean _qadmin)
        //{
        //    return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMThuoc_FilterFinds", _DK, _DKFilter, _qadmin));
        //}
        public override IDataReader FindDMNoiXuat(string _DK, Boolean _qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMNoiXuat_FINDS", _DK, _qadmin));
        }

        public override IDataReader FindDMThuoc_GiaQuay56(string _DK, Boolean _qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMThuoc_Finds", _DK, _qadmin));
        }
        //public override IDataReader FindDMThuoc_GiaQuay56Filter(string _DK, string _DKFilter, Boolean _qadmin)
        //{
        //    return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMThuoc_FilterFinds", _DK, _DKFilter, _qadmin));
        //}
        public override IDataReader FindDMLDNghi(string _DK, Boolean _qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMLDNghi_Finds", _DK, _qadmin));
        }
        #endregion

        #region DMDonvitinh
        public override String InsertDMDonvitinh(String _tenDVT, String _ghichu, string _maMay, String _nguoiSD, string tenta)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMDONVITINH_CREATE", _tenDVT, _ghichu, _maMay, _nguoiSD, tenta));
        }
        public override void UpdateDMDonvitinh(String _maDVT, String _tenDVT, String _ghichu, string _maMay, String _nguoiSD, string tenta, bool _huy)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMDONVITINH_UPDATE", _maDVT, _tenDVT, _ghichu, _maMay, _nguoiSD, tenta, _huy);
        }
        public override void DeleteDMDonvitinh(String _maMay, String _nguoiSD, String _maDVT)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMDONVITINH_DELETED", _maMay, _nguoiSD, _maDVT);
        }
        #endregion

        #region DMNCC
        public override String InsertDMNCC(String _tenNCC, string _ghichu, string _maMay, int _loai, String _nguoiSD, String _tenta)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMNCC_CREATE", _tenNCC, _ghichu, _maMay, _loai, _nguoiSD, _tenta));
        }
        public override void UpdateDMNCC(String _maNCC, String _tenNCC, string _Ghichu, string _maMay, int _Loai, bool _huy, bool _khongsd, String _nguoiSD, String _tenta)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMNCC_UPDATED", _maNCC, _tenNCC, _Ghichu, _maMay, _Loai, _huy, _khongsd, _nguoiSD, _tenta);
        }
        public override void DeleteDMNCC(String _maMay, String _nguoiSD, String _maCC)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMNCC_DELETED", _maMay, _nguoiSD, _maCC);
        }
        #endregion
        #region DMNoiSua
        public override String InsertDMNoiSua(string _tenNoiSua, string _tenta, Byte _Loai, string _DiaChi, string _DienThoai, string _Ghichu, string _maMay, string _nguoiSD)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMNoiSua_CREATE", _tenNoiSua, _tenta, _Loai, _DiaChi, _DienThoai, _Ghichu, _maMay, _nguoiSD));
        }
        public override void UpdateDMNoiSua(string _maNoiSua, string _tenNoiSua, string _tenta, Byte _Loai, string _DiaChi, string _DienThoai, string _Ghichu, string _maMay, string _nguoiSD, Boolean _huy)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMNoiSua_UPDATE", _maNoiSua, _tenNoiSua, _tenta, _Loai, _DiaChi, _DienThoai, _Ghichu, _maMay, _nguoiSD, _huy);
        }
        public override void DeleteDMNoiSua(String _maMay, String _nguoiSD, String _maNoiSua)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMNoiSua_DELETED", _maMay, _nguoiSD, _maNoiSua);
        }
        #endregion

        #region DMHinhThuc
        public override String InsertDMHinhThuc(String _tenHinhThuc, string _ghichu, string _maMay, int _loai, String _nguoiSD, String _tenta)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMHinhThuc_CREATE", _tenHinhThuc, _ghichu, _maMay, _loai, _nguoiSD, _tenta));
        }
        public override void UpdateDMHinhThuc(String _maHinhThuc, String _tenHinhThuc, string _Ghichu, string _maMay, int _Loai, bool _huy, bool _khongsd, String _nguoiSD, String _tenta)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMHinhThuc_UPDATED", _maHinhThuc, _tenHinhThuc, _Ghichu, _maMay, _Loai, _huy, _khongsd, _nguoiSD, _tenta);
        }
        public override void DeleteDMHinhThuc(String _maMay, String _nguoiSD, String _maCC)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMHinhThuc_DELETED", _maMay, _nguoiSD, _maCC);
        }
        #endregion

        #region DMNguon
        public override String InsertDMNguon(String _tenNguon, string _ghichu, string _maMay, int _loai, String _nguoiSD, String _tenta)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMNguon_CREATE", _tenNguon, _ghichu, _maMay, _loai, _nguoiSD, _tenta));
        }
        public override void UpdateDMNguon(String _maNguon, String _tenNguon, string _Ghichu, string _maMay, int _Loai, bool _huy, bool _khongsd, String _nguoiSD, String _tenta)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMNguon_UPDATED", _maNguon, _tenNguon, _Ghichu, _maMay, _Loai, _huy, _khongsd, _nguoiSD, _tenta);
        }
        public override void DeleteDMNguon(String _maMay, String _nguoiSD, String _maCC)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMNguon_DELETED", _maMay, _nguoiSD, _maCC);
        }
        #endregion

        #region DMNhaSX
        public override String InsertDMNhaSX(String _tenNSX, string _ghichu, string _maMay, int _loai, String _nguoiSD, String _tenta, String _maqg)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMNhaSX_CREATE", _tenNSX, _ghichu, _maMay, _loai, _nguoiSD, _tenta, _maqg));
        }
        public override void UpdateDMNhaSX(String _maNSX, String _tenNSX, string _Ghichu, string _maMay, int _Loai, bool _huy, bool _khongsd, String _nguoiSD, String _tenta, String _maqg)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMNHASX_UPDATE", _maNSX, _tenNSX, _Ghichu, _maMay, _Loai, _huy, _khongsd, _nguoiSD, _tenta, _maqg);
        }
        public override void DeleteDMNhaSX(String _maMay, String _nguoiSD, String _maNSX)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMNHASX_DELETED", _maMay, _nguoiSD, _maNSX);
        }
        #endregion

        #region DMKho
        public override String InsertDMKho(String _tenKho, Boolean _kieukho, Boolean _khoban, String _ghichu, string _maMay, String _nguoiSD, Byte _loai)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMKHO_CREATE", _tenKho, _kieukho, _khoban, _ghichu, _maMay, _nguoiSD, _loai));
        }
        public override void UpdateDMKho(String _maKho, String _tenKho, Boolean _kieukho, Boolean _khoban, String _ghichu, string _maMay, String _nguoiSD, Boolean _HUY)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMKHO_UPDATE", _maKho, _tenKho, _kieukho, _khoban, _ghichu, _maMay, _nguoiSD, _HUY);
        }
        public override void DeleteDMKho(String _maMay, String _nguoiSD, String _maKho)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMkho_DELETED", _maMay, _nguoiSD, _maKho);
        }
        #endregion
        #region DM cach dung
        public override String InsertDMCachDung(String _tenCachDung, String _tenTA, String _ghichu, String _maMay, Byte _loai, String _nguoiSD)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMCachDung_CREATE", _tenCachDung, _tenTA, _ghichu, _maMay, _loai, _nguoiSD));
        }
        public override void UpdateDMCachDung(String _maCachDung, String _tenCachDung, String _tenTA, String _ghichu, String _maMay, Byte _loai, Boolean _huy, bool _khongsd, String _nguoiSD)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMCachDung_UPDATED", _maCachDung, _tenCachDung, _tenTA, _ghichu, _maMay, _loai, _huy, _khongsd, _nguoiSD);
        }
        public override void DeleteDMCachDung(String _maMay, String _nguoiSD, String _maCachDung)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMCachDung_DELETED", _maMay, _nguoiSD, _maCachDung);
        }
        #endregion
        #region DM duong dung
        public override String InsertDMDuongDung(String _tenDuongDung, String _tenTA, String _ghichu, String _maMay, Byte _loai, String _nguoiSD)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMDuongDung_CREATE", _tenDuongDung, _tenTA, _ghichu, _maMay, _loai, _nguoiSD));
        }
        public override void UpdateDMDuongDung(String _maDuongDung, String _tenDuongDung, String _tenTA, String _ghichu, String _maMay, Byte _loai, Boolean _huy, bool _khongsd, String _nguoiSD)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMDuongDung_UPDATED", _maDuongDung, _tenDuongDung, _tenTA, _ghichu, _maMay, _loai, _huy, _khongsd, _nguoiSD);
        }
        public override void DeleteDMDuongDung(String _maMay, String _nguoiSD, String _maDuongDung)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMDuongDung_DELETED", _maMay, _nguoiSD, _maDuongDung);
        }
        #endregion
        #region DM lieu dung
        public override String InsertDMLieuDung(String _tenLieuDung, String _tenTA, String _ghichu, String _maMay, Byte _loai, String _nguoiSD)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMLieuDung_CREATE", _tenLieuDung, _tenTA, _ghichu, _maMay, _loai, _nguoiSD));
        }
        public override void UpdateDMLieuDung(String _maLieuDung, String _tenLieuDung, String _tenTA, String _ghichu, String _maMay, Byte _loai, Boolean _huy, bool _khongsd, String _nguoiSD)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMLieuDung_UPDATED", _maLieuDung, _tenLieuDung, _tenTA, _ghichu, _maMay, _loai, _huy, _khongsd, _nguoiSD);
        }
        public override void DeleteDMLieuDung(String _maMay, String _nguoiSD, String _maLieuDung)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMLieuDung_DELETED", _maMay, _nguoiSD, _maLieuDung);
        }
        #endregion
        #region DMNhom
        public override String InsertDMNhom(String _tenNT, string _maMay, String _nguoiSD, string _idparent, String _tenta, byte _loai, string _ghichu, string _maNhomICD, decimal _nguoilon, decimal _hsnguoilon, decimal _trecon, decimal _hstrecon, DateTime ngayad)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMNhom_CREATE", _tenNT, _maMay, _nguoiSD, _idparent, _tenta, _loai, _ghichu, _maNhomICD, _nguoilon, _hsnguoilon, _trecon, _hstrecon, ngayad));
        }
        public override void UpdateDMNhom(String _maNT, String _tenNT, Boolean _huy, string _maMay, String _nguoiSD, String _tenta, byte _loai, string _ghichu, string _maNhomICD, decimal _nguoilon, decimal _hsnguoilon, decimal _trecon, decimal _hstrecon, DateTime ngayad)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMNhom_UPDATE", _maNT, _tenNT, _huy, _maMay, _nguoiSD, _tenta, _loai, _ghichu, _maNhomICD, _nguoilon, _hsnguoilon, _trecon, _hstrecon, ngayad);
        }
        public override void DeleteDMNhom(String _maMay, String _nguoiSD, String _maNT)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMNhom_DELETED", _maMay, _nguoiSD, _maNT);
        }
        #endregion

        #region DM DTsudung
        public override Decimal InsertDMDTsudung(String _tenDTsudung, Byte _pPTinh, String _ghichu, Decimal _sLTu, Decimal _sLDen, string _maMay, String _nguoiSD)
        {
            return System.Convert.ToDecimal(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMDTsudung_CREATE", _tenDTsudung, _pPTinh, _ghichu, _sLTu, _sLDen, _maMay, _nguoiSD));
        }
        public override void UpdateDMDTsudung(Decimal _maDTsudung, String _tenDTsudung, Byte _pPTinh, String _ghichu, Decimal _sLTu, Decimal _sLDen, string _maMay, String _nguoiSD)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMDTsudung_UPDATE", _maDTsudung, _tenDTsudung, _pPTinh, _ghichu, _sLTu, _sLDen, _maMay, _nguoiSD);
        }
        public override void DeleteDMDTsudung(String _maMay, String _nguoiSD, Decimal _maDTsudung)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMDTsudung_DELETED", _maMay, _nguoiSD, _maDTsudung);
        }
        #endregion

        #region DMTaiKhoan
        public override String InsertDMTaiKhoan(String _MaTK, String _tenTK, String _ghiChu, string _maMay, String _nguoiSD)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMTaiKhoan_CREATE", _MaTK, _tenTK, _ghiChu, _maMay, _nguoiSD));
        }
        public override void UpdateDMTaiKhoan(String _ma, String _maTK, String _tenTK, String _ghiChu, string _maMay, String _nguoiSD, Boolean _huy)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMTaiKhoan_UPDATE", _ma, _maTK, _tenTK, _ghiChu, _maMay, _nguoiSD, _huy);
        }
        public override void DeleteDMTaiKhoan(String _maMay, String _nguoiSD, String _maTK)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMTaiKhoan_DELETED", _maMay, _nguoiSD, _maTK);
        }
        #endregion

        #region DMThuoc
        public override String InsertDMThuoc(String _parent, String _maNhom, String _maPL, String _maChungLoai, String _tenGoc, String _tenTC, String _tenTM, String _tenTM1, String _tenTM2, String _tenTA, Boolean _thuocGoc, Decimal _ngaydungtoida, String _maNSX, String _hamLuong, String _maDVTHL, Decimal _nguong, Decimal _nguongnhap, String _maDVT, Decimal _quydoi, String _maThuocgoc, String _maDVTGoc, Boolean _apDungGoi, Boolean _handung, string _lieudung, string _cachdung, String _khoban, String _khophat, Boolean _thuocThuT, Boolean _thuocPhauT, byte bh50, Boolean _thuocCLS, Boolean _thuocNgoaiT, Boolean _thuocDuoc, Boolean _thuocBan, Boolean _duyetNgoaiT, Boolean _duyetNoiT, Boolean _ThuocHoiChan, String _ghichu, string _maMay, String _nguoiLap, string _malh, string quycach, string matk, string sovisa, Boolean thuocban2, Boolean KhongSD, String _maql, Byte _thuocTieuHao, string _matp, string duongdung, decimal _gianhap, decimal _gianhap43, decimal _gianhap56, string _maBYTe, string _QuyetDinh, string _tenTMBH, string _MaBH, string _MaTDuong, string _QuyetDinhBH, string _TenBYTe)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMTHUOC_CREATE", _parent, _maNhom, _maPL, _maChungLoai, _tenGoc, _tenTC, _tenTM, _tenTM1, _tenTM2, _tenTA, _thuocGoc, _ngaydungtoida, _maNSX, _hamLuong, _maDVTHL, _nguong, _nguongnhap, _maDVT, _quydoi, _maThuocgoc, _maDVTGoc, _apDungGoi, _handung, _lieudung, _cachdung, _khoban, _khophat, _thuocThuT, _thuocPhauT, bh50, _thuocCLS, _thuocNgoaiT, _thuocDuoc, _thuocBan, _duyetNgoaiT, _duyetNoiT,_ThuocHoiChan,  _ghichu, _maMay, _nguoiLap, _malh, quycach, matk, sovisa, thuocban2, KhongSD, _maql, _thuocTieuHao, _matp, duongdung, _gianhap, _gianhap43, _gianhap56, _maBYTe, _QuyetDinh, _tenTMBH, _MaBH, _MaTDuong, _QuyetDinhBH, _TenBYTe));
        }
        public override void UpdateDMThuoc(String _maThuoc, String _parent, String _maNhom, String _maPL, String _maChungLoai, String _tenGoc, String _tenTC, String _tenTM, String _tenTM1, String _tenTM2, String _tenTA, Boolean _thuocGoc, Decimal _ngaydungtoida, String _maNSX, String _hamLuong, String _maDVTHL, Decimal _nguong, Decimal _nguongnhap, String _maDVT, Decimal _quydoi, string _maThuocgoc, String _maDVTGoc, Boolean _apDungGoi, Boolean _handung, string _lieudung, string _cachdung, String _khoban, String _khophat, Boolean _thuocThuT, Boolean _thuocPhauT, byte bh50, Boolean _thuocCLS, Boolean _thuocNgoaiT, Boolean _thuocDuoc, Boolean _thuocBan, Boolean _duyetNgoaiT, Boolean _duyetNoiT, Boolean _ThuocHoiChan, String _ghichu, string _maMay, Boolean _huy, String _nguoiSD, string _malh, string quycach, string matk, string sovisa, Boolean thuocban2, Boolean KhongSD, String _maql, Byte _thuocTieuHao, string _matp, string duongdung, decimal _gianhap, decimal _gianhap43, decimal _gianhap56, string _maBYTe, string _QuyetDinh, string _tenTMBH, string _MaBH, string _MaTDuong, string _QuyetDinhBH, string _TenBYTe)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMTHUOC_UPDATE", _maThuoc, _parent, _maNhom, _maPL, _maChungLoai, _tenGoc, _tenTC, _tenTM, _tenTM1, _tenTM2, _tenTA, _thuocGoc, _ngaydungtoida, _maNSX, _hamLuong, _maDVTHL, _nguong, _nguongnhap, _maDVT, _quydoi, _maThuocgoc, _maDVTGoc, _apDungGoi, _handung, _lieudung, _cachdung, _khoban, _khophat, _thuocThuT, _thuocPhauT, bh50, _thuocCLS, _thuocNgoaiT, _thuocDuoc, _thuocBan, _duyetNgoaiT, _duyetNoiT, _ThuocHoiChan, _ghichu, _maMay, _huy, _nguoiSD, _malh, quycach, matk, sovisa, thuocban2, KhongSD, _maql, _thuocTieuHao, _matp, duongdung, _gianhap, _gianhap43, _gianhap56, _maBYTe, _QuyetDinh, _tenTMBH, _MaBH, _MaTDuong, _QuyetDinhBH, _TenBYTe);
        }
        public override void DeleteDMThuoc(String _maMay, String _nguoiSD, String _maThuoc)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMTHUOC_DELETED", _maMay, _nguoiSD, _maThuoc);
        }
        #endregion
        #region DMThuoc_Ke
        public override String InsertDMThuoc_Ke(String _parent, String _maNhom, String _maPL, String _maChungLoai, String _tenGoc, String _tenTC, String _tenTM, String _tenTM1, String _tenTM2, String _tenTA, Boolean _thuocGoc, Decimal _ngaydungtoida, String _maNSX, String _hamLuong, String _maDVTHL, Decimal _nguong, String _maDVT, Decimal _quydoi, String _maThuocgoc, String _maDVTGoc, Boolean _apDungGoi, Boolean _handung, string _lieudung, string _cachdung, String _khoban, String _khophat, Boolean _thuocThuT, Boolean _thuocPhauT, Boolean _thuocCLS, Boolean _thuocNgoaiT, Boolean _thuocDuoc, Boolean _thuocBan, Boolean _duyetNgoaiT, Boolean _duyetNoiT, String _ghichu, string _maMay, String _nguoiLap, string _malh, string quycach, string matk, string sovisa, Boolean bh50, Boolean KhongSD, String _maql, Byte _thuocTieuHao, string _matp, string duongdung, decimal _gianhap, decimal _gianhap43, decimal _gianhap56)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMThuoc_Ke_CREATE", _parent, _maNhom, _maPL, _maChungLoai, _tenGoc, _tenTC, _tenTM, _tenTM1, _tenTM2, _tenTA, _thuocGoc, _ngaydungtoida, _maNSX, _hamLuong, _maDVTHL, _nguong, _maDVT, _quydoi, _maThuocgoc, _maDVTGoc, _apDungGoi, _handung, _lieudung, _cachdung, _khoban, _khophat, _thuocThuT, _thuocPhauT, _thuocCLS, _thuocNgoaiT, _thuocDuoc, _thuocBan, _duyetNgoaiT, _duyetNoiT, _ghichu, _maMay, _nguoiLap, _malh, quycach, matk, sovisa, bh50, KhongSD, _maql, _thuocTieuHao, _matp, duongdung, _gianhap, _gianhap43, _gianhap56));
        }
        public override void UpdateDMThuoc_Ke(String _maThuoc, String _parent, String _maNhom, String _maPL, String _maChungLoai, String _tenGoc, String _tenTC, String _tenTM, String _tenTM1, String _tenTM2, String _tenTA, Boolean _thuocGoc, Decimal _ngaydungtoida, String _maNSX, String _hamLuong, String _maDVTHL, Decimal _nguong, String _maDVT, Decimal _quydoi, string _maThuocgoc, String _maDVTGoc, Boolean _apDungGoi, Boolean _handung, string _lieudung, string _cachdung, String _khoban, String _khophat, Boolean _thuocThuT, Boolean _thuocPhauT, Boolean _thuocCLS, Boolean _thuocNgoaiT, Boolean _thuocDuoc, Boolean _thuocBan, Boolean _duyetNgoaiT, Boolean _duyetNoiT, String _ghichu, string _maMay, Boolean _huy, String _nguoiSD, string _malh, string quycach, string matk, string sovisa, Boolean bh50, Boolean KhongSD, String _maql, Byte _thuocTieuHao, string _matp, string duongdung, decimal _gianhap, decimal _gianhap43, decimal _gianhap56)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMThuoc_Ke_UPDATE", _maThuoc, _parent, _maNhom, _maPL, _maChungLoai, _tenGoc, _tenTC, _tenTM, _tenTM1, _tenTM2, _tenTA, _thuocGoc, _ngaydungtoida, _maNSX, _hamLuong, _maDVTHL, _nguong, _maDVT, _quydoi, _maThuocgoc, _maDVTGoc, _apDungGoi, _handung, _lieudung, _cachdung, _khoban, _khophat, _thuocThuT, _thuocPhauT, _thuocCLS, _thuocNgoaiT, _thuocDuoc, _thuocBan, _duyetNgoaiT, _duyetNoiT, _ghichu, _maMay, _huy, _nguoiSD, _malh, quycach, matk, sovisa, bh50, KhongSD, _maql, _thuocTieuHao, _matp, duongdung, _gianhap, _gianhap43, _gianhap56);
        }
        public override void DeleteDMThuoc_Ke(String _maMay, String _nguoiSD, String _maThuoc)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMThuoc_Ke_DELETED", _maMay, _nguoiSD, _maThuoc);
        }
        #endregion

        #region DMThuoc_GiaQ

        public override void UpdateDMThuoc_GiaQ(String _maThuoc, Decimal _giaQuay, string _maMay, String _nguoiSD)
        {
            //SqlHelper.ExecuteNonQuery( SQLConnectionBD, DatabaseOwner + ObjectQualifier + "spDMThuoc_GIAQ_UPDATE", _maThuoc, _giaQuay, _maMay, _nguoiSD);
            System.Data.SqlClient.SqlDataReader dr;
            dr = SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMThuoc_GIAQ_UPDATE", _maThuoc, _giaQuay, _maMay, _nguoiSD);
            dr.Close();
        }

        #endregion
        #region DMThuoc_GiaQuay56

        public override void UpdateDMThuoc_GiaQuay56(String _maThuoc, Decimal _giaQuay56, string _maMay, String _nguoiSD)
        {
            //SqlHelper.ExecuteNonQuery( SQLConnectionBD, DatabaseOwner + ObjectQualifier + "spDMThuoc_GIAQ_UPDATE", _maThuoc, _giaQuay, _maMay, _nguoiSD);
            System.Data.SqlClient.SqlDataReader dr;
            dr = SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMThuoc_GIAQuay56_UPDATE", _maThuoc, _giaQuay56, _maMay, _nguoiSD);
            dr.Close();
        }

        #endregion

        #region DMThuoc_Gia
        public override void InsertDMThuoc_Gia(String _maDT, String _maThuoc, Decimal _donGiaBH, Decimal _donGiaThuT, Decimal _donGiaPhauT, Decimal _donGiaCLS, Decimal _giaChenhlech, Boolean _aDChenhlech, Boolean _DTBH, Byte _aDPhongMo, Decimal _donGia1, Decimal _giaChenhlech1, DateTime _ngay1, String _ghichu, string _maMay, String _nguoiLap)
        {
            //return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMThuoc_Gia_CREATE", _maDT, _maThuoc, _donGiaBH, _donGiaThuT, _donGiaPhauT, _donGiaCLS, _giaChenhlech, _aDChenhlech, _DTBH, _aDPhongMo, _donGia1, _giaChenhlech1, _ngay1, _ghichu, _maMay, _nguoiLap));
            System.Data.SqlClient.SqlDataReader dr;
            dr = SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMThuoc_Gia_CREATE", _maDT, _maThuoc, _donGiaBH, _donGiaThuT, _donGiaPhauT, _donGiaCLS, _giaChenhlech, _aDChenhlech, _DTBH, _aDPhongMo, _donGia1, _giaChenhlech1, _ngay1, _ghichu, _maMay, _nguoiLap);
            dr.Close();
        }
        public override void UpdateDMThuoc_Gia(String _maDT, Decimal _STT, String _maThuoc, Decimal _donGiaBH, Decimal _donGiaThuT, Decimal _donGiaPhauT, Decimal _donGiaCLS, Decimal _giaChenhlech, Boolean _aDChenhlech, Boolean _DTBH, Byte _aDPhongMo, String _ghichu, string _maMay, String _nguoisd, Boolean _huy)
        {
            //SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMThuoc_GIA_UPDATE", _maDT, _STT, _maThuoc, _donGiaBH, _donGiaThuT, _donGiaPhauT, _donGiaCLS, _giaChenhlech, _aDChenhlech, _DTBH, _aDPhongMo, _ghichu, _maMay, _nguoisd, _huy);
            System.Data.SqlClient.SqlDataReader dr;
            dr = SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMThuoc_GIA_UPDATE", _maDT, _STT, _maThuoc, _donGiaBH, _donGiaThuT, _donGiaPhauT, _donGiaCLS, _giaChenhlech, _aDChenhlech, _DTBH, _aDPhongMo, _ghichu, _maMay, _nguoisd, _huy);
            dr.Close();
        }
        public override void DeleteDMThuoc_Gia(String _maMay, String _nguoiSD, String _maDT, Decimal stt)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMThuoc_Gia_DELETED", _maMay, _nguoiSD, _maDT, stt);
        }
        #endregion

        #region DMThuoc_GiaDuyet
        public override void InsertDMThuoc_GiaDuyet(String _maDT, String _maThuoc, Decimal _donGiaBH, Decimal _donGiaThuT, Decimal _donGiaPhauT, Decimal _donGiaCLS, Decimal _giaChenhlech, Boolean _aDChenhlech, Boolean _DTBH, Byte _aDPhongMo, Decimal _donGia1, Decimal _giaChenhlech1, DateTime _ngay1, String _ghichu, string _maMay, String _nguoiLap)
        {
            //return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMThuoc_GiaDuyet_CREATE", _maDT, _maThuoc, _donGiaBH, _donGiaThuT, _donGiaPhauT, _donGiaCLS, _giaChenhlech, _aDChenhlech, _DTBH, _aDPhongMo, _donGia1, _giaChenhlech1, _ngay1, _ghichu, _maMay, _nguoiLap));
            System.Data.SqlClient.SqlDataReader dr;
            dr = SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMThuoc_GiaDuyet_CREATE", _maDT, _maThuoc, _donGiaBH, _donGiaThuT, _donGiaPhauT, _donGiaCLS, _giaChenhlech, _aDChenhlech, _DTBH, _aDPhongMo, _donGia1, _giaChenhlech1, _ngay1, _ghichu, _maMay, _nguoiLap);
            dr.Close();
        }
        public override void UpdateDMThuoc_GiaDuyet(String _maDT, Decimal _STT, String _maThuoc, Decimal _donGiaBH, Decimal _donGiaThuT, Decimal _donGiaPhauT, Decimal _donGiaCLS, Decimal _giaChenhlech, Boolean _aDChenhlech, Boolean _DTBH, Byte _aDPhongMo, String _ghichu, string _maMay, String _nguoisd, Boolean _huy)
        {
            //SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMThuoc_GiaDuyet_UPDATE", _maDT, _STT, _maThuoc, _donGiaBH, _donGiaThuT, _donGiaPhauT, _donGiaCLS, _giaChenhlech, _aDChenhlech, _DTBH, _aDPhongMo, _ghichu, _maMay, _nguoisd, _huy);
            System.Data.SqlClient.SqlDataReader dr;
            dr = SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMThuoc_GiaDuyet_UPDATE", _maDT, _STT, _maThuoc, _donGiaBH, _donGiaThuT, _donGiaPhauT, _donGiaCLS, _giaChenhlech, _aDChenhlech, _DTBH, _aDPhongMo, _ghichu, _maMay, _nguoisd, _huy);
            dr.Close();
        }
        public override void DeleteDMThuoc_GiaDuyet(String _maMay, String _nguoiSD, String _maDT, Decimal stt)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMThuoc_GiaDuyet_DELETED", _maMay, _nguoiSD, _maDT, stt);
        }
        #endregion
        #region DMPPSoche
        public override void InsertDMPPSoche(String _maThuoc, String _tenPPSoche, String _ghichu, string _maMay, String _nguoiLap)
        {
            System.Data.SqlClient.SqlDataReader dr;
            dr = SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMPPSoche_CREATE", _maThuoc, _tenPPSoche, _ghichu, _maMay, _nguoiLap);
            dr.Close();
        }
        public override void UpdateDMPPSoche(String _maThuoc, String _tenPPSoche, Decimal _STT, String _ghichu, string _maMay, String _nguoisd, Boolean _huy)
        {
            System.Data.SqlClient.SqlDataReader dr;
            dr = SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMPPSoche_UPDATE", _STT, _maThuoc, _tenPPSoche, _ghichu, _maMay, _nguoisd, _huy);
            dr.Close();
        }
        public override void DeleteDMPPSoche(String _maMay, String _nguoiSD, String _maThuoc, Decimal _stt)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMPPSoche_DELETED", _stt, _maThuoc, _maMay, _nguoiSD);
        }
        #endregion

        

        #region DMPhanloai
        public override String InsertDMPhanLoai(String _tenPL, String _ghiChu, string _maMay, String _nguoiSD)
        {
            // ExecuteScalar(ConnectionString
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMPhanloai_CREATE", _tenPL, _ghiChu, _maMay, _nguoiSD));
        }
        public override void UpdateDMPhanLoai(String _maPL, String _tenPL, String _ghiChu, string _maMay, String _nguoiSD, Boolean _huy)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMPhanloai_UPDATE", _maPL, _tenPL, _ghiChu, _maMay, _nguoiSD, _huy);
        }
        public override void DeleteDMPhanLoai(String _maMay, String _nguoiSD, String _maPL)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMPhanloai_DELETED", _maMay, _nguoiSD, _maPL);
        }
        #endregion

        #region DMChungLoai
        public override String InsertDMChungLoai(String _tenChungLoai, string _maMay, Byte _lOAI, String _nguoiSD)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMChungLoai_CREATE", _tenChungLoai, _maMay, _lOAI, _nguoiSD));
        }
        public override void UpdateDMChungLoai(String _maChungLoai, String _tenChungLoai, string _maMay, Boolean _huy, Byte _lOAI, String _nguoiSD)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMChungLoai_UPDATE", _maChungLoai, _tenChungLoai, _maMay, _huy, _lOAI, _nguoiSD);
        }
        public override void DeleteDMChungLoai(String _maMay, String _nguoiSD, String _maChungLoai)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMChungLoai_DELETED", _maMay, _nguoiSD, _maChungLoai);
        }
        #endregion
        #region DMDanhGia
        public override String InsertDMDanhGia(String _tenDanhGia, string _maMay, Byte _lOAI, string _ghichu, String _nguoiSD)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMDanhGia_CREATE", _tenDanhGia, _maMay, _lOAI, _ghichu, _nguoiSD));
        }
        public override void UpdateDMDanhGia(String _maDanhGia, String _tenDanhGia, string _maMay, Boolean _huy, Byte _lOAI, string _ghichu, String _nguoiSD)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMDanhGia_UPDATE", _maDanhGia, _tenDanhGia, _maMay, _huy, _lOAI, _ghichu, _nguoiSD);
        }
        public override void DeleteDMDanhGia(String _maMay, String _nguoiSD, String _maDanhGia)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMDanhGia_DELETED", _maMay, _nguoiSD, _maDanhGia);
        }
        #endregion
        #region DMDanhGia_CS
        public override String InsertDMDanhGia_CS(String _tenCS, String _maDanhGia, String _yeucau, decimal _dongiatt, string _maMay, String _nguoiSD, String _tenloaics)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMDanhGia_CS_CREATE", _tenCS, _maDanhGia, _yeucau, _dongiatt, _maMay, _nguoiSD, _tenloaics));
        }
        public override void UpdateDMDanhGia_CS(String _maCS, String _tenCS, String _maDanhGia, String _yeucau, decimal _dongiatt, string _maMay, Boolean _huy, String _nguoiSD, String _tenloaics)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMDanhGia_CS_UPDATE", _maCS, _tenCS, _maDanhGia, _yeucau, _dongiatt, _maMay, _huy, _nguoiSD, _tenloaics);
        }
        public override void DeleteDMDanhGia_CS(String _maMay, String _nguoiSD, String _maCS)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMDanhGia_CS_DELETED", _maMay, _nguoiSD, _maCS);
        }
        #endregion

        #region DM Dich vu Chi so ket qua
        public override String InsertDMDanhGia_CS_KQ(String _maCS, String _MaThuoc, string _YeuCauTT, string _YeuCau, Decimal _GHTu, Decimal _GHDen, String _ghichu, string _maMay, String _nguoiSD)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMDanhGia_CS_KQ_CREATE", _maCS, _MaThuoc, _YeuCauTT, _YeuCau, _GHTu, _GHDen, _ghichu, _maMay, _nguoiSD));
        }
        public override void UpdateDMDanhGia_CS_KQ(String _maCS, String _MaThuoc, string _YeuCauTT, string _YeuCau, Decimal _GHTu, Decimal _GHDen, String _ghichu, string _maMay, String _nguoiSD, Boolean _huy)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMDanhGia_CS_KQ_UPDATE", _maCS, _MaThuoc, _YeuCauTT, _YeuCau, _GHTu, _GHDen, _ghichu, _maMay, _nguoiSD, _huy);
        }
        public override void DeleteDMDanhGia_CS_KQ(String _maMay, String _nguoiSD, String _maCS, String _mathuoc)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMDanhGia_CS_KQ_DELETED", _maMay, _nguoiSD, _maCS, _mathuoc);
        }

        #endregion
        #region DM Bai Thuoc

        public override String InsertDMBaiThuoc(String _tenBThuoc, String _ghichu, String _maMay, String _nguoiLap, byte _loai, string _tenbs)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMBaiThuoc_CREATE", _tenBThuoc, _ghichu, _maMay, _nguoiLap, _loai, _tenbs));
        }
        public override void UpdateDMBaiThuoc(String _maBThuoc, String _tenBThuoc, String _ghichu, String _maMay, Boolean _huy, String _nguoiSD, byte _loai, string _tenbs)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMBaiThuoc_UPDATE", _maBThuoc, _tenBThuoc, _ghichu, _maMay, _huy, _nguoiSD, _loai, _tenbs);
        }

        public override void DeleteDMBaiThuoc(String _maMay, String _nguoiSD, String _maBThuoc)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMBaiThuoc_DELETED", _maMay, _nguoiSD, _maBThuoc);
        }

        #endregion

        #region DM Bai Thuoc Chi tiet
        public override String InsertDMBaiThuoc_C(String _maBThuoc, String _maThuoc, Decimal _soLuong, string _ghichu, String _maMay, String _nguoiSD, String _lieuDung, String _cachDung)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMBaiThuoc_C_CREATE", _maBThuoc, _maThuoc, _soLuong, _ghichu, _maMay, _nguoiSD, _lieuDung, _cachDung));
        }
        public override void UpdateDMBaiThuoc_C(String _maBThuoc, Byte _sTT, String _maThuoc, Decimal _soLuong, string _ghichu, String _maMay, Boolean _huy, String _nguoiSD, String _lieuDung, String _cachDung)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMBaiThuoc_C_UPDATE", _maBThuoc, _sTT, _maThuoc, _soLuong, _ghichu, _maMay, _huy, _nguoiSD, _lieuDung, _cachDung);
        }
        public override void DeleteDMBaiThuoc_C(String _maMay, String _nguoiSD, String _maHC, Byte _sTT)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMBaiThuoc_C_DELETED", _maMay, _nguoiSD, _maHC, _sTT);
        }



        #endregion

        #region DMPhuCap
        public override String InsertDMPhuCap(string _tenPhuCap, string _GhiChu, Boolean _CoBan, Boolean _lOAI, decimal _HeSo, decimal _MucLuong, string _maMay, string _nguoiSD, string _maNhom)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMPhuCap_CREATE", _tenPhuCap, _GhiChu, _CoBan, _lOAI, _HeSo, _MucLuong, _maMay, _nguoiSD, _maNhom));
        }
        public override void UpdateDMPhuCap(string _maPhuCap, string _tenPhuCap, string _GhiChu, Boolean _CoBan, Boolean _lOAI, decimal _HeSo, decimal _MucLuong, string _maMay, Boolean _huy, string _nguoiSD, string _maNhom)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMPhuCap_UPDATED", _maPhuCap, _tenPhuCap, _GhiChu, _CoBan, _lOAI, _HeSo, _MucLuong, _maMay, _huy, _nguoiSD, _maNhom);
        }
        public override void DeleteDMPhuCap(String _maMay, String _nguoiSD, String _maPhuCap)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMPhuCap_DELETED", _maMay, _nguoiSD, _maPhuCap);
        }
        #endregion


        #region DMThueTN
        public override String InsertDMThueTN(String _TenThueTN, string _ghiChu, decimal _SoTienTu, decimal _SoTienDen, decimal _Sotien, String _maMay, String _nguoiSD)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMThueTN_CREATE", _TenThueTN, _ghiChu, _SoTienTu, _SoTienDen, _Sotien, _maMay, _nguoiSD));
        }
        public override void UpdateDMThueTN(string _MaThueTN, string _TenThueTN, string _GhiChu, decimal _SoTienTu, decimal _SoTienDen, decimal _Sotien, string _maMay, Boolean _huy, string _nguoiSD)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMThueTN_UPDATED", _MaThueTN, _TenThueTN, _GhiChu, _SoTienTu, _SoTienDen, _Sotien, _maMay, _huy, _nguoiSD);
        }
        public override void DeleteDMThueTN(String _maMay, String _nguoiSD, String _MaThueTN)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMThueTN_DELETED", _maMay, _nguoiSD, _MaThueTN);
        }
        #endregion


        #region DMLoaiHinh
        public override String InsertDMLoaiHinh(String _tenLH, String _maChungLoai, string _maMay, String _nguoiSD)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMLoaiHinh_CREATE", _tenLH, _maChungLoai, _maMay, _nguoiSD));
        }
        public override void UpdateDMLoaiHinh(String _maLH, String _tenLH, String _maChungLoai, string _maMay, Boolean _huy, String _nguoiSD)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMLoaiHinh_UPDATE", _maLH, _tenLH, _maChungLoai, _maMay, _huy, _nguoiSD);
        }
        public override void DeleteDMLoaiHinh(String _maMay, String _nguoiSD, String _maLH)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMLoaiHinh_DELETED", _maMay, _nguoiSD, _maLH);
        }
        #endregion
        #region DMThanhPham
        public override String InsertDMThanhPham(String _tenLH, String _maChungLoai, string _maMay, String _nguoiSD)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMThanhPham_CREATE", _tenLH, _maChungLoai, _maMay, _nguoiSD));
        }
        public override void UpdateDMThanhPham(String _maLH, String _tenLH, String _maChungLoai, string _maMay, Boolean _huy, String _nguoiSD)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMThanhPham_UPDATE", _maLH, _tenLH, _maChungLoai, _maMay, _huy, _nguoiSD);
        }
        public override void DeleteDMThanhPham(String _maMay, String _nguoiSD, String _maLH)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMThanhPham_DELETED", _maMay, _nguoiSD, _maLH);
        }
        #endregion

        #region DMThuoc_KhoKhoa
        public override String InsertDMThuoc_KhoKhoa(String _makho, String _makhoa, String _maThuoc, String _nguoiSD, Boolean _khongSuDung, string _maMay)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMThuoc_KhoKhoa_Create", _makho, _makhoa, _maThuoc, _nguoiSD, _maMay));

        }
        public override void UpdateDMThuoc_KhoKhoa(String _makho, Decimal _sTT, String _makhoa, String _maThuoc, Boolean _huy, String _nguoiSD, Boolean _khongSuDung, string _maMay)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMThuoc_KhoKhoa_Update", _makho, _sTT, _makhoa, _maThuoc, _huy, _nguoiSD, _maMay);
        }
        public override void DeleteDMThuoc_KhoKhoa(String _maMay, String _nguoiSD, String _makho, Decimal _sTT, String _makhoa)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMThuoc_KhoKhoa_Deleted", _maMay, _nguoiSD, _makho, _sTT, _makhoa);
        }
        #endregion
        #region DMThuoc_KhoKhoa DT
        public override String InsertDMThuoc_KhoKhoa(String _makho, String _makhoa, String _maThuoc, String _nguoiSD, Boolean _khongSuDung, string _maMay, String _maDT)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMThuoc_KhoKhoaDT_Create", _makho, _makhoa, _maThuoc, _nguoiSD, _maMay, _maDT));

        }
        public override void UpdateDMThuoc_KhoKhoa(String _makho, Decimal _sTT, String _makhoa, String _maThuoc, Boolean _huy, String _nguoiSD, Boolean _khongSuDung, string _maMay, String _maDT)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMThuoc_KhoKhoaDT_Update", _makho, _sTT, _makhoa, _maThuoc, _huy, _nguoiSD, _maMay, _maDT);
        }
        public override void DeleteDMThuoc_KhoKhoa(String _maMay, String _nguoiSD, String _makho, Decimal _sTT, String _makhoa, String _maDT)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMThuoc_KhoKhoaDT_Deleted", _maMay, _nguoiSD, _makho, _sTT, _makhoa, _maDT);
        }
        #endregion
        #region DMThuoc_KhoKhoaG
        public override String InsertDMThuoc_KhoKhoaG(String _makho, String _makhoa, String _maThuoc, String _nguoiSD, Boolean _khongSuDung, string _maMay)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMThuoc_KhoKhoaG_Create", _makho, _makhoa, _maThuoc, _nguoiSD, _maMay));

        }
        public override void UpdateDMThuoc_KhoKhoaG(String _makho, Decimal _sTT, String _makhoa, String _maThuoc, Boolean _huy, String _nguoiSD, Boolean _khongSuDung, string _maMay)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMThuoc_KhoKhoaG_Update", _makho, _sTT, _makhoa, _maThuoc, _huy, _nguoiSD, _maMay);
        }
        public override void DeleteDMThuoc_KhoKhoaG(String _maMay, String _nguoiSD, String _makho, Decimal _sTT, String _makhoa)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMThuoc_KhoKhoaG_Deleted", _maMay, _nguoiSD, _makho, _sTT, _makhoa);
        }
        #endregion
        #region DMThuoc_Thau
        public override String InsertDMThuoc_Thau(String _maThuoc, String _maNCC, String _namThau, Decimal _soLuong, String _ghiChu, Decimal _canhBao, String _nguoiSD, String _mamay)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMThuoc_Thau_CREATE", _maThuoc, _maNCC, _namThau, _soLuong, _ghiChu, _canhBao, _nguoiSD, _mamay));
        }
        public override void UpdateDMThuoc_Thau(String _maThuoc, String _maNCC, String _namThau, Decimal _soLuong, String _ghiChu, Boolean _huy, Decimal _canhBao, String _nguoiSD, String _mamay)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMThuoc_Thau_UPDATE", _maThuoc, _maNCC, _namThau, _soLuong, _ghiChu, _huy, _canhBao, _nguoiSD, _mamay);
        }
        public override void DeleteDMThuoc_Thau(String _maThuoc, String _maNCC, String _namThau, String _nguoiSD, String _mamay)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMThuoc_Thau_DELETED", _maThuoc, _maNCC, _namThau, _nguoiSD, _mamay);
        }
        public override IDataReader GetAllDMThuoc_Thau(Boolean qadmin, string _mancc, string _nam, string _dk)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMThuoc_Thau_GETALL", qadmin, _mancc, _nam, _dk));
        }
        public override IDataReader GetDMThuoc_Thau(String MaThuoc, Decimal NamThau, String MaNCC, String DK)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMThuoc_Thau_GET", MaThuoc, NamThau, MaNCC, DK));
        }
        public override IDataReader GetDMThuoc_Thau_TOTALBYMATHUOC(Decimal NamThau, string mancc, String MaThuoc)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMTHUOCTHAU_TOTALBYMATHUOC", NamThau, mancc, MaThuoc));
        }
        #endregion


        #region DM Noi Xuat
        public override String InsertDMNoiXuat(Byte _loai, String _tenNoiXuat, String _ghichu, string _mamay, String _nguoiSD)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMNoiXuat_CREATE", _loai, _tenNoiXuat, _ghichu, _mamay, _nguoiSD));
        }
        public override void UpdateDMNoiXuat(String _maNoi, Byte _loai, String _tenNoi, String _ghichu, string _mamay, Boolean _huy, String _nguoiSD)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMNoiXuat_UPDATED", _maNoi, _loai, _tenNoi, _ghichu, _mamay, _huy, _nguoiSD);
        }
        public override void DeleteDMNoiXuat(String _maMay, String _nguoiSD, String _maNoiXuat)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMNoiXuat_DELETED", _maMay, _nguoiSD, _maNoiXuat);
        }


        #region DMVaiTro_PhuCap
        public override String InsertDMVaiTro_PhuCap(Byte maVaiTro, String maChungLoai, String maLH, String ghiChu, String maMay, Byte loai, String sNguoiSD, Decimal soTien, Decimal soTienNT)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMVAITRO_PHUCAP_Create", maVaiTro, maChungLoai, maLH, ghiChu, maMay, loai, sNguoiSD, soTien, soTienNT));
        }
        public override void UpdateDMVaiTro_PhuCap(Byte maVaiTro, String maChungLoai, String maLH, String ghiChu, String maMay, Byte loai, Boolean huy, Boolean khongSD, String sNguoiSD, Decimal soTien, Decimal soTienNT)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMVAITRO_PHUCAP_UPDATE", maVaiTro, maChungLoai, maLH, ghiChu, maMay, loai, huy, khongSD, sNguoiSD, soTien, soTienNT);
        }
        public override void DeleteDMVaiTro_PhuCap(String maChungLoai, String maLH, Byte maVaiTro, String maMay, String MguoiSD)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMVAITRO_PHUCAP_DELETED", maChungLoai, maLH, maVaiTro, maMay, MguoiSD);
        }
        public override IDataReader GetDMVaiTro_PhuCap(Byte maVaiTro, String maChungLoai, String maLH)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(_connectionString, DatabaseOwner + ObjectQualifier + "spDMVAITRO_PHUCAP_GET", maVaiTro, maChungLoai, maLH));
        }
        public override IDataReader GetAllDMVaiTro_PhuCap(Boolean qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(_connectionString, DatabaseOwner + ObjectQualifier + "spDMVAITRO_PHUCAP_GetAll", qadmin));
        }
        public override IDataReader FindDMVaiTro_PhuCap(Boolean Qadmin, string MaChungLoai, string MaLH, string DK)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(_connectionString, DatabaseOwner + ObjectQualifier + "spDMVAITRO_PHUCAP_FINDS", Qadmin, MaChungLoai, MaLH, DK));
        }
        #endregion



        #endregion



        #region DM Quan Tri



        #region GetList
        public override IDataReader GetAllDMRole(Boolean _qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMRole_GETALL", _qadmin));
        }
        public override IDataReader GetDMRole(String _maRole, Boolean _qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMRole_GET", _maRole, _qadmin));
        }
        public override IDataReader GetQuyenRole(String _maRole, String _maMN)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spQuyenRole_GET", _maRole, _maMN));
        }
        public override IDataReader GetAllQuyenMenuRole()
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spQuyenMenuRole_GETAll"));
        }
        public override IDataReader GetDMKhoa(String _makhoa)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMKhoa_Get", _makhoa));
        }
        public override IDataReader GetAllDMKhoa(Boolean qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMKhoa_GetAll", qadmin));
        }
        public override IDataReader GetAllDMKhoaCap1ByAccount(String DK, Boolean qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMKHOA_Cap1GetAll", DK, qadmin));
        }
        public override IDataReader GetDMMay(String _mamay)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMMay_Get", _mamay));
        }
        public override IDataReader GetAllDMMay()
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMMay_GetAll"));
        }
        public override IDataReader GetDMNgayNghi(String _mamay)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMNgayNghi_Get", _mamay));
        }
        public override IDataReader GetAllDMNgayNghi()
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMNgayNghi_GetAll"));
        }

        public override IDataReader GetDMNhanVien(String _manv)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMNhanVien_Get", _manv));
        }
        public override IDataReader GetAllDMNhanVien(Boolean _qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMNhanVien_GetAll", _qadmin));
        }
        public override IDataReader GetAllGetMenuByAccountList(string account, string cap)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spAccount_MenuGET", account, cap));
        }
        public override IDataReader GetAllGetMenuByAccountDLLList(string account, string menuparent, string namedll, byte cap, string mamn)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spAccount_MenuGETdll", account, menuparent, namedll, cap, mamn));
        }
        #endregion

        //public override IDataReader RptGetInphoihoadonthanhtoan_BH1(String _maSoKham, Byte _DaTT, byte _loai, String _dK)
        //{


        //    return ((IDataReader)SqlHelper.ExecuteReader( ConnectionString, DatabaseOwner + ObjectQualifier + "spBENHAN_GETsBCDICHVU", "09BA00000022", 1, 2, ""));//_DaTT, _loai, _dK);
        //    // // // //// ds.WriteXmlSchema("CRInphoihoadonthanhtoan_BHNT_RPT.xsd");
        //}
        public override IDataReader GetThamSo()
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spTHAMSO_GET"));
        }
        #region Find List

        public override IDataReader FindDMKhoa(String _DK, Boolean qadmin)
        {
          //  return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMKhoa_Finds", _DK, qadmin));
            System.Data.SqlClient.SqlCommand cmd = SqlHelper.CreateCommand(SQLConnectionBD, DatabaseOwner + ObjectQualifier + "spDMKhoa_Finds");
            cmd.CommandTimeout = 18000;

            cmd.CommandType = System.Data.CommandType.StoredProcedure;

            cmd.Parameters.AddWithValue("DK", _DK);
            cmd.Parameters.AddWithValue("qadmin", qadmin);
            IDataReader dt;
            dt = (IDataReader)cmd.ExecuteReader(CommandBehavior.CloseConnection);
            cmd.Dispose();
            cmd = null;
            return dt;
        }
        public override IDataReader FindDMMay(String _DK, Boolean qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMMay_Finds", _DK, qadmin));
        }
        public override IDataReader FindDMNgayNghi(String _DK, Boolean qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMNgayNghi_Finds", _DK, qadmin));
        }
        public override IDataReader FindDMNhanVien(String _DK, Boolean qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMNhanVien_Finds", _DK, qadmin));
        }
        public override IDataReader FindDMNhanVienFilter(String _DK, String _DKFilter, Boolean qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMNhanVienFilter_Finds", _DK, _DKFilter, qadmin));
        }
        public override IDataReader FindDMRole(String _DK, Boolean qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMROLE_Finds", _DK, qadmin));
        }
        #endregion


        #region DMKhoa
        public override String InsertDMKhoa(String _tenKhoa, Byte _loai, Decimal _sogiuong, string _machuyenkhoa, string _maMay, String _nguoiSD, string _idparent, string _tenta, string diadiem, string ghichu, Boolean khonghd, string maNhom, string MaKhoaQL)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMKhoa_CREATE1", _tenKhoa, _loai, _sogiuong, _machuyenkhoa, _maMay, _nguoiSD, _idparent, _tenta, diadiem, ghichu, khonghd, maNhom, MaKhoaQL));
        }
        public override void UpdateDMKhoa(string _maKhoa, String _tenKhoa, Byte _loai, Byte _cap, Decimal _sogiuong, string _machuyenkhoa, string _maMay, String _nguoiSD, String _tenta, bool huy, string diadiem, string ghichu, Boolean khonghd, string maNhom, string MaKhoaQL)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMKhoa_UPDATE1", _maKhoa, _tenKhoa, _loai, _cap, _sogiuong, _machuyenkhoa, _maMay, _nguoiSD, _tenta, huy, diadiem, ghichu, khonghd, maNhom, MaKhoaQL);
        }
        public override void DeleteDMKhoa(String _maMay, String _nguoiSD, String _maKhoa)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMKhoa_Deleted", _maMay, _nguoiSD, _maKhoa);
        }
        #endregion
        #region THAMSO
        public override void InsertThamSo(String _tenBV, String _tenBVTA, String _tenBVViettat, String _diaChi, String _diaChiTA, String _tel, String _email, String _webSite, String _chiCucThue, String _maSoThue, String _taiKhoan, decimal _tyGia, String _maMay, String _ngayQT1, String _ngayQT2, String _ngayQT3, String _ngayQT4, String _nguoiSD, SmartDate _ngayXulyThuoc, SmartDate _ngayXulyHC, SmartDate _ngayXulyVT)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spTHAMSO_CREATE", _tenBV, _tenBVTA, _tenBVViettat, _diaChi, _diaChiTA, _tel, _email, _webSite, _chiCucThue, _maSoThue, _taiKhoan, _tyGia, _maMay, _ngayQT1, _ngayQT2, _ngayQT3, _ngayQT4, _nguoiSD, _ngayXulyThuoc.DBValue, _ngayXulyHC.DBValue, _ngayXulyVT.DBValue);
        }
        public override void UpdateThamSo(String _tenBV, String _tenBVTA, String _tenBVViettat, String _diaChi, String _diaChiTA, String _tel, String _email, String _webSite, String _chiCucThue, String _maSoThue, String _taiKhoan, decimal _tyGia, String _maMay, String _ngayQT1, String _ngayQT2, String _ngayQT3, String _ngayQT4, String _nguoiSD, SmartDate _ngayXulyThuoc, SmartDate _ngayXulyHC, SmartDate _ngayXulyVT)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spTHAMSO_UPDATE", _tenBV, _tenBVTA, _tenBVViettat, _diaChi, _diaChiTA, _tel, _email, _webSite, _chiCucThue, _maSoThue, _taiKhoan, _tyGia, _maMay, _ngayQT1, _ngayQT2, _ngayQT3, _ngayQT4, _nguoiSD, _ngayXulyThuoc.DBValue, _ngayXulyHC.DBValue, _ngayXulyVT.DBValue);
        }

        #endregion

        #region DMMay
        public override String InsertDMMay(String _tenMay, String _maKhoa, String _ip, string _maMaySD, String _nguoiSD)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMMay_CREATE", _tenMay, _maKhoa, _ip, _maMaySD, _nguoiSD));
        }
        public override void UpdateDMMay(String _maMay, String _tenMay, String _maKhoa, String _ip, string _maMaySD, String _nguoiSD)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMMay_UPDATE", _maMay, _tenMay, _maKhoa, _ip, _maMaySD, _nguoiSD);
        }
        public override void DeleteDMMay(String _maMaySD, String _nguoiSD, string _maMay)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMMay_DELETE", _maMaySD, _nguoiSD, _maMay);
        }
        #endregion

        #region DMNgayNghi
        public override String InsertDMNgayNghi(String _tenMay,  String _ip, string _maMaySD, String _nguoiSD)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMNgayNghi_CREATE", _tenMay, _ip, _maMaySD, _nguoiSD));
        }
        public override void UpdateDMNgayNghi(String _maMay, String _tenMay,  String _ip, string _maMaySD, String _nguoiSD)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMNgayNghi_UPDATE", _maMay, _tenMay, _ip, _maMaySD, _nguoiSD);
        }
        public override void DeleteDMNgayNghi(String _maMaySD, String _nguoiSD, string _maMay)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMNgayNghi_DELETE", _maMaySD, _nguoiSD, _maMay);
        }
        #endregion


        #region DMNhanvien

        public override String InsertDMNhanVien(String _hoTen, String _maChucVu, String _maLoaiHD, string _maChuyenMon, String _maKhoa, Boolean _khongsd, string _maMay, String _nguoiSD, string _macd, string _tentat, string _ghichu, string _idnhanvien, string dienThoai, string maChungChiHanhNghe, string NguoiGiamHo, string DienThoaiKhoa)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMNHANVIEN_CREATE1", _hoTen, _maChucVu, _maLoaiHD, _maChuyenMon, _maKhoa, _khongsd, _maMay, _nguoiSD, _macd, _tentat, _ghichu, _idnhanvien, dienThoai, maChungChiHanhNghe, NguoiGiamHo, DienThoaiKhoa));
        }
        public override void UpdateDMNhanVien(String _maNV, String _hoTen, String _maChucVu, String _maLoaiHD, string _maChuyenMon, String _maKhoa, Boolean _khongsd, Boolean _huy, string _maMay, String _nguoiSD, string _macd, string _tentat, string _ghichu, string _idnhanvien, string dienThoai, string maChungChiHanhNghe, string NguoiGiamHo, string DienThoaiKhoa)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMNHANVIEN_UPDATE1", _maNV, _hoTen, _maChucVu, _maLoaiHD, _maChuyenMon, _maKhoa, _khongsd, _huy, _maMay, _nguoiSD, _macd, _tentat, _ghichu, _idnhanvien, dienThoai, maChungChiHanhNghe, NguoiGiamHo, DienThoaiKhoa);
        }
        public override void DeleteDMNhanVien(String _maMay, String _nguoiSD, String _maNV)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMNHANVIEN_DELETED", _maMay, _nguoiSD, _maNV);
        }
      

        public override String InsertDMNhanVien(String _hoTen, String _maChucVu, String _maLoaiHD, string _maChuyenMon, String _maKhoa, Boolean _khongsd, string _maMay, String _nguoiSD, string _macd, string _tentat, string _ghichu, string _idnhanvien, string dienThoai, string maChungChiHanhNghe, string NguoiGiamHo, string DienThoaiKhoa,string chuky)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMNHANVIEN_CREATE", _hoTen, _maChucVu, _maLoaiHD, _maChuyenMon, _maKhoa, _khongsd, _maMay, _nguoiSD, _macd, _tentat, _ghichu, _idnhanvien, dienThoai, maChungChiHanhNghe, NguoiGiamHo, DienThoaiKhoa,chuky ));
        }
        public override void UpdateDMNhanVien(String _maNV, String _hoTen, String _maChucVu, String _maLoaiHD, string _maChuyenMon, String _maKhoa, Boolean _khongsd, Boolean _huy, string _maMay, String _nguoiSD, string _macd, string _tentat, string _ghichu, string _idnhanvien, string dienThoai, string maChungChiHanhNghe, string NguoiGiamHo, string DienThoaiKhoa, string chuky)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMNHANVIEN_UPDATE", _maNV, _hoTen, _maChucVu, _maLoaiHD, _maChuyenMon, _maKhoa, _khongsd, _huy, _maMay, _nguoiSD, _macd, _tentat, _ghichu, _idnhanvien, dienThoai, maChungChiHanhNghe, NguoiGiamHo, DienThoaiKhoa, chuky);
        }
     
        #endregion
        #region DMRole
        public override String InsertDMRole(String _tenRole, string _maMay, String _nguoiSD)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMRole_Create", _tenRole, _maMay, _nguoiSD));

        }

        public override void UpdateDMRole(String _maRole, String _tenRole, string _maMay, Boolean _huy, String _nguoiSD)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMRole_Update", _maRole, _tenRole, _maMay, _huy, _nguoiSD);
        }
        public override void DeleteDMRole(String _maRole, String _maMay, String _nguoiSD)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMRole_Deleted", _maRole, _maMay, _nguoiSD);
        }

        #endregion
        #endregion

        #region DM Phong kham

        #region FindList
        public override IDataReader FindDMDichVu(string _DK, Boolean _qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMDichVu_Finds", _DK, _qadmin));
        }
        public override IDataReader FindDMDichVuFilter(string _DK, string _DKFilter, Boolean _qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMDichVu_FilterFinds", _DK, _DKFilter, _qadmin));
        }
        public override IDataReader FindDMNhom(string _DK, byte loai, Boolean _qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMNhom_Finds", _DK, loai, _qadmin));
        }
        public override IDataReader FindDMNhomDV(string _DK, Boolean _qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMNhomDV_Finds", _DK, _qadmin));
        }
        public override IDataReader FindDMDichVu_PhieuIn(string _DK, Boolean _qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMDichVu_PhieuIn_Finds", _DK, _qadmin));
        }
        public override IDataReader FindDMDichVu_BC(string _DK, Boolean _qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMDichVu_BC_Finds", _DK, _qadmin));
        }
        public override IDataReader FindDMDichVu_MaHoa(string _DK, Boolean _qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMDichVu_MaHoa_Finds", _DK, _qadmin));
        }
        public override IDataReader FindDMDichVu_PhieuHen(string _DK, Boolean _qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMDichVu_PhieuHen_Finds", _DK, _qadmin));
        }
        public override IDataReader FindDMDichVu_CS(string _DK, Boolean _qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMDichVu_CS_Finds", _DK, _qadmin));
        }
        public override IDataReader FindDMDichVu_CS_KQ(string _DK, Boolean _qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMDichVu_CS_KQ_Finds", _DK, _qadmin));
        }
        public override IDataReader FindDMDichVu_Nhom(string _DK, string _madt, Boolean _qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMDichVu_Nhom_Finds", _DK, _madt, _qadmin));
        }

        public override IDataReader FindDMDichVu_NhomFilter(string _DK, string _DKFilter, string _madt, Boolean _qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMDichVu_NhomFilter_Finds", _DK, _DKFilter, _madt, _qadmin));
        }
        public override IDataReader FindDMDichVu_Gia(string _DK, string _madt, Boolean _qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMDichVu_Gia_Finds", _DK, _madt, _qadmin));
        }

        public override IDataReader FindDMDichVu_GiaFilter(string _DK, string _DKFilter, string _madt, Boolean _qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMDichVu_GiaFilter_Finds", _DK, _DKFilter, _madt, _qadmin));
        }
        public override IDataReader FindDMDichVu_Gia_DT(string _DK, string _madt, Boolean _qadmin)
        {
            //  return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMDichVu_Gia_DT_Finds", _DK, _madt, _qadmin));
            System.Data.SqlClient.SqlCommand cmd = SqlHelper.CreateCommand(SQLConnectionBD, DatabaseOwner + ObjectQualifier + "spDMDichVu_Gia_DT_Finds");
            cmd.CommandTimeout = 18000;

            cmd.CommandType = System.Data.CommandType.StoredProcedure;
            cmd.Parameters.AddWithValue("madt", _madt);
            cmd.Parameters.AddWithValue("qadmin", _qadmin);
            cmd.Parameters.AddWithValue("DK", _DK);
            //cmd.Parameters.AddWithValue("noitt", _noitt);
            IDataReader dt;
            dt = (IDataReader)cmd.ExecuteReader(CommandBehavior.CloseConnection);
            cmd.Dispose();
            cmd = null;
            return dt;
        }
        public override IDataReader FindDMDichVu_Gia_DT(string _DK, string _madt, Boolean _qadmin, string _noitt)
        {
            // return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMDichVu_Gia_DTNoiTT_Finds", _DK, _madt, _qadmin, _noitt));
            System.Data.SqlClient.SqlCommand cmd = SqlHelper.CreateCommand(SQLConnectionBD, DatabaseOwner + ObjectQualifier + "spDMDichVu_Gia_DTNoiTT_Finds");
            cmd.CommandTimeout = 18000;

            cmd.CommandType = System.Data.CommandType.StoredProcedure;
            cmd.Parameters.AddWithValue("madt", _madt);
            cmd.Parameters.AddWithValue("qadmin", _qadmin);
            cmd.Parameters.AddWithValue("DK", _DK);
            cmd.Parameters.AddWithValue("noitt", _noitt);
            IDataReader dt;
            dt = (IDataReader)cmd.ExecuteReader(CommandBehavior.CloseConnection);
            cmd.Dispose();
            cmd = null;
            return dt;
        }
        public override IDataReader FindDMDichVu_Gia_Goi_DT(string _DK, string _madt, Boolean _qadmin)
        {
            // return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMDichVu_Gia_Goi_DT_Finds", _DK, _madt, _qadmin));
            System.Data.SqlClient.SqlCommand cmd = SqlHelper.CreateCommand(SQLConnectionBD, DatabaseOwner + ObjectQualifier + "spDMDichVu_Gia_Goi_DT_Finds");
            cmd.CommandTimeout = 18000;

            cmd.CommandType = System.Data.CommandType.StoredProcedure;
            cmd.Parameters.AddWithValue("madt", _madt);
            cmd.Parameters.AddWithValue("qadmin", _qadmin);
            cmd.Parameters.AddWithValue("DK", _DK);
            //cmd.Parameters.AddWithValue("noitt", _noitt);
            IDataReader dt;
            dt = (IDataReader)cmd.ExecuteReader(CommandBehavior.CloseConnection);
            cmd.Dispose();
            cmd = null;
            return dt;
        }
        public override IDataReader FindDMNoiKham(string _DK, Boolean _qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMNoiKham_Finds", _DK, _qadmin));
        }
        public override IDataReader FindDMNoiTT(string _DK, Boolean _qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMNoiTT_Finds", _DK, _qadmin));
        }
        public override IDataReader FindDMKetQua(string _DK, Boolean _qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMKetQua_Finds", _DK, _qadmin));
        }
        public override IDataReader FindDMLoaiBA(string _DK, Boolean _qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMLoaiBA_Finds", _DK, _qadmin));
        }
        public override IDataReader FindDMLDTVong(string _DK, Boolean _qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMLDTVong_Finds", _DK, _qadmin));
        }
        public override IDataReader FindDMTGTVong(string _DK, Boolean _qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMTGTVong_Finds", _DK, _qadmin));
        }
        public override IDataReader FindDMTGBThuong(string _DK, Boolean _qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMTGBThuong_Finds", _DK, _qadmin));
        }
        public override IDataReader FindDMLoaiBN(string _DK, Boolean _qadmin)
        {
            //  return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMLoaiBN_Finds", _DK, _qadmin));
            System.Data.SqlClient.SqlCommand cmd = SqlHelper.CreateCommand(SQLConnectionBD, DatabaseOwner + ObjectQualifier + "spDMLoaiBN_Finds");
            cmd.CommandTimeout = 18000;

            cmd.CommandType = System.Data.CommandType.StoredProcedure;
            //cmd.Parameters.AddWithValue("tungay", tungay);
            //cmd.Parameters.AddWithValue("denngay", denngay);
            //cmd.Parameters.AddWithValue("maKhoa", maKhoa);
            //cmd.Parameters.AddWithValue("loai", loai);
            cmd.Parameters.AddWithValue("DK", _DK);
            cmd.Parameters.AddWithValue("qadmin", _qadmin);
            IDataReader dt;
            dt = (IDataReader)cmd.ExecuteReader(CommandBehavior.CloseConnection);
            cmd.Dispose();
            cmd = null;
            return dt;
        }
        public override IDataReader FindDMKQDTri(string _DK, Boolean _qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMKQDTri_Finds", _DK, _qadmin));
        }

        public override IDataReader FindDMGPBenh(string _DK, Boolean _qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMGPBenh_Finds", _DK, _qadmin));
        }
        public override IDataReader FindDMVaiTro(string _DK, Boolean _qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMVaiTro_Finds", _DK, _qadmin));
        }
        public override IDataReader FindDMLoiDan(string _DK, Boolean _qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMLoiDan_Finds", _DK, _qadmin));
        }
        public override IDataReader FindDMDichVu_Goi(string _DK, string _madt, Boolean _qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMDichVu_Goi_Finds", _DK, _madt, _qadmin));
        }
        #endregion

        #region GetList
        public override IDataReader GetDMDichVu_PhieuIn_C(String _maPhieu, Byte ordernumber)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMDichVu_PhieuIn_C_Get", _maPhieu, ordernumber));
        }
        public override IDataReader GetAllDMDichVu_PhieuIn(bool qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMDichVu_PhieuIn_GetAll", qadmin));
        }
        public override IDataReader GetDMDichVu_PhieuIn(String _maPhieu, Boolean _qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMDichVu_PhieuIn_Get", _maPhieu, _qadmin));
        }
        public override IDataReader GetAllDMDichVu(bool qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMDichVu_GetAll", qadmin));
        }
        public override IDataReader GetDMDichVu(String _maDV)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMDichVu_Get", _maDV));
        }
        public override IDataReader GetAllDMNhomDV(bool qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMNhomDV_GetAll", qadmin));
        }
        public override IDataReader GetDMNhomDV(String _maNhomDV)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMNhomDV_Get", _maNhomDV));
        }
        public override IDataReader GetDMDichVu_BC_C(String _maPhieu, Byte ordernumber)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMDichVu_PhieuIn_C_Get", _maPhieu, ordernumber));
        }
        public override IDataReader GetAllDMDichVu_BC(bool qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMDichVu_BC_GetAll", qadmin));
        }
        public override IDataReader GetDMDichVu_BC(String _maPhieu, Boolean _qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMDichVu_BC_Get", _maPhieu, _qadmin));
        }
        public override IDataReader GetAllDMDichVu_MaHoa(string MaDV, bool qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMDichVu_MaHoa_GetAll", MaDV, qadmin));
        }
        public override IDataReader GetDMDichVu_MaHoa(String _maFile)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMDichVu_MaHoa_Get", _maFile));
        }
        public override IDataReader GetAllDMDichVu_PhieuHen(string MaDV, bool qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMDichVu_PhieuHen_GetAll", MaDV, qadmin));
        }
        public override IDataReader GetDMDichVu_PhieuHen(String _maPH)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMDichVu_PhieuHen_Get", _maPH));
        }
        public override IDataReader GetAllDMDichVu_CS(string MaCS, bool qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMDichVu_CS_GetAll", MaCS, qadmin));
        }
        public override IDataReader GetDMDichVu_CS(String _maCS)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMDichVu_CS_Get", _maCS));
        }
        public override IDataReader GetAllDMDichVu_CS_KQ(string MaCS_KQ, bool qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMDichVu_CS_KQ_GetAll", MaCS_KQ, qadmin));
            //System.Data.SqlClient.SqlCommand cmd = SqlHelper.CreateCommand(SQLConnectionBD, DatabaseOwner + ObjectQualifier + "spDMDichVu_CS_KQ_GetAll");
            //cmd.CommandTimeout = 18000;

            //cmd.CommandType = System.Data.CommandType.StoredProcedure;
            ////cmd.Parameters.AddWithValue("tungay", tungay);
            ////cmd.Parameters.AddWithValue("denngay", denngay);
            ////cmd.Parameters.AddWithValue("maKhoa", maKhoa);
            ////cmd.Parameters.AddWithValue("loai", loai);
            //cmd.Parameters.AddWithValue("MaCS_KQ", MaCS_KQ);
            //cmd.Parameters.AddWithValue("qadmin", qadmin);
            //IDataReader dt;
            //dt = (IDataReader)cmd.ExecuteReader(CommandBehavior.CloseConnection);
            //cmd.Dispose();
            //cmd = null;
            //return dt;
        }
        public override IDataReader GetDMDichVu_CS_KQ(String _maCS_KQ)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMDichVu_CS_KQ_Get", _maCS_KQ));
        }
        public override IDataReader GetDMDichVu_Nhom(String _maCS, string madv)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMDichVu_Nhom_Get", _maCS, madv));
        }
        public override IDataReader GetAllDMDichVu_Nhom(String maDT, bool qadmin, String Dk)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMDichVu_Nhom_GETALL", maDT, qadmin, Dk));
        }
        public override IDataReader GetAllDMDichVu_NhomFilter(String maDT, String Dk, String DkFilter, bool qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMDichVu_NhomFilter_GETALL", maDT, Dk, DkFilter, qadmin));
        }
        public override IDataReader GetDMDichVu_Gia(String _maCS, Decimal sTT)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMDichVu_Gia_Get", _maCS, sTT));
        }
        public override IDataReader GetAllDMDichVu_Gia(String maDT, bool qadmin, String Dk)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMDichVu_GIa_GETALL", maDT, qadmin, Dk));
        }
        public override IDataReader GetAllDMDichVu_GiaFilter(String maDT, String Dk, String DkFilter, bool qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMDichVu_GIaFilter_GETALL", maDT, Dk, DkFilter, qadmin));
        }
        public override IDataReader GetAllDMDichVu_Goi(String maDT, bool qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMDichVu_GOI_GETALL", maDT, qadmin));
        }
        public override IDataReader GetDMDichVu_Gia_DT(String _maCS, Decimal sTT)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMDichVu_Gia_DT_Get", _maCS, sTT));
        }
        public override IDataReader GetAllDMDichVu_Gia_DT(String maDT, bool qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMDichVu_GIA_DT_GETALL", maDT, qadmin));
        }
        public override IDataReader GetAllDMDichVu_Gia_Goi_DT(String maDT, bool qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMDichVu_GIA_DT_GETALL", maDT, qadmin));
        }
        public override IDataReader GetDMKhoa_STTBenhNhan(String maDV, SmartDate ngayDK, String maKhoa)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMKHOA_GetSTTBN", maDV, ngayDK, maKhoa));
        }
        public override IDataReader GetAllDMKhoa_STTBenhNhan(String maDV, SmartDate ngayDK)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMKHOA_GetsSTTBN", maDV, ngayDK));
        }
        public override IDataReader GetDMDichVu_VT(String _maVT, Byte _sTT, String _maDV)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMDICHVU_VT_GEt", _maVT, _sTT, _maDV));
        }
        public override IDataReader GetAllDMDichVu_VT(String _maDV, Boolean qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMDICHVU_VT_GETAll", _maDV, qadmin));
        }
        public override IDataReader GetDMDichVu_HC(String _maHC, Byte _sTT, String _maDV)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMDICHVU_HC_GEt", _maHC, _sTT, _maDV));
        }
        public override IDataReader GetAllDMDichVu_HC(String _maDV, Boolean qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMDICHVU_HC_GETAll", _maDV, qadmin));
        }
        public override IDataReader GetDMDichVu_Thuoc(String _maThuoc, Byte _sTT, String _maDV)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMDICHVU_Thuoc_GEt", _maThuoc, _sTT, _maDV));
        }
        public override IDataReader GetAllDMDichVu_Thuoc(String _maDV, Boolean qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMDICHVU_Thuoc_GETAll", _maDV, qadmin));
        }
        public override IDataReader GetDMNoiKham(String _maNoiKham)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMNoiKham_Get", _maNoiKham));
        }
        public override IDataReader GetAllDMNoiKham(Boolean _qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMNoiKham_GetAll", _qadmin));
        }
        public override IDataReader GetDMKetQua(String _maNoiKham)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMKetQua_Get", _maNoiKham));
        }
        public override IDataReader GetAllDMKetQua(Boolean _qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMKetQua_GetAll", _qadmin));
        }
        public override IDataReader GetAllDMQuay(Boolean _qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMQuay_GetAll", _qadmin));
        }
        public override IDataReader GetDMNoiTT(String _maNoiKham)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMNoiTT_Get", _maNoiKham));
        }
        public override IDataReader GetAllDMNoiTT(Boolean _qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMNoiTT_GetAll", _qadmin));
        }
        public override IDataReader GetDMLoaiBA(String _maLoaiBA)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMLoaiBA_Get", _maLoaiBA));
        }
        public override IDataReader GetAllDMLoaiBA(Boolean _qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMLoaiBA_GetAll", _qadmin));
        }
        public override IDataReader GetAllDMTinhHoanVT(Boolean _qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMTinhHoanVT_GetAll", _qadmin));
        }
        public override IDataReader GetAllDMTinhHoanMT(Boolean _qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMTinhHoanMT_GetAll", _qadmin));
        }
        public override IDataReader GetAllDMTinhHoanTT(Boolean _qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMTinhHoanTT_GetAll", _qadmin));
        }
        public override IDataReader GetAllDMTinhHoanMD(Boolean _qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMTinhHoanMD_GetAll", _qadmin));
        }
        public override IDataReader GetAllDMNgoiThai(Boolean _qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMNgoiThai_GetAll", _qadmin));
        }
        public override IDataReader GetDMGPBenh(String _maGPBenh)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMGPBenh_Get", _maGPBenh));
        }
        public override IDataReader GetAllDMGPBenh(Boolean _qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMGPBenh_GetAll", _qadmin));
        }
        public override IDataReader GetDMKQDTri(String _maKQDTri)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMKQDTri_Get", _maKQDTri));
        }
        public override IDataReader GetAllDMKQDTri(Boolean _qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMKQDTri_GetAll", _qadmin));
        }
        public override IDataReader GetDMLDTVong(String _maLDTVong)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMLDTVong_Get", _maLDTVong));
        }
        public override IDataReader GetAllDMLDTVong(Boolean _qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMLDTVong_GetAll", _qadmin));
        }
        public override IDataReader GetDMTGTVong(String _maTGTVong)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMTGTVong_Get", _maTGTVong));
        }
        public override IDataReader GetAllDMTGTVong(Boolean _qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMTGTVong_GetAll", _qadmin));
        }
        public override IDataReader GetDMTGBThuong(String _maTGBThuong)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMTGBThuong_Get", _maTGBThuong));
        }
        public override IDataReader GetAllDMTGBThuong(Boolean _qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMTGBThuong_GetAll", _qadmin));
        }
        public override IDataReader GetDMLoaiBN(String _maLoaiBN)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMLoaiBN_Get", _maLoaiBN));
        }
        public override IDataReader GetAllDMLoaiBN(Boolean _qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMLoaiBN_GetAll", _qadmin));
        }
        public override IDataReader GetDMVaiTro(Byte _maVaiTro)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMVaiTro_Get", _maVaiTro));
        }
        public override IDataReader GetAllDMVaiTro(Byte _loai, Boolean _qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMVaiTro_GetAll", _loai, _qadmin));
        }
        public override IDataReader GetDMLoiDan(String _maLoiDan)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMLoiDan_Get", _maLoiDan));
        }
        public override IDataReader GetAllDMLoiDan(Byte _loai, Boolean _qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMLoiDan_GetAll", _loai, _qadmin));
        }
        #endregion

        #region DM Dich vu Phieu in
        public override String InsertDMDichVu_PhieuIn(String _tenPhieu, String _ghichu, string _maMay, String _nguoiLap)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMDichVu_PhieuIn_CREATE", _tenPhieu, _ghichu, _maMay, _nguoiLap));
        }
        public override void UpdateDMDichVu_PhieuIn(String _maPhieu, String _tenPhieu, String _ghichu, string _maMay, Boolean _huy, String _nguoiSD)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMDichVu_PhieuIn_UPDATE", _maPhieu, _tenPhieu, _ghichu, _maMay, _huy, _nguoiSD);
        }
        public override void DeleteDMDichVu_PhieuIn(String _maMay, String _nguoiSD, String _maPhieu)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMDichVu_PhieuIn_DELETED", _maMay, _nguoiSD, _maPhieu);
        }
        #endregion

        #region DM Dich vu Phieu in chi tiet
        public override String InsertDMDichVu_PhieuIn_C(String _maPhieu, String _maDV, string _maMay, String _nguoiSD)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMDichVu_PhieuIn_C_CREATE", _maPhieu, _maDV, _maMay, _nguoiSD));
        }
        public override void UpdateDMDichVu_PhieuIn_C(String _maPhieu, String _maDV, string _maMay, bool _huy, String _nguoiSD, Byte _OrderNumber)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMDichVu_PhieuIn_C_UPDATE", _maPhieu, _maDV, _maMay, _huy, _nguoiSD, _OrderNumber);
        }
        public override void DeleteDMDichVu_PhieuIn_C(String _maMay, String _nguoiSD, String _maPhieu, Byte _OrderNumber)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMDichVu_PhieuIn_C_DELETED", _maMay, _nguoiSD, _maPhieu, _OrderNumber);
        }
        #endregion

        #region DM Dich vu
        public override String InsertDMDichVu(string kytu, String _maNhomDV, String _tenDV, String _tenTA, string _maBYTe, string _QuyetDinh, string _tenTMBH, Boolean _nhapSL, String _tenTat, String _soTban, String _maLH, Decimal _dongiaTT, Decimal _dongiaTT1, SmartDate _ngayTT1, String _makhoa, String _makhoa087, String _makhoaNG, String _makhoaLM, String _makhoaLM087, String _makhoaLMNG, String _makhth, String _machuyenkhoa, String _machungloai, Byte _loai, Byte _noiThucHien, String _maCQ, String _maBenhPham, Boolean _KTCao, String _chisocaoNu, String _chisocaoNam, String _chisothapNu, String _chisothapNam, String _donvi, Boolean _ApdungGoi, Boolean _DichvuGui, Byte _loaiKQ, String _formSudung, String _formSudung087, Decimal _hoahong, Decimal _gthoahong, Boolean _tToanSau, Boolean _tToanNgay, Boolean _bCThu, Boolean _inThu, String _ghichu, string _maMay, String _nguoiLap, Boolean _LayMauTT, bool _apdungpk, bool _apdungnt, bool _apdungnk, bool _apdungsuagia, string _maloaiTT, string _MaBH, string _MaTDuong, string _QuyetDinhBH, string _TenBYTe, string _maCSBH, string _tenCSBH, string _mamayxnbh)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMDichVu_CREATE1", kytu, _maNhomDV, _tenDV, _tenTA, _maBYTe, _QuyetDinh, _tenTMBH, _nhapSL, _tenTat, _soTban, _maLH, _dongiaTT, _dongiaTT1, _ngayTT1.DBValue, _makhoa, _makhoa087, _makhoaNG, _makhoaLM, _makhoaLM087, _makhoaLMNG, _makhth, _machuyenkhoa, _machungloai, _loai, _noiThucHien, _maCQ, _maBenhPham, _KTCao, _chisocaoNu, _chisocaoNam, _chisothapNu, _chisothapNam, _donvi, _ApdungGoi, _DichvuGui, _loaiKQ, _formSudung, _formSudung087, _hoahong, _gthoahong, _tToanSau, _tToanNgay, _bCThu, _inThu, _ghichu, _maMay, _nguoiLap, _LayMauTT, _apdungpk, _apdungnt, _apdungnk, _apdungsuagia, _maloaiTT, _MaBH, _MaTDuong, _QuyetDinhBH, _TenBYTe, _maCSBH,  _tenCSBH,  _mamayxnbh));
        }
        public override void UpdateDMDichVu(String _maDV, String _maNhomDV, String _tenDV, String _tenTA, string _maBYTe, string _QuyetDinh, string _tenTMBH, Boolean _nhapSL, String _tenTat, String _soTban, String _maLH, Decimal _dongiaTT, Decimal _dongiaTT1, SmartDate _ngayTT1, String _makhoa, String _makhoa087, String _makhoaNG, String _makhoaLM, String _makhoaLM087, String _makhoaLMNG, String _makhth, String _machuyenkhoa, String _machungloai, Byte _loai, Byte _noiThucHien, String _maCQ, String _maBenhPham, Boolean _KTCao, String _chisocaoNu, String _chisocaoNam, String _chisothapNu, String _chisothapNam, String _donvi, Boolean _ApdungGoi, Boolean _DichvuGui, Byte _loaiKQ, String _formSudung, String _formSudung087, Decimal _hoahong, Decimal _gthoahong, Boolean _tToanSau, Boolean _tToanNgay, Boolean _bCThu, Boolean _inThu, String _ghichu, string _maMay, String _nguoiSD, Boolean _huy, Boolean _LayMauTT, bool _apdungpk, bool _apdungnt, bool _apdungnk, bool _apdungsuagia, string _maloaiTT, string _MaBH, string _MaTDuong, string _QuyetDinhBH, string _TenBYTe, string _maCSBH, string _tenCSBH, string _mamayxnbh)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMDichVu_UPDATE1", _maDV, _maNhomDV, _tenDV, _tenTA, _maBYTe, _QuyetDinh, _tenTMBH, _nhapSL, _tenTat, _soTban, _maLH, _dongiaTT, _dongiaTT1, _ngayTT1.DBValue, _makhoa, _makhoa087, _makhoaNG, _makhoaLM, _makhoaLM087, _makhoaLMNG, _makhth, _machuyenkhoa, _machungloai, _loai, _noiThucHien, _maCQ, _maBenhPham, _KTCao, _chisocaoNu, _chisocaoNam, _chisothapNu, _chisothapNam, _donvi, _ApdungGoi, _DichvuGui, _loaiKQ, _formSudung, _formSudung087, _hoahong, _gthoahong, _tToanSau, _tToanNgay, _bCThu, _inThu, _ghichu, _maMay, _nguoiSD, _huy, _LayMauTT, _apdungpk, _apdungnt, _apdungnk, _apdungsuagia, _maloaiTT, _MaBH, _MaTDuong, _QuyetDinhBH, _TenBYTe, _maCSBH,  _tenCSBH,  _mamayxnbh);
        }
        public override void DeleteDMDichVu(String _maMay, String _nguoiSD, String _maDV)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMDichVu_DELETED", _maMay, _nguoiSD, _maDV);
        }
        #endregion

        #region DM Loai Dich vu
        public override String InsertDMNhomDV(String _tenLOAIDV, String _tentat, String _maBenhpham, string _maMay, String _nguoiLap, String idparent, String machungloai, String tenta)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMNhomDV_CREATE", _tenLOAIDV, _tentat, _maBenhpham, _maMay, _nguoiLap, idparent, machungloai, tenta));
        }
        public override void UpdateDMNhomDV(String _maLOAIDV, String _tenLOAIDV, String _tentat, String _maBenhpham, string _maMay, Boolean _huy, String _nguoiSD, String machungloai, String tenta)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMNhomDV_UPDATE", _maLOAIDV, _tenLOAIDV, _tentat, _maBenhpham, _maMay, _huy, _nguoiSD, machungloai, tenta);
        }
        public override void DeleteDMNhomDV(String _maMay, String _nguoiSD, string _maLOAIDV)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMNhomDV_DELETED", _maMay, _nguoiSD, _maLOAIDV);
        }
        #endregion

        #region DM Dich vu Bao cao
        public override String InsertDMDichVu_BC(String _tenBC, Byte _loai, String _ghichu, string _maMay, String _nguoiLap)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMDichVu_BC_CREATE", _tenBC, _loai, _ghichu, _maMay, _nguoiLap));
        }
        public override void UpdateDMDichVu_BC(String _maBC, String _tenBC, Byte _loai, String _ghichu, string _maMay, Boolean _huy, String _nguoiSD)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMDichVu_BC_UPDATE", _maBC, _tenBC, _loai, _ghichu, _maMay, _huy, _nguoiSD);
        }
        public override void DeleteDMDichVu_BC(String _maMay, String _nguoiSD, String _maPhieu)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMDichVu_BC_DELETED", _maMay, _nguoiSD, _maPhieu);
        }
        #endregion

        #region DM Dich vu Bao cao chi tiet
        public override String InsertDMDichVu_BC_C(String _maBC, String _maDV, string _maMay, String _nguoiSD)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMDichVu_BC_C_CREATE", _maBC, _maDV, _maMay, _nguoiSD));
        }
        public override void UpdateDMDichVu_BC_C(String _maBC, String _maDV, string _maMay, bool _huy, String _nguoiSD, Byte _OrderNumber)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMDichVu_BC_C_UPDATE", _maBC, _maDV, _maMay, _huy, _nguoiSD, _OrderNumber);
        }
        public override void DeleteDMDichVu_BC_C(String _maMay, String _nguoiSD, String _maBC, Byte _OrderNumber)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMDichVu_BC_C_DELETED", _maMay, _nguoiSD, _maBC, _OrderNumber);
        }
        #endregion

        #region DM Dich vu Ma hoa
        public override String InsertDMDichVu_MaHoa(String _maDV, String _tenHT, Byte[] _fileMau, String _kq, String _ghichu, string _maMay, String _nguoiSD, String _maloai, String _NoiDungKQ)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMDICHVU_MAHOA_CREATE", _maDV, _tenHT, _fileMau, _kq, _ghichu, _maMay, _nguoiSD, _maloai, _NoiDungKQ));
        }
        public override void UpdateDMDichVu_MaHoa(String _maFile, String _maDV, String _tenHT, Byte[] _fileMau, String _kq, String _ghichu, string _maMay, String _nguoiSD, Boolean _huy, String _maloai, String _NoiDungKQ)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMDICHVU_MAHOA_UPDATE", _maFile, _maDV, _tenHT, _fileMau, _kq, _ghichu, _maMay, _nguoiSD, _huy, _maloai, _NoiDungKQ);
        }
        public override void DeleteDMDichVu_MaHoa(String _maMay, String _nguoiSD, String _maFile)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMDICHVU_MAHOA_DELETED", _maMay, _nguoiSD, _maFile);
        }
        #endregion
        #region DM Dich vu Ma hoa
        public override String InsertDMDichVu_PhieuHen(String _maDV, String _tenHT, String _kq, String _ghichu, string _maMay, String _nguoiSD, String _NoiDungKQ)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMDICHVU_PhieuHen_CREATE", _maDV, _tenHT, _kq, _ghichu, _maMay, _nguoiSD, _NoiDungKQ));
        }
        public override void UpdateDMDichVu_PhieuHen(String _maPH, String _maDV, String _tenHT, String _kq, String _ghichu, string _maMay, String _nguoiSD, Boolean _huy, String _NoiDungKQ)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMDICHVU_PhieuHen_UPDATE", _maPH, _maDV, _tenHT, _kq, _ghichu, _maMay, _nguoiSD, _huy, _NoiDungKQ);
        }
        public override void DeleteDMDichVu_PhieuHen(String _maMay, String _nguoiSD, String _maPH)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMDICHVU_PhieuHen_DELETED", _maMay, _nguoiSD, _maPH);
        }
        #endregion


        #region DM Dich vu Chi so
        public override String InsertDMDichVu_CS(String _maDV, String _tenCS, String _chisocaoNam, String _chisocaoNu, String _chisothapNu, String _chisothapNam, String _chisoin, String _donvi, String _ghichu, int _sttin, string _maCSBH, string _tenCSBH, string _maMay, String _nguoiSD)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMDICHVU_CS_CREATE", _maDV, _tenCS, _chisocaoNam, _chisocaoNu, _chisothapNu, _chisothapNam, _chisoin, _donvi, _ghichu, _sttin,  _maCSBH,  _tenCSBH, _maMay, _nguoiSD));
        }
        public override void UpdateDMDichVu_CS(String _maCS, String _maDV, String _tenCS, String _chisocaoNam, String _chisocaoNu, String _chisothapNu, String _chisothapNam, String _chisoin, String _donvi, String _ghichu, int _sttin, string _maCSBH, string _tenCSBH, string _maMay, String _nguoiSD, Boolean _huy)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMDICHVU_CS_UPDATE", _maCS, _maDV, _tenCS, _chisocaoNam, _chisocaoNu, _chisothapNu, _chisothapNam, _chisoin, _donvi, _ghichu, _sttin, _maCSBH, _tenCSBH, _maMay, _nguoiSD, _huy);
        }
        public override void DeleteDMDichVu_CS(String _maMay, String _nguoiSD, String _maCS)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMDICHVU_CS_DELETED", _maMay, _nguoiSD, _maCS);
        }

        #endregion

        #region DM Dich vu Chi so ket qua
        public override String InsertDMDichVu_CS_KQ(String _maCS, String _maKQ, String _ghichu, string _maMay, String _nguoiSD)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMDichVu_CS_KQ_CREATE", _maCS, _maKQ, _ghichu, _maMay, _nguoiSD));
        }
        public override void UpdateDMDichVu_CS_KQ(String _maKQ, String _maCS, String _maKQCu, String _ghichu, string _maMay, String _nguoiSD, Boolean _huy)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMDichVu_CS_KQ_UPDATE", _maKQ, _maCS, _maKQCu, _ghichu, _maMay, _nguoiSD, _huy);
        }
        public override void DeleteDMDichVu_CS_KQ(String _maMay, String _nguoiSD, String _maCS, String _maKQ)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMDichVu_CS_KQ_DELETED", _maMay, _nguoiSD, _maCS, _maKQ);
        }

        #endregion

        #region DM Dich vu nhom

        public override void InsertDMDichVu_Nhom(String _maDT, String _maDV, String _makhoa, string _maMay, String _nguoiLap)
        {
            System.Data.SqlClient.SqlDataReader dr;
            dr = SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMDichVu_Nhom_CREATE", _maDT, _maDV, _makhoa , _maMay, _nguoiLap);
            dr.Close();
        }

        public override void UpdateDMDichVu_Nhom(String _maDT, String _maDV, String _makhoa,  string _maMay, Boolean _huy, String _nguoiSD)
        {
            //SqlHelper.ExecuteNonQuery( ConnectionString, DatabaseOwner + ObjectQualifier + "spDMDichVu_Nhom_UPDATE", _maDT, _sTT, _maDV, _dongia, _giaChenhlenh, _aDChenhlech, _dTBH, _aDPhongMo, _ghichu, _maMay, _huy, _nguoiSD, _aDGiauSD);
            System.Data.SqlClient.SqlDataReader dr;
            dr = SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMDichVu_Nhom_UPDATE", _maDT,  _maDV ,_makhoa , _maMay, _huy, _nguoiSD);
            dr.Close();
        }
        public override void DeleteDMDichVu_Nhom(String _maMay, String _nguoiSD, String _maDT, String madv)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMDichVu_Nhom_DELETED", _maMay, _nguoiSD, _maDT, madv);
        }

        #endregion
        #region DM Dich vu Gia

        public override void InsertDMDichVu_Gia(String _maDT, String _maDV, Decimal _dongia, Decimal _giaChenhlenh, Boolean _aDChenhlech, Boolean _dTBH, Byte _aDPhongMo, Decimal _dongia1, Decimal _giaChenhlenh1, SmartDate _ngay1, String _ghichu, string _maMay, String _nguoiLap, Boolean _adgiausd)
        {
            System.Data.SqlClient.SqlDataReader dr;
            dr = SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMDichVu_GIA_CREATE", _maDT, _maDV, _dongia, _giaChenhlenh, _aDChenhlech, _dTBH, _aDPhongMo, _dongia1, _giaChenhlenh1, _ngay1.DBValue, _ghichu, _maMay, _nguoiLap, _adgiausd);
            dr.Close();
        }

        public override void UpdateDMDichVu_Gia(String _maDT, Decimal _sTT, String _maDV, Decimal _dongia, Decimal _giaChenhlenh, Boolean _aDChenhlech, Boolean _dTBH, Byte _aDPhongMo, String _ghichu, string _maMay, Boolean _huy, String _nguoiSD, Boolean _aDGiauSD)
        {
            //SqlHelper.ExecuteNonQuery( ConnectionString, DatabaseOwner + ObjectQualifier + "spDMDichVu_GIA_UPDATE", _maDT, _sTT, _maDV, _dongia, _giaChenhlenh, _aDChenhlech, _dTBH, _aDPhongMo, _ghichu, _maMay, _huy, _nguoiSD, _aDGiauSD);
            System.Data.SqlClient.SqlDataReader dr;
            dr = SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMDichVu_GIA_UPDATE", _maDT, _sTT, _maDV, _dongia, _giaChenhlenh, _aDChenhlech, _dTBH, _aDPhongMo, _ghichu, _maMay, _huy, _nguoiSD, _aDGiauSD);
            dr.Close();
        }
        public override void DeleteDMDichVu_Gia(String _maMay, String _nguoiSD, String _maDT, Decimal _sTT)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMDichVu_GIA_DELETED", _maMay, _nguoiSD, _maDT, _sTT);
        }

        #endregion

        #region DM Dich vu Goi
        public override void InsertDMDichVu_Goi(String _maDVGoi, String _maDV, Decimal _soLuong, String _ghichu, String _maMay, String _nguoiSD)
        {
            System.Data.SqlClient.SqlDataReader dr;
            dr = SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMDichVu_Goi_CREATE", _maDVGoi, _maDV, _soLuong, _ghichu, _maMay, _nguoiSD);
            dr.Close();

        }

        public override void UpdateDMDichVu_Goi(String _maDVGoi, Byte _sTT, String _maDV, Decimal _soLuong, String _ghichu, String _maMay, String _nguoiSD, Boolean _huy)
        {
            System.Data.SqlClient.SqlDataReader dr;
            dr = SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMDichVu_Goi_UPDATE", _maDVGoi, _sTT, _maDV, _soLuong, _ghichu, _maMay, _nguoiSD, _huy);
            dr.Close();
        }

        public override void DeleteDMDichVu_Goi(String _maMay, String _nguoiSD, String _maDVGoi, byte _sTT)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMDichVu_Goi_DELETED", _maMay, _nguoiSD, _maDVGoi, _sTT);
        }

        #endregion

        #region DM Dich vu Vat tu
        public override Byte InsertDMDichVu_VT(String _maVT, String _maDV, Decimal _soluong, String _ghichu, string _maMay, String _nguoiSD)
        {
            return System.Convert.ToByte(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMDICHVU_VT_CREATE", _maVT, _maDV, _soluong, _ghichu, _maMay, _nguoiSD));
        }
        public override void UpdateDMDichVu_VT(String _maVT, Byte _sTT, String _maDV, Decimal _soluong, String _ghichu, string _maMay, Boolean _huy, String _nguoiSD)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMDICHVU_VT_UPDATE", _maVT, _sTT, _maDV, _soluong, _ghichu, _maMay, _huy, _nguoiSD);
        }
        public override void DeleteDMDichVu_VT(String _maMay, String _nguoiSD, Byte _sTT, String _maDV, String _maVT)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMDICHVU_VT_DELETED", _maMay, _nguoiSD, _sTT, _maDV, _maVT);
        }
        #endregion

        #region DMMayXN
        public override IDataReader GetDMMayXN(String _tendmmayxnxn)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMMayXN_Get", _tendmmayxnxn));
        }
        public override IDataReader GetAllDMMayXN()
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMMayXN_GetAll"));
        }
        public override IDataReader FindDMMayXN(String _DK, Boolean qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMMayXN_Finds", _DK, qadmin));
        }
        public override String InsertDMMayXN(String _tendmmayxn, String _maKhoa, String _ip, string _mamaySD, String _nguoiSD)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMMayXN_CREATE", _tendmmayxn, _maKhoa, _ip, _mamaySD, _nguoiSD));
        }
        public override void UpdateDMMayXN(String _tendmmayxnxn, String _tendmmayxn, String _maKhoa, String _ip, string _mamaySD, String _nguoiSD)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMMayXN_UPDATE", _tendmmayxnxn, _tendmmayxn, _maKhoa, _ip, _mamaySD, _nguoiSD);
        }
        public override void DeleteDMMayXN(String _mamaySD, String _nguoiSD, string _tendmmayxnxn)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMMayXN_DELETE", _mamaySD, _nguoiSD, _tendmmayxnxn);
        }

        #endregion
        #region DM Dich vu HOA  CHAT
        public override Byte InsertDMDichVu_HC(String _maHC, String _maDV, Decimal _soluong, String _ghichu, string _maMay, String _nguoiSD, String tenmayxn)
        {
            return System.Convert.ToByte(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMDICHVU_HC_CREATE", _maHC, _maDV, _soluong, _ghichu, _maMay, _nguoiSD, tenmayxn));
        }
        public override void UpdateDMDichVu_HC(String _maHC, Byte _sTT, String _maDV, Decimal _soluong, String _ghichu, string _maMay, Boolean _huy, String _nguoiSD, String tenmayxn)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMDICHVU_HC_UPDATE", _maHC, _sTT, _maDV, _soluong, _ghichu, _maMay, _huy, _nguoiSD, tenmayxn);
        }
        public override void DeleteDMDichVu_HC(String _maMay, String _nguoiSD, Byte _sTT, String _maDV, String _maHC)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMDICHVU_HC_DELETED", _maMay, _nguoiSD, _sTT, _maDV, _maHC);
        }
        #endregion
        #region DM Dich vu thuoc
        public override Byte InsertDMDichVu_Thuoc(String _maThuoc, String _maDV, Decimal _soluong, String _ghichu, string _maMay, String _nguoiSD)
        {
            return System.Convert.ToByte(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMDICHVU_Thuoc_CREATE", _maThuoc, _maDV, _soluong, _ghichu, _maMay, _nguoiSD));
        }
        public override void UpdateDMDichVu_Thuoc(String _maThuoc, Byte _sTT, String _maDV, Decimal _soluong, String _ghichu, string _maMay, Boolean _huy, String _nguoiSD)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMDICHVU_Thuoc_UPDATE", _maThuoc, _sTT, _maDV, _soluong, _ghichu, _maMay, _huy, _nguoiSD);
        }
        public override void DeleteDMDichVu_Thuoc(String _maMay, String _nguoiSD, Byte _sTT, String _maDV, String _maThuoc)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMDICHVU_Thuoc_DELETED", _maMay, _nguoiSD, _sTT, _maDV, _maThuoc);
        }
        #endregion
        #region DMNoiKham
        public override String InsertDMNoiKham(String _tenPL, String _ghiChu, string _maMay, String _nguoiSD)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMNoiKham_CREATE", _tenPL, _ghiChu, _maMay, _nguoiSD));
        }
        public override void UpdateDMNoiKham(String _maPL, String _tenPL, String _ghiChu, string _maMay, Boolean _huy, String _nguoiSD)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMNoiKham_UPDATE", _maPL, _tenPL, _ghiChu, _maMay, _huy, _nguoiSD);
        }
        public override void DeleteDMNoiKham(String _maMay, String _nguoiSD, String _maPL)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMNoiKham_DELETED", _maMay, _nguoiSD, _maPL);
        }
        #endregion
        #region DMKetQua
        public override String InsertDMKetQua(String _tenPL, String _ghiChu, string _maMay, String _nguoiSD)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMKetQua_CREATE", _tenPL, _ghiChu, _maMay, _nguoiSD));
        }
        public override void UpdateDMKetQua(String _maPL, String _tenPL, String _ghiChu, string _maMay, Boolean _huy, String _nguoiSD)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMKetQua_UPDATE", _maPL, _tenPL, _ghiChu, _maMay, _huy, _nguoiSD);
        }
        public override void DeleteDMKetQua(String _maMay, String _nguoiSD, String _maPL)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMKetQua_DELETED", _maMay, _nguoiSD, _maPL);
        }
        #endregion
        #region DMNoiTT
        public override String InsertDMNoiTT(String _tenPL, String _ghiChu, string _maMay, String _nguoiSD)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMNoiTT_CREATE", _tenPL, _ghiChu, _maMay, _nguoiSD));
        }
        public override void UpdateDMNoiTT(String _maPL, String _tenPL, String _ghiChu, string _maMay, Boolean _huy, String _nguoiSD)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMNoiTT_UPDATE", _maPL, _tenPL, _ghiChu, _maMay, _huy, _nguoiSD);
        }
        public override void DeleteDMNoiTT(String _maMay, String _nguoiSD, String _maPL)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMNoiTT_DELETED", _maMay, _nguoiSD, _maPL);
        }
        #endregion
        #region DMLoaiBA
        public override String InsertDMLoaiBA(String _tenPL, String _ghiChu, string _maMay, String _nguoiSD)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMLoaiBA_CREATE", _tenPL, _ghiChu, _maMay, _nguoiSD));
        }
        public override void UpdateDMLoaiBA(String _maPL, String _tenPL, String _ghiChu, string _maMay, String _nguoiSD, Boolean _huy)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMLoaiBA_UPDATE", _maPL, _tenPL, _ghiChu, _maMay, _nguoiSD, _huy);
        }
        public override void DeleteDMLoaiBA(String _maMay, String _nguoiSD, String _maPL)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMLoaiBA_DELETED", _maMay, _nguoiSD, _maPL);
        }
        #endregion

        #region DMGPBenh
        public override String InsertDMGPBenh(String _tenPL, String _ghiChu, string _maMay, String _nguoiSD)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMGPBenh_CREATE", _tenPL, _ghiChu, _maMay, _nguoiSD));
        }
        public override void UpdateDMGPBenh(String _maPL, String _tenPL, String _ghiChu, string _maMay, String _nguoiSD)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMGPBenh_UPDATE", _maPL, _tenPL, _ghiChu, _maMay, _nguoiSD);
        }
        public override void DeleteDMGPBenh(String _maMay, String _nguoiSD, String _maPL)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMGPBenh_DELETED", _maMay, _nguoiSD, _maPL);
        }
        #endregion

      
        #region DMKQDTri
        public override String InsertDMKQDTri(String _tenKQDT, String _ghiChu, string _maMay, String _nguoiSD)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMKQDTri_CREATE", _tenKQDT, _ghiChu, _maMay, _nguoiSD));
        }
        public override void UpdateDMKQDTri(String _maKQDT, String _tenKQDT, String _ghiChu, string _maMay, String _nguoiSD, Boolean _huy)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMKQDTri_UPDATE", _maKQDT, _tenKQDT, _ghiChu, _maMay, _nguoiSD, _huy);
        }
        public override void DeleteDMKQDTri(String _maMay, String _nguoiSD, String _maKQDT)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMKQDTri_DELETED", _maMay, _nguoiSD, _maKQDT);
        }
        #endregion

        #region DMLDTVong
        public override String InsertDMLDTVong(String _tenLDTVong, String _ghiChu, string _maMay, String _nguoiSD)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMLDTVong_CREATE", _tenLDTVong, _ghiChu, _maMay, _nguoiSD));
        }
        public override void UpdateDMLDTVong(String _maLDTVong, String _tenLDTVong, String _ghiChu, string _maMay, String _nguoiSD, Boolean _huy)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMLDTVong_UPDATE", _maLDTVong, _tenLDTVong, _ghiChu, _maMay, _nguoiSD, _huy);
        }
        public override void DeleteDMLDTVong(String _maMay, String _nguoiSD, String _maLDTVong)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMLDTVong_DELETED", _maMay, _nguoiSD, _maLDTVong);
        }
        #endregion

        #region DMTGTVong
        public override String InsertDMTGTVong(String _tenPL, String _ghiChu, string _maMay, String _nguoiSD)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMTGTVong_CREATE", _tenPL, _ghiChu, _maMay, _nguoiSD));
        }
        public override void UpdateDMTGTVong(String _maPL, String _tenPL, String _ghiChu, string _maMay, String _nguoiSD, Boolean _huy)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMTGTVong_UPDATE", _maPL, _tenPL, _ghiChu, _maMay, _nguoiSD, _huy);
        }
        public override void DeleteDMTGTVong(String _maMay, String _nguoiSD, String _maPL)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMTGTVong_DELETED", _maMay, _nguoiSD, _maPL);
        }
        #endregion
        #region DMLoaiBN
        public override String InsertDMLoaiBN(String _tenPL, String _ghiChu, string _maMay, String _nguoiSD)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMLoaiBN_CREATE", _tenPL, _ghiChu, _maMay, _nguoiSD));
        }
        public override void UpdateDMLoaiBN(String _maPL, String _tenPL, String _ghiChu, string _maMay, String _nguoiSD, Boolean _huy)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMLoaiBN_UPDATE", _maPL, _tenPL, _ghiChu, _maMay, _nguoiSD, _huy);
        }
        public override void DeleteDMLoaiBN(String _maMay, String _nguoiSD, String _maPL)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMLoaiBN_DELETED", _maMay, _nguoiSD, _maPL);
        }
        #endregion
        #region DMTGBThuong
        public override String InsertDMTGBThuong(String _tenPL, String _ghiChu, string _maMay, String _nguoiSD)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMTGBThuong_CREATE", _tenPL, _ghiChu, _maMay, _nguoiSD));
        }
        public override void UpdateDMTGBThuong(String _maPL, String _tenPL, String _ghiChu, string _maMay, String _nguoiSD, Boolean _huy)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMTGBThuong_UPDATE", _maPL, _tenPL, _ghiChu, _maMay, _nguoiSD, _huy);
        }
        public override void DeleteDMTGBThuong(String _maMay, String _nguoiSD, String _maPL)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMTGBThuong_DELETED", _maMay, _nguoiSD, _maPL);
        }
        #endregion
        #region DMVaiTro
        public override byte InsertDMVaiTro(String _tenVaiTro, string _ghichu, string _maMay, int _loai, String _nguoiSD, String _tenta)
        {
            return System.Convert.ToByte(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMVaiTro_CREATE", _tenVaiTro, _ghichu, _maMay, _loai, _nguoiSD, _tenta));
        }
        public override void UpdateDMVaiTro(Byte _maVaiTro, String _tenVaiTro, string _Ghichu, string _maMay, int _Loai, bool _huy, bool _khongsd, String _nguoiSD, String _tenta)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMVaiTro_UPDATED", _maVaiTro, _tenVaiTro, _Ghichu, _maMay, _Loai, _huy, _khongsd, _nguoiSD, _tenta);
        }
        public override void DeleteDMVaiTro(String _maMay, String _nguoiSD, byte _maCC)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMVaiTro_DELETED", _maMay, _nguoiSD, _maCC);
        }
        #endregion

        #region DM Loi dan
        public override String InsertDMLoiDan(String _tenLoiDan, String _tenTA, String _ghichu, String _maMay, Byte _loai, String _nguoiSD)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMLoiDan_CREATE", _tenLoiDan, _tenTA, _ghichu, _maMay, _loai, _nguoiSD));
        }
        public override void UpdateDMLoiDan(String _maLoiDan, String _tenLoiDan, String _tenTA, String _ghichu, String _maMay, Byte _loai, Boolean _huy, bool _khongsd, String _nguoiSD)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMLoiDan_UPDATED", _maLoiDan, _tenLoiDan, _tenTA, _ghichu, _maMay, _loai, _huy, _khongsd, _nguoiSD);
        }
        public override void DeleteDMLoiDan(String _maMay, String _nguoiSD, String _maLoiDan)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMLoiDan_DELETED", _maMay, _nguoiSD, _maLoiDan);
        }
        #endregion
        #endregion
        #region DM CNK
        #region GetList
        public override IDataReader GetDMCNK(String _maVT)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMCNK_GET", _maVT));
        }
        public override IDataReader GetAllDMCNK(Boolean _qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMCNK_GetAll", _qadmin));
        }

        public override IDataReader GetDMCNK_Gia(String madt, String maVT)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMCNK_Gia_Get", madt, maVT));
        }
        public override IDataReader GetAllDMCNK_Gia(String mdt, Boolean qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMCNK_Gia_GetAll", mdt, qadmin));
        }
        public override IDataReader GetDMCNK_KhoKhoa(String _makho, Decimal _sTT, String _makhoa)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMCNK_KhoKhoa_GET", _makho, _sTT, _makhoa));
        }
        public override IDataReader GetAllDMCNK_KhoKhoa(String makho, String makhoa, Boolean qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMCNK_KhoKhoa_GETALL", makho, makhoa, qadmin));
        }
        public override IDataReader GetDMCNKKhoa(String maKhoa, String maDT, String MaVT, byte loai)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMCNK_TON_GETKHOA", maKhoa, maDT, MaVT, loai));
        }
        public override IDataReader GetAllDMCNKKhoa(String maKhoa, String maDT, String DK, byte loai)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMCNK_TON_GETSKHOA", maKhoa, maDT, DK, loai));
        }
        public override IDataReader GetDMCNKTonKho(String maKho, DateTime ngayyclinh, String MaVT)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMCNK_TON_GETKHO", maKho, ngayyclinh, MaVT));
        }
        public override IDataReader GetAllDMCNKTonKho(String maKho, DateTime ngayyclinh, String DK)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMCNK_TON_GETSKHO", maKho, ngayyclinh, DK));
        }


        public override IDataReader GetAllDMCNKTonKhoHD(String maKho, DateTime ngayyclinh, String DK)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMCNK_TONHD_GETSKHO", maKho, ngayyclinh, DK, "", null));
        }
        public override IDataReader GetDMCNKTonKhoHD(String maKho, DateTime ngayyclinh, String MaVT, string solo)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMCNK_TONHD_GETKHO", maKho, ngayyclinh, MaVT, solo));
        }
        public override IDataReader GetAllDMCNKTonKhoHD(String maKho, DateTime ngayyclinh, String DK, string solo)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMCNK_TONHD_GETSKHO", maKho, ngayyclinh, DK, solo));
        }
        #endregion

        #region Find List
        public override IDataReader FindDMCNK(string _DK, Boolean _qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMCNK_Finds", _DK, _qadmin));
        }


        #endregion
        #region DMNCNK
        public override String InsertDMCNK(String _maNhom, String _maChungLoai, String _tenTM, String _tenTA, String _maNSX, Decimal _nguong, String _maDVT, Boolean _apDungGoi, Boolean _handung, String _khoban, String _khophat, Boolean _vTThuT, Boolean _vTPhauT, Boolean _vTCLS, Boolean _vTDuoc, Boolean _vTBan, Boolean _duyetNgoaiT, Boolean _duyetNoiT, String _ghichu, string _maMay, String _nguoiLap, Boolean _vTNoiT, String _maLH, String _hamluong, String _madvthl, Boolean KhongSD, String _maql, string _quycach)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMCNK_CREATE", _maNhom, _maChungLoai, _tenTM, _tenTA, _maNSX, _nguong, _maDVT, _apDungGoi, _handung, _khoban, _khophat, _vTThuT, _vTPhauT, _vTCLS, _vTDuoc, _vTBan, _duyetNgoaiT, _duyetNoiT, _ghichu, _maMay, _nguoiLap, _vTNoiT, _maLH, _hamluong, _madvthl, KhongSD, _maql, _quycach));
        }
        public override void UpdateDMCNK(String _maVT, String _maNhom, String _maChungLoai, String _tenTM, String _tenTA, String _maNSX, Decimal _nguong, String _maDVT, Boolean _apDungGoi, Boolean _handung, String _khoban, String _khophat, Boolean _vTThuT, Boolean _vTPhauT, Boolean _vTCLS, Boolean _vTDuoc, Boolean _vTBan, Boolean _duyetNgoaiT, Boolean _duyetNoiT, String _ghichu, string _maMay, Boolean _huy, String _nguoiSD, Boolean _vTNoiT, String _maLH, String _hamluong, String _madvthl, Boolean KhongSD, String _maql, string _quycach)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMCNK_UPDATE", _maVT, _maNhom, _maChungLoai, _tenTM, _tenTA, _maNSX, _nguong, _maDVT, _apDungGoi, _handung, _khoban, _khophat, _vTThuT, _vTPhauT, _vTCLS, _vTDuoc, _vTBan, _duyetNgoaiT, _duyetNoiT, _ghichu, _maMay, _huy, _nguoiSD, _vTNoiT, _maLH, _hamluong, _madvthl, KhongSD, _maql, _quycach);
        }
        public override void DeleteDMCNK(String _maMay, String _nguoiSD, String _maVT)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMCNK_DELETED", _maMay, _nguoiSD, _maVT);
        }
        #endregion

        #region DMCNK_Gia
        public override void InsertDMCNK_Gia(String _maDT, String _maVT, Decimal _donGiaBH, Decimal _donGiaThuT, Decimal _donGiaPhauT, Decimal _donGiaCLS, Decimal _giaChenhlech, Boolean _aDChenhlech, Boolean _DTBH, Byte _aDPhongMo, Decimal _donGia1, Decimal _giaChenhlech1, DateTime _ngay1, String _ghichu, string _maMay, String _nguoiLap)
        {
            //return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMCNK_Gia_CREATE", _maDT, _maVT, _donGiaBH, _donGiaThuT, _donGiaPhauT, _donGiaCLS, _giaChenhlech, _aDChenhlech, _DTBH, _aDPhongMo, _donGia1, _giaChenhlech1, _ngay1, _ghichu, _maMay, _nguoiLap));
            System.Data.SqlClient.SqlDataReader dr;
            dr = SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMCNK_Gia_CREATE", _maDT, _maVT, _donGiaBH, _donGiaThuT, _donGiaPhauT, _donGiaCLS, _giaChenhlech, _aDChenhlech, _DTBH, _aDPhongMo, _donGia1, _giaChenhlech1, _ngay1, _ghichu, _maMay, _nguoiLap);
            dr.Close();
        }
        public override void UpdateDMCNK_Gia(String _maDT, Decimal _STT, String _maVT, Decimal _donGiaBH, Decimal _donGiaThuT, Decimal _donGiaPhauT, Decimal _donGiaCLS, Decimal _giaChenhlech, Boolean _aDChenhlech, Boolean _DTBH, Byte _aDPhongMo, String _ghichu, string _maMay, String _nguoisd, Boolean _huy)
        {
            //SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMCNK_Gia_UPDATE", _maDT, _STT, _maVT, _donGiaBH, _donGiaThuT, _donGiaPhauT, _donGiaCLS, _giaChenhlech, _aDChenhlech, _DTBH, _aDPhongMo, _ghichu, _maMay, _nguoisd, _huy);
            System.Data.SqlClient.SqlDataReader dr;
            dr = SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMCNK_Gia_UPDATE", _maDT, _STT, _maVT, _donGiaBH, _donGiaThuT, _donGiaPhauT, _donGiaCLS, _giaChenhlech, _aDChenhlech, _DTBH, _aDPhongMo, _ghichu, _maMay, _nguoisd, _huy);
            dr.Close();
        }
        public override void DeleteDMCNK_Gia(String _maMay, String _nguoiSD, String _maDT, Decimal stt)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMCNK_Gia_DELETED", _maMay, _nguoiSD, _maDT, stt);
        }
        #endregion
        #region DMCNK_KhoKhoa
        public override String InsertDMCNK_KhoKhoa(String _makho, String _makhoa, String _maVT, String _nguoiSD, string _maMay)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMCNK_KhoKhoa_Create", _makho, _makhoa, _maVT, _nguoiSD, _maMay));
        }
        public override void UpdateDMCNK_KhoKhoa(String _makho, Decimal _sTT, String _makhoa, String _maVT, Boolean _huy, String _nguoiSD, string _maMay)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMCNK_KhoKhoa_Update", _makho, _sTT, _makhoa, _maVT, _huy, _nguoiSD, _maMay);
        }
        public override void DeleteDMCNK_KhoKhoa(String _maMay, String _nguoiSD, String _makho, Decimal _sTT, String _makhoa)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMCNK_KhoKhoa_Deleted", _maMay, _nguoiSD, _makho, _sTT, _makhoa);
        }
        #endregion
        #endregion

        #region DMTinhTrangGiuong
        public override IDataReader GetDMTinhTrangGiuong(String _maTTG)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMTinhTrangGiuong_Get", _maTTG));
        }

        public override IDataReader GetAllDMTinhTrangGiuong()
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMTinhTrangGiuong_GetAll"));
        }
        public override IDataReader FindDMTinhTrangGiuong(string DK, Boolean qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMTinhTrangGiuong_Finds", DK, qadmin));
        }
        public override String InsertDMTinhTrangGiuong(String tenTTG, string maMay, String _nguoiSD)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMTinhTrangGiuong_CREATE", tenTTG, maMay, _nguoiSD));
        }
        public override void UpdateDMTinhTrangGiuong(String maTTG, String tenTTG, string maMay, String nguoiSD)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMTinhTrangGiuong_update", maTTG, tenTTG, maMay, nguoiSD);
        }
        public override void DeleteDMTinhTrangGiuong(String maMay, String nguoiSD, String _maTTG)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMTinhTrangGiuong_Deleted", maMay, nguoiSD, _maTTG);
        }

        #endregion

        #region DM Vat tu
        #region GetList
        public override IDataReader GetDMVTYT(String _maVT)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMVTYT_GET", _maVT));
        }
        public override IDataReader GetAllDMVTYT(Boolean _qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMVTYT_GetAll", _qadmin));
        }

        public override IDataReader GetDMVTYT_Gia(String madt, String maVT)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMVTYT_Gia_Get", madt, maVT));
        }
        public override IDataReader GetAllDMVTYT_Gia(String mdt, Boolean qadmin, String DK)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMVTYT_Gia_GetAll", mdt, qadmin, DK));
        }
        public override IDataReader GetAllDMVTYT_GiaFilter(String mdt, Boolean qadmin, String DK, String DKFilter)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMVTYT_GiaFilter_GetAll", mdt, qadmin, DK, DKFilter));
        }
        public override IDataReader GetDMVTYT_KhoKhoa(String _makho, Decimal _sTT, String _makhoa)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMVTYT_KhoKhoa_GET", _makho, _sTT, _makhoa));
        }
        public override IDataReader GetAllDMVTYT_KhoKhoa(String makho, String makhoa, Boolean qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMVTYT_KhoKhoa_GETALL", makho, makhoa, qadmin));
        }
        public override IDataReader GetAllDMVTYT_KhoKhoaFilter(String makho, String makhoa, String dkfilter, Boolean qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMVTYT_KhoKhoaFilter_GETALL", makho, makhoa, dkfilter, qadmin));
        }
        public override IDataReader GetDMVTYT_KhoKhoaG(String _makho, Decimal _sTT, String _makhoa)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMVTYT_KhoKhoaG_GET", _makho, _sTT, _makhoa));
        }
        public override IDataReader GetAllDMVTYT_KhoKhoaG(String makho, String makhoa, Boolean qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMVTYT_KhoKhoaG_GETALL", makho, makhoa, qadmin));
        }
        public override IDataReader GetDMVTYTKhoa(String maKhoa, String maDT, String MaVT, byte loai)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMVTYT_TON_GETKHOA", maKhoa, maDT, MaVT, loai));
        }
        public override IDataReader GetAllDMVTYTKhoa(String maKhoa, String maDT, String DK, byte loai)
        {
            //return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMVTYT_TON_GETSKHOA", maKhoa, maDT, DK, loai));
            System.Data.SqlClient.SqlCommand cmd = SqlHelper.CreateCommand(SQLConnectionBD, DatabaseOwner + ObjectQualifier + "spDMVTYT_TON_GETSKHOA");
            cmd.CommandTimeout = 18000;

            cmd.CommandType = System.Data.CommandType.StoredProcedure;
            cmd.Parameters.AddWithValue("madt", maDT);
            cmd.Parameters.AddWithValue("maKhoa", maKhoa);
            cmd.Parameters.AddWithValue("DK", DK);
            cmd.Parameters.AddWithValue("loai", loai);
            IDataReader dt;
            dt = (IDataReader)cmd.ExecuteReader(CommandBehavior.CloseConnection);
            cmd.Dispose();
            cmd = null;
            return dt;
        }
        public override IDataReader GetAllDMVTYTKhoaG(String maKhoa, String maDT, String DK, byte loai)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMVTYT_TON_GETSKHOAG", maKhoa, maDT, DK, loai));
        }
        public override IDataReader GetDMVTYTTonKho(String maKho, DateTime ngayyclinh, String MaVT)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMVTYT_TON_GETKHO", maKho, ngayyclinh, MaVT));
        }
        public override IDataReader GetAllDMVTYTTonKho(String maKho, DateTime Thang, String DK)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMVTYT_TON_GETSKHO", maKho, Thang, DK));
        }
        public override IDataReader GetDMVTYTTonKhoHD(String maKho, DateTime ngayyclinh, String MaVT)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMVTYT_TONHD_GETKHO", maKho, ngayyclinh, MaVT, "", null));
        }
        public override IDataReader GetAllDMVTYTTonKhoHD(String maKho, DateTime Thang, String DK)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMVTYT_TONHD_GETSKHO", maKho, Thang, DK, "", null));
        }
        public override IDataReader GetDMVTYTTonKhoHD(String maKho, DateTime ngayyclinh, String MaVT, string solo, DateTime hansd)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMVTYT_TONHD_GETKHO", maKho, ngayyclinh, MaVT, solo, hansd));
        }
        public override IDataReader GetAllDMVTYTTonKhoHD(String maKho, DateTime Thang, String DK, string solo, DateTime hansd)
        {
           return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMVTYT_TONHD_GETSKHO", maKho, Thang, DK, solo, hansd));
        }

		public override IDataReader GetAllDMVTYTTonKhoHD(String maKho, String MaNCC, String SoHD, String DK, string solo, DateTime hansd)
		{
			return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMVTYT_PHIEUNHAP_GETSKHO", maKho, MaNCC, SoHD, DK, solo, hansd));
		}
        public override IDataReader GetDMXeOto(String _maVT)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMDMXeOto_GET", _maVT));
        }
        public override IDataReader GetAllDMXeOto(Boolean qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMXeOto_GetAll", qadmin));
        }
        public override IDataReader GetDMVTYT_Goi(String _maGoiVT, string _dk, Boolean _qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMVTYT_Goi_Get", _maGoiVT, _dk, _qadmin));
        }
        public override IDataReader GetDMVTYT_Goi_C(String _maGoiVT, Byte _sTT)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMVTYT_Goi_C_Get", _maGoiVT, _sTT));
        }
        public override IDataReader GetAllDMVTYT_Goi(Boolean qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMVTYT_Goi_GetAll", qadmin));
        }
        public override IDataReader GetAllDMVTYTKhoaBT(String maKhoa, String maDT, String DK, byte loai)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMVTYT_TON_GETSKHOABT", maKhoa, maDT, DK, loai));
        }
        #endregion

        #region Find List
        public override IDataReader FindDMVTYT(string _DK, Boolean _qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMVTYT_Finds", _DK, _qadmin));
        }
        public override IDataReader FindDMXeOto(string _DK, Boolean _qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMXeOto_Finds", _DK, _qadmin));
        }
        public override IDataReader FindDMVTYT_Goi(string _DK, Boolean _qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMVTYT_Goi_FINDS", _DK, _qadmin));
        }
        public override IDataReader FindDMVTYTFilter(string _DK, string _DKFilter, Boolean _qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMVTYT_FilterFinds", _DK, _DKFilter, _qadmin));
        }
        #endregion
        #region DMNVTYT
        public override String InsertDMVTYT(String _maNhom, String _maChungLoai, String _tenTM, String _tenTA, String _maNSX, Decimal _nguong, String _maDVT, Boolean _apDungGoi, Boolean _handung, String _khoban, String _khophat, Boolean _vTThuT, Boolean _vTPhauT, Boolean _vTCLS, Boolean _vTDuoc, Boolean _vTBan, Boolean _duyetNgoaiT, Boolean _duyetNoiT, String _ghichu, string _maMay, String _nguoiLap, Boolean _vTNoiT, String _maLH, String _hamluong, String _madvthl, Boolean KhongSD, String _maql, string _quycach, String _madvt2, Decimal _quydoi, byte _loai, string _maBYTe, string _QuyetDinh, string _tenTMBH, string _MaBH, string _MaTDuong, string _QuyetDinhBH, string _TenBYTe,byte _bh50)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMVTYT_CREATE", _maNhom, _maChungLoai, _tenTM, _tenTA, _maNSX, _nguong, _maDVT, _apDungGoi, _handung, _khoban, _khophat, _vTThuT, _vTPhauT, _vTCLS, _vTDuoc, _vTBan, _duyetNgoaiT, _duyetNoiT, _ghichu, _maMay, _nguoiLap, _vTNoiT, _maLH, _hamluong, _madvthl, KhongSD, _maql, _quycach, _madvt2, _quydoi, _loai, _maBYTe, _QuyetDinh, _tenTMBH, _MaBH, _MaTDuong, _QuyetDinhBH, _TenBYTe,_bh50));
        }
        public override void UpdateDMVTYT(String _maVT, String _maNhom, String _maChungLoai, String _tenTM, String _tenTA, String _maNSX, Decimal _nguong, String _maDVT, Boolean _apDungGoi, Boolean _handung, String _khoban, String _khophat, Boolean _vTThuT, Boolean _vTPhauT, Boolean _vTCLS, Boolean _vTDuoc, Boolean _vTBan, Boolean _duyetNgoaiT, Boolean _duyetNoiT, String _ghichu, string _maMay, Boolean _huy, String _nguoiSD, Boolean _vTNoiT, String _maLH, String _hamluong, String _madvthl, Boolean KhongSD, String _maql, string _quycach, String _madvt2, Decimal _quydoi, string _maBYTe, string _QuyetDinh, string _tenTMBH, string _MaBH, string _MaTDuong, string _QuyetDinhBH, string _TenBYTe, byte _bh50)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMVTYT_UPDATE", _maVT, _maNhom, _maChungLoai, _tenTM, _tenTA, _maNSX, _nguong, _maDVT, _apDungGoi, _handung, _khoban, _khophat, _vTThuT, _vTPhauT, _vTCLS, _vTDuoc, _vTBan, _duyetNgoaiT, _duyetNoiT, _ghichu, _maMay, _huy, _nguoiSD, _vTNoiT, _maLH, _hamluong, _madvthl, KhongSD, _maql, _quycach, _madvt2, _quydoi, _maBYTe, _QuyetDinh, _tenTMBH, _MaBH, _MaTDuong, _QuyetDinhBH, _TenBYTe,_bh50);
        }
        public override void DeleteDMVTYT(String _maMay, String _nguoiSD, String _maVT)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMVTYT_DELETED", _maMay, _nguoiSD, _maVT);
        }
        #endregion
        #region DMVTYT_Thau
        public override String InsertDMVTYT_Thau(String _maThuoc, String _maNCC, String _namThau, Decimal _soLuong, String _ghiChu, Decimal _canhBao, String _nguoiSD, String _mamay, byte _loai)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMVTYT_Thau_CREATE", _maThuoc, _maNCC, _namThau, _soLuong, _ghiChu, _canhBao, _nguoiSD, _mamay, _loai));
        }
        public override void UpdateDMVTYT_Thau(String _maThuoc, String _maNCC, String _namThau, Decimal _soLuong, String _ghiChu, Boolean _huy, Decimal _canhBao, String _nguoiSD, String _mamay)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMVTYT_Thau_UPDATE", _maThuoc, _maNCC, _namThau, _soLuong, _ghiChu, _huy, _canhBao, _nguoiSD, _mamay);
        }
        public override void DeleteDMVTYT_Thau(String _maThuoc, String _maNCC, String _namThau, String _nguoiSD, String _mamay)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMVTYT_Thau_DELETED", _maThuoc, _maNCC, _namThau, _nguoiSD, _mamay);
        }
        public override IDataReader GetAllDMVTYT_Thau(Boolean qadmin, string _mancc, string _dk, string _nam, byte _loai)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMVTYT_Thau_GETALL", qadmin, _mancc, _nam, _dk, _loai));
        }
        public override IDataReader GetDMVTYT_Thau(String MaThuoc, Decimal NamThau, String MaNCC, String DK)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMVTYT_Thau_GET", MaThuoc, NamThau, MaNCC, DK));
        }
        public override IDataReader GetDMVTYT_Thau_TOTALBYMAVT(Decimal NamThau, string mancc, String MaThuoc)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMVTYT_Thau_TOTALBYMAVT", NamThau, mancc, MaThuoc));
        }
        #endregion
        #region DMVTYT_Gia
        public override void InsertDMVTYT_Gia(String _maDT, String _maVT, Decimal _donGiaBH, Decimal _donGiaThuT, Decimal _donGiaPhauT, Decimal _donGiaCLS, Decimal _giaChenhlech, Boolean _aDChenhlech, Boolean _DTBH, Byte _aDPhongMo, Decimal _donGia1, Decimal _giaChenhlech1, DateTime _ngay1, String _ghichu, string _maMay, String _nguoiLap)
        {
            //return System.Convert.ToString(SqlHelper.ExecuteScalar( ConnectionString, DatabaseOwner + ObjectQualifier + "spDMVTYT_Gia_CREATE", _maDT, _maVT, _donGiaBH, _donGiaThuT, _donGiaPhauT, _donGiaCLS, _giaChenhlech, _aDChenhlech, _DTBH, _aDPhongMo, _donGia1, _giaChenhlech1, _ngay1, _ghichu, _maMay, _nguoiLap));
            System.Data.SqlClient.SqlDataReader dr;
            dr = SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMVTYT_Gia_CREATE", _maDT, _maVT, _donGiaBH, _donGiaThuT, _donGiaPhauT, _donGiaCLS, _giaChenhlech, _aDChenhlech, _DTBH, _aDPhongMo, _donGia1, _giaChenhlech1, _ngay1, _ghichu, _maMay, _nguoiLap);
            dr.Close();
        }
        public override void UpdateDMVTYT_Gia(String _maDT, Decimal _STT, String _maVT, Decimal _donGiaBH, Decimal _donGiaThuT, Decimal _donGiaPhauT, Decimal _donGiaCLS, Decimal _giaChenhlech, Boolean _aDChenhlech, Boolean _DTBH, Byte _aDPhongMo, String _ghichu, string _maMay, String _nguoisd, Boolean _huy)
        {
            //SqlHelper.ExecuteNonQuery( ConnectionString, DatabaseOwner + ObjectQualifier + "spDMVTYT_Gia_UPDATE", _maDT, _STT, _maVT, _donGiaBH, _donGiaThuT, _donGiaPhauT, _donGiaCLS, _giaChenhlech, _aDChenhlech, _DTBH, _aDPhongMo, _ghichu, _maMay, _nguoisd, _huy);
            System.Data.SqlClient.SqlDataReader dr;
            dr = SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMVTYT_Gia_UPDATE", _maDT, _STT, _maVT, _donGiaBH, _donGiaThuT, _donGiaPhauT, _donGiaCLS, _giaChenhlech, _aDChenhlech, _DTBH, _aDPhongMo, _ghichu, _maMay, _nguoisd, _huy);
            dr.Close();
        }
        public override void DeleteDMVTYT_Gia(String _maMay, String _nguoiSD, String _maDT, Decimal stt)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMVTYT_Gia_DELETED", _maMay, _nguoiSD, _maDT, stt);
        }
        #endregion
        #region DMVTYT_KhoKhoa
        public override String InsertDMVTYT_KhoKhoa(String _makho, String _makhoa, String _maVT, String _nguoiSD, string _maMay)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMVTYT_KhoKhoa_Create", _makho, _makhoa, _maVT, _nguoiSD, _maMay));
        }
        public override void UpdateDMVTYT_KhoKhoa(String _makho, Decimal _sTT, String _makhoa, String _maVT, Boolean _huy, String _nguoiSD, string _maMay)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMVTYT_KhoKhoa_Update", _makho, _sTT, _makhoa, _maVT, _huy, _nguoiSD, _maMay);
        }
        public override void DeleteDMVTYT_KhoKhoa(String _maMay, String _nguoiSD, String _makho, Decimal _sTT, String _makhoa)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMVTYT_KhoKhoa_Deleted", _maMay, _nguoiSD, _makho, _sTT, _makhoa);
        }
        #endregion
        #region DMVTYT_KhoKhoaG
        public override String InsertDMVTYT_KhoKhoaG(String _makho, String _makhoa, String _maVT, String _nguoiSD, string _maMay)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMVTYT_KhoKhoaG_Create", _makho, _makhoa, _maVT, _nguoiSD, _maMay));
        }
        public override void UpdateDMVTYT_KhoKhoaG(String _makho, Decimal _sTT, String _makhoa, String _maVT, Boolean _huy, String _nguoiSD, string _maMay)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMVTYT_KhoKhoaG_Update", _makho, _sTT, _makhoa, _maVT, _huy, _nguoiSD, _maMay);
        }
        public override void DeleteDMVTYT_KhoKhoaG(String _maMay, String _nguoiSD, String _makho, Decimal _sTT, String _makhoa)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMVTYT_KhoKhoaG_Deleted", _maMay, _nguoiSD, _makho, _sTT, _makhoa);
        }
        #endregion
        #region DMNXeOto
        public override String InsertDMXeOto(String _tenxe, String _manvql, String _mota, String _ghichu, String _maMay, String _nguoiLap)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMXeOto_CREATE", _tenxe, _manvql, _mota, _ghichu, _maMay, _nguoiLap));
        }
        public override void UpdateDMXeOto(String _maXeOto, String _tenxe, String _manvql, String _mota, String _ghichu, bool _huy, String _maMay, String _nguoiLap)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMXeOto_UPDATE", _maXeOto, _tenxe, _manvql, _mota, _ghichu, _huy, _maMay, _nguoiLap);
        }
        public override void DeleteDMXeOto(String _maVT, String _nguoiSD, String _maMay)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMXeOto_DELETED", _maVT, _nguoiSD, _maMay);
        }
        #endregion
        #region DM goi vtyt

        public override String InsertDMVTYT_Goi(String _tenGoiVT, String _ghichu, String _maMay, String _nguoiLap, byte _loai, string _tenbs)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMVTYT_Goi_CREATE", _tenGoiVT, _ghichu, _maMay, _nguoiLap, _loai, _tenbs));
        }
        public override void UpdateDMVTYT_Goi(String _maGoiVT, String _tenGoiVT, String _ghichu, String _maMay, Boolean _huy, String _nguoiSD, byte _loai, string _tenbs)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMVTYT_Goi_UPDATE", _maGoiVT, _tenGoiVT, _ghichu, _maMay, _huy, _nguoiSD, _loai, _tenbs);
        }

        public override void DeleteDMVTYT_Goi(String _maMay, String _nguoiSD, String _maGoiVT)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMVTYT_Goi_DELETED", _maMay, _nguoiSD, _maGoiVT);
        }

        #endregion

        #region DM goi vtyt Chi tiet
        public override String InsertDMVTYT_Goi_C(String _maGoiVT, String _MaVT, Decimal _soLuong, string _ghichu, String _maMay, String _nguoiSD, String _lieuDung, String _cachDung)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMVTYT_Goi_C_CREATE", _maGoiVT, _MaVT, _soLuong, _ghichu, _maMay, _nguoiSD, _lieuDung, _cachDung));
        }
        public override void UpdateDMVTYT_Goi_C(String _maGoiVT, Byte _sTT, String _MaVT, Decimal _soLuong, string _ghichu, String _maMay, Boolean _huy, String _nguoiSD, String _lieuDung, String _cachDung)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMVTYT_Goi_C_UPDATE", _maGoiVT, _sTT, _MaVT, _soLuong, _ghichu, _maMay, _huy, _nguoiSD, _lieuDung, _cachDung);
        }
        public override void DeleteDMVTYT_Goi_C(String _maMay, String _nguoiSD, String _maHC, Byte _sTT)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMVTYT_Goi_C_DELETED", _maMay, _nguoiSD, _maHC, _sTT);
        }



        #endregion
        #endregion

        #region DM Hoa chat
        #region GetList
        //public override IDataReader GetDMNhomHCPL(String _maNHCPL)
        // {
        //     return ((IDataReader)SqlHelper.ExecuteReader( ConnectionString, DatabaseOwner + ObjectQualifier + "spDMNHOMHCPL_Get", _maNHCPL));
        // }
        //public override IDataReader GetAllDMNhomHCPL(Boolean _qadmin)
        // {
        //     return ((IDataReader)SqlHelper.ExecuteReader( ConnectionString, DatabaseOwner + ObjectQualifier + "spDMNHOMHCPL_GetAll", _qadmin));
        // }
        public override IDataReader GetDMHoaChat_Gia(String madt, String maHC)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMHoaChat_Gia_Get", madt, maHC));
        }
        public override IDataReader GetAllDMHoaChat_Gia(String madt, Boolean qadmin, String DK)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMHOACHAT_GIA_GETALL", madt, qadmin, DK));
        }
        public override IDataReader GetAllDMHoaChat_GiaFilter(String madt, String DK, String DKFilter, Boolean qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMHOACHAT_GIAFilter_GETALL", madt, DK, DKFilter, qadmin));
        }
        public override IDataReader GetDMHoaChat(String _mahc)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMHoachat_GET", _mahc));
        }
        public override IDataReader GetAllDMHoaChat(Boolean _qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMHoachat_GetAll", _qadmin));
        }
        public override IDataReader GetDMHoaChat_KhoKhoa(String _makho, Decimal _sTT, String _makhoa)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMHoaChat_KhoKhoa_GET", _makho, _sTT, _makhoa));
        }
        public override IDataReader GetAllDMHoaChat_KhoKhoa(String makho, String makhoa, Boolean qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMHoaChat_KhoKhoa_GETALL", makho, makhoa, qadmin));
        }
        public override IDataReader GetAllDMHoaChat_KhoKhoaFilter(String makho, String makhoa, String dkFilter, Boolean qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMHoaChat_KhoKhoa_GETALL", makho, makhoa, dkFilter, qadmin));
        }
        public override IDataReader GetDMGiuong_KhoKhoa(Decimal _sTT, String _makhoa)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMGiuong_KhoKhoa_GET", _sTT, _makhoa));
        }
        public override IDataReader GetAllDMGiuong_KhoKhoa(String makhoa, Boolean qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMGiuong_KhoKhoa_GETALL", makhoa, qadmin));
        }
        public override IDataReader GetDMNhanVien_Truc(Decimal _sTT, DateTime _ngaydk)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMNhanVien_Truc_GET", _sTT, _ngaydk));
        }
        public override IDataReader GetAllDMNhanVien_Truc(DateTime TuNgay, DateTime DenNgay, string makhoa, string manv, string dk, Boolean qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMNhanVien_Truc_GETALL", TuNgay, DenNgay, makhoa, manv, dk, qadmin));
        }
        public override IDataReader GetDMHoaChatKhoa(String maKhoa, String maDT, String MaHC, byte loai)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMHoaChat_TON_GETKHOA", maKhoa, maDT, MaHC, loai));
        }
        public override IDataReader GetAllDMHoaChatKhoa(String maKhoa, String maDT, String DK, byte loai)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMHoaChat_TON_GETSKHOA", maKhoa, maDT, DK, loai));
        }
        public override IDataReader GetDMHoaChatTonKho(String maKho, DateTime ngayyclinh, String MaHC)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMHoaChat_TON_GETKHO", maKho, ngayyclinh, MaHC));
        }
        public override IDataReader GetAllDMHoaChatTonKho(String maKho, DateTime Thang, String DK)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMHoaChat_TON_GETSKHO", maKho, Thang, DK));
        }
        public override IDataReader GetDMHoaChatTonKhoHD(String maKho, DateTime ngayyclinh, String MaHC)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMHoaChat_TONHD_GETKHO", maKho, ngayyclinh, MaHC, "", null));
        }
        public override IDataReader GetAllDMHoaChatTonKhoHD(String maKho, DateTime Thang, String DK)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMHoaChat_TONHD_GETSKHO", maKho, Thang, DK, "", null));
        }
        public override IDataReader GetDMHoaChatTonKhoHD(String maKho, DateTime ngayyclinh, String MaHC, string solo, DateTime hansd)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMHoaChat_TONHD_GETKHO", maKho, ngayyclinh, MaHC, solo, hansd));
        }
        public override IDataReader GetAllDMHoaChatTonKhoHD(String maKho, DateTime Thang, String DK, string solo, DateTime hansd)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMHoaChat_TONHD_GETSKHO", maKho, Thang, DK, solo, hansd));
        }

		public override IDataReader GetAllDMHOACHATTonKhoHD(String maKho, String MaNCC, String SoHD, String DK, string solo, DateTime hansd)
		{
			return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMHOACHAT_PHIEUNHAP_GETSKHO", maKho, MaNCC, SoHD, DK, solo, hansd));
		}
        public override IDataReader GetDMHoaChat_Goi(String _maGoiHC, string _dk, Boolean _qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMHoaChat_Goi_Get", _maGoiHC, _dk, _qadmin));
        }
        public override IDataReader GetDMHoaChat_Goi_C(String _maGoiHC, Byte _sTT)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMHoaChat_Goi_C_Get", _maGoiHC, _sTT));
        }
        public override IDataReader GetAllDMHoaChat_Goi(Boolean qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMHoaChat_Goi_GetAll", qadmin));
        }
        public override IDataReader GetAllDMHoaChatKhoaBT(String maKhoa, String maDT, String DK, byte loai)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMHoaChat_TON_GETSKHOABT", maKhoa, maDT, DK, loai));
        }
        #endregion

        #region FindList
        //public override IDataReader FindDMNhomHCPL(String _DK, Boolean qadmin)
        //{
        //    return ((IDataReader)SqlHelper.ExecuteReader( ConnectionString, DatabaseOwner + ObjectQualifier + "spDMNHOMHCPL_Finds", _DK, qadmin));
        //}
        public override IDataReader FindDMHoaChat(string _DK, Boolean _qadmin)
        {

            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMHOACHAT_FINDS", _DK, _qadmin));
        }
        public override IDataReader FindDMHoaChatFilter(string _DK, string _DKFilter, Boolean _qadmin)
        {

            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMHOACHAT_FilterFINDS", _DK, _DKFilter, _qadmin));
        }
        public override IDataReader FindDMHoaChat_Goi(string _DK, Boolean _qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMHoaChat_Goi_FINDS", _DK, _qadmin));
        }
        #endregion

        #region DM Hoa chat
        public override String InsertDMHoaChat(String _maNhom, String _maChungLoai, String _tenTM, String _tenTA, String _maNSX, String _hamLuong, String _maDVTHL, Decimal _nguong, String _maDVT, Decimal _quydoi, String _maHCgoc, String _maDVTGoc, Boolean _apDungGoi, Boolean _handung, String _khoban, String _khophat, Boolean _hCThuT, Boolean _hCPhauT, Boolean _hCCLS, Boolean _hCDuoc, Boolean _hCBan, Boolean _duyetNgoaiT, Boolean _duyetNoiT, String _ghichu, string _maMay, String _nguoiLap, Boolean _hCNoiT, String _maLH, string quycach, Boolean KhongSD, byte _sothanghd, byte _loai, string _maBYTe, string _QuyetDinh, string _tenTMBH, string MaBH, string _MaTDuong, string _QuyetDinhBH, string _TenBYTe, string _maql)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMHOACHAT_CREATE1", _maNhom, _maChungLoai, _tenTM, _tenTA, _maNSX, _hamLuong, _maDVTHL, _nguong, _maDVT, _quydoi, _maHCgoc, _maDVTGoc, _apDungGoi, _handung, _khoban, _khophat, _hCThuT, _hCPhauT, _hCCLS, _hCDuoc, _hCBan, _duyetNgoaiT, _duyetNoiT, _ghichu, _maMay, _nguoiLap, _hCNoiT, _maLH, quycach, KhongSD, _sothanghd, _loai, _maBYTe, _QuyetDinh, _tenTMBH,MaBH,_MaTDuong,_QuyetDinhBH,_TenBYTe ,_maql));
        }
        public override void UpdateDMHoaChat(String _maHC, String _maNhom, String _maChungLoai, String _tenTM, String _tenTA, String _maNSX, String _hamLuong, String _maDVTHL, Decimal _nguong, String _maDVT, Decimal _quydoi, String _maHCgoc, String _maDVTGoc, Boolean _apDungGoi, Boolean _handung, String _khoban, String _khophat, Boolean _hCThuT, Boolean _hCPhauT, Boolean _hCCLS, Boolean _hCDuoc, Boolean _hCBan, Boolean _duyetNgoaiT, Boolean _duyetNoiT, String _ghichu, string _maMay, Boolean _huy, String _nguoiSD, Boolean _hCNoiT, String _maLH, string quycach, Boolean KhongSD, byte _sothanghd, string _maBYTe, string _QuyetDinh, string _tenTMBH, string MaBH, string _MaTDuong, string _QuyetDinhBH, string _TenBYTe, string _maql)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMHOACHAT_UPDATE1", _maHC, _maNhom, _maChungLoai, _tenTM, _tenTA, _maNSX, _hamLuong, _maDVTHL, _nguong, _maDVT, _quydoi, _maHCgoc, _maDVTGoc, _apDungGoi, _handung, _khoban, _khophat, _hCThuT, _hCPhauT, _hCCLS, _hCDuoc, _hCBan, _duyetNgoaiT, _duyetNoiT, _ghichu, _maMay, _huy, _nguoiSD, _hCNoiT, _maLH, quycach, KhongSD, _sothanghd, _maBYTe, _QuyetDinh, _tenTMBH,MaBH,_MaTDuong,_QuyetDinhBH,_TenBYTe ,_maql );
        }
        public override void DeleteDMHoaChat(String _maMay, String _nguoiSD, String _maHC)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMHOACHAT_DELETED", _maMay, _nguoiSD, _maHC);
        }
        #endregion
        #region DMHoaChat_Gia
        public override void InsertDMHoaChat_Gia(String _maDT, String _maHC, Decimal _donGiaBH, Decimal _donGiaThuT, Decimal _donGiaPhauT, Decimal _donGiaCLS, Decimal _giachenhlech, Boolean _aDChenhlech, Boolean _DTBH, Byte _aDPhongMo, Decimal _donGia1, Decimal _giachenhlech1, DateTime _ngay1, String _ghichu, string _maMay, String _nguoiLap)
        {
            //return System.Convert.ToString(SqlHelper.ExecuteScalar( ConnectionString, DatabaseOwner + ObjectQualifier + "spDMHoaChat_Gia_CREATE", _maDT, _maHC, _donGiaBH, _donGiaThuT, _donGiaPhauT, _donGiaCLS, _giachenhlech, _aDChenhlech, _DTBH, _aDPhongMo, _donGia1, _giachenhlech1, _ngay1, _ghichu, _maMay, _nguoiLap));
            System.Data.SqlClient.SqlDataReader dr;
            dr = SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMHoaChat_Gia_CREATE", _maDT, _maHC, _donGiaBH, _donGiaThuT, _donGiaPhauT, _donGiaCLS, _giachenhlech, _aDChenhlech, _DTBH, _aDPhongMo, _donGia1, _giachenhlech1, _ngay1, _ghichu, _maMay, _nguoiLap);
            dr.Close();
        }
        public override void UpdateDMHoaChat_Gia(String _maDT, Decimal _STT, String _maHC, Decimal _donGiaBH, Decimal _donGiaThuT, Decimal _donGiaPhauT, Decimal _donGiaCLS, Decimal _giaChenhlech, Boolean _aDChenhlech, Boolean _DTBH, Byte _aDPhongMo, String _ghichu, string _maMay, String _nguoisd, Boolean _huy)
        {
            //SqlHelper.ExecuteNonQuery( ConnectionString, DatabaseOwner + ObjectQualifier + "spDMHoaChat_Gia_UPDATE", _maDT, _STT, _maHC, _donGiaBH, _donGiaThuT, _donGiaPhauT, _donGiaCLS, _giaChenhlech, _aDChenhlech, _DTBH, _aDPhongMo, _ghichu, _maMay, _nguoisd, _huy);
            System.Data.SqlClient.SqlDataReader dr;
            dr = SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMHoaChat_Gia_UPDATE", _maDT, _STT, _maHC, _donGiaBH, _donGiaThuT, _donGiaPhauT, _donGiaCLS, _giaChenhlech, _aDChenhlech, _DTBH, _aDPhongMo, _ghichu, _maMay, _nguoisd, _huy);
            dr.Close();
        }
        public override void DeleteDMHoaChat_Gia(String _maMay, String _nguoiSD, String _maDT, Decimal stt)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMHoaChat_Gia_DELETED", _maMay, _nguoiSD, _maDT, stt);
        }
        #endregion

        #region DMHoaChat_KhoKhoa
        public override String InsertDMHoaChat_KhoKhoa(String _makho, String _makhoa, String _maHC, String _nguoiSD, string _maMay)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMHoaChat_KhoKhoa_Create", _makho, _makhoa, _maHC, _nguoiSD, _maMay));
        }
        public override void UpdateDMHoaChat_KhoKhoa(String _makho, Decimal _sTT, String _makhoa, String _maHC, Boolean _huy, String _nguoiSD, string _maMay)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMHoaChat_KhoKhoa_Update", _makho, _sTT, _makhoa, _maHC, _huy, _nguoiSD, _maMay);
        }
        public override void DeleteDMHoaChat_KhoKhoa(String _maMay, String _nguoiSD, String _makho, Decimal _sTT, String _makhoa)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMHoaChat_KhoKhoa_Deleted", _maMay, _nguoiSD, _makho, _sTT, _makhoa);
        }
        #endregion
        #region DMGiuong_KhoKhoa
        public override String InsertDMGiuong_KhoKhoa(String _makhoa, String _maGiuong, String _nguoiSD, string _maMay, decimal _thucke)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMGiuong_KhoKhoa_Create", _makhoa, _maGiuong, _nguoiSD, _maMay,_thucke));
        }
        public override void UpdateDMGiuong_KhoKhoa(Decimal _sTT, String _makhoa, String _maGiuong, Boolean _huy, String _nguoiSD, string _maMay, decimal _thucke)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMGiuong_KhoKhoa_Update", _sTT, _makhoa, _maGiuong, _huy, _nguoiSD, _maMay, _thucke);
        }
        public override void DeleteDMGiuong_KhoKhoa(String _maMay, String _nguoiSD, Decimal _sTT, String _makhoa)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMGiuong_KhoKhoa_Deleted", _maMay, _nguoiSD, _sTT, _makhoa);
        }
        #endregion
        #region DMNhanVien_Truc
        public override decimal InsertDMNhanVien_Truc(String _makhoa, String _manv, SmartDate _tungaydk, SmartDate _denngaydk, String _nguoiSD, string _maMay)
        {
            return System.Convert.ToDecimal(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMNhanVien_Truc_Create", _makhoa, _manv, _tungaydk.DBValue, _denngaydk.DBValue, _nguoiSD, _maMay));
        }
        public override void UpdateDMNhanVien_Truc(Decimal _sTT, String _makhoa, String _manv, SmartDate _tungaydk, SmartDate _denngaydk, Boolean _huy, String _nguoiSD, string _maMay)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMNhanVien_Truc_Update", _sTT, _makhoa, _manv, _tungaydk.DBValue, _denngaydk.DBValue, _huy, _nguoiSD, _maMay);
        }
        public override void DeleteDMNhanVien_Truc(String _maMay, String _nguoiSD, Decimal _sTT, string _manv)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMNhanVien_Truc_Deleted", _maMay, _nguoiSD, _sTT, _manv);
        }
        #endregion
        #region DM goi hoa chat

        public override String InsertDMHoaChat_Goi(String _tenGoiHC, String _ghichu, String _maMay, String _nguoiLap, byte _loai, string _tenbs)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMHoaChat_Goi_CREATE", _tenGoiHC, _ghichu, _maMay, _nguoiLap, _loai, _tenbs));
        }
        public override void UpdateDMHoaChat_Goi(String _maGoiHC, String _tenGoiHC, String _ghichu, String _maMay, Boolean _huy, String _nguoiSD, byte _loai, string _tenbs)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMHoaChat_Goi_UPDATE", _maGoiHC, _tenGoiHC, _ghichu, _maMay, _huy, _nguoiSD, _loai, _tenbs);
        }

        public override void DeleteDMHoaChat_Goi(String _maMay, String _nguoiSD, String _maGoiHC)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMHoaChat_Goi_DELETED", _maMay, _nguoiSD, _maGoiHC);
        }

        #endregion

        #region DM goi hoa chat Chi tiet
        public override String InsertDMHoaChat_Goi_C(String _maGoiHC, String _MaHC, Decimal _soLuong, string _ghichu, String _maMay, String _nguoiSD, String _lieuDung, String _cachDung)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMHoaChat_Goi_C_CREATE", _maGoiHC, _MaHC, _soLuong, _ghichu, _maMay, _nguoiSD, _lieuDung, _cachDung));
        }
        public override void UpdateDMHoaChat_Goi_C(String _maGoiHC, Byte _sTT, String _MaHC, Decimal _soLuong, string _ghichu, String _maMay, Boolean _huy, String _nguoiSD, String _lieuDung, String _cachDung)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMHoaChat_Goi_C_UPDATE", _maGoiHC, _sTT, _MaHC, _soLuong, _ghichu, _maMay, _huy, _nguoiSD, _lieuDung, _cachDung);
        }
        public override void DeleteDMHoaChat_Goi_C(String _maMay, String _nguoiSD, String _maHC, Byte _sTT)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMHoaChat_Goi_C_DELETED", _maMay, _nguoiSD, _maHC, _sTT);
        }



        #endregion
        #region DMHoaChat_Thau
        public override String InsertDMHoaChat_Thau(String _maThuoc, String _maNCC, String _namThau, Decimal _soLuong, String _ghiChu, Decimal _canhBao, String _nguoiSD, String _mamay, byte _loai)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMHoaChat_Thau_CREATE", _maThuoc, _maNCC, _namThau, _soLuong, _ghiChu, _canhBao, _nguoiSD, _mamay, _loai));
        }
        public override void UpdateDMHoaChat_Thau(String _maThuoc, String _maNCC, String _namThau, Decimal _soLuong, String _ghiChu, Boolean _huy, Decimal _canhBao, String _nguoiSD, String _mamay)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMHoaChat_Thau_UPDATE", _maThuoc, _maNCC, _namThau, _soLuong, _ghiChu, _huy, _canhBao, _nguoiSD, _mamay);
        }
        public override void DeleteDMHoaChat_Thau(String _maThuoc, String _maNCC, String _namThau, String _nguoiSD, String _mamay)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMHoaChat_Thau_DELETED", _maThuoc, _maNCC, _namThau, _nguoiSD, _mamay);
        }
        public override IDataReader GetAllDMHoaChat_Thau(Boolean qadmin, string _mancc, string _nam, string _dk, byte _loai)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMHoaChat_Thau_GETALL", qadmin, _mancc, _nam, _dk, _loai));
        }
        public override IDataReader GetDMHoaChat_Thau(String MaThuoc, Decimal NamThau, String MaNCC, String DK)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMHoaChat_Thau_GET", MaThuoc, NamThau, MaNCC, DK));
        }
        public override IDataReader GetDMHoaChat_Thau_TOTALBYMAHC(Decimal NamThau, string _mancc, String MaThuoc)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMHoaChat_Thau_TOTALBYMAHC", NamThau, _mancc, MaThuoc));
        }
        #endregion
        #endregion

        #region Danh muc mau
        #region GetList
        public override IDataReader GetDMChePhamMau(String _MaCPMau)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMCHEPHAMMAU_Get", _MaCPMau));
        }
        public override IDataReader GetAllDMChePhamMau(Boolean _qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMCHEPHAMMAU_GETALL", _qadmin));
        }
        public override IDataReader GetDMChePhamMau_Gia(string madt, String maCPMau)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMChePhamMau_GIA_GET", madt, maCPMau));
        }
        public override IDataReader GetAllDMChePhamMau_Gia(string madt, Boolean qadmin, String DK)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMChePhamMau_GIA_GETALL", madt, qadmin, DK));
        }
        public override IDataReader GetAllDMChePhamMau_GiaFilter(string madt, Boolean qadmin, String DK, String DKFilter)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMChePhamMau_GIAFilter_GETALL", madt, qadmin, DK, DKFilter));
        }
        public override IDataReader GetDMChePhamMau_KhoKhoa(String _makho, Decimal _sTT, String _makhoa)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMChePhamMau_KhoKhoa_GET", _makho, _sTT, _makhoa));
        }
        public override IDataReader GetAllDMChePhamMau_KhoKhoa(String makho, String makhoa, Boolean qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMChePhamMau_KhoKhoa_GETALL", makho, makhoa, qadmin));
        }
        public override IDataReader GetAllDMChePhamMau_KhoKhoaFilter(String makho, String makhoa, String dkFilter, Boolean qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMChePhamMau_KhoKhoaFilter_GETALL", makho, makhoa, dkFilter, qadmin));
        }
        public override IDataReader GetDMChePhamMauKhoa(String maKhoa, String maDT, String MaCPMau, byte loai)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMChePhamMau_TON_GETKHOA", maKhoa, maDT, MaCPMau, loai));
        }
        public override IDataReader GetAllDMChePhamMauKhoa(String maKhoa, String maDT, String DK, byte loai)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMChePhamMau_TON_GETSKHOA", maKhoa, maDT, DK, loai));
        }
        public override IDataReader GetDMChePhamMauTonKho(String maKho, DateTime ngayyclinh, String MaCPMau)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMChePhamMau_TON_GETKHO", maKho, ngayyclinh, MaCPMau));
        }
        public override IDataReader GetAllDMChePhamMauTonKho(String maKho, DateTime Thang, String DK)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMChePhamMau_TON_GETSKHO", maKho, Thang, DK));
        }
        public override IDataReader GetDMChePhamMauTonKhoHD(String maKho, DateTime ngayyclinh, String MaCPMau)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMChePhamMau_TONHD_GETKHO", maKho, ngayyclinh, MaCPMau, "", null));
        }
        public override IDataReader GetAllDMChePhamMauTonKhoHD(String maKho, DateTime Thang, String DK)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMChePhamMau_TONHD_GETSKHO", maKho, Thang, DK, "", null));
        }
        public override IDataReader GetDMChePhamMauTonKhoHD(String maKho, DateTime ngayyclinh, String MaCPMau, string solo, DateTime hansd)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMChePhamMau_TONHD_GETKHO", maKho, ngayyclinh, MaCPMau, solo, hansd));
        }
        public override IDataReader GetAllDMChePhamMauTonKhoHD(String maKho, DateTime Thang, String DK, string solo, DateTime hansd)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMChePhamMau_TONHD_GETSKHO", maKho, Thang, DK, solo, hansd));
        }
        public override IDataReader GetAllMauNhapTra_C_TonBN_gets(String MaKho, String MAKHOA, String dk)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spMauNhapTra_C_TonBN_Gets", MaKho, MAKHOA, dk));
        }
        public override IDataReader GetDMChePhamMau_Goi(String _maGoiHC, string _dk, Boolean _qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMChePhamMau_Goi_Get", _maGoiHC, _dk, _qadmin));
        }
        public override IDataReader GetDMChePhamMau_Goi_C(String _maGoiHC, Byte _sTT)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMChePhamMau_Goi_C_Get", _maGoiHC, _sTT));
        }
        public override IDataReader GetAllDMChePhamMau_Goi(Boolean qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMChePhamMau_Goi_GetAll", qadmin));
        }
     
        #endregion
        #region FindList
        public override IDataReader FindDMChePhamMau(String _DK, Boolean qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMCHEPHAMMAU_Finds", _DK, qadmin));
        }
        public override IDataReader FindDMChePhamMau_Gia(String _DK, string _madt, Boolean qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMChePhamMau_GIA_FINDS", _DK, _madt, qadmin));
        }
        public override IDataReader FindDMChePhamMau_Goi(string _DK, Boolean _qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMChePhamMau_Goi_FINDS", _DK, _qadmin));
        }
        #endregion
        #region DM che pham mau
        public override String InsertDMChePhamMau(String _TenCPMau, String _tenTA, String _ghichu, String _maNhom, String _hamluong, Decimal _nguong, String _maDVT, String _maDVTHL, Boolean _apDungGoi, String _makho, string _maMay, String _nguoiSD, String _machungloai, String _malh, Boolean _handung, string _maBYTe, string _QuyetDinh, string _tenTMBH, string _MaBH, string _MaTDuong, string _QuyetDinhBH, string _TenBYTe)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMCHEPHAMMAU_CREATE1", _TenCPMau, _tenTA, _ghichu, _maNhom, _hamluong, _nguong, _maDVT, _maDVTHL, _apDungGoi, _makho, _maMay, _nguoiSD, _machungloai, _malh, _handung, _maBYTe, _QuyetDinh, _tenTMBH, _MaBH, _MaTDuong, _QuyetDinhBH, _TenBYTe));
        }
        public override void UpdateDMChePhamMau(String _MaCPMau, String _TenCPMau, String _tenTA, String _ghichu, String _maNhom, String _hamluong, Decimal _nguong, String _maDVT, String _maDVTHL, Boolean _apDungGoi, String _makho, Boolean _huy, string _maMay, String _nguoiSD, String _machungloai, String _malh, Boolean _handung, string _maBYTe, string _QuyetDinh, string _tenTMBH, string _MaBH, string _MaTDuong, string _QuyetDinhBH, string _TenBYTe)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMCHEPHAMMAU_UPDATE1", _MaCPMau, _TenCPMau, _tenTA, _ghichu, _maNhom, _hamluong, _nguong, _maDVT, _maDVTHL, _apDungGoi, _makho, _huy, _maMay, _nguoiSD, _machungloai, _malh, _handung, _maBYTe, _QuyetDinh, _tenTMBH, _MaBH, _MaTDuong, _QuyetDinhBH, _TenBYTe);
        }
        public override void DeleteDMChePhamMau(String _maMay, String _nguoiSD, String _MaCPMau)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMCHEPHAMMAU_DELETED", _maMay, _nguoiSD, _MaCPMau);
        }

        #endregion
        #region DMChePhamMau_Gia
        public override void InsertDMChePhamMau_Gia(String _maDT, String _maCPMau, Decimal _dongia, Decimal _giaChenhlech, Boolean _aDChenhlech, Boolean _DTBH, Byte _aDPhongMo, String _ghichu, string _maMay, String _nguoiLap)
        {
            //return System.Convert.ToString(SqlHelper.ExecuteScalar( ConnectionString, DatabaseOwner + ObjectQualifier + "spDMChePhamMau_GIA_CREATE", _maDT, _maCPMau, _dongia, _giaChenhlech, _aDChenhlech, _DTBH, _aDPhongMo, _ghichu, _maMay, _nguoiLap));
            System.Data.SqlClient.SqlDataReader dr;
            dr = SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMChePhamMau_GIA_CREATE", _maDT, _maCPMau, _dongia, _giaChenhlech, _aDChenhlech, _DTBH, _aDPhongMo, _ghichu, _maMay, _nguoiLap);
            dr.Close();
        }
        public override void UpdateDMChePhamMau_Gia(String _maDT, Decimal _STT, String _maCPMau, Decimal _dongia, Decimal _giaChenhlech, Boolean _aDChenhlech, Boolean _DTBH, Byte _aDPhongMo, String _ghichu, string _maMay, String _nguoisd, Boolean _huy)
        {
            //SqlHelper.ExecuteNonQuery( ConnectionString, DatabaseOwner + ObjectQualifier + "spDMChePhamMau_GIA_UPDATE", _maDT, _STT, _maCPMau, _dongia, _giaChenhlech, _aDChenhlech, _DTBH, _aDPhongMo, _ghichu, _maMay, _nguoisd, _huy);
            System.Data.SqlClient.SqlDataReader dr;
            dr = SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMChePhamMau_GIA_UPDATE", _maDT, _STT, _maCPMau, _dongia, _giaChenhlech, _aDChenhlech, _DTBH, _aDPhongMo, _ghichu, _maMay, _nguoisd, _huy);
            dr.Close();
        }
        public override void DeleteDMChePhamMau_Gia(String _maMay, String _nguoiSD, String _maDT, Decimal _sTT)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMChePhamMau_GIA_DELETED", _maMay, _nguoiSD, _maDT, _sTT);
        }
        #endregion
        #region DMChePhamMau_KhoKhoa
        public override String InsertDMChePhamMau_KhoKhoa(String _makho, String _makhoa, String _maCPMau, String _nguoiSD, string _maMay)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMChePhamMau_KhoKhoa_Create", _makho, _makhoa, _maCPMau, _nguoiSD, _maMay));
        }
        public override void UpdateDMChePhamMau_KhoKhoa(String _makho, Decimal _sTT, String _makhoa, String _maCPMau, Boolean _huy, String _nguoiSD, string _maMay)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMChePhamMau_KhoKhoa_Update", _makho, _sTT, _makhoa, _maCPMau, _huy, _nguoiSD, _maMay);
        }
        public override void DeleteDMChePhamMau_KhoKhoa(String _maMay, String _nguoiSD, String _makho, Decimal _sTT, String _makhoa)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMChePhamMau_KhoKhoa_Deleted", _maMay, _nguoiSD, _makho, _sTT, _makhoa);
        }
        #endregion

        #region DM goi mau

        public override String InsertDMChePhamMau_Goi(String _tenGoiHC, String _ghichu, String _maMay, String _nguoiLap, byte _loai, string _tenbs)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMChePhamMau_Goi_CREATE", _tenGoiHC, _ghichu, _maMay, _nguoiLap, _loai, _tenbs));
        }
        public override void UpdateDMChePhamMau_Goi(String _maGoiHC, String _tenGoiHC, String _ghichu, String _maMay, Boolean _huy, String _nguoiSD, byte _loai, string _tenbs)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMChePhamMau_Goi_UPDATE", _maGoiHC, _tenGoiHC, _ghichu, _maMay, _huy, _nguoiSD, _loai, _tenbs);
        }

        public override void DeleteDMChePhamMau_Goi(String _maMay, String _nguoiSD, String _maGoiHC)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMChePhamMau_Goi_DELETED", _maMay, _nguoiSD, _maGoiHC);
        }

        #endregion

        #region DM goi mau Chi tiet
        public override String InsertDMChePhamMau_Goi_C(String _maGoiHC, String _MaHC, Decimal _soLuong, string _ghichu, String _maMay, String _nguoiSD, String _lieuDung, String _cachDung)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMChePhamMau_Goi_C_CREATE", _maGoiHC, _MaHC, _soLuong, _ghichu, _maMay, _nguoiSD, _lieuDung, _cachDung));
        }
        public override void UpdateDMChePhamMau_Goi_C(String _maGoiHC, Byte _sTT, String _MaHC, Decimal _soLuong, string _ghichu, String _maMay, Boolean _huy, String _nguoiSD, String _lieuDung, String _cachDung)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMChePhamMau_Goi_C_UPDATE", _maGoiHC, _sTT, _MaHC, _soLuong, _ghichu, _maMay, _huy, _nguoiSD, _lieuDung, _cachDung);
        }
        public override void DeleteDMChePhamMau_Goi_C(String _maMay, String _nguoiSD, String _maHC, Byte _sTT)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMChePhamMau_Goi_C_DELETED", _maMay, _nguoiSD, _maHC, _sTT);
        }



        #endregion
        #endregion
        public override IDataReader GetAllDMChePhamMauKhoaBT(String maKhoa, String maDT, String DK, byte loai)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMChePhamMau_TON_GETSKHOABT", maKhoa, maDT, DK, loai));
        }
        #endregion

        #region Danh muc noi tru

        #region GetList
        public override IDataReader GetDMPhauThuat(String _maPT)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMPHAUTHUAT_Get", _maPT));
        }
        public override IDataReader GetAllDMPhauThuat(bool qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMPHAUTHUAT_GetALL", qadmin));
        }
        public override IDataReader GetDMKTPhauThuat(String _maPT)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMKTPhauThuat_Get", _maPT));
        }
        public override IDataReader GetAllDMKTPhauThuat(bool qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMKTPhauThuat_GetALL", qadmin));
        }
        public override IDataReader GetAllDMPhauThuat_Gia(string madt, Boolean qadmin, String DK)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMPhauThuat_Gia_GetAll", madt, qadmin, DK));
        }
        public override IDataReader GetDMPhauThuat_Gia_DT(String _maCS, Decimal sTT)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMPhauThuat_Gia_DT_Get", _maCS, sTT));
        }
        public override IDataReader GetAllDMPhauThuat_Gia_DT(String maDT, bool qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMPhauThuat_GIA_DT_GETALL", maDT, qadmin));
        }
        public override IDataReader GetDMLDThuTien(String _maLDThuTien)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMLDThuTien_Get", _maLDThuTien));
        }
        public override IDataReader GetDMGiuong_Khoa(String _sophong, String _sogiuong, String _makhoa)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMGiuong_Khoa_Get", _sophong, _sogiuong, _makhoa));
        }
        public override IDataReader GetAllDMGiuong_Khoa(bool qadmin, String makhoa)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMGiuong_khoa_GETALL", makhoa, qadmin));
        }
        public override IDataReader GetAllDMLDThuTien(bool qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMLDThuTien_GetAll", qadmin));
        }
        public override IDataReader GetAllDMGiuong_Gia(String maDT, bool qadmin, String DK)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMGiuong_GIA_GETALL", maDT, qadmin, DK));
        }
        public override IDataReader GetDMTienLuong(String _maTienluong)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMTienluong_Get", _maTienluong));
        }
        public override IDataReader GetAllDMTienLuong(bool qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMTienluong_GetAll", qadmin));
        }
        public override IDataReader GetDMNhomMau(String _maNhomMau)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMNhomMau_Get", _maNhomMau));
        }
        public override IDataReader GetAllDMNhomMau(bool qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMNhomMau_GetAll", qadmin));
        }
        public override IDataReader GetAllDMLDThuTien(bool loai, bool qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMLDThuTien_Gets", loai, qadmin));
        }
        public override IDataReader GetDMMienGiam(String _maMienGiam)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMMienGiam_Get", _maMienGiam));
        }
        public override IDataReader GetAllDMMienGiam(bool qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMMienGiam_GetAll", qadmin));
        }
        #endregion

        #region Find List
        public override IDataReader FindDMPhauThuat(string _DK, Boolean _qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMPHAUTHUAT_Finds", _DK, _qadmin));
        }
        public override IDataReader FindDMPhauThuatFilter(string _DK, string _DKFilter, Boolean _qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMPHAUTHUAT_FilterFinds", _DK, _DKFilter, _qadmin));
        }
        public override IDataReader FindDMKTPhauThuat(string _DK, Boolean _qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMKTPhauThuat_Finds", _DK, _qadmin));
        }
        public override IDataReader FindDMKTPhauThuatFilter(string _DK, string _DKFilter, Boolean _qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMKTPhauThuat_FilterFinds", _DK, _DKFilter, _qadmin));
        }
        public override IDataReader FindDMPhauThuat_Gia(string _DK, string _madt, Boolean _qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMPhauThuat_Gia_Finds", _DK, _madt, _qadmin));
        }
        public override IDataReader FindDMPhauThuat_GiaFilter(string _DK, string _DKFilter, string _madt, Boolean _qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMPhauThuat_GiaFilter_Finds", _DK, _DKFilter, _madt, _qadmin));
        }
        public override IDataReader FindDMPhauThuat_Gia_DT(string _DK, string _madt, Boolean _qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMPhauThuat_Gia_DT_Finds", _DK, _madt, _qadmin));
        }
        public override IDataReader FindDMLDThuTien(string _DK, Boolean _qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMLDThuTien_Finds", _DK, _qadmin));
        }
        public override IDataReader FindDMGiuong_Gia(string _DK, string _madt, Boolean _qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMGiuong_Gia_Finds", _DK, _madt, _qadmin));
        }
        public override IDataReader FindDMGiuong_Gia(string _DK, string _madt, string makhoa, Boolean _qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMGiuong_GiaKhoa_Finds", _DK, _madt, makhoa, _qadmin));
        }
        public override IDataReader FindDMGiuong_GiaFilter(string _DK, string _DKFilter, string _madt, Boolean _qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMGiuong_GiaFilter_Finds", _DK, _DKFilter, _madt, _qadmin));
        }
        public override IDataReader FindDMGiuong_Khoa(String makhoa, String DK, bool qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMGiuong_GIA_FINDS", makhoa, DK, qadmin));
        }
        public override IDataReader FindDMTienLuong(string _DK, Boolean _qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMTienluong_FINDS", _DK, _qadmin));
        }
        public override IDataReader FindDMNhomMau(string _DK, Boolean _qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMNhomMau_FINDS", _DK, _qadmin));
        }
        public override IDataReader FindDMMienGiam(string _DK, Boolean _qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMMienGiam_FINDS", _DK, _qadmin));
        }
        #endregion

        #region Funtions
        public override void GiaUSD_UPDATE(String maMay, String nguoiSD, decimal tygia)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spGIAUSD_UPDATE", maMay, nguoiSD, tygia);
        }
        #endregion

        #region Danh muc Phau Thuat
        public override String InsertDMPhauThuat(String _tenPT, String _maNHOM, String _tenTA, string _maBYTe, string _QuyetDinh, string _tenTMBH, Boolean _nhapSL, String _tenTat, String _maLH, Decimal _dongiaTT, Decimal _dongiaTT1, SmartDate _ngayTT1, String _maChungloai, Boolean _kTCao, String _ghichu, String _maMay, String _nguoiLap, Boolean _apdungGoi, Boolean _dichVuGui, Decimal _hoaHong, Decimal _gTHoaHong, Boolean _bCThu, Boolean _inThu, Boolean _goidichvu, string _MaBH, string _MaTDuong, string _QuyetDinhBH, string _TenBYTe)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMPHAUTHUAT_CREATE1", _tenPT, _maNHOM, _tenTA, _maBYTe, _QuyetDinh, _tenTMBH, _nhapSL, _tenTat, _maLH, _dongiaTT, _dongiaTT1, _ngayTT1.DBValue, _maChungloai, _kTCao, _ghichu, _maMay, _nguoiLap, _apdungGoi, _dichVuGui, _hoaHong, _gTHoaHong, _bCThu, _inThu, _goidichvu, _MaBH, _MaTDuong, _QuyetDinhBH, _TenBYTe));
        }
        public override void UpdateDMPhauThuat(String _maPT, String _tenPT, String _maNHOM, String _tenTA, string _maBYTe, string _QuyetDinh, string _tenTMBH, Boolean _nhapSL, String _tenTat, String _maLH, Decimal _dongiaTT, Decimal _dongiaTT1, SmartDate _ngayTT1, String _maChungloai, Boolean _kTCao, String _ghichu, String _maMay, String _nguoiSD, Boolean _huy, Boolean _apdungGoi, Boolean _dichVuGui, Decimal _hoaHong, Decimal _gTHoaHong, Boolean _bCThu, Boolean _inThu, Boolean _goidichvu, string _MaBH, string _MaTDuong, string _QuyetDinhBH, string _TenBYTe)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMPHAUTHUAT_UPDATE1", _maPT, _tenPT, _maNHOM, _tenTA, _maBYTe, _QuyetDinh, _tenTMBH, _nhapSL, _tenTat, _maLH, _dongiaTT, _dongiaTT1, _ngayTT1.DBValue, _maChungloai, _kTCao, _ghichu, _maMay, _nguoiSD, _huy, _apdungGoi, _dichVuGui, _hoaHong, _gTHoaHong, _bCThu, _inThu, _goidichvu, _MaBH, _MaTDuong, _QuyetDinhBH, _TenBYTe);
        }
        public override void DeleteDMPhauThuat(String _maMay, String _nguoiSD, String _maPT)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMPHAUTHUAT_DELETED", _maMay, _nguoiSD, _maPT);
        }

        #endregion
        #region Danh muc Phau Thuat
        public override String InsertDMKTPhauThuat(String _tenPT, String _maNHOM, String _tenTA, String _maBYTe, Boolean _nhapSL, String _tenTat, String _maLH, Decimal _dongiaTT, Decimal _dongiaTT1, SmartDate _ngayTT1, String _maChungloai, Boolean _kTCao, String _ghichu, String _maMay, String _nguoiLap, Boolean _apdungGoi, Boolean _dichVuGui, Decimal _hoaHong, Decimal _gTHoaHong, Boolean _bCThu, Boolean _inThu, Boolean _goidichvu)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMKTPhauThuat_CREATE", _tenPT, _maNHOM, _tenTA, _maBYTe, _nhapSL, _tenTat, _maLH, _dongiaTT, _dongiaTT1, _ngayTT1.DBValue, _maChungloai, _kTCao, _ghichu, _maMay, _nguoiLap, _apdungGoi, _dichVuGui, _hoaHong, _gTHoaHong, _bCThu, _inThu, _goidichvu));
        }
        public override void UpdateDMKTPhauThuat(String _maPT, String _tenPT, String _maNHOM, String _tenTA, String _maBYTe, Boolean _nhapSL, String _tenTat, String _maLH, Decimal _dongiaTT, Decimal _dongiaTT1, SmartDate _ngayTT1, String _maChungloai, Boolean _kTCao, String _ghichu, String _maMay, String _nguoiSD, Boolean _huy, Boolean _apdungGoi, Boolean _dichVuGui, Decimal _hoaHong, Decimal _gTHoaHong, Boolean _bCThu, Boolean _inThu, Boolean _goidichvu)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMKTPhauThuat_UPDATE", _maPT, _tenPT, _maNHOM, _tenTA, _maBYTe, _nhapSL, _tenTat, _maLH, _dongiaTT, _dongiaTT1, _ngayTT1.DBValue, _maChungloai, _kTCao, _ghichu, _maMay, _nguoiSD, _huy, _apdungGoi, _dichVuGui, _hoaHong, _gTHoaHong, _bCThu, _inThu, _goidichvu);
        }
        public override void DeleteDMKTPhauThuat(String _maMay, String _nguoiSD, String _maPT)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMKTPhauThuat_DELETED", _maMay, _nguoiSD, _maPT);
        }

        #endregion

        #region Danh muc Phau Thuat Gia
        public override void InsertDMPhauThuat_Gia(String _maDT, String _mAPT, Decimal _dongia, Decimal _giaChenhlech, Boolean _aDChenhlech, Boolean _adgiausd, Boolean _dTBH, Byte _aDPhongMo, Decimal _dongia1, Decimal _giaChenhlech1, SmartDate _ngay1, String _ghichu, String _maMay, String _nguoiLap)
        {
            //return System.Convert.ToString(SqlHelper.ExecuteScalar( ConnectionString, DatabaseOwner + ObjectQualifier + "spDMPhauThuat_GIA_CREATE", _maDT, _mAPT, _dongia, _giaChenhlech, _aDChenhlech, _adgiausd, _dTBH, _aDPhongMo, _dongia1, _giaChenhlech1, _ngay1.DBValue, _ghichu, _maMay, _nguoiLap));
            System.Data.SqlClient.SqlDataReader dr;
            dr = SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMPhauThuat_GIA_CREATE", _maDT, _mAPT, _dongia, _giaChenhlech, _aDChenhlech, _adgiausd, _dTBH, _aDPhongMo, _dongia1, _giaChenhlech1, _ngay1.DBValue, _ghichu, _maMay, _nguoiLap);
            dr.Close();
        }
        public override void UpdateDMPhauThuat_Gia(String _maDT, Decimal _sTT, String _mAPT, Decimal _dongia, Decimal _giaChenhlech, Boolean _aDChenhlech, Boolean _adgiausd, Boolean _dTBH, Byte _aDPhongMo, String _ghichu, String _maMay, Boolean _huy, String _nguoiSD)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMPhauThuat_GIA_UPDATE ", _maDT, _sTT, _mAPT, _dongia, _giaChenhlech, _aDChenhlech, _adgiausd, _dTBH, _aDPhongMo, _ghichu, _maMay, _huy, _nguoiSD);
        }
        public override void DeleteDMPhauThuat_Gia(String _maMay, String _nguoiSD, String _maDT, Decimal _sTT)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMPhauThuat_GIA_DELETED", _maMay, _nguoiSD, _maDT, _sTT);
        }

        #endregion

        #region Danh muc ly do thu tien
        public override String InsertDMGiuong_Khoa(String _sophong, String _makhoa, String _sogiuong, String _ghiChu, String _maMay, String _nguoiSD)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMGiuong_Khoa_CREATE", _sophong, _makhoa, _sogiuong, _ghiChu, _maMay, _nguoiSD));
        }
        public override void UpdateDMGiuong_Khoa(String _sophong, String _makhoa, String _sogiuong, String _ghiChu, Boolean _tinhtrang, String _maMay, Boolean _huy, String _nguoiSD, string _sophongcu, string _sogiuongcu)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMGiuong_Khoa_UPDATED", _sophong, _makhoa, _sogiuong, _ghiChu, _tinhtrang, _maMay, _huy, _nguoiSD, _sophong, _sogiuong);
        }
        public override void DeleteDMGiuong_Khoa(String _maMay, String _nguoiSD, String _sophong, String _sogiuong, String _makhoa)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMGiuong_Khoa_DELETED", _maMay, _nguoiSD, _sophong, _sogiuong, _makhoa);
        }

        #endregion
        #region Danh muc ly do thu tien
        public override String InsertDMLDThuTien(String _tenLDThuTien, String _ghiChu, Boolean _loai, String _maMay, String _nguoiSD, Boolean kieutinh, decimal songay, decimal sotien)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMLDThuTien_CREATE", _tenLDThuTien, _ghiChu, _loai, _maMay, _nguoiSD, kieutinh, songay, sotien));
        }
        public override void UpdateDMLDThuTien(String _maLDThuTien, String _tenLDThuTien, String _ghiChu, Boolean _loai, String _maMay, Boolean _huy, String _nguoiSD, Boolean kieutinh, decimal songay, decimal sotien)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMLDThuTien_UPDATED", _maLDThuTien, _tenLDThuTien, _ghiChu, _loai, _maMay, _huy, _nguoiSD, kieutinh, songay, sotien);
        }
        public override void DeleteDMLDThuTien(String _maMay, String _nguoiSD, String _maLDThuTien)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMLDThuTien_DELETED", _maMay, _nguoiSD, _maLDThuTien);
        }

        #endregion

        #region DM Giuong
        public override String InsertDMGiuong(String _tenGiuong, String _maNHOM, String _tenTA, String _tenTat, Decimal _dongiaTT, Decimal _dongiaTT1, SmartDate _ngayTT1, String _ghichu, String _maMay, String _nguoiLap, Boolean _apdungGoi, Decimal _hoaHong, Decimal _gTHoaHong, Boolean _bCThu, Boolean _inThu, String _tenGiuongBH, string _maBYTe, string _QuyetDinh, string _MaBH, string _MaTDuong, string _QuyetDinhBH, string _TenBYTe)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMGiuong_CREATE1", _tenGiuong, _maNHOM, _tenTA, _tenTat, _dongiaTT, _dongiaTT1, _ngayTT1.DBValue, _ghichu, _maMay, _nguoiLap, _apdungGoi, _hoaHong, _gTHoaHong, _bCThu, _inThu, _tenGiuongBH, _maBYTe, _QuyetDinh, _MaBH, _MaTDuong, _QuyetDinhBH, _TenBYTe));
        }
        public override void UpdateDMGiuong(String _maGiuong, String _tenGiuong, String _maNHOM, String _tenTA, String _tenTat, Decimal _dongiaTT, Decimal _dongiaTT1, SmartDate _ngayTT1, String _ghichu, String _maMay, String _nguoiSD, Boolean _huy, Boolean _apdungGoi, Decimal _hoaHong, Decimal _gTHoaHong, Boolean _bCThu, Boolean _inThu, String _tenGiuongBH, string _maBYTe, string _QuyetDinh, string _MaBH, string _MaTDuong, string _QuyetDinhBH, string _TenBYTe)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMGiuong_UPDATE1", _maGiuong, _tenGiuong, _maNHOM, _tenTA, _tenTat, _dongiaTT, _dongiaTT1, _ngayTT1.DBValue, _ghichu, _maMay, _nguoiSD, _huy, _apdungGoi, _hoaHong, _gTHoaHong, _bCThu, _inThu, _tenGiuongBH, _maBYTe, _QuyetDinh, _MaBH, _MaTDuong, _QuyetDinhBH, _TenBYTe);
        }
        public override void DeleteDMGiuong(String _maMay, String _nguoiSD, String _maGiuong)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMGiuong_DELETED", _maMay, _nguoiSD, _maGiuong);
        }
        #endregion

        #region Danh muc Giuong Gia
        public override String InsertDMGiuong_Gia(String _maDT, String _maGiuong, Decimal _dongia, Decimal _giaChenhlech, Boolean _aDChenhlech, Boolean _adgiausd, Boolean _dTBH, Byte _aDPhongMo, Decimal _dongia1, Decimal _giaChenhlech1, SmartDate _ngay1, String _ghichu, String _maMay, String _nguoiLap)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMGiuong_GIA_CREATE", _maDT, _maGiuong, _dongia, _giaChenhlech, _aDChenhlech, _adgiausd, _dTBH, _aDPhongMo, _dongia1, _giaChenhlech1, _ngay1.DBValue, _ghichu, _maMay, _nguoiLap));
        }
        public override void UpdateDMGiuong_Gia(String _maDT, Decimal _sTT, String _maGiuong, Decimal _dongia, Decimal _giaChenhlech, Boolean _aDChenhlech, Boolean _adgiausd, Boolean _dTBH, Byte _aDPhongMo, String _ghichu, String _maMay, Boolean _huy, String _nguoiSD)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMGiuong_GIA_UPDATE", _maDT, _sTT, _maGiuong, _dongia, _giaChenhlech, _aDChenhlech, _adgiausd, _dTBH, _aDPhongMo, _ghichu, _maMay, _huy, _nguoiSD);
        }
        public override void DeleteDMGiuong_Gia(String _maMay, String _nguoiSD, String _maDT, Decimal _sTT)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMGiuong_GIA_DELETED", _maMay, _nguoiSD, _maDT, _sTT);
        }

        #endregion


        #region DM Tien Luong
        public override String InsertDMTienLuong(String _tenTienluong, String _maMay, String _nguoiSD, String _ghiChu)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMTienluong_CREATE", _tenTienluong, _maMay, _nguoiSD, _ghiChu));
        }
        public override void UpdateDMTienLuong(String _maTienluong, String _tenTienluong, String _maMay, Boolean _huy, String _nguoiSD, String _ghiChu)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMTienluong_UPDATE", _maTienluong, _tenTienluong, _maMay, _huy, _nguoiSD, _ghiChu);
        }
        public override void DeleteDMTienLuong(String _maMay, String _nguoiSD, String _maTienluong)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMTienluong_DELETED", _maMay, _nguoiSD, _maTienluong);
        }
        #endregion

        #region DM nhom mau
        public override String InsertDMNhomMau(String _tenNhomMau, String _maMay, String _nguoiSD, String _ghiChu)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMNhomMau_CREATE", _tenNhomMau, _maMay, _nguoiSD, _ghiChu));
        }
        public override void UpdateDMNhomMau(String _maNhomMau, String _tenNhomMau, String _maMay, Boolean _huy, String _nguoiSD, String _ghiChu)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMNhomMau_UPDATE", _maNhomMau, _tenNhomMau, _maMay, _huy, _nguoiSD, _ghiChu);
        }
        public override void DeleteDMNhomMau(String _maMay, String _nguoiSD, String _maNhomMau)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMNhomMau_DELETED", _maMay, _nguoiSD, _maNhomMau);
        }
        #endregion
        #region DM Mien Giam
        public override String InsertDMMienGiam(String _tenMienGiam, String _maMay, String _nguoiSD, String _ghiChu)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMMienGiam_CREATE", _tenMienGiam, _maMay, _nguoiSD, _ghiChu));
        }
        public override void UpdateDMMienGiam(String _maMienGiam, String _tenMienGiam, String _maMay, Boolean _huy, String _nguoiSD, String _ghiChu)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMMienGiam_UPDATE", _maMienGiam, _tenMienGiam, _maMay, _huy, _nguoiSD, _ghiChu);
        }
        public override void DeleteDMMienGiam(String _maMay, String _nguoiSD, String _maMienGiam)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMMienGiam_DELETED", _maMay, _nguoiSD, _maMienGiam);
        }
        #endregion



        #endregion

        #region DM Thiet bi Y te

		#region Bao Cao

		public override DataSet CRT_TBBanGiao(Decimal MaPhieuXuat, Byte LoaiPhieu)
        {
            DataSet ds = new DataSet();
			string[] s = { "CRTTBBanGiao" };
            SqlHelper.FillDataset(SQLConnectionData, DatabaseOwner + ObjectQualifier + "spTBPHIEUXUAT_GET", ds, s, MaPhieuXuat, LoaiPhieu);
			//ds.WriteXmlSchema("I:\\CRTTBBanGiao.xsd");
            return ds;
        }

		#endregion

        #region Get List

		/// <summary>
		/// Duân Thêm cho phần Huế
		/// </summary>
		/// <param name="_QuyenAdmin"></param>
		/// <returns></returns>
		/// 

		public override DataSet DMTBYTHUE_GETALL(DateTime TuNgay, DateTime DenNgay, Boolean QuyenAdmin)
		{
            return SqlHelper.ExecuteDataset(SQLConnectionData, DatabaseOwner + ObjectQualifier + "spDMTBYT_GETALL", TuNgay, DenNgay, QuyenAdmin);
		}

		public override DataSet TBDMVatTuLinhKien_ByQuyen(Boolean _QuyenAdmin)
		{
            return SqlHelper.ExecuteDataset(SQLConnectionData, DatabaseOwner + ObjectQualifier + "spTBDMVatTuLinhKien_ByQuyen", _QuyenAdmin);
		}

        public override DataSet TBDMVatTuLinhKien_ByMaVT(String _MaVT)
		{
            return SqlHelper.ExecuteDataset(SQLConnectionData, DatabaseOwner + ObjectQualifier + "spTBDMVatTuLinhKien_ByMaVT", _MaVT);
		}

		public override DataSet TBDMVatTuLinhKien_ByMaNhom(String _MaNhom)
		{
            return SqlHelper.ExecuteDataset(SQLConnectionData, DatabaseOwner + ObjectQualifier + "spTBDMVatTuLinhKien_ByMaNhom", _MaNhom);
		}

		public override String TBDMVATTULINHKIEN_INSERT(String MaNhom, String TenTM, String TenTA, Decimal Nguong, String MaDVT, String GhiChu, String MaTB, String MaMay, String NguoiLap, Boolean Handung)
		{
			if (MaTB == "") MaTB = null;
			return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spTBDMVATTULINHKIEN_INSERT", MaNhom, TenTM, TenTA, Nguong, MaDVT, GhiChu, MaTB, MaMay, NguoiLap, Handung));
		}
		public override void TBDMVATTULINHKIEN_UPDATE(String MaVT, String MaNhom, String TenTM, String TenTA, Decimal Nguong, String MaDVT, String GhiChu, String MaTB, String MaMay, String NguoiSD, Boolean Handung)
		{
			if (MaTB == "") MaTB = null;
			SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spTBDMVATTULINHKIEN_UPDATE", MaVT, MaNhom, TenTM, TenTA, Nguong, MaDVT, GhiChu, MaTB, MaMay, NguoiSD, Handung);
		}

		public override void TBDMVATTULINHKIEN_DELETE(String MaVT, String NguoiHuy)
		{
			SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spTBDMVATTULINHKIEN_DELETE", MaVT, NguoiHuy);
		}

//--------------------------------------------------------------------------------------------------------------------------------------------------------------
		/// <summary>
		/// 
		/// </summary>
		/// <param name="Mapx"></param>
		/// <param name="STT"></param>
		/// <param name="MaKho"></param>
		/// <param name="MaNguoiDuyet"></param>
		public override void UpdateLKThaythe_UpdateDuyet(String Mapx, Decimal STT, String MaKho, string MaNguoiDuyet)
		{
			SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "SPLKThaythe_UpdateDuyet", Mapx, STT, MaKho, MaNguoiDuyet);
		}
        public override IDataReader GetAllDMTBYTModel(Boolean _qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMTBYTMODEL_GetAll", _qadmin));
        }
        public override IDataReader FindDMTBYTModel(string _DK, Boolean _qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMTBYTModel_Finds", _DK, _qadmin));
        }
        public override IDataReader GetDMTBYT(String _maTB)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMTBYT_GET", _maTB));
        }
        public override IDataReader GetAllDMTBYT(Boolean qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMTBYT_GetAll", qadmin));
        }
        public override IDataReader GetAllDMTBYT_TON_GETSKHO(String MaKho, DateTime Thang, String dk)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMTBYT_TON_GETSKHO", MaKho, Thang, dk));
        }

		public override IDataReader GetAllDMTBYT_VT_TON_GETSKHO(String MaKho, DateTime Thang, String dk)
		{
			return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMTBYT_VT_TON_GETSKHO", MaKho, Thang, dk));
		}

        public override IDataReader GetAllDMTBYT_TON_GETSKHOA(String MaKhoa, DateTime Thang, String dk)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMTBYT_TON_GETSKHOA", MaKhoa, Thang, dk));
        }

		public override IDataReader GetDMTBVTYT(String _maVT)
		{
			return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMTBVTYT_GET", _maVT));
		}
		public override IDataReader GetAllDMTBVTYT(Boolean _qadmin)
		{
			return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMTBVTYT_GetAll", _qadmin));
		}
		public override IDataReader GetDMTBVTYT_KhoKhoa(String _makho, Decimal _sTT, String _makhoa)
		{
			return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMTBVTYT_KhoKhoa_GET", _makho, _sTT, _makhoa));
		}
		public override IDataReader GetAllDMTBVTYT_KhoKhoa(String makho, String makhoa, Boolean qadmin)
		{
			return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMTBVTYT_KhoKhoa_GETALL", makho, makhoa, qadmin));
		}
		public override IDataReader GetAllDMTBVTYT_KhoKhoaFilter(String makho, String makhoa, String dkfilter, Boolean qadmin)
		{
			return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMTBVTYT_KhoKhoaFilter_GETALL", makho, makhoa, dkfilter, qadmin));
		}
		public override IDataReader GetDMTBVTYTKhoa(String maKhoa, String maDT, String MaVT, byte loai)
		{
			return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMTBVTYT_TON_GETKHOA", maKhoa, maDT, MaVT, loai));
		}
		public override IDataReader GetAllDMTBVTYTKhoa(String maKhoa, String maDT, String DK, byte loai)
		{
			return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMTBVTYT_TON_GETSKHOA", maKhoa, maDT, DK, loai));
		}
		public override IDataReader GetDMTBVTYTTonKho(String maKho, DateTime ngayyclinh, String MaVT)
		{
			return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMTBVTYT_TON_GETKHO", maKho, ngayyclinh, MaVT));
		}
		public override IDataReader GetAllDMTBVTYTTonKho(String maKho, DateTime Thang, String DK)
		{
			return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMTBVTYT_TON_GETSKHO", maKho, Thang, DK));
		}
		public override IDataReader GetDMTBVTYTTonKhoHD(String maKho, DateTime ngayyclinh, String MaVT)
		{
			return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMTBVTYT_TONHD_GETKHO", maKho, ngayyclinh, MaVT, "", null));
		}
		public override IDataReader GetAllDMTBVTYTTonKhoHD(String maKho, DateTime Thang, String DK)
		{
			return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMTBVTYT_TONHD_GETSKHO", maKho, Thang, DK, "", null));
		}
		public override IDataReader GetDMTBVTYTTonKhoHD(String maKho, DateTime ngayyclinh, String MaVT, string solo, DateTime hansd)
		{
			return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMTBVTYT_TONHD_GETKHO", maKho, ngayyclinh, MaVT, solo, hansd));
		}
		public override IDataReader GetAllDMTBVTYTTonKhoHD(String maKho, DateTime Thang, String DK, string solo, DateTime hansd)
		{
			return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMTBVTYT_TONHD_GETSKHO", maKho, Thang, DK, solo, hansd));
		}
		public override IDataReader GetAllDMTBVTYTTonKhoHD(String maKho, String MaNCC, String SoHD, String DK, string solo, DateTime hansd)
		{
			return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMTBVTYT_PHIEUNHAP_GETSKHO", maKho, MaNCC, SoHD, DK, solo, hansd));
		}
		public override IDataReader GetAllDMTBVTYTKhoaBT(String maKhoa, String maDT, String DK, byte loai)
		{
			return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMTBVTYT_TON_GETSKHOABT", maKhoa, maDT, DK, loai));
		}
		public override IDataReader GetAllDMTBVTYTKhoaG(String maKhoa, String maDT, String DK, byte loai)
		{
			return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMTBVTYT_TON_GETSKHOAG", maKhoa, maDT, DK, loai));
		}

		public override IDataReader GetTBPhieuXuat_Hue_GetALL(Boolean QuyenAdmin, String MaKho, Byte LoaiPhieu, DateTime TuNgay, DateTime DenNgay)
		{
			return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spTBPHIEUXUAT_GETALL", QuyenAdmin, MaKho, LoaiPhieu, TuNgay, DenNgay));
		}
		public override IDataReader GetTBPhieuXuat_Hue_Get(Decimal MaPhieuXuat, Byte LoaiPhieu)
		{
			return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spTBPHIEUXUAT_GET", MaPhieuXuat, LoaiPhieu));
		}

		public override string GetDMTBYT_CapMa(String TenTB)
		{
			return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMTBYT_CapMa", TenTB));
		}
        #endregion

        #region Find List
        public override IDataReader FindDMTBYT(string _DK, Boolean _qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMTBYT_FINDS", _DK, _qadmin));
        }
        public override IDataReader FindDMTBYTByNhomTB(string _DK, string _qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spFindDMTBYTByNhomTB", _DK, _qadmin));
        }
		public override IDataReader FindDMTBVTYT(string _DK, Boolean _qadmin)
		{
			return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMTBVTYT_Finds", _DK, _qadmin));
		}

		public override IDataReader FindDMTBVTYTFilter(string _DK, string _DKFilter, Boolean _qadmin)
		{
			return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMTBVTYT_FilterFinds", _DK, _DKFilter, _qadmin));
		}

		public override IDataReader FindTBVTPhieuNhap(string _DK, Boolean _qadmin)
		{
			return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spTBVTPhieuNhap_Finds", _DK, _qadmin));
		}
        #endregion

        #region DM TBYT
        public override String InsertDMTBYT(String _tenTB, String _maNhom, String _maChungLoai, String _maLH, String _maDVT, SmartDate _namSX, Decimal _khoiLuong, Decimal _tl_khcb, String _ghichu, Boolean _s_khauhao, String _congsuatTK, String _maNSX, String _maQG, Int32 _kyBaoDuong, String _maMay, String _nguoiLap, int _thangSD, Boolean _KhongTinhTon)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMTBYT_CREATE", _tenTB, _maNhom, _maChungLoai, _maLH, _maDVT, _namSX.DBValue, _khoiLuong, _tl_khcb, _ghichu, _s_khauhao, _congsuatTK, _maNSX, _maQG, _kyBaoDuong, _maMay, _nguoiLap, _KhongTinhTon, _thangSD));
        }
        public override void UpdateDMTBYT(String _maTB, String _tenTB, String _maNhom, String _maChungLoai, String _maLH, String _maDVT, SmartDate _namSX, Decimal _khoiLuong, Decimal _tl_khcb, String _ghichu, Boolean _s_khauhao, String _congsuatTK, String _maNSX, String _maQG, Int32 _kyBaoDuong, String _maMay, String _nguoiSD, Boolean _huy, int _thangSD, Boolean _KhongTinhTon)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMTBYT_UPDATE", _maTB, _tenTB, _maNhom, _maChungLoai, _maLH, _maDVT, _namSX.DBValue, _khoiLuong, _tl_khcb, _ghichu, _s_khauhao, _congsuatTK, _maNSX, _maQG, _kyBaoDuong, _maMay, _nguoiSD, _huy, _KhongTinhTon, _thangSD);
        }
        public override void DeleteDMTBYT(String _maMay, String _nguoiSD, String _maTB)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMTBYT_DELETED", _maMay, _nguoiSD, _maTB);
        }

		public override String InsertDMTBYT_Hue(String TenTB, String MaDVT, String MaNhom, String MaChungLoai, String MaKho, String MaKhoa, String MaNoiSua, String MaQG, String MaBarCode, String MaNSX, int NamSX, String SerialNo, String Model, int MaTinhTrang, String TanSuatSuDung, int Khauhao, Byte MaKHBaoTri, Boolean BaoTriDinhKy, DateTime KHTuNgay, DateTime KHDenNgay, Decimal Gianhap, String NguonKP, DateTime NgayHopDong, String SoHopDong, String MaNCC, int ThoiGianBH, DateTime NgaySuDung, String AnhTB, String Ghichu, String MaMay, String NguoiLap)
		{
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMTBYT_CREATE", TenTB, MaDVT, MaNhom, MaChungLoai, MaKho, MaKhoa, MaNoiSua, MaQG, MaBarCode, MaNSX, NamSX, SerialNo, Model, MaTinhTrang, TanSuatSuDung, Khauhao, MaKHBaoTri, BaoTriDinhKy, KHTuNgay, KHDenNgay, Gianhap, NguonKP, NgayHopDong, SoHopDong, MaNCC, ThoiGianBH, NgaySuDung, AnhTB, Ghichu, MaMay, NguoiLap));
		}


		public override IDataReader GetALLDMTBYTTREEVIEW(string account)
		{
			return (IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMTBYT_GetTreeView", account);
		}
		public override String InsertDMTBYTNEW(String TenTB, String MaDVT, String MaNhom, String MaChungLoai, String MaKho, String MaKhoa, String MaNoiSua, String MaBarCode, String MaQG, String MaNSX, DateTime NamSX, String SerialNo, String Model, Decimal ThoiGianBH, DateTime NgayHopDong, String SoHopDong, String MaNCC, Decimal Gianhap, DateTime NgaySuDung, String TinhTrangTB, String TanSuatSuDung, Decimal S_khauhao, Boolean KHBaoTri, DateTime KHTuNgay, DateTime KHDenNgay, Byte KHLapLai, String Ghichu, String MaMay, String NguoiLap)
		{
			return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMTBYT_N_CREATE", TenTB, MaDVT, MaNhom, MaChungLoai, MaKho, MaKhoa, MaNoiSua, MaBarCode, MaQG, MaNSX, NamSX, SerialNo, Model, ThoiGianBH, NgayHopDong, SoHopDong, MaNCC, Gianhap, NgaySuDung, TinhTrangTB, TanSuatSuDung, S_khauhao, KHBaoTri, KHTuNgay, KHDenNgay, KHLapLai, Ghichu, MaMay, NguoiLap));
		}
		public override void UpdateDMTBYTNEW(String MATB, String TenTB, String MaDVT, String MaNhom, String MaChungLoai, String MaKho, String MaKhoa, String MaNoiSua, String MaBarCode, String MaQG, String MaNSX, DateTime NamSX, String SerialNo, String Model, Decimal ThoiGianBH, DateTime NgayHopDong, String SoHopDong, String MaNCC, Decimal Gianhap, DateTime NgaySuDung, String TinhTrangTB, String TanSuatSuDung, Decimal S_khauhao, Boolean KHBaoTri, DateTime KHTuNgay, DateTime KHDenNgay, Byte KHLapLai, String Ghichu, String NguoiSD)
		{
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMTBYT_N_UPDATE", MATB, TenTB, MaDVT, MaNhom, MaChungLoai, MaKho, MaKhoa, MaNoiSua, MaBarCode, MaQG, MaNSX, NamSX, SerialNo, Model, ThoiGianBH, NgayHopDong, SoHopDong, MaNCC, Gianhap, NgaySuDung, TinhTrangTB, TanSuatSuDung, S_khauhao, KHBaoTri, KHTuNgay, KHDenNgay, KHLapLai, Ghichu, NguoiSD);
		}
        #endregion
        #endregion

        #region TTKhaiBao
        public override IDataReader GetDMTTKhaiBao(byte _maTTKHAIBAO)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMTTKhaiBao_Get", _maTTKHAIBAO));
        }

        public override IDataReader GetAllDMTTKhaiBao()
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMTTKhaiBao_GetAll"));
        }
        public override IDataReader FindDMTTKhaiBao(string _DK, Boolean _qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMTTKhaiBao_Finds", _DK, _qadmin));
        }
        public override String InsertDMTTKhaiBao(String _tenTTKHAIBAO, string _maMay, String _nguoiSD)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMTTKhaiBao_CREATE", _tenTTKHAIBAO, _maMay, _nguoiSD));
        }
        public override void UpdateDMTTKhaiBao(byte _maTTKHAIBAO, String _tenTTKHAIBAO, string _maMay, String _nguoiSD)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMTTKhaiBao_update", _maTTKHAIBAO, _tenTTKHAIBAO, _maMay, _nguoiSD);
        }
        public override void DeleteDMTTKhaiBao(String _maMay, String _nguoiSD, byte _maTTKHAIBAO)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMTTKhaiBao_Deleted", _maMay, _nguoiSD, _maTTKHAIBAO);
        }

        #endregion
        #region DM KiemDinh_ATBX
        public override String InsertDMKiemDinh_ATBX(string MaTB, string MaGP
           , DateTime NgayKD
           , DateTime NgayHetHanKD
           , string HoatDo
           , bool SuDung
           , string KQKiemDinh
           , byte TTKhaiBao
           , string GhiChu
)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMKiemDinh_ATBX_Create", MaTB, MaGP
           , NgayKD
           , NgayHetHanKD
           , HoatDo
           , SuDung
           , KQKiemDinh
           , TTKhaiBao
           , GhiChu
));
        }
        public override void UpdateDMKiemDinh_ATBX(string MaKD,
string MaGP,
string MaTB,
     DateTime NgayKD,
     DateTime NgayHetHanKD,
      string HoatDo,
      bool SuDung,
      string KQKiemDinh,
      byte TTKhaiBao,
      string GhiChu,
      bool Huy,
      string MaMay,
      string NguoiSD)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMKiemDinh_ATBX_Update", MaKD, MaGP, MaTB,
   NgayKD,
     NgayHetHanKD,
      HoatDo,
       SuDung,
       KQKiemDinh,
       TTKhaiBao,
       GhiChu,
       Huy,
       MaMay,
       NguoiSD);
        }
        public override void DeleteDMKiemDinh_ATBX(string MAMAY, string NGUOISD, string MaKD)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMKiemDinh_ATBX_Delete", MAMAY, NGUOISD, MaKD);
        }
        public override IDataReader GetAllDMKiemDinh_ATBXByMaKhoa(String MaKhoa)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMKiemDinh_ATBX_GetAllByKhoa", MaKhoa));
        }

        public override IDataReader GetAllDMKiemDinh_ATBXByMaTB(String MaTB)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMKiemDinh_ATBX_GetAllByTB", MaTB));
        }

        public override IDataReader GetDMKiemDinh_ATBX(String maKiemDinh)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMKiemDinh_ATBX_GetByID", maKiemDinh));
        }
        public override IDataReader FindDMKiemDinh_ATBX(string MaTB,
            string MaKhoa,
            string HoatDo,
            string MaGP,
            DateTime NgayCap,
            string NoiCap,
            DateTime NgayHetHan,
            bool DangSD,
            byte MaTTKhaiBao,
            string GhiChu,
            DateTime NgayKiemDinh,
            string MaKiemDinh,
            bool Huy)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMKiemDinh_ATBX_Find", MaTB,
             MaKhoa,
             HoatDo,
             MaGP,
             NgayCap,
             NoiCap,
             NgayHetHan,
             DangSD,
             MaTTKhaiBao,
             GhiChu,
             NgayKiemDinh,
             MaKiemDinh,
             Huy));
        }
        public override IDataReader SearchDMKiemDinhATBX(DateTime tungay, DateTime denngay, string matb, string noicap)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMKiemDinh_ATBX_Search", tungay, denngay, matb, noicap));
        }
        #endregion

        #region GiayPhepATBX
        public override IDataReader GetDMGiayPhepATBX(String MaGP)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMGiayPhepATBX_Get", MaGP));
        }
        public override IDataReader GetAllDMGiayPhepATBX()
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMGiayPhepATBX_GetAll"));
        }
        public override IDataReader SearchDMGiayPhepATBX(DateTime tungay, DateTime denngay, string matb, string noicap)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMGiayPhepATBX_Search", tungay, denngay, matb, noicap));
        }
        public override IDataReader SearchByMaTBDMGiayPhepATBX(string matb)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMGiayPhepATBX_SearchByMaTB", matb));
        }
        public override IDataReader FindDMGiayPhepATBX(string _DK)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMGiayPhepATBX_Finds", _DK));
        }
        public override String InsertDMGiayPhepATBX(String MaTB, DateTime NgayCap, DateTime NgayHetHan, String NoiCap, String GhiChu, String SoGP)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMGiayPhepATBX_CREATE", MaTB, NgayCap, NgayHetHan, NoiCap, GhiChu, SoGP));
        }
        public override void UpdateDMGiayPhepATBX(String MaGP, String MaTB, DateTime NgayCap, DateTime NgayHetHan, String NoiCap, bool Huy, String GhiChu, String _maMay, String _nguoiSD, String _SoGP)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMGiayPhepATBX_update", MaGP, MaTB, NgayCap, NgayHetHan, NoiCap, Huy, GhiChu, _maMay, _nguoiSD, _SoGP);
        }
        public override void DeleteDMGiayPhepATBX(String _maMay, String _nguoiSD, String MaGP)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMGiayPhepATBX_Deleted", _maMay, _nguoiSD, MaGP);
        }

        #endregion
        #endregion

		#region DMTBVTYT
		public override String InsertDMTBVTYT(String _maNhom, String _maChungLoai, String _tenTM, String _tenTA, String _maNSX, Decimal _nguong, String _maDVT, Boolean _apDungGoi, Boolean _handung, String _khoban, String _khophat, Boolean _vTThuT, Boolean _vTPhauT, Boolean _vTCLS, Boolean _vTDuoc, Boolean _vTBan, Boolean _duyetNgoaiT, Boolean _duyetNoiT, String _ghichu, string _maMay, String _nguoiLap, Boolean _vTNoiT, String _maLH, String _hamluong, String _madvthl, Boolean KhongSD, String _maql, string _quycach, String _madvt2, Decimal _quydoi, byte _loai)
		{
			return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMTBVTYT_CREATE", _maNhom, _maChungLoai, _tenTM, _tenTA, _maNSX, _nguong, _maDVT, _apDungGoi, _handung, _khoban, _khophat, _vTThuT, _vTPhauT, _vTCLS, _vTDuoc, _vTBan, _duyetNgoaiT, _duyetNoiT, _ghichu, _maMay, _nguoiLap, _vTNoiT, _maLH, _hamluong, _madvthl, KhongSD, _maql, _quycach, _madvt2, _quydoi, _loai));
		}
        public override String UpdateDMTBVTYT(String _maVT, String _maNhom, String _maChungLoai, String _tenTM, String _tenTA, String _maNSX, Decimal _nguong, String _maDVT, Boolean _apDungGoi, Boolean _handung, String _khoban, String _khophat, Boolean _vTThuT, Boolean _vTPhauT, Boolean _vTCLS, Boolean _vTDuoc, Boolean _vTBan, Boolean _duyetNgoaiT, Boolean _duyetNoiT, String _ghichu, string _maMay, Boolean _huy, String _nguoiSD, Boolean _vTNoiT, String _maLH, String _hamluong, String _madvthl, Boolean KhongSD, String _maql, string _quycach, String _madvt2, Decimal _quydoi)
		{
			return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMTBVTYT_UPDATE", _maVT, _maNhom, _maChungLoai, _tenTM, _tenTA, _maNSX, _nguong, _maDVT, _apDungGoi, _handung, _khoban, _khophat, _vTThuT, _vTPhauT, _vTCLS, _vTDuoc, _vTBan, _duyetNgoaiT, _duyetNoiT, _ghichu, _maMay, _huy, _nguoiSD, _vTNoiT, _maLH, _hamluong, _madvthl, KhongSD, _maql, _quycach, _madvt2, _quydoi));
		}
		public override void DeleteDMTBVTYT(String _maMay, String _nguoiSD, String _maVT)
		{
			SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMTBVTYT_DELETED", _maMay, _nguoiSD, _maVT);
		}
		public override String InsertDMTBVTYT_KhoKhoa(String _makho, String _makhoa, String _maVT, String _nguoiSD, string _maMay)
		{
			return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMTBVTYT_KhoKhoa_Create", _makho, _makhoa, _maVT, _nguoiSD, _maMay));
		}
		public override void UpdateDMTBVTYT_KhoKhoa(String _makho, Decimal _sTT, String _makhoa, String _maVT, Boolean _huy, String _nguoiSD, string _maMay)
		{
			SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMTBVTYT_KhoKhoa_Update", _makho, _sTT, _makhoa, _maVT, _huy, _nguoiSD, _maMay);
		}
		public override void DeleteDMTBVTYT_KhoKhoa(String _maMay, String _nguoiSD, String _makho, Decimal _sTT, String _makhoa)
		{
			SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMTBVTYT_KhoKhoa_Deleted", _maMay, _nguoiSD, _makho, _sTT, _makhoa);
		}

		public override String InsertTBVTPhieuNhap(string _maNCC, String _soHD, String _soCT, SmartDate _ngayPNhap, String _maKho, decimal _chietKhau, Boolean _thanhToan, SmartDate _ngayTToan, SmartDate _ngayNhapTT, String _NVNhap, decimal _VTTong, String _ghiChu, Boolean _huy, String _nguoiSD, string _maMay, String _nguoiGiao, String _manguon, String _mahinhthuc, string _sohdon, SmartDate _ngayhdon)
		{
			return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spTBVTPhieuNhap_CREATE", _maNCC, _soHD, _soCT, _ngayPNhap.DBValue, _maKho, _chietKhau, _thanhToan, _ngayTToan.DBValue, _ngayNhapTT.DBValue, _NVNhap, _VTTong, _ghiChu, _huy, _nguoiSD, _maMay, _nguoiGiao, _manguon, _mahinhthuc, _sohdon, _ngayhdon.DBValue));
		}
		public override void UpdateTBVTPhieuNhap(String _maPN, string _maNCC, String _soHD, String _soCT, SmartDate _ngayPNhap, String _maKho, decimal _chietKhau, Boolean _thanhToan, SmartDate _ngayTToan, SmartDate _ngayNhapTT, String _NVNhap, decimal _VTTong, String _ghiChu, Boolean _huy, String _nguoiSD, SmartDate _ngaySD1, String _nguoiSD1, String _nguoiGiao, String _manguon, String _mahinhthuc, string _sohdon, SmartDate _ngayhdon)
		{
			System.Data.SqlClient.SqlDataReader dr;
			dr = SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spTBVTPhieuNhap_UPDATE", _maPN, _maNCC, _soHD, _soCT, _ngayPNhap.DBValue, _maKho, _chietKhau, _thanhToan, _ngayTToan.DBValue, _ngayNhapTT.DBValue, _NVNhap, _VTTong, _ghiChu, _huy, _nguoiSD, _ngaySD1.DBValue, _nguoiSD1, _nguoiGiao, _manguon, _mahinhthuc, _sohdon, _ngayhdon.DBValue);
			dr.Close();
			dr = null;

		}
		public override void DeleteTBVTPhieuNhap(String _maPN, SmartDate _ngaySD, string _maMay, String _nguoiSD)
		{
			SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spTBVTPhieuNhap_DELETED", _maPN, _ngaySD.DBValue, _maMay, _nguoiSD);
		}

		public override String InsertTBVTPhieuNhap_C(String _maPN, String _maThuoc, decimal _soluong, SmartDate _hanSD, decimal _donGia, decimal _chietKhau, String _soLo, Boolean _huy, String _ghiChu, string _maMay, String _nguoiSD)
		{
			return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spTBVTPhieuNhap_C_CREATE", _maPN, _maThuoc, _soluong, _hanSD.DBValue, _donGia, _chietKhau, _soLo, _huy, _ghiChu, _maMay, _nguoiSD));
		}
		public override void UpdateTBVTPhieuNhap_C(String _maPN, decimal _sTT, String _maThuoc, decimal _soluong, SmartDate _hanSD, decimal _donGia, decimal _chietKhau, String _soLo, Boolean _huy, String _ghiChu, SmartDate _ngaySD, string _maMay, String _nguoiSD)
		{
			SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spTBVTPhieuNhap_C_UPDATE", _maPN, _sTT, _maThuoc, _soluong, _hanSD.DBValue, _donGia, _chietKhau, _soLo, _huy, _ghiChu, _ngaySD.DBValue, _maMay, _nguoiSD);
		}
		public override void DeleteTBVTPhieuNhap_C(String _maPN, decimal _sTT, String _nguoiSD, String _maMay)
		{
			SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spTBVTPhieuNhap_C_DELETED", _maPN, _sTT, _nguoiSD, _maMay);
		}

		public override Decimal InsertTBPhieuXuat_Hue(String Noixuat, String Noinhap, Byte Loaiphieu, DateTime Ngayxuat, DateTime NgayxuatTT, String NVXuat, String NVNhan, String Noidungxuat, String MaMay, String NguoiLap, Boolean DaPhat, Boolean DaDuyet, String MaTB, String Model, String SerialNo, String MaBarCode, Decimal Dongia)
		{
			return System.Convert.ToDecimal(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spTBPHIEUXUAT_INSERT", Noixuat, Noinhap, Loaiphieu, Ngayxuat, NgayxuatTT, NVXuat, NVNhan, Noidungxuat, MaMay, NguoiLap, DaPhat, DaDuyet, MaTB, Model, SerialNo, MaBarCode, Dongia));
		}

		public override void UpdateTBPhieuXuat_Hue(decimal Mapx, String Noixuat, String Noinhap, Byte Loaiphieu, DateTime Ngayxuat, DateTime NgayxuatTT, String NVXuat, String NVNhan, String Noidungxuat, String NguoiSD, Boolean Huy, Boolean DaPhat, Boolean DaDuyet, String MaTB, String Model, String SerialNo, String MaBarCode, Decimal Dongia)
		{
			SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spTBPHIEUXUAT_UPDATE", Mapx, Noixuat, Noinhap, Loaiphieu, Ngayxuat, NgayxuatTT, NVXuat, NVNhan, Noidungxuat, NguoiSD, Huy, DaPhat, DaDuyet, MaTB, Model, SerialNo, MaBarCode, Dongia);
		}

		public override void DeleteTBPhieuXuat_Hue(string NguoiHuy, Decimal MaPX)
		{
			SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spTBPHIEUXUAT_DELETED", NguoiHuy, MaPX);
		}

		#endregion

        #region DMTBYTModel
        public override String InsertDMTBYTModel(String _tenMODEL, String _ghichu, string _maMay, String _nguoiSD, string tenta)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMTBYTMODEL_CREATE", _tenMODEL, _ghichu, _maMay, _nguoiSD, tenta));
        }
        public override void UpdateDMTBYTModel(String _maMODEL, String _tenMODEL, String _ghichu, string _maMay, String _nguoiSD, string tenta, bool _huy)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMTBYTMODEL_UPDATE", _maMODEL, _tenMODEL, _ghichu, _maMay, _nguoiSD, tenta, _huy);
        }
        public override void DeleteDMTBYTModel(String _maMay, String _nguoiSD, String _maMODEL)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMTBYTMODEL_DELETED", _maMay, _nguoiSD, _maMODEL);
        }
        #endregion
        #region Phong kham
        #region func
        public override void KhamBenh_TINHLAIDT(String _maSoKham, String _madt, Byte _loai, String _dk)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spKhamBenh_TINHLAIDT", _maSoKham, _madt, _loai, _dk);
        }
        #endregion
        #region Get List
        public override IDataReader GetThongTinBN_TienSu_San(String _maBN)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spThongTinBN_TienSu_San_GET", _maBN));
        }
        public override IDataReader GetAllThongTinBN_TienSu_San(String _dKien, bool qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spThongTinBN_TienSu_San_GETALL", _dKien, qadmin));
        }
        public override IDataReader GetThongTinBN_TienSu_San_C(String _maBN, Int32 _sTT)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spThongTinBN_TienSu_San_C_GET", _maBN, _sTT));
        }
        public override IDataReader GetThongTinBN_TienSu_VoSinh(String _maBN)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spThongTinBN_TienSu_VoSinh_GET", _maBN));
        }
        public override IDataReader GetAllThongTinBN_TienSu_VoSinh(String _dKien, bool qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spThongTinBN_TienSu_VoSinh_GETALL", _dKien, qadmin));
        }

        public override IDataReader GetThongtinBN(String _maBN)
        {

            //  return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spTHONGTINBN_GET", _maBN));
            //System.Data.SqlClient.SqlDataReader dr;
            //System.Data.SqlClient.SqlDataReader dr1;
            //dr = SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spTHONGTINBN_GET", _maBN);
            //dr1 = dr;
            //dr.Close();
            //return dr;
            System.Data.SqlClient.SqlCommand cmd = SqlHelper.CreateCommand(SQLConnectionBD, DatabaseOwner + ObjectQualifier + "spTHONGTINBN_GET");

            cmd.CommandTimeout = 18000;
            cmd.CommandType = System.Data.CommandType.StoredProcedure;
            cmd.Parameters.AddWithValue("mabn", _maBN);


            IDataReader dt;
            dt = (IDataReader)cmd.ExecuteReader(CommandBehavior.CloseConnection); ;
            cmd.Dispose();
            cmd = null;
            ////// if (SQLConnectionBD.State == System.Data.ConnectionState.Closed)
            ////     //SQLConnectionBD.Close(); SQLConnectionBD.Dispose();
            //// //if (_sqlConnection.State == System.Data.ConnectionState.Closed)
            //// {
            ////     //_sqlConnection.Close(); _sqlConnection.Dispose();
            ////     //_sqlConnection = null;
            //// }
            return dt;
        }
        //public override IDataReader GetThongtinBN(String _maBN, DateTime _ngaydk)
        //{
        //    return ((IDataReader)SqlHelper.ExecuteReader( ConnectionString, DatabaseOwner + ObjectQualifier + "spTHONGTINBN_GET", _maBN, _ngaydk));
        //}
        public override IDataReader GetAllThongtinBN(DateTime tungay, DateTime denngay, string madt, string dk, bool qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spTHONGTINBN_GETALL", tungay, denngay, madt, dk, qadmin));

        }
        public override IDataReader GetKhamBenh(String _maSoKham, Byte _loai)
        {
            //  return ((IDataReader)SqlHelper.ExecuteReader( ConnectionString, DatabaseOwner + ObjectQualifier + "spKhamBenh_GET", _maSoKham,_loai));
            // return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spTHONGTINBN_GET", _maSoKham, _loai));
            System.Data.SqlClient.SqlCommand cmd = SqlHelper.CreateCommand(SQLConnectionBD, DatabaseOwner + ObjectQualifier + "spTHONGTINBN_GET");

            cmd.CommandTimeout = 18000;
            cmd.CommandType = System.Data.CommandType.StoredProcedure;
            cmd.Parameters.AddWithValue("masokham", _maSoKham);
            cmd.Parameters.AddWithValue("loai", _loai);

            IDataReader dt;
            dt = (IDataReader)cmd.ExecuteReader(CommandBehavior.CloseConnection); ;
            cmd.Dispose();
            cmd = null;
            ////// if (SQLConnectionBD.State == System.Data.ConnectionState.Closed)
            ////     //SQLConnectionBD.Close(); SQLConnectionBD.Dispose();
            //// //if (_sqlConnection.State == System.Data.ConnectionState.Closed)
            //// {
            ////     //_sqlConnection.Close(); _sqlConnection.Dispose();
            ////     //_sqlConnection = null;
            //// }
            return dt;
        }
        public override IDataReader GetKhamBenh(String _mabn, DateTime _ngaydk, byte loai, string _noitt)
        {
            // return ((IDataReader)SqlHelper.ExecuteReader( ConnectionString, DatabaseOwner + ObjectQualifier + "spKhamBenh_Find", _mabn,_ngaydk ,_dk, _loai,_loaikqcn,_qadmin ));
            // return ((IDataReader)SqlHelper.ExecuteReader( ConnectionString, DatabaseOwner + ObjectQualifier + "spKhamBenh_Find", "110", DateAndTime.DateValue("06/04/2009")  , "1",3));
            // return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spKhamBenh_FindTT", _mabn, _ngaydk, loai, _noitt, ""));

            System.Data.SqlClient.SqlCommand cmd = SqlHelper.CreateCommand(SQLConnectionBD, DatabaseOwner + ObjectQualifier + "spKhamBenh_FindTT");

            cmd.CommandTimeout = 18000;
            cmd.CommandType = System.Data.CommandType.StoredProcedure;
            cmd.Parameters.AddWithValue("mabn", _mabn);
            cmd.Parameters.AddWithValue("ngaydk", _ngaydk);
            cmd.Parameters.AddWithValue("loai", loai);
            cmd.Parameters.AddWithValue("noitt", _noitt);
            cmd.Parameters.AddWithValue("DK", " ");

            IDataReader dt;
            dt = (IDataReader)cmd.ExecuteReader(CommandBehavior.CloseConnection); ;
            cmd.Dispose();
            cmd = null;
            ////// if (SQLConnectionBD.State == System.Data.ConnectionState.Closed)
            ////     //SQLConnectionBD.Close(); SQLConnectionBD.Dispose();
            //// //if (_sqlConnection.State == System.Data.ConnectionState.Closed)
            //// {
            ////     //_sqlConnection.Close(); _sqlConnection.Dispose();
            ////     //_sqlConnection = null;
            //// }
            return dt;
        }

        public override IDataReader GetKhamBenh(String _mabn, DateTime _ngaydk, string _dk, Byte _loai, byte _loaikqcn, Boolean _qadmin)
        {
            // return ((IDataReader)SqlHelper.ExecuteReader( ConnectionString, DatabaseOwner + ObjectQualifier + "spKhamBenh_Find", _mabn,_ngaydk ,_dk, _loai,_loaikqcn,_qadmin ));
            // return ((IDataReader)SqlHelper.ExecuteReader( ConnectionString, DatabaseOwner + ObjectQualifier + "spKhamBenh_Find", "110", DateAndTime.DateValue("06/04/2009")  , "1",3));
            // return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spKhamBenh_Find", _mabn, _ngaydk, _dk, _loai, _loaikqcn, _qadmin));

            System.Data.SqlClient.SqlCommand cmd = SqlHelper.CreateCommand(SQLConnectionBD, DatabaseOwner + ObjectQualifier + "spKhamBenh_Find");

            cmd.CommandTimeout = 18000;
            cmd.CommandType = System.Data.CommandType.StoredProcedure;
            cmd.Parameters.AddWithValue("mabn", _mabn);
            cmd.Parameters.AddWithValue("ngaydk", _ngaydk);
            cmd.Parameters.AddWithValue("dk", _dk);
            cmd.Parameters.AddWithValue("loai", _loai);
            cmd.Parameters.AddWithValue("loaikq", _loaikqcn);
            cmd.Parameters.AddWithValue("qadmin", _qadmin);

            IDataReader dt;
            dt = (IDataReader)cmd.ExecuteReader(CommandBehavior.CloseConnection); ;
            cmd.Dispose();
            cmd = null;
            ////// if (SQLConnectionBD.State == System.Data.ConnectionState.Closed)
            ////     //SQLConnectionBD.Close(); SQLConnectionBD.Dispose();
            //// //if (_sqlConnection.State == System.Data.ConnectionState.Closed)
            //// {
            ////     //_sqlConnection.Close(); _sqlConnection.Dispose();
            ////     //_sqlConnection = null;
            //// }
            return dt;
        }
        public override IDataReader GetAllKhamBenhByMaBN(string maBN, DateTime ngayYC, Byte loai, string dk, Boolean qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionStringBC, DatabaseOwner + ObjectQualifier + "spKhamBenh_GETsMABN", maBN, ngayYC, loai, dk, qadmin));
        }
        public override IDataReader GetAllKhamBenh_DongTien(String Masokham, string dk, bool qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spKhamBenh_DongTien_GETAll", Masokham, dk, qadmin));
        }
        public override IDataReader GetAllPhieuThuChi(DateTime ngayYC, DateTime _denngayYC, byte loai, String noitt, string dk, bool qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spPhieuThuChi_GETAll", ngayYC, _denngayYC, loai, noitt, dk, qadmin));
        }
        public override IDataReader GetPhieuThuChi(String sophieu)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spPhieuThuChi_GET", sophieu));
        }
        public override IDataReader GetKhamBenh_DongTien(String Masokham, int stt, bool qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spKhamBenh_DongTien_GET", Masokham, stt));
        }
        public override IDataReader GetKhamBenh_C(String _maSoKham, Int32 _sTT, byte _loai)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spKhamBenh_C_GET", _maSoKham, _sTT, _loai));
        }
        public override IDataReader GetAllKhamBenh_XN(String _maSoKham, Int32 _sTT)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spKhamBenh_XN_GETall", _maSoKham, _sTT));
        }
        public override IDataReader GetAllKhamBenh_LL(String Masokham, string dk, bool qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spKhamBenh_LL_GETAll", Masokham, dk, qadmin));
        }
        public override IDataReader GetKhamBenh_LL(String Masokham, Int32 _sTT, Int32 _sTTTH)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spKhamBenh_LL_GET", Masokham, _sTT, _sTTTH));
        }
        public override IDataReader GetAllKhamBenh_TM(String _maSoKham, Int32 _sTT)
        {

            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spKhamBenh_TM_GETall", _maSoKham, _sTT));
        }


        public override IDataReader GetKhamBenh_Ngoai(String _MaSoKham, Int32 _sTT)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spKhamBenh_Ngoai_GET", _MaSoKham, _sTT));
        }
        public override IDataReader GetAllKhamBenh_Ngoai(String MaSoKham, Int32 sTT)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spKhamBenh_Ngoai_GETAll", MaSoKham, sTT));
        }

        public override IDataReader GetKhamBenh_CoXuongKhop(String _MaSoKham, Int32 _sTT)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spKhamBenh_CoXuongKhop_GET", _MaSoKham, _sTT));
        }
        public override IDataReader GetAllKhamBenh_CoXuongKhop(String MaSoKham, Int32 _sTT)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spKhamBenh_CoXuongKhop_GETAll", MaSoKham, _sTT));
        }

        public override IDataReader GetKhamBenh_CTCH(String _MaSoKham, Int32 _sTT)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spKhamBenh_CTCH_GET", _MaSoKham, _sTT));
        }
        public override IDataReader GetAllKhamBenh_CTCH(String MaSoKham, Int32 _sTT)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spKhamBenh_CTCH_GETAll", MaSoKham, _sTT));
        }
        public override IDataReader GetKhamBenh_Noi(String _MaSoKham, Int32 _sTT)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spKhamBenh_Noi_GET", _MaSoKham, _sTT));
        }
        public override IDataReader GetKhamBenh_ThuThuat(String _MaSoKham, Int32 _sTT)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spKhamBenh_ThuThuat_GET", _MaSoKham, _sTT));
        }
        public override IDataReader GetAllKhamBenh_Noi(String MaSoKham, Int32 _sTT)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spKhamBenh_Noi_GETAll", MaSoKham, _sTT));
        }

        public override IDataReader GetKhamBenh_DY(String _MaSoKham, Int32 _sTT)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spKhamBenh_DY_GET", _MaSoKham, _sTT));
        }
        public override IDataReader GetAllKhamBenh_DY(String MaSoKham, Int32 _sTT)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spKhamBenh_DY_GETAll", MaSoKham, _sTT));
        }

        public override IDataReader GetAllPhieuNhap_HD(DateTime tungayYC, DateTime denngayYC, string makho, byte loai, String _DK, Boolean _QADMIN)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spPhieuNhap_HD_GETALL", tungayYC, denngayYC, makho, loai, _DK, _QADMIN));
        }
        public override IDataReader GetKhamBenh_Nhi(String _MaSoKham, Int32 _sTT)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spKhamBenh_Nhi_GET", _MaSoKham, _sTT));
        }
        public override IDataReader GetAllKhamBenh_Nhi(String MaSoKham, Int32 _sTT)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spKhamBenh_Nhi_GETAll", MaSoKham, _sTT));
        }
        public override IDataReader GetKhamBenh_SanPhu(String _MaSoKham, Int32 _sTT)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spKhamBenh_SanPhu_GET", _MaSoKham, _sTT));
        }
        public override IDataReader GetAllKhamBenh_SanPhu(String MaSoKham, Int32 _sTT)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spKhamBenh_SanPhu_GETAll", MaSoKham, _sTT));
        }
        public override IDataReader GetKhamBenh_SanSan(String _MaSoKham, Int32 _sTT)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spKhamBenh_SanSan_GET", _MaSoKham, _sTT));
        }
        public override IDataReader GetAllKhamBenh_SanSan(String MaSoKham, Int32 _sTT)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spKhamBenh_SanSan_GETAll", MaSoKham, _sTT));
        }
        public override IDataReader GetKhamBenh_KHGD(String _MaSoKham, Int32 _sTT)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spKhamBenh_KHGD_GET", _MaSoKham, _sTT));
        }
        public override IDataReader GetAllKhamBenh_KHGD(String MaSoKham, Int32 _sTT)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spKhamBenh_KHGD_GETAll", MaSoKham, _sTT));
        }
        public override IDataReader GetKhamBenh_BenhMau(String _MaSoKham, Int32 _sTT)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spKhamBenh_BenhMau_GET", _MaSoKham, _sTT));
        }
        public override IDataReader GetAllKhamBenh_BenhMau(String MaSoKham, Int32 _sTT)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spKhamBenh_BenhMau_GETAll", MaSoKham, _sTT));
        }
        public override IDataReader GetKhamBenh_TruyenNhiem(String _MaSoKham, Int32 _sTT)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spKhamBenh_TruyenNhiem_GET", _MaSoKham, _sTT));
        }
        public override IDataReader GetAllKhamBenh_TruyenNhiem(String MaSoKham, Int32 _sTT)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spKhamBenh_TruyenNhiem_GETAll", MaSoKham, _sTT));
        }
        public override IDataReader GetKhamBenh_PHCN(String _MaSoKham, Int32 _sTT)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spKhamBenh_PHCN_GET", _MaSoKham, _sTT));
        }
        public override IDataReader GetAllKhamBenh_PHCN(String MaSoKham, Int32 _sTT)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spKhamBenh_PHCN_GETAll", MaSoKham, _sTT));
        }
        public override IDataReader GetKhamBenh_DaLieu(String _MaSoKham, Int32 _sTT)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spKhamBenh_DaLieu_GET", _MaSoKham, _sTT));
        }
        public override IDataReader GetAllKhamBenh_DaLieu(String MaSoKham, Int32 _sTT)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spKhamBenh_DaLieu_GETAll", MaSoKham, _sTT));
        }
        public override IDataReader GetKhamBenh_UB(String _MaSoKham, Int32 _sTT)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spKhamBenh_UB_GET", _MaSoKham, _sTT));
        }
        public override IDataReader GetAllKhamBenh_UB(String MaSoKham, Int32 _sTT)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spKhamBenh_UB_GETAll", MaSoKham, _sTT));
        }
        public override IDataReader GetKhamBenh_Bong(String _MaSoKham, Int32 _sTT)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spKhamBenh_Bong_GET", _MaSoKham, _sTT));
        }
        public override IDataReader GetAllKhamBenh_Bong(String MaSoKham, Int32 _sTT)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spKhamBenh_Bong_GETAll", MaSoKham, _sTT));
        }
        public override IDataReader GetBenhAnPK_RHM(String _MaSoKham)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spBenhAnPK_RHM_GET", _MaSoKham));
        }
        public override IDataReader GetKhamBenh_RHM(String _MaSoKham, Int32 _sTT)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spKhamBenh_RHM_GET", _MaSoKham, _sTT));
        }
        public override IDataReader GetAllKhamBenh_RHM(String MaSoKham, Int32 _sTT)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spKhamBenh_RHM_GETAll", MaSoKham, _sTT));
        }
        public override IDataReader GetKhamBenh_Lao(String _MaSoKham, Int32 _sTT)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spKhamBenh_Lao_GET", _MaSoKham, _sTT));
        }
        public override IDataReader GetAllKhamBenh_Lao(String MaSoKham, Int32 _sTT)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spKhamBenh_Lao_GETAll", MaSoKham, _sTT));
        }
        public override IDataReader GetKhamBenh_TamThan(String _MaSoKham, Int32 _sTT)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spKhamBenh_TamThan_GET", _MaSoKham, _sTT));
        }
        public override IDataReader GetAllKhamBenh_TamThan(String MaSoKham, Int32 _sTT)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spKhamBenh_TamThan_GETAll", MaSoKham, _sTT));
        }
        public override IDataReader GetKhamBenh_San(String _MaSoKham, Int32 _sTT)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spKhamBenh_San_GET", _MaSoKham, _sTT));
        }
        public override IDataReader GetAllKhamBenh_San(String MaSoKham, Int32 _sTT)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spKhamBenh_San_GETAll", MaSoKham, _sTT));
        }

        public override IDataReader GetKhamBenh_SanSanCC(String _MaSoKham, Int32 _sTT)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spKhamBenh_SanCC_GET", _MaSoKham, _sTT));
        }
        public override IDataReader GetAllKhamBenh_SanSanCC(String MaSoKham, Int32 _sTT)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spKhamBenh_SanCC_GETAll", MaSoKham, _sTT));
        }

        public override IDataReader GetKhamBenh_VoSinh(String _MaSoKham, Int32 _sTT)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spKhamBenh_VoSinh_GET", _MaSoKham, _sTT));
        }
        public override IDataReader GetAllKhamBenh_VoSinh(String MaSoKham, Int32 _sTT)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spKhamBenh_VoSinh_GETAll", MaSoKham, _sTT));
        }

        public override IDataReader GetKhamBenh_VoSinhNu(String _MaSoKham, Int32 _sTT)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spKhamBenh_VoSinhNu_GET", _MaSoKham, _sTT));
        }
        public override IDataReader GetAllKhamBenh_VoSinhNu(String MaSoKham, Int32 _sTT)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spKhamBenh_VoSinhNu_GETAll", MaSoKham, _sTT));
        }
        public override IDataReader GetKhamBenh_TMH(String _MaSoKham, Int32 _sTT)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spKhamBenh_TMH_GET", _MaSoKham, _sTT));
        }
        public override IDataReader GetAllKhamBenh_TMH(String MaSoKham, Int32 _sTT)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spKhamBenh_TMH_GETAll", MaSoKham, _sTT));
        }
        public override IDataReader GetKhamBenh_VLTL(String _MaSoKham, Int32 _sTT)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spKhamBenh_VLTL_GET", _MaSoKham, _sTT));
        }
        public override IDataReader GetAllKhamBenh_VLTL(string MaSoKham, Int32 _sTT)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spKhamBenh_VLTL_GETAll", MaSoKham, _sTT));
        }
        public override IDataReader GetKhamBenh_Mat(String _MaSoKham, Int32 _sTT)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spKhamBenh_Mat_GET", _MaSoKham, _sTT));
        }
        public override IDataReader GetAllKhamBenh_Mat(string MaSoKham, Int32 _sTT)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spKhamBenh_Mat_GETAll", MaSoKham, _sTT));
        }

        public override IDataReader GetKhamBenh_Phu(String _MaSoKham, Int32 _sTT)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spKhamBenh_Phu_GET", _MaSoKham, _sTT));
        }
        public override IDataReader GetAllKhamBenh_Phu(string MaSoKham, Int32 _sTT)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spKhamBenh_Phu_GETAll", MaSoKham, _sTT));
        }
        public override IDataReader GetAllKhamBenh_GETsMABNInfo(String _MABN, Byte _loai, String _dk, Boolean _qadmin)
        {
              return ((IDataReader)SqlHelper.ExecuteReader(ConnectionStringBC, DatabaseOwner + ObjectQualifier + "spKhamBenh_GETsMABN", _loai, _dk, _MABN, _qadmin));//, "")); //, 0, true)); // loai, qadmin));
            //System.Data.SqlClient.SqlCommand cmd = SqlHelper.CreateCommand(SQLConnectionBD, DatabaseOwner + ObjectQualifier + "spKhamBenh_GETsMABN");
            //cmd.CommandTimeout = 18000;

            //cmd.CommandType = System.Data.CommandType.StoredProcedure;
            //cmd.Parameters.AddWithValue("MABN", _MABN);
            //cmd.Parameters.AddWithValue("dk", _dk);
            //cmd.Parameters.AddWithValue("loai", _loai);
            //cmd.Parameters.AddWithValue("qadmin", _qadmin);
            //IDataReader dt;
            //dt = (IDataReader)cmd.ExecuteReader(CommandBehavior.CloseConnection);
            //cmd.Dispose();
            //cmd = null;
            //return dt;
        }
        public override IDataReader GetAllKhamBenh_XQ_GETsInfo(Boolean _qadmin, Byte _DaTT, DateTime _ngayYC, byte _loai, string _dk, string _makhoa, DateTime _denngayYC)
        {

            // return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spKhamBenh_XQ_GETs", _qadmin, _DaTT, _ngayYC, _loai, _dk, _makhoa, _denngayYC));
            System.Data.SqlClient.SqlCommand cmd = SqlHelper.CreateCommand(SQLConnectionDataBC, DatabaseOwner + ObjectQualifier + "spKhamBenh_XQ_GETs");

            cmd.CommandTimeout = 18000;
            cmd.CommandType = System.Data.CommandType.StoredProcedure;
            cmd.Parameters.AddWithValue("qadmin", _qadmin);
            cmd.Parameters.AddWithValue("loaikqcn", _DaTT);
            cmd.Parameters.AddWithValue("tuNgayYC", _ngayYC);

            cmd.Parameters.AddWithValue("loai", _loai);
            cmd.Parameters.AddWithValue("DK", _dk);
            cmd.Parameters.AddWithValue("MaKhoa", _makhoa);

            cmd.Parameters.AddWithValue("DenNgayyc", _denngayYC);

            IDataReader dt;
            dt = (IDataReader)cmd.ExecuteReader(CommandBehavior.CloseConnection); ;
            cmd.Dispose();
            cmd = null;
            //// if (SQLConnectionBD.State == System.Data.ConnectionState.Closed)
            //     //SQLConnectionBD.Close(); SQLConnectionBD.Dispose();
            // //if (_sqlConnection.State == System.Data.ConnectionState.Closed)
            // {
            //     //_sqlConnection.Close(); _sqlConnection.Dispose();
            //     //_sqlConnection = null;
            // }
            return dt;
        }
        public override IDataReader GetAllKhamBenh_XQ_GETFiltersInfo(Boolean _qadmin, Byte _DaTT, DateTime _ngayYC, byte _loai, string _dk, string _dkfilter, string _makhoa, DateTime _denngayYC)
        {

            // return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spKhamBenh_XQ_GETs", _qadmin, _DaTT, _ngayYC, _loai, _dk, _makhoa, _denngayYC));
            System.Data.SqlClient.SqlConnection _XQonnectionserver = new System.Data.SqlClient.SqlConnection(_connectionStringBC);
            _XQonnectionserver.Open();

            System.Data.SqlClient.SqlCommand cmd = SqlHelper.CreateCommand(_XQonnectionserver, DatabaseOwner + ObjectQualifier + "spKhamBenh_XQ_GETFILTERs");

            cmd.CommandTimeout = 18000;
            cmd.CommandType = System.Data.CommandType.StoredProcedure;
            cmd.Parameters.AddWithValue("qadmin", _qadmin);
            cmd.Parameters.AddWithValue("loaikqcn", _DaTT);
            cmd.Parameters.AddWithValue("tuNgayYC", _ngayYC);

            cmd.Parameters.AddWithValue("loai", _loai);
            cmd.Parameters.AddWithValue("DK", _dk);
            cmd.Parameters.AddWithValue("DKFILTER", _dkfilter);
            cmd.Parameters.AddWithValue("MaKhoa", _makhoa);

            cmd.Parameters.AddWithValue("DenNgayyc", _denngayYC);

            IDataReader dt;
            dt = (IDataReader)cmd.ExecuteReader(CommandBehavior.CloseConnection); ;
            cmd.Dispose();
            cmd = null;
            if (_XQonnectionserver.State == System.Data.ConnectionState.Closed)
            {
                _sqlConnection.Close();
                _sqlConnection.Dispose();
                _sqlConnection = null;
            }
            //// if (SQLConnectionBD.State == System.Data.ConnectionState.Closed)
            //     //SQLConnectionBD.Close(); SQLConnectionBD.Dispose();
            // //if (_sqlConnection.State == System.Data.ConnectionState.Closed)
            // {
            //     //_sqlConnection.Close(); _sqlConnection.Dispose();
            //     //_sqlConnection = null;
            // }
            return dt;
        }
     
        public override IDataReader GetAllKhamBenh_DSInfo(Boolean _qadmin,  DateTime _ngayYC, byte _loai, string _dk, DateTime _denngayYC)
        {

            // return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spKhamBenh_C_GETs", _qadmin, _DaTT, _ngayYC, _loai, _dk, _makhoa, _denngayYC));
            System.Data.SqlClient.SqlCommand cmd = SqlHelper.CreateCommand(SQLConnectionDataBC, DatabaseOwner + ObjectQualifier + "spKhamBenh_C_GETs");

            cmd.CommandTimeout = 18000;
            cmd.CommandType = System.Data.CommandType.StoredProcedure;
            cmd.Parameters.AddWithValue("qadmin", _qadmin);
          
            cmd.Parameters.AddWithValue("tuNgayYC", _ngayYC);

            cmd.Parameters.AddWithValue("loai", _loai);
            cmd.Parameters.AddWithValue("DK", _dk);
          
            cmd.Parameters.AddWithValue("DenNgayyc", _denngayYC);

            IDataReader dt;
            dt = (IDataReader)cmd.ExecuteReader(CommandBehavior.CloseConnection); ;
            cmd.Dispose();
            cmd = null;
            //// if (SQLConnectionBD.State == System.Data.ConnectionState.Closed)
            //     //SQLConnectionBD.Close(); SQLConnectionBD.Dispose();
            // //if (_sqlConnection.State == System.Data.ConnectionState.Closed)
            // {
            //     //_sqlConnection.Close(); _sqlConnection.Dispose();
            //     //_sqlConnection = null;
            // }
            return dt;
        }
        public override IDataReader GetAllKhamBenh_DSFiltersInfo(Boolean _qadmin,  DateTime _ngayYC, byte _loai, string _dk, string _dkfilter, DateTime _denngayYC)
        {

            // return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spKhamBenh_C_GETs", _qadmin, _DaTT, _ngayYC, _loai, _dk, _makhoa, _denngayYC));
            System.Data.SqlClient.SqlConnection _connectionserver = new System.Data.SqlClient.SqlConnection(_connectionStringBC);
            _connectionserver.Open();

            System.Data.SqlClient.SqlCommand cmd = SqlHelper.CreateCommand(_connectionserver, DatabaseOwner + ObjectQualifier + "spKhamBenh_DS_GETFILTERs");

            cmd.CommandTimeout = 18000;
            cmd.CommandType = System.Data.CommandType.StoredProcedure;
            cmd.Parameters.AddWithValue("qadmin", _qadmin);
            cmd.Parameters.AddWithValue("tuNgayYC", _ngayYC);

            cmd.Parameters.AddWithValue("loai", _loai);
            cmd.Parameters.AddWithValue("DK", _dk);
            cmd.Parameters.AddWithValue("DKFILTER", _dkfilter);
            cmd.Parameters.AddWithValue("DenNgayyc", _denngayYC);

            IDataReader dt;
            dt = (IDataReader)cmd.ExecuteReader(CommandBehavior.CloseConnection); ;
            cmd.Dispose();
            cmd = null;
            if (_connectionserver.State == System.Data.ConnectionState.Closed)
            {
                _sqlConnection.Close();
                _sqlConnection.Dispose();
                _sqlConnection = null;
            }
            //// if (SQLConnectionBD.State == System.Data.ConnectionState.Closed)
            //     //SQLConnectionBD.Close(); SQLConnectionBD.Dispose();
            // //if (_sqlConnection.State == System.Data.ConnectionState.Closed)
            // {
            //     //_sqlConnection.Close(); _sqlConnection.Dispose();
            //     //_sqlConnection = null;
            // }
            return dt;
        }

        public override IDataReader GetAllKhamBenh_C_GETsInfo(Boolean _qadmin, Byte _DaTT, DateTime _ngayYC, byte _loai, string _dk, string _makhoa, DateTime _denngayYC)
        {

            // return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spKhamBenh_C_GETs", _qadmin, _DaTT, _ngayYC, _loai, _dk, _makhoa, _denngayYC));
            System.Data.SqlClient.SqlCommand cmd = SqlHelper.CreateCommand(SQLConnectionDataBC, DatabaseOwner + ObjectQualifier + "spKhamBenh_C_GETs");

            cmd.CommandTimeout = 18000;
            cmd.CommandType = System.Data.CommandType.StoredProcedure;
            cmd.Parameters.AddWithValue("qadmin", _qadmin);
            cmd.Parameters.AddWithValue("loaikqcn", _DaTT);
            cmd.Parameters.AddWithValue("tuNgayYC", _ngayYC);

            cmd.Parameters.AddWithValue("loai", _loai);
            cmd.Parameters.AddWithValue("DK", _dk);
            cmd.Parameters.AddWithValue("MaKhoa", _makhoa);

            cmd.Parameters.AddWithValue("DenNgayyc", _denngayYC);

            IDataReader dt;
            dt = (IDataReader)cmd.ExecuteReader(CommandBehavior.CloseConnection); ;
            cmd.Dispose();
            cmd = null;
            //// if (SQLConnectionBD.State == System.Data.ConnectionState.Closed)
            //     //SQLConnectionBD.Close(); SQLConnectionBD.Dispose();
            // //if (_sqlConnection.State == System.Data.ConnectionState.Closed)
            // {
            //     //_sqlConnection.Close(); _sqlConnection.Dispose();
            //     //_sqlConnection = null;
            // }
            return dt;
        }
        public override IDataReader GetAllKhamBenh_C_GETFiltersInfo(Boolean _qadmin, Byte _DaTT, DateTime _ngayYC, byte _loai, string _dk, string _dkfilter, string _makhoa, DateTime _denngayYC)
        {

            // return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spKhamBenh_C_GETs", _qadmin, _DaTT, _ngayYC, _loai, _dk, _makhoa, _denngayYC));
            System.Data.SqlClient.SqlConnection _connectionserver = new System.Data.SqlClient.SqlConnection(_connectionStringBC);
            _connectionserver.Open();

            System.Data.SqlClient.SqlCommand cmd = SqlHelper.CreateCommand(_connectionserver, DatabaseOwner + ObjectQualifier + "spKhamBenh_C_GETFILTERs");

            cmd.CommandTimeout = 18000;
            cmd.CommandType = System.Data.CommandType.StoredProcedure;
            cmd.Parameters.AddWithValue("qadmin", _qadmin);
            cmd.Parameters.AddWithValue("loaikqcn", _DaTT);
            cmd.Parameters.AddWithValue("tuNgayYC", _ngayYC);

            cmd.Parameters.AddWithValue("loai", _loai);
            cmd.Parameters.AddWithValue("DK", _dk);
            cmd.Parameters.AddWithValue("DKFILTER", _dkfilter);
            cmd.Parameters.AddWithValue("MaKhoa", _makhoa);

            cmd.Parameters.AddWithValue("DenNgayyc", _denngayYC);

            IDataReader dt;
            dt = (IDataReader)cmd.ExecuteReader(CommandBehavior.CloseConnection); ;
            cmd.Dispose();
            cmd = null;
            if (_connectionserver.State == System.Data.ConnectionState.Closed)
            {
                _sqlConnection.Close();
                _sqlConnection.Dispose();
                _sqlConnection = null;
            }
            //// if (SQLConnectionBD.State == System.Data.ConnectionState.Closed)
            //     //SQLConnectionBD.Close(); SQLConnectionBD.Dispose();
            // //if (_sqlConnection.State == System.Data.ConnectionState.Closed)
            // {
            //     //_sqlConnection.Close(); _sqlConnection.Dispose();
            //     //_sqlConnection = null;
            // }
            return dt;
        }
       
        
        public override IDataReader GetAllKhamBenh_C_GetDsInfo(Boolean _qadmin, Byte _DaTT, DateTime _ngayYC, byte _loai, string _dk, string _makhoa, DateTime _denngayYC)
        {

            //  return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spKhamBenh_C_GETDs", _qadmin, _DaTT, _ngayYC, _loai, _dk, _makhoa, _denngayYC));
            System.Data.SqlClient.SqlConnection _connectionserver = new System.Data.SqlClient.SqlConnection(_connectionStringBC);
            _connectionserver.Open();

            System.Data.SqlClient.SqlCommand cmd = SqlHelper.CreateCommand(_connectionserver, DatabaseOwner + ObjectQualifier + "spKhamBenh_C_GETDs");

            cmd.CommandTimeout = 18000;
            cmd.CommandType = System.Data.CommandType.StoredProcedure;
            cmd.Parameters.AddWithValue("qadmin", _qadmin);
            cmd.Parameters.AddWithValue("loaikqcn", _DaTT);
            cmd.Parameters.AddWithValue("tuNgayYC", _ngayYC);

            cmd.Parameters.AddWithValue("loai", _loai);
            cmd.Parameters.AddWithValue("DK", _dk);
            cmd.Parameters.AddWithValue("MaKhoa", _makhoa);

            cmd.Parameters.AddWithValue("DenNgayyc", _denngayYC);

            IDataReader dt;
            dt = (IDataReader)cmd.ExecuteReader(CommandBehavior.CloseConnection); ;
            cmd.Dispose();
            cmd = null;
            if (_connectionserver.State == System.Data.ConnectionState.Closed)
            {
                _sqlConnection.Close();
                _sqlConnection.Dispose();
                _sqlConnection = null;
            }
            //// if (SQLConnectionBD.State == System.Data.ConnectionState.Closed)
            //     //SQLConnectionBD.Close(); SQLConnectionBD.Dispose();
            // //if (_sqlConnection.State == System.Data.ConnectionState.Closed)
            // {
            //     //_sqlConnection.Close(); _sqlConnection.Dispose();
            //     //_sqlConnection = null;
            // }
            return dt;
        }
        public override IDataReader GetKhamBenh_ThuocSD_DY_C(String _maSoKham, int _sTT, int _sTTThuoc)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spKhamBenh_ThuocSD_DY_C_GET", _maSoKham, _sTT, _sTTThuoc));
        }
        public override IDataReader GetKhamBenh_ThuocSD_DY(String _maSoKham, int _sTT)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spKhamBenh_ThuocSD_DY_GET", _maSoKham, _sTT));
        }
        public override IDataReader GetAllKhamBenh_ThuocSD_DY(String _maSoKham, String _DK, Boolean _QADMIN)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spKhamBenh_ThuocSD_DY_GETALL", _maSoKham, _DK, _QADMIN));
        }
        public override IDataReader GetAllKhamBenh_ThuocSD_DY_C(String _maSoKham, int _sTT, String _DK, Boolean _QADMIN)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spKhamBenh_ThuocSD_DYC_GETALL", _maSoKham, _sTT, _DK, _QADMIN));
        }
        public override IDataReader GetKhamBenh_ThuocSD_DY(String _maSoKham, String _DK, Boolean _QADMIN)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spKhamBenh_ThuocSD_DY_GETALL", _maSoKham, _DK, _QADMIN));
        }

        public override IDataReader GetKhamBenh_ThuocSD(String _maSoKham, int _sTT)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spKhamBenh_ThuocSD_GET", _maSoKham, _sTT));
        }
        public override IDataReader GetAllKhamBenh_ThuocSD(String _maSoKham, String _DK, Boolean _QADMIN)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spKhamBenh_ThuocSD_GETALL", _maSoKham, _DK, _QADMIN));
        }
        public override IDataReader GetKhamBenh_Mau(String _maSoKham, int _sTT)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spKhamBenh_Mau_GET", _maSoKham, _sTT));
        }
        public override IDataReader GetAllKhamBenh_Mau(String _maSoKham, String _DK, Boolean _QADMIN)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spKhamBenh_Mau_GETALL", _maSoKham, _DK, _QADMIN));
        }
        public override IDataReader GetKhamBenh_HoaDon(String _maSoKham, int _sTT)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spKhamBenh_HoaDon_GET", _maSoKham, _sTT));
        }
        public override IDataReader GetKhamBenh_HoaDon(String _sosohd, String _sohd)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spKhamBenh_HoaDon_find", _sosohd, _sohd));
        }
        public override IDataReader GetAllKhamBenh_HoaDon(String _maSoKham, String _DK, Boolean _QADMIN)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spKhamBenh_HoaDon_GETALL", _maSoKham, _DK, _QADMIN));
        }
        public override IDataReader GetAllKhamBenh_HoaDon(DateTime tungayYC, DateTime denngayYC, byte loai, String _DK, Boolean _QADMIN)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spKhamBenh_HoaDon_GETALL", tungayYC, denngayYC, loai, _DK));
        }
        public override IDataReader GetKhamBenh_VTTH(String _maSoKham, int _sTT)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spKhamBenh_VTTH_GET", _maSoKham, _sTT));
        }
        public override IDataReader GetAllKhamBenh_VTTH(String _maSoKham, String _DK, Boolean _QADMIN)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spKhamBenh_VTTH_GETALL", _maSoKham, _DK, _QADMIN));
        }
        public override IDataReader GetKhamBenh_HoaChat(String _maSoKham, int _sTT)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spKhamBenh_HoaChat_GET", _maSoKham, _sTT));
        }
        public override IDataReader GetAllKhamBenh_HoaChat(String _maSoKham, String _DK, Boolean _QADMIN)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spKhamBenh_HoaChat_GETALL", _maSoKham, _DK, _QADMIN));
        }
        public override IDataReader GetKhamBenh_TM(String _maSoKham, Int32 _sTT)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spKhamBenh_TM_GET", _maSoKham, _sTT));
        }
        public override IDataReader GetAllKhamBenh_GetsDichVu(Boolean _qadmin, string _MaSoKham, Byte _DaTT, byte _loai, string _dk)
        {
            //  return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spKhamBenh_GETsDichVu", _qadmin, _MaSoKham, _DaTT, _loai, _dk));
            System.Data.SqlClient.SqlCommand cmd = SqlHelper.CreateCommand(SQLConnectionBD, DatabaseOwner + ObjectQualifier + "spKhamBenh_GETsDichVu");

            cmd.CommandTimeout = 18000;
            cmd.CommandType = System.Data.CommandType.StoredProcedure;
            cmd.Parameters.AddWithValue("qadmin", _qadmin);
            cmd.Parameters.AddWithValue("masokham", _MaSoKham);
            cmd.Parameters.AddWithValue("datt", _DaTT);
            cmd.Parameters.AddWithValue("loai", _loai);

            cmd.Parameters.AddWithValue("dk", _dk);



            IDataReader dt;
            dt = (IDataReader)cmd.ExecuteReader(CommandBehavior.CloseConnection); ;
            cmd.Dispose();
            cmd = null;

            //// if (SQLConnectionBD.State == System.Data.ConnectionState.Closed)
            //     //SQLConnectionBD.Close(); SQLConnectionBD.Dispose();
            // //if (_sqlConnection.State == System.Data.ConnectionState.Closed)
            // {
            //     //_sqlConnection.Close(); _sqlConnection.Dispose();
            //     //_sqlConnection = null;
            // }
            return dt;
        }
        public override IDataReader GetKhamBenh_GetsDichVu(string _MaSoKham, Int32 _sTT, Byte _Loai)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spKhamBenh_GETsMABN", _MaSoKham, _sTT, _Loai));
        }
        public override IDataReader GetAllKhamBenh_XN_Gets(Boolean _qadmin, string _MaSoKham, Byte _DaTT, DateTime _ngayYC, byte _loai, string _dk, int _stt)
        {
            // return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spKhamBenh_XN_Gets1", _qadmin, _MaSoKham, _DaTT, _ngayYC, _loai, _dk, _stt));
            System.Data.SqlClient.SqlCommand cmd = SqlHelper.CreateCommand(SQLConnectionBD, DatabaseOwner + ObjectQualifier + "spKhamBenh_XN_Gets1");

            cmd.CommandTimeout = 18000;
            cmd.CommandType = System.Data.CommandType.StoredProcedure;
            cmd.Parameters.AddWithValue("qadmin", _qadmin);
            cmd.Parameters.AddWithValue("masokham", _MaSoKham);
            cmd.Parameters.AddWithValue("loaikqcn", _DaTT);
            cmd.Parameters.AddWithValue("ngayyc", _ngayYC);
            cmd.Parameters.AddWithValue("loai", _loai);

            cmd.Parameters.AddWithValue("dk", _dk);
            cmd.Parameters.AddWithValue("stt", _stt);


            IDataReader dt;
            dt = (IDataReader)cmd.ExecuteReader(CommandBehavior.CloseConnection); ;
            cmd.Dispose();
            cmd = null;
            ////// if (SQLConnectionBD.State == System.Data.ConnectionState.Closed)
            ////     //SQLConnectionBD.Close(); SQLConnectionBD.Dispose();
            //// //if (_sqlConnection.State == System.Data.ConnectionState.Closed)
            //// {
            ////     //_sqlConnection.Close(); _sqlConnection.Dispose();
            ////     //_sqlConnection = null;
            //// }
            return dt;
        }
        public override IDataReader GetKhamBenh_XN_Gets(string _MaSoKham, Int32 _sTT, Byte _Loai)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spKhamBenh_GETsMABN", _MaSoKham, _sTT, _Loai));
        }
        //public override IDataReader GetAllKhambenh_C_GETsInfo(Boolean _qadmin, Byte _DaTT, DateTime _ngayYC, byte _loai, string _dk,string _makhoa)
        //  {
        //      return ((IDataReader)SqlHelper.ExecuteReader( ConnectionString, DatabaseOwner + ObjectQualifier + "spKhamBenh_C_Gets", _qadmin,  _DaTT, _ngayYC, _loai, _dk,  _makhoa));
        //  }
        public override IDataReader GetAllKhamBenh_C(Boolean _qadmin, string _masokham, string _makhoa, byte _loai, DateTime _ngayYC, Byte _DaTT, string _dk)
        {
           // return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spKhambenh_c_Finds", _qadmin, _masokham, _makhoa, _loai, _ngayYC, _DaTT, _dk));
            System.Data.SqlClient.SqlConnection _connectionserver = new System.Data.SqlClient.SqlConnection(_connectionString);
            _connectionserver.Open();

            System.Data.SqlClient.SqlCommand cmd = SqlHelper.CreateCommand(_connectionserver, DatabaseOwner + ObjectQualifier + "spKhambenh_c_Finds");
            cmd.CommandTimeout = 18000;

            cmd.CommandType = System.Data.CommandType.StoredProcedure;
            cmd.Parameters.AddWithValue("masokham", _masokham);
            cmd.Parameters.AddWithValue("makhoa", _makhoa);
            cmd.Parameters.AddWithValue("loai", _loai);
            cmd.Parameters.AddWithValue("ngayYC", _ngayYC);
            cmd.Parameters.AddWithValue("DaTT", _DaTT);

            cmd.Parameters.AddWithValue("DK", _dk);
            cmd.Parameters.AddWithValue("qadmin", _qadmin);
            IDataReader dt;
            dt = (IDataReader)cmd.ExecuteReader(CommandBehavior.CloseConnection);
            cmd.Dispose();
            cmd = null;
            if (_connectionserver.State == System.Data.ConnectionState.Closed)
            {
                _sqlConnection.Close();
                _sqlConnection.Dispose();
                _sqlConnection = null;
        }
            return dt;
        }
        public override IDataReader GetKhamBenh_C_GetsInfo(string _MaSoKham, Int32 _sTT, Byte _Loai)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spKhamBenh_GETsMABN", _MaSoKham, _sTT, _Loai));
        }
        public override string spKhamBenh_ThanhToan_KT(String SoThe)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spKhamBenh_ThanhToan_KT", SoThe));
        }
        public override IDataReader GetKhamBenh_XN(String _maSoKham, Int32 _sTT)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spKhamBenh_XN_Get", _maSoKham, _sTT));
        }
        public override IDataReader GetKhamBenh_XN_C(String _maSoKham, Int32 _sTT, Int32 _sTTCS)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spKhamBenh_XN_C_GET", _maSoKham, _sTT, _sTTCS));
        }
        public override IDataReader GetAllBenhAnPK(String _maBA)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spBenhAnPK_GETAll", _maBA));
        }
        public override IDataReader GetBenhAnPK(String _maBA)
        {
           
                return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spBenhAnPK_GET", _maBA));

        }
        public override IDataReader GetBenhAnPK(String _maBA, byte loaikq)
        {
            if(loaikq ==1)
                 return ((IDataReader)SqlHelper.ExecuteReader(ConnectionStringChuyenBN, DatabaseOwner + ObjectQualifier + "spBenhAnPK_GET", _maBA));
            else
                return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spBenhAnPK_GET", _maBA));
          
        }
        public override IDataReader GetBenhAnPK_DY(String _maBA)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spBenhAnPK_DY_GET", _maBA));
        }
        public override IDataReader GetBenhAnPK(String _masokham, int _stt, byte _loai)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spBenhAnPK_find", _masokham, _stt, _loai));
        }
        public override IDataReader GetKhamBenhBAListInfo(Boolean qadmin, DateTime tungayYC, DateTime denngayYC, byte loai, string dk, string makhoa, string madt, byte loaikq)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spKhamBenh_BA_GETs", qadmin, tungayYC, denngayYC, loai, dk, makhoa, madt, loaikq));
        }
        public override IDataReader GetKhamBenh_CSTN(String _maSoKham, int stt, int sttth)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spKhamBenh_CSTN_GET", _maSoKham, stt,sttth));
        }
        public override IDataReader GetAllKhamBenh_CSTN(Boolean qadmin, String _maSoKham, int stt, string dk)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spKhamBenh_CSTN_GETALL", qadmin, _maSoKham, stt, dk));
        }
        public override IDataReader GetKhamBenh_CSTN_TV(String _maSoKham, int _stttv)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spKhamBenh_CSTN_TV_GET", _maSoKham,_stttv));
        }
        public override IDataReader GetHoiChan(String _maHC, bool qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spHOICHAN_GET", _maHC, qadmin));
        }
        public override IDataReader GetAllHoiChan(Boolean qadmin, string maKhoa, DateTime Tungay, DateTime Denngay, string dk)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spHOICHAN_GETALL", qadmin, maKhoa, Tungay, Denngay, dk));
        }
        public override IDataReader GetAllHoiChan(Boolean qadmin, string maKhoa, DateTime Tungay, DateTime Denngay, string dk, string dkfilter)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spHOICHANfilter_GETALL", qadmin, maKhoa, Tungay, Denngay, dk, dkfilter));
        }
        public override IDataReader GetHoiChan_TV(String _maHC, Byte _sTT)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spHoiChan_TV_GET", _maHC, _sTT));
        }

        public override IDataReader GetThongKe_BenhNhan_NgoaiTru_Info(DateTime tungay, DateTime denngay, String maKhoa, byte loai, string dk)
        {
            // return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "SPNGOAITRU_ThongkeBN", tungay, denngay, maKhoa, loai, dk));



            System.Data.SqlClient.SqlCommand cmd = SqlHelper.CreateCommand(SQLConnectionBD, DatabaseOwner + ObjectQualifier + "SPNGOAITRU_ThongkeBN");
            cmd.CommandTimeout = 18000;

            cmd.CommandType = System.Data.CommandType.StoredProcedure;
            cmd.Parameters.AddWithValue("tungay", tungay);
            cmd.Parameters.AddWithValue("denngay", denngay);
            cmd.Parameters.AddWithValue("maKhoa", maKhoa);
            cmd.Parameters.AddWithValue("loai", loai);
            cmd.Parameters.AddWithValue("DK", dk);
            IDataReader dt;
            dt = (IDataReader)cmd.ExecuteReader(CommandBehavior.CloseConnection);
            cmd.Dispose();
            cmd = null;
            return dt;

        }

        public override IDataReader GetThongKe_BenhNhan_NoiTruInfo(DateTime tungay, DateTime denngay, String maKhoa, byte loai, string dk)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "SPNoiTru_ThongkeBN", tungay, denngay, maKhoa, loai, dk));
        }

        public override IDataReader GetAllThongtinBNNoiTru_KhamBenh(String _MABN)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spTHONGTINBN_KB_GET", _MABN));
        }

        public override IDataReader GetAllThongtinBNNoiTru_KQXN(Boolean Qadmin, string MaSoKham, byte DaTT, byte Loai, string DK)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spKetQuaXN_Get", Qadmin, MaSoKham, DaTT, Loai, DK));
        }
        #endregion

        #region Find List
        public override IDataReader FindThongtinBN(Byte _Loai,
            string _MaBN,
            string _Hoten,
            bool _DungTen,
            string _SoThe,
            string _MaBV,
            DateTime _GiaTriDN,
            string _DiaChi,
            string _DienThoai,
            string _DTDD,
            string _DTCQ,
            string _Mail,
            Byte _Tuoi,
            DateTime _NgaySinh,
            bool _GT,
            string _BaoTin,
            string _MaQG,
            string _MaTinh,
            string _MaHuyen,
            string _MaNN,
            string _MaBANgoaiT,
            string _MABENH,
            string _MAKHOA,
            string _MABS,
            DateTime _TuNgayYC,
            DateTime _DenNgayYC,
            string _DK,
            bool qadmin,
            DateTime _DenNgaysinh,
            bool _YCDANGDK,
            bool _YCNGAYSINH)
        {
            //DateTime __GiaTriDN = _GiaTriDN;
            //if (_GiaTriDN.ToShortDateString() == "01/01/0001")
            //{ __GiaTriDN = DateTime.Parse("01/01/1753"); };
            //DateTime __DenNgaysinh = _DenNgaysinh;
            //if (_DenNgaysinh.ToShortDateString() == "01/01/0001")
            //{ __DenNgaysinh = DateTime.Parse("01/01/1753"); };
            //DateTime __NgaySinh = _NgaySinh;
            //if (_NgaySinh.ToShortDateString() == "01/01/0001")
            //{ __NgaySinh = DateTime.Parse("01/01/1753"); };
            //DateTime __TuNgayYC = _TuNgayYC;
            //if (_TuNgayYC.ToShortDateString() == "01/01/0001")
            //{ __TuNgayYC = DateTime.Parse("01/01/1753"); };
            //DateTime __DenNgayYC = _DenNgayYC;
            //if (_DenNgayYC.ToShortDateString() == "01/01/0001")
            //{ __DenNgayYC = DateTime.Parse("01/01/1753"); };

            //try { 
            //_GiaTriDN = DateTime.Parse(_GiaTriDN.ToString("MM/dd/yyyy"));
            //_NgaySinh = DateTime.Parse(_NgaySinh.ToString("MM/dd/yyyy"));
            //_DenNgaysinh = DateTime.Parse(_DenNgaysinh.ToString("MM/dd/yyyy"));
            //_TuNgayYC = DateTime.Parse(_TuNgayYC.ToString("MM/dd/yyyy"));
            //_DenNgaysinh = DateTime.Parse(_DenNgaysinh.ToString("MM/dd/yyyy"));
            //_GiaTriDN = DateTime.Parse(_GiaTriDN.ToString("dd/MM/yyyy"));
            //_NgaySinh = DateTime.Parse(_NgaySinh.ToString("dd/MM/yyyy"));
            //_DenNgaysinh = DateTime.Parse(_DenNgaysinh.ToString("dd/MM/yyyy"));
            //_TuNgayYC = DateTime.Parse(_TuNgayYC.ToString("dd/MM/yyyy"));
            //_DenNgaysinh = DateTime.Parse(_DenNgaysinh.ToString("dd/MM/yyyy")); 
            IDataReader _idata = ((IDataReader)SqlHelper.ExecuteReader(SQLConnectionDataBC, DatabaseOwner + ObjectQualifier + "spTHONGTINBN_FINDS", _Loai,
          _MaBN,
          _Hoten,
          _DungTen,
          _SoThe,
          _MaBV,
          _GiaTriDN,
          _DiaChi,
          _DienThoai,
          _DTDD,
          _DTCQ,
          _Mail,
          _Tuoi,
          _NgaySinh,
          _GT,
          _BaoTin,
          _MaQG,
          _MaTinh,
          _MaHuyen,
          _MaNN,
          _MaBANgoaiT,
          _MABENH,
          _MAKHOA,
          _MABS,
          _TuNgayYC,
          _DenNgayYC,

          _DK, qadmin,
          _DenNgaysinh,
          _YCDANGDK, _YCNGAYSINH));

            //}
            //catch (Exception ex)
            //{
            //    //ex.Message ;
            //};
            //// if (SQLConnectionBD.State == System.Data.ConnectionState.Closed)
            //     //SQLConnectionBD.Close(); SQLConnectionBD.Dispose();
            // //if (_sqlConnection.State == System.Data.ConnectionState.Closed)
            // {
            //     //_sqlConnection.Close(); _sqlConnection.Dispose();
            //     //_sqlConnection = null;
            // }
            return _idata;

        }
        public override IDataReader FindThongtinBNByMaBN(string _DK, Boolean _qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionStringBC, DatabaseOwner + ObjectQualifier + "spTHONGTINBN_SEARCH", _DK, _qadmin));
        }
        #endregion



        #region Find ThongTinBNNoiTru
        public override IDataReader FindThongtinBNNoiTru(Byte _Loai,
            string _MaBN,
            string _Hoten,
            bool _DungTen,
            string _SoThe,
            string _MaBV,
            DateTime _GiaTriDN,
            string _DiaChi,
            string _DienThoai,
            string _DTDD,
            string _DTCQ,
            string _Mail,
            Byte _Tuoi,
            DateTime _NgaySinh,
            bool _GT,
            string _BaoTin,
            string _MaQG,
            string _MaTinh,
            string _MaHuyen,
            string _MaNN,
            string _MaBANgoaiT,
            string _MABENH,
            string _MAKHOA,
            string _MABS,
            DateTime _TuNgayYC,
            DateTime _DenNgayYC,
            string _DK,
            bool qadmin,
            DateTime _DenNgaysinh,
            bool _YCDANGDK,
            bool _YCNGAYSINH)
        {

            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionStringBC, DatabaseOwner + ObjectQualifier + "spTHONGTINBN_FINDS", _Loai,
          _MaBN,
          _Hoten,
          _DungTen,
          _SoThe,
          _MaBV,
          _GiaTriDN,
          _DiaChi,
          _DienThoai,
          _DTDD,
          _DTCQ,
          _Mail,
          _Tuoi,
          _NgaySinh,
          _GT,
          _BaoTin,
          _MaQG,
          _MaTinh,
          _MaHuyen,
          _MaNN,
          _MaBANgoaiT,
          _MABENH,
          _MAKHOA,
          _MABS,
          _TuNgayYC,
          _DenNgayYC,

          _DK, qadmin,
          _DenNgaysinh,
          _YCDANGDK, _YCNGAYSINH));

        }
        public override IDataReader FindThongtinBNNoiTruByMaBN(string _DK, Boolean _qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionStringBC, DatabaseOwner + ObjectQualifier + "spTHONGTINBN_SEARCH", _DK, _qadmin));
        }
        public override IDataReader GetThongtinBNNoiTru(String _maBN)
        {

            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionStringBC, DatabaseOwner + ObjectQualifier + "spTHONGTINBN_KB_GET", _maBN));
        }
        public override IDataReader GetAllThongtinBNNoiTru(DateTime tungay, DateTime denngay, string madt, string dk, bool qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spTHONGTINBN_GETALL", tungay, denngay, madt, dk, qadmin));
        }
        #endregion

        #region thongtinbn Tien su San
        public override String InsertThongTinBN_TienSu_San(String _maBN, Boolean _tSGDSinhdoi, Boolean _tSGDDidang, Boolean _tSGDBenhditruyen, Boolean _tSGDDaiduong, Boolean _tSGDCaoHA, String _tSGDKhac, Boolean _tSBTCaoHA, Boolean _tSBTBenhTim, Boolean _tSBTLaoPhoi, Boolean _tSBTHenphequan, Boolean _tSBTBenhthan, Boolean _tSBTBasedow, Boolean _tSBTViemtacTM, Boolean _tSBTDongkinh, Boolean _tSBTMoRuotthua, bool _diungthuoc, String _pTObung, String _tuoiCokinh, String _chukyKinh, String _songayKinh, String _tuoiLaychong, String _benhphukhoa, Boolean _khoiUBT, Boolean _uxoTC, Boolean _didangSD, Boolean _sSD, Boolean _tSM, Boolean _dieuTriCTC, Boolean _catcutCTC, String _phauthuatKhac, String _pARA, String _tSBTKhac, Byte _solancothai, Byte _solansaythai, Byte _solannaothai, Byte _solande, String _cachde, Byte _soconsong, String _maMay, String _nguoiSD, String _cuthe)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spThongTinBN_TienSu_San_CREATE", _maBN, _tSGDSinhdoi, _tSGDDidang, _tSGDBenhditruyen, _tSGDDaiduong, _tSGDCaoHA, _tSGDKhac, _tSBTCaoHA, _tSBTBenhTim, _tSBTLaoPhoi, _tSBTHenphequan, _tSBTBenhthan, _tSBTBasedow, _tSBTViemtacTM, _tSBTDongkinh, _tSBTMoRuotthua, _diungthuoc, _pTObung, _tuoiCokinh, _chukyKinh, _songayKinh, _tuoiLaychong, _benhphukhoa, _khoiUBT, _uxoTC, _didangSD, _sSD, _tSM, _dieuTriCTC, _catcutCTC, _phauthuatKhac, _pARA, _tSBTKhac, _solancothai, _solansaythai, _solannaothai, _solande, _cachde, _soconsong, _maMay, _nguoiSD, _cuthe));
        }
        public override void UpdateThongTinBN_TienSu_San(String _maBN, Boolean _tSGDSinhdoi, Boolean _tSGDDidang, Boolean _tSGDBenhditruyen, Boolean _tSGDDaiduong, Boolean _tSGDCaoHA, String _tSGDKhac, Boolean _tSBTCaoHA, Boolean _tSBTBenhTim, Boolean _tSBTLaoPhoi, Boolean _tSBTHenphequan, Boolean _tSBTBenhthan, Boolean _tSBTBasedow, Boolean _tSBTViemtacTM, Boolean _tSBTDongkinh, Boolean _tSBTMoRuotthua, Boolean _diungthuoc, String _pTObung, String _tuoiCokinh, String _chukyKinh, String _songayKinh, String _tuoiLaychong, String _benhphukhoa, Boolean _khoiUBT, Boolean _uxoTC, Boolean _didangSD, Boolean _sSD, Boolean _tSM, Boolean _dieuTriCTC, Boolean _catcutCTC, String _phauthuatKhac, String _pARA, String _tSBTKhac, Byte _solancothai, Byte _solansaythai, Byte _solannaothai, Byte _solande, String _cachde, Byte _soconsong, String _maMay, Boolean _huy, String _nguoiSD, String _cuthe)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spThongTinBN_TienSu_San_UPDATE", _maBN, _tSGDSinhdoi, _tSGDDidang, _tSGDBenhditruyen, _tSGDDaiduong, _tSGDCaoHA, _tSGDKhac, _tSBTCaoHA, _tSBTBenhTim, _tSBTLaoPhoi, _tSBTHenphequan, _tSBTBenhthan, _tSBTBasedow, _tSBTViemtacTM, _tSBTDongkinh, _tSBTMoRuotthua, _diungthuoc, _pTObung, _tuoiCokinh, _chukyKinh, _songayKinh, _tuoiLaychong, _benhphukhoa, _khoiUBT, _uxoTC, _didangSD, _sSD, _tSM, _dieuTriCTC, _catcutCTC, _phauthuatKhac, _pARA, _tSBTKhac, _solancothai, _solansaythai, _solannaothai, _solande, _cachde, _soconsong, _maMay, _huy, _nguoiSD, _cuthe);
        }
        public override void DeleteThongTinBN_TienSu_San(String _maMay, String _nguoiSD, String _maBN)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spThongTinBN_TienSu_San_Deleted", _maMay, _nguoiSD, _maBN);
        }


        #endregion
        #region thongtinbn Tien su VoSinh
        public override String InsertThongTinBN_TienSu_VoSinh(String _maBN, Boolean _cothaivs, String _cothaivsCT, Boolean _NhiemTrung, Boolean _BenhLayquaTD, String _ThoiGian, String _solan, String _DieuTri, String _trieuChung, Boolean _ChanThuongTH, String _ChanThuongTHCT, Boolean _DauTangSM, Boolean _ViemTH, Boolean _DanTM, String _DanTMCT, Boolean _THlacCho, Boolean _QuaiBi, Boolean _ThoatViBen, String _CacBoPhanSD, String _ThuocDaDung, Boolean _DungMatuy, String _DungMatuyCT, Boolean _DungRuouBia, String _DungRuouBiaCT, Boolean _DungThuocLa, String _DungThuocLaCT, Boolean _tiepxucDH, String _tiepxucDHCT, String _SolanQH, Boolean _SolanQHtuan, Boolean _XuatSom, Boolean _LietDuong, Boolean _GDcobenhDitruyen, Boolean _ChatDocDaCam, Boolean _CoMau, String _MauSac, String _QuanHeBT, String _TienSuNoiNgoaiKhoa, String _maMay, String _nguoiSD)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spThongTinBN_TienSu_VoSinh_CREATE", _maBN, _cothaivs, _cothaivsCT, _NhiemTrung, _BenhLayquaTD, _ThoiGian, _solan, _DieuTri, _trieuChung, _ChanThuongTH, _ChanThuongTHCT, _DauTangSM, _ViemTH, _DanTM, _DanTMCT, _THlacCho, _QuaiBi, _ThoatViBen, _CacBoPhanSD, _ThuocDaDung, _DungMatuy, _DungMatuyCT, _DungRuouBia, _DungRuouBiaCT, _DungThuocLa, _DungThuocLaCT, _tiepxucDH, _tiepxucDHCT, _SolanQH, _SolanQHtuan, _XuatSom, _LietDuong, _GDcobenhDitruyen, _ChatDocDaCam, _CoMau, _MauSac, _QuanHeBT, _TienSuNoiNgoaiKhoa, _maMay, _nguoiSD));
        }
        public override void UpdateThongTinBN_TienSu_VoSinh(String _maBN, Boolean _cothaivs, String _cothaivsCT, Boolean _NhiemTrung, Boolean _BenhLayquaTD, String _ThoiGian, String _solan, String _DieuTri, String _trieuChung, Boolean _ChanThuongTH, String _ChanThuongTHCT, Boolean _DauTangSM, Boolean _ViemTH, Boolean _DanTM, String _DanTMCT, Boolean _THlacCho, Boolean _QuaiBi, Boolean _ThoatViBen, String _CacBoPhanSD, String _ThuocDaDung, Boolean _DungMatuy, String _DungMatuyCT, Boolean _DungRuouBia, String _DungRuouBiaCT, Boolean _DungThuocLa, String _DungThuocLaCT, Boolean _tiepxucDH, String _tiepxucDHCT, String _SolanQH, Boolean _SolanQHtuan, Boolean _XuatSom, Boolean _LietDuong, Boolean _GDcobenhDitruyen, Boolean _ChatDocDaCam, Boolean _CoMau, String _MauSac, String _QuanHeBT, String _TienSuNoiNgoaiKhoa, String _maMay, Boolean _huy, String _nguoiSD)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spThongTinBN_TienSu_VoSinh_UPDATE", _maBN, _cothaivs, _cothaivsCT, _NhiemTrung, _BenhLayquaTD, _ThoiGian, _solan, _DieuTri, _trieuChung, _ChanThuongTH, _ChanThuongTHCT, _DauTangSM, _ViemTH, _DanTM, _DanTMCT, _THlacCho, _QuaiBi, _ThoatViBen, _CacBoPhanSD, _ThuocDaDung, _DungMatuy, _DungMatuyCT, _DungRuouBia, _DungRuouBiaCT, _DungThuocLa, _DungThuocLaCT, _tiepxucDH, _tiepxucDHCT, _SolanQH, _SolanQHtuan, _XuatSom, _LietDuong, _GDcobenhDitruyen, _ChatDocDaCam, _CoMau, _MauSac, _QuanHeBT, _TienSuNoiNgoaiKhoa, _maMay, _huy, _nguoiSD);
        }
        public override void DeleteThongTinBN_TienSu_VoSinh(String _maMay, String _nguoiSD, String _maBN)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spThongTinBN_TienSu_VoSinh_Deleted", _maMay, _nguoiSD, _maBN);
        }


        #endregion

        #region thongtinbn Tien su San  Chi tiet
        public override Int32 InsertThongTinBN_TienSu_San_C(String _maBN, String _thoigianThainghen, String _tuoithai, String _dienbienThai, String _cachde, String _tresosinh, String _hauSan, String _khac, String _maMay, String _nguoiSD)
        {
            return System.Convert.ToInt32(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spThongTinBN_TienSu_San_C_CREATE", _maBN, _thoigianThainghen, _tuoithai, _dienbienThai, _cachde, _tresosinh, _hauSan, _khac, _maMay, _nguoiSD));
        }

        public override void UpdateThongTinBN_TienSu_San_C(String _maBN, Int32 _sTT, String _thoigianThainghen, String _tuoithai, String _dienbienThai, String _cachde, String _tresosinh, String _hauSan, String _khac, String _maMay, Boolean _huy, String _nguoiSD)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spThongTinBN_TienSu_San_C_UPDATE", _maBN, _sTT, _thoigianThainghen, _tuoithai, _dienbienThai, _cachde, _tresosinh, _hauSan, _khac, _maMay, _huy, _nguoiSD);
        }
        public override void DeleteThongTinBN_TienSu_San_C(String _maMay, String _nguoiSD, String _maBN, Int32 _sTT)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spThongTinBN_TienSu_San_C_Deleted", _maMay, _nguoiSD, _maBN, _sTT);
        }


        #endregion
        #region Thong tin Benh nhan
        public override String InsertThongtinBN(String _hoten, String _sothe, String _maBV, SmartDate _giaTriDN, String _diaChi, String _dienThoai, String _dTDD, String _dTCQ, String _mail, Byte _tuoi, SmartDate _ngaySinh, Boolean _gt, String _baoTin, String _maQG, String _maTinh, String _maHuyen, string _mapxa, String _maNN, String _tienSu, String _tienSuThuoc, String _tienSuGiaDinh, String _nhomMau, String _ghichu, string _maMay, String _nguoiLap, string _madantoc, string hotenbome, SmartDate _giaTriTN, String _maBAQL, string _MaQuanHeQD, string _MaQuanHam, string _MaDonVi, string _SoCMT, string _noiLamViec)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spTHONGTINBN_CREATE", _hoten, _sothe, _maBV, _giaTriDN.DBValue, _diaChi, _dienThoai, _dTDD, _dTCQ, _mail, _tuoi, _ngaySinh.DBValue, _gt, _baoTin, _maQG, _maTinh, _maHuyen, _mapxa, _maNN, _tienSu, _tienSuThuoc, _tienSuGiaDinh, _nhomMau, _ghichu, _maMay, _nguoiLap, _madantoc, hotenbome, _giaTriTN.DBValue, _maBAQL, _MaQuanHeQD, _MaQuanHam, _MaDonVi, _SoCMT, _noiLamViec));
        }
        public override void UpdateThongtinBN(String _maBN, String _hoten, String _sothe, String _maBV, SmartDate _giaTriDN, String _diaChi, String _dienThoai, String _dTDD, String _dTCQ, String _mail, Byte _tuoi, SmartDate _ngaySinh, Boolean _gt, String _baoTin, String _maQG, String _maTinh, String _maHuyen, string _mapxa, String _maNN, String _tienSu, String _tienSuThuoc, String _tienSuGiaDinh, String _nhomMau, String _ghichu, string _maMay, Boolean _huy, String _nguoiSD, string _madantoc, string hotenbome, SmartDate _giaTriTN, String _maBAQL, string _MaQuanHeQD, string _MaQuanHam, string _MaDonVi, string _SoCMT, string _noiLamViec)
        {
            // SqlHelper.ExecuteNonQuery( ConnectionString, DatabaseOwner + ObjectQualifier + "spTHONGTINBN_UPDATE", _maBN, _hoten, _sothe, _maBV, _giaTriDN.DBValue, _diaChi, _dienThoai, _dTDD, _dTCQ, _mail, _tuoi, _ngaySinh.DBValue, _gt, _baoTin, _maQG, _maTinh, _maHuyen, _maNN, _tienSu, _tienSuThuoc, _tienSuGiaDinh, _nhomMau, _ghichu, _maMay, _huy, _nguoiSD, _madantoc,  hotenbome,_giaTriTN.DBValue );

            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spTHONGTINBN_UPDATE", _maBN, _hoten, _sothe, _maBV, _giaTriDN.DBValue, _diaChi, _dienThoai, _dTDD, _dTCQ, _mail, _tuoi, _ngaySinh.DBValue, _gt, _baoTin, _maQG, _maTinh, _maHuyen, _mapxa, _maNN, _tienSu, _tienSuThuoc, _tienSuGiaDinh, _nhomMau, _ghichu, _maMay, _huy, _nguoiSD, _madantoc, hotenbome, _giaTriTN.DBValue, _maBAQL, _MaQuanHeQD, _MaQuanHam, _MaDonVi, _SoCMT, _noiLamViec);


        }
        public override void DeleteThongtinBN(String _maMay, String _nguoiSD, String _maBN)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spTHONGTINBN_DELETED", _maMay, _nguoiSD, _maBN);
        }


        #endregion

        #region Thong tin Benh nhan
        public override String InsertThongtinBN(String _hoten, String _sothe, String _maBV, SmartDate _giaTriDN, String _diaChi, String _dienThoai, String _dTDD, String _dTCQ, String _mail, Byte _tuoi, SmartDate _ngaySinh, Boolean _gt, String _baoTin, String _maQG, String _maTinh, String _maHuyen, string _mapxa, String _maNN, String _tienSu, String _tienSuThuoc, String _tienSuGiaDinh, String _nhomMau, String _ghichu, string _maMay, String _nguoiLap, string _madantoc, string hotenbome, SmartDate _giaTriTN, String _maBAQL, string _MaQuanHeQD, string _MaQuanHam, string _MaDonVi, string _SoCMT, string _noiLamViec, string _maKV, string _ngayMienCCT, string _ngayDu5Nam)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spTHONGTINBN_CREATE1", _hoten, _sothe, _maBV, _giaTriDN.DBValue, _diaChi, _dienThoai, _dTDD, _dTCQ, _mail, _tuoi, _ngaySinh.DBValue, _gt, _baoTin, _maQG, _maTinh, _maHuyen, _mapxa, _maNN, _tienSu, _tienSuThuoc, _tienSuGiaDinh, _nhomMau, _ghichu, _maMay, _nguoiLap, _madantoc, hotenbome, _giaTriTN.DBValue, _maBAQL, _MaQuanHeQD, _MaQuanHam, _MaDonVi, _SoCMT, _noiLamViec, _maKV, _ngayMienCCT, _ngayDu5Nam));
        }
        public override void UpdateThongtinBN(String _maBN, String _hoten, String _sothe, String _maBV, SmartDate _giaTriDN, String _diaChi, String _dienThoai, String _dTDD, String _dTCQ, String _mail, Byte _tuoi, SmartDate _ngaySinh, Boolean _gt, String _baoTin, String _maQG, String _maTinh, String _maHuyen, string _mapxa, String _maNN, String _tienSu, String _tienSuThuoc, String _tienSuGiaDinh, String _nhomMau, String _ghichu, string _maMay, Boolean _huy, String _nguoiSD, string _madantoc, string hotenbome, SmartDate _giaTriTN, String _maBAQL, string _MaQuanHeQD, string _MaQuanHam, string _MaDonVi, string _SoCMT, string _noiLamViec, string _maKV, string _ngayMienCCT, string _ngayDu5Nam)
        {
            // SqlHelper.ExecuteNonQuery( ConnectionString, DatabaseOwner + ObjectQualifier + "spTHONGTINBN_UPDATE", _maBN, _hoten, _sothe, _maBV, _giaTriDN.DBValue, _diaChi, _dienThoai, _dTDD, _dTCQ, _mail, _tuoi, _ngaySinh.DBValue, _gt, _baoTin, _maQG, _maTinh, _maHuyen, _maNN, _tienSu, _tienSuThuoc, _tienSuGiaDinh, _nhomMau, _ghichu, _maMay, _huy, _nguoiSD, _madantoc,  hotenbome,_giaTriTN.DBValue );

            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spTHONGTINBN_UPDATE1", _maBN, _hoten, _sothe, _maBV, _giaTriDN.DBValue, _diaChi, _dienThoai, _dTDD, _dTCQ, _mail, _tuoi, _ngaySinh.DBValue, _gt, _baoTin, _maQG, _maTinh, _maHuyen, _mapxa, _maNN, _tienSu, _tienSuThuoc, _tienSuGiaDinh, _nhomMau, _ghichu, _maMay, _huy, _nguoiSD, _madantoc, hotenbome, _giaTriTN.DBValue, _maBAQL, _MaQuanHeQD, _MaQuanHam, _MaDonVi, _SoCMT, _noiLamViec, _maKV, _ngayMienCCT, _ngayDu5Nam);


        }
       


        #endregion

        public override void UpdateBenhAn_C_KQXN(String _MaBA, Int32 _sTT, Int32 _sTTKhoa, String _maHuongDT, String _maMay, String _nguoiSD)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spBENHAN_C_Update_KQXNNT", _MaBA, _sTT, _sTTKhoa, _maHuongDT, _maMay, _nguoiSD);
        }

        #region Thong tin Kham Benh
        public override String InsertKhamBenh(String _maBN, String _maDT, String _sothe, SmartDate _giatriDN, String _maBV, String _maTinh, SmartDate _ngayKT, String _gio, SmartDate _ngayduyet, String _nguoiduyet, SmartDate _ngayQT, SmartDate _ngayQTTT, String _nguoiQT, String _maBenhNoiGT, String _maNoiGT, String _cDNoiGT, String _ghichu, Byte _loaiKham, Boolean _cungtra, Decimal _ck, String _nguoiLap, string _maMay, Decimal _tongTien, Decimal _tongBHTra, Decimal _tongTienBH, SmartDate _ngaydk, SmartDate _giaTriTN, String _maBVgt, SmartDate _ngaygt, Decimal _tongdv, Decimal _tongthuocty, Decimal _tongthuocdy, Decimal _kyquybh)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(SQLConnectionData, DatabaseOwner + ObjectQualifier + "spKhamBenh_Create1", _maBN, _maDT, _sothe, _giatriDN.DBValue, _maBV, _maTinh, _ngayKT.DBValue, _gio, _ngayduyet.DBValue, _nguoiduyet, _ngayQT.DBValue, _ngayQTTT.DBValue, _nguoiQT, _maBenhNoiGT, _maNoiGT, _cDNoiGT, _ghichu, _loaiKham, _cungtra, _ck, _nguoiLap, _maMay, _tongTien, _tongBHTra, _tongTienBH, _ngaydk.DBValue, _giaTriTN.DBValue, _maBVgt, _ngaygt.DBValue, _tongdv, _tongthuocty, _tongthuocdy, _kyquybh));

        }
        public override String UpdateKhamBenh(String _maSoKham, String _maBN, String _maDT, String _sothe, SmartDate _giatriDN, String _maBV, String _maTinh, SmartDate _ngayKT, String _gio, SmartDate _ngayduyet, String _nguoiduyet, SmartDate _ngayQT, SmartDate _ngayQTTT, String _nguoiQT, String _maBenhNoiGT, String _maNoiGT, String _cDNoiGT, String _ghichu, Byte _loaiKham, Boolean _cungtra, Decimal _ck, String _nguoiSD, string _maMay, Boolean _huy, Decimal _tongTien, Decimal _tongBHTra, Decimal _tongTienBH, SmartDate _ngaydk, SmartDate _giaTriTN, String _maBVgt, Boolean _DuyetBH, Decimal _KyQuyBH, Decimal _MienGiamBH, Decimal _MienGiamTT, SmartDate _ngaygt, Decimal _tongdv, Decimal _tongthuocty, Decimal _tongthuocdy)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(SQLConnectionData, DatabaseOwner + ObjectQualifier + "spKhamBenh_Update1", _maSoKham, _maBN, _maDT, _sothe, _giatriDN.DBValue, _maBV, _maTinh, _ngayKT.DBValue, _gio, _ngayduyet.DBValue, _nguoiduyet, _ngayQT.DBValue, _ngayQTTT.DBValue, _nguoiQT, _maBenhNoiGT, _maNoiGT, _cDNoiGT, _ghichu, _loaiKham, _cungtra, _ck, _nguoiSD, _maMay, _huy, _tongTien, _tongBHTra, _tongTienBH, _ngaydk.DBValue, _giaTriTN.DBValue, _maBVgt, _DuyetBH, _KyQuyBH, _MienGiamBH, _MienGiamTT, _ngaygt.DBValue, _tongdv, _tongthuocty, _tongthuocdy));
       
        }
        public override void DeleteKhamBenh(String _maMay, String _nguoiSD, String _maSoKham)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spKhamBenh_Deleted", _maMay, _nguoiSD, _maSoKham);
        }


        #endregion

        #region Thong tin Kham Benh
        public override String InsertKhamBenh(String _maBN, String _maDT, String _sothe, SmartDate _giatriDN, String _maBV, String _maTinh, SmartDate _ngayKT, String _gio, SmartDate _ngayduyet, String _nguoiduyet, SmartDate _ngayQT, SmartDate _ngayQTTT, String _nguoiQT, String _maBenhNoiGT, String _maNoiGT, String _cDNoiGT, String _ghichu, Byte _loaiKham, Boolean _cungtra, Decimal _ck, String _nguoiLap, string _maMay, Decimal _tongTien, Decimal _tongBHTra, Decimal _tongTienBH, SmartDate _ngaydk, SmartDate _giaTriTN, String _maBVgt, SmartDate _ngaygt, Decimal _tongdv, Decimal _tongthuocty, Decimal _tongthuocdy, Decimal _kyquybh, string _maKV, string _ngayMienCCT, string _ngayDu5Nam)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(SQLConnectionData, DatabaseOwner + ObjectQualifier + "spKhamBenh_Create", _maBN, _maDT, _sothe, _giatriDN.DBValue, _maBV, _maTinh, _ngayKT.DBValue, _gio, _ngayduyet.DBValue, _nguoiduyet, _ngayQT.DBValue, _ngayQTTT.DBValue, _nguoiQT, _maBenhNoiGT, _maNoiGT, _cDNoiGT, _ghichu, _loaiKham, _cungtra, _ck, _nguoiLap, _maMay, _tongTien, _tongBHTra, _tongTienBH, _ngaydk.DBValue, _giaTriTN.DBValue, _maBVgt, _ngaygt.DBValue, _tongdv, _tongthuocty, _tongthuocdy, _kyquybh, _maKV, _ngayMienCCT, _ngayDu5Nam));

        }
        public override String UpdateKhamBenh(String _maSoKham, String _maBN, String _maDT, String _sothe, SmartDate _giatriDN, String _maBV, String _maTinh, SmartDate _ngayKT, String _gio, SmartDate _ngayduyet, String _nguoiduyet, SmartDate _ngayQT, SmartDate _ngayQTTT, String _nguoiQT, String _maBenhNoiGT, String _maNoiGT, String _cDNoiGT, String _ghichu, Byte _loaiKham, Boolean _cungtra, Decimal _ck, String _nguoiSD, string _maMay, Boolean _huy, Decimal _tongTien, Decimal _tongBHTra, Decimal _tongTienBH, SmartDate _ngaydk, SmartDate _giaTriTN, String _maBVgt, Boolean _DuyetBH, Decimal _KyQuyBH, Decimal _MienGiamBH, Decimal _MienGiamTT, SmartDate _ngaygt, Decimal _tongdv, Decimal _tongthuocty, Decimal _tongthuocdy, string _maKV, string _ngayMienCCT, string _ngayDu5Nam)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(SQLConnectionData, DatabaseOwner + ObjectQualifier + "spKhamBenh_Update", _maSoKham, _maBN, _maDT, _sothe, _giatriDN.DBValue, _maBV, _maTinh, _ngayKT.DBValue, _gio, _ngayduyet.DBValue, _nguoiduyet, _ngayQT.DBValue, _ngayQTTT.DBValue, _nguoiQT, _maBenhNoiGT, _maNoiGT, _cDNoiGT, _ghichu, _loaiKham, _cungtra, _ck, _nguoiSD, _maMay, _huy, _tongTien, _tongBHTra, _tongTienBH, _ngaydk.DBValue, _giaTriTN.DBValue, _maBVgt, _DuyetBH, _KyQuyBH, _MienGiamBH, _MienGiamTT, _ngaygt.DBValue, _tongdv, _tongthuocty, _tongthuocdy, _maKV, _ngayMienCCT, _ngayDu5Nam));

        }
       

        #endregion
           #region hop dong kham benh
        public override String InsertHopDongKB(byte _LoaiHD, String _SoHD, SmartDate _NgayKy, SmartDate _TuNgay, SmartDate _DenNgay, String _madt, String _nguoiDD, String _NguoiLienHe, String _DonVi, String _DiaChi, String _DienThoai, String _Fax, String _MaSoThue, String _TaiKhoan, String _PTTT, decimal _GiatriHD, Boolean _datt, SmartDate _NgayTT, String _NoiTT, String _nguoiLap, String _ghiChu, String _maMay)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spHopDongKB_Create", _LoaiHD, _SoHD, _NgayKy.DBValue, _TuNgay.DBValue, _DenNgay.DBValue, _madt, _nguoiDD, _NguoiLienHe, _DonVi, _DiaChi, _DienThoai, _Fax, _MaSoThue, _TaiKhoan, _PTTT, _GiatriHD, _datt, _NgayTT.DBValue, _NoiTT, _nguoiLap, _ghiChu, _maMay));
        }
        public override void UpdateHopDongKB(String _mAHD, byte _LoaiHD, String _SoHD, SmartDate _NgayKy, SmartDate _TuNgay, SmartDate _DenNgay, String _madt, String _nguoiDD, String _NguoiLienHe, String _DonVi, String _DiaChi, String _DienThoai, String _Fax, String _MaSoThue, String _TaiKhoan, String _PTTT, decimal _GiatriHD, Boolean _datt, SmartDate _NgayTT, String _NoiTT, String _nguoiLap, String _ghiChu, Boolean _huy, String _maMay)
         {
             SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spHopDongKB_Update", _mAHD, _LoaiHD, _SoHD, _NgayKy.DBValue, _TuNgay.DBValue, _DenNgay.DBValue, _madt, _nguoiDD, _NguoiLienHe, _DonVi, _DiaChi, _DienThoai, _Fax, _MaSoThue, _TaiKhoan, _PTTT, _GiatriHD, _datt, _NgayTT.DBValue, _NoiTT, _nguoiLap, _ghiChu, _huy, _maMay);
        }
        public override void DeleteHopDongKB(String _maMay, String _nguoiSD, String __mAHD)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spHopDongKB_DELETED", _maMay, _nguoiSD, __mAHD);
        }
     

        #endregion

        #region hop dong chi tiet
        public override String InsertHopDongKB_DV(String __mAHD, String _madv, byte _loaidv, Decimal _dongia, String _ghiChu, String _nguoiSD, String _maMay)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spHopDongKB_DV_CREATE", __mAHD, _madv, _loaidv, _dongia, _ghiChu, _nguoiSD, _maMay));
        }
        public override void UpdateHopDongKB_DV(String _maHD, int _sTT, String _madv, byte _loaidv, Decimal _dongia, String _ghiChu, Boolean _huy, String _nguoiSD, String _maMay)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spHopDongKB_DV_UPDATE", _maHD, _sTT, _madv, _loaidv, _dongia, _ghiChu, _huy, _nguoiSD, _maMay);
        }
        public override void DeleteHopDongKB_DV(String _maMay, String _nguoiSD, String __mAHD, int _sTT)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spHopDongKB_DV_DELETED", _maMay, _nguoiSD, __mAHD, _sTT);
        }

        #endregion

        #region hop dong benh nhan
        public override String InsertHopDongKB_BN(String _mAhd, String _mabn, String _tenbn, byte _tuoi, SmartDate _ngaydk, Decimal _tongtien, String _ghichu, String _nguoiSD, String _maMay)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spHopDongKB_BN_CREATE", _mAhd, _mabn, _tenbn, _tuoi, _ngaydk.DBValue, _tongtien, _ghichu, _nguoiSD, _maMay));
        }
        public override void UpdateHopDongKB_BN(String _mAhd, int _sTT, String _mabn, String _tenbn, byte _tuoi, SmartDate _ngaydk, Decimal _tongtien, String _ghichu, Boolean _huy, String _nguoiSD, String _maMay)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spHopDongKB_BN_UPDATE", _mAhd, _sTT, _mabn, _tenbn, _tuoi, _ngaydk.DBValue, _tongtien, _ghichu, _huy, _nguoiSD, _maMay);
        }
        public override void DeleteHopDongKB_BN(String _maMay, String _nguoiSD, String __mAHD, int _sTT)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spHopDongKB_BN_DELETED", _maMay, _nguoiSD, __mAHD, _sTT);
        }
        #endregion
        #region phieu thu chi
        public override string InsertPhieuThuChi(String _mabs, String _maLDThuTien, string _noitt, byte _loai, Decimal _soTien, Decimal _soTienUSD, Decimal _tyGia, SmartDate _ngayDong, String _ghiChu, String _nguoiThu, String _maMay, String _nguoiSD, Byte _lanin)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spPhieuThuChi_CREATE", _mabs, _maLDThuTien, _noitt, _loai, _soTien, _soTienUSD, _tyGia, _ngayDong.DBValue, _ghiChu, _nguoiThu, _maMay, _nguoiSD, _lanin));
        }
       
        public override void UpdatePhieuThuChi(String _sophieu, String _maKhoa, String _maLDThuTien, Decimal _soTien, Decimal _soTienUSD, Decimal _tyGia, SmartDate _ngayDong, String _ghiChu, String _nguoiThu, String _maMay, Boolean _huy, String _nguoiSD, Byte _lanin)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spPhieuThuChi_UPDATE", _sophieu, _maKhoa, _maLDThuTien, _soTien, _soTienUSD, _tyGia, _ngayDong.DBValue, _ghiChu, _nguoiThu, _maMay, _huy, _nguoiSD, _lanin);
        }
      
        public override void DeletePhieuThuChi(String _maMay, String _nguoiSD, String _sophieu)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spPhieuThuChi_DELETED", _maMay, _nguoiSD, _sophieu);
        }
        #endregion
        #region khambenh Dong tien
        public override string InsertKhamBenh_DongTien(String _maSoKham, String _maKhoa, String _maLDThuTien, string _noitt, byte _loai, Decimal _soTien, Decimal _soTienUSD, Decimal _tyGia, SmartDate _ngayDong, String _ghiChu, String _maPT, String _nguoiThu, String _maMay, String _nguoiSD, String _SPTHU, string _madt, Byte _lanin)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spKhamBenh_DONGTIEN_CREATE", _maSoKham, _maKhoa, _maLDThuTien, _noitt, _loai, _soTien, _soTienUSD, _tyGia, _ngayDong.DBValue, _ghiChu, _maPT, _nguoiThu, _maMay, _nguoiSD, _SPTHU, _madt, _lanin));
        }
        public override void UpdateKhamBenh_DongTien(String _maSoKham, Int32 _sTT, String _maKhoa, String _maLDThuTien, Decimal _soTien, Decimal _soTienUSD, Decimal _tyGia, SmartDate _ngayDong, String _ghiChu, String _maPT, String _nguoiThu, String _maMay, Boolean _huy, String _nguoiSD, String _SOPHIEU, string _madt, Byte _lanin)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spKhamBenh_DONGTIEN_UPDATE", _maSoKham, _sTT, _maKhoa, _maLDThuTien, _soTien, _soTienUSD, _tyGia, _ngayDong.DBValue, _ghiChu, _maPT, _nguoiThu, _maMay, _huy, _nguoiSD, _SOPHIEU, _madt, _lanin);
        }
        public override void DeleteKhamBenh_DongTien(String _maMay, String _nguoiSD, String _maSoKham, Int32 _sTT)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spKhamBenh_DONGTIEN_DELETED", _maMay, _nguoiSD, _maSoKham, _sTT);
        }
        #endregion
        #region Thong tin Kham Benh Chi tiet
        public override Int32 InsertKhamBenh_C(String _maSoKham, Int32 _sTT, String _maDV, String _maBN, SmartDate _ngayDK, Boolean _tToanSau, String _soHD, String _soSoHD, Int32 _sophieu, Decimal _soLuong, Decimal _slmua, Decimal _dongiaTT, Decimal _donGiaBH, Decimal _giaChenhLech, Decimal _ck, Byte _daTT, SmartDate _ngayTToan, String _makhoa, String _sophong, Int32 _soTT, Int32 _soTTCu, String _bSKham, String _maBS, SmartDate _ngayGioKham, SmartDate _ngayKT, String _maHuongDT, Boolean _tinhtien, Boolean _bHTinhTien, string _maMay, String _nguoiLap, Byte _trangThai, String _nguoiTT, Decimal _tyGia, Boolean _aDGiaUSD, Byte _uutien, String _maDVTra, string _mabenh, string _makhoaChoVV, string _makhoaVV, Byte _daTTTT, SmartDate _ngayTToanTT, Byte _daTTBH, SmartDate _ngayTToanBH, String _noiTTTT, String _noiTTBH, String _nguoiTTTT, String _nguoiTTBH, String _maDT, String _machuyenkhoa, string _bschidinh, string _makhoacd, SmartDate _ngayhen, String _GHICHU, string _tenbenh, string _mabenhkem, string _tenbenhkem, string _mabenhKem2, string _tenbenhKem2, string _mabenhKem3, string _tenbenhKem3)
        {
            //return System.Convert.ToInt32(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spKhamBenh_C_Create", _maSoKham, _sTT, _maDV, _maBN, _ngayDK.DBValue, _tToanSau, _soHD, _soSoHD, _sophieu, _soLuong, _slmua, _dongiaTT, _donGiaBH, _giaChenhLech, _ck, _daTT, _ngayTToan.DBValue, _makhoa, _sophong, _soTT, _soTTCu, _bSKham, _maBS, _ngayGioKham.DBValue, _ngayKT.DBValue, _maHuongDT, _tinhtien, _bHTinhTien, _maMay, _nguoiLap, _trangThai, _nguoiTT, _tyGia, _aDGiaUSD, _uutien, _maDVTra, _mabenh, _makhoaChoVV, _makhoaVV, _daTTTT, _ngayTToanTT.DBValue, _daTTBH, _ngayTToanBH.DBValue, _noiTTTT, _noiTTBH, _nguoiTTTT, _nguoiTTBH, _maDT, _machuyenkhoa, _bschidinh, _makhoacd, _ngayhen.DBValue, _GHICHU, _tenbenh, _mabenhkem, _tenbenhkem));

            System.Data.SqlClient.SqlCommand cmd = SqlHelper.CreateCommand(SQLConnectionData, DatabaseOwner + ObjectQualifier + "spKhamBenh_C_Create1");

            cmd.CommandTimeout = 18000;
            cmd.CommandType = System.Data.CommandType.StoredProcedure;
            cmd.Parameters.AddWithValue("maSoKham", _maSoKham);
            cmd.Parameters.AddWithValue("sTT", _sTT);
            cmd.Parameters.AddWithValue("maDV", _maDV);
            cmd.Parameters.AddWithValue("maBN", _maBN);
            cmd.Parameters.AddWithValue("ngayDK", _ngayDK.DBValue);
            cmd.Parameters.AddWithValue("tToanSau", _tToanSau);
            cmd.Parameters.AddWithValue("soHD", _soHD);

            cmd.Parameters.AddWithValue("soSoHD", _soSoHD);
            cmd.Parameters.AddWithValue("sophieu", _sophieu);
            cmd.Parameters.AddWithValue("soLuong", _soLuong);
            cmd.Parameters.AddWithValue("slmua", _slmua);
            cmd.Parameters.AddWithValue("dongiaTT", _dongiaTT);
            cmd.Parameters.AddWithValue("donGiaBH", _donGiaBH);
            cmd.Parameters.AddWithValue("giaChenhLech", _giaChenhLech);

            cmd.Parameters.AddWithValue("ck", _ck);
            cmd.Parameters.AddWithValue("daTT", _daTT);
            cmd.Parameters.AddWithValue("ngayTToan", _ngayTToan.DBValue);
            cmd.Parameters.AddWithValue("makhoa", _makhoa);
            cmd.Parameters.AddWithValue("sophong", _sophong);
            cmd.Parameters.AddWithValue("soTT", _soTT);
            cmd.Parameters.AddWithValue("soTTCu", _soTTCu);
            cmd.Parameters.AddWithValue("bSKham", _bSKham);
            cmd.Parameters.AddWithValue("maBS", _maBS);
            cmd.Parameters.AddWithValue("ngayGioKham", _ngayGioKham.DBValue);
            cmd.Parameters.AddWithValue("ngayKT", _ngayKT.DBValue);
            cmd.Parameters.AddWithValue("maHuongDT", _maHuongDT);
            cmd.Parameters.AddWithValue("tinhtien", _tinhtien);
            cmd.Parameters.AddWithValue("bHTinhTien", _bHTinhTien);
            cmd.Parameters.AddWithValue("maMay", _maMay);
            cmd.Parameters.AddWithValue("nguoiLap", _nguoiLap);
            cmd.Parameters.AddWithValue("trangThai", _trangThai);
            cmd.Parameters.AddWithValue("nguoiTT", _nguoiTT);
            cmd.Parameters.AddWithValue("tyGia", _tyGia);
            cmd.Parameters.AddWithValue("aDGiaUSD", _aDGiaUSD);
            cmd.Parameters.AddWithValue("uutien", _uutien);
            cmd.Parameters.AddWithValue("maDVTra", _maDVTra);
            cmd.Parameters.AddWithValue("mabenh", _mabenh);
            cmd.Parameters.AddWithValue("makhoaChoVV", _makhoaChoVV);
            cmd.Parameters.AddWithValue("makhoaVV", _makhoaVV);
            cmd.Parameters.AddWithValue("daTTTT", _daTTTT);
            cmd.Parameters.AddWithValue("ngayTToanTT", _ngayTToanTT.DBValue);
            cmd.Parameters.AddWithValue("daTTBH", _daTTBH);
            cmd.Parameters.AddWithValue("ngayTToanBH", _ngayTToanBH.DBValue);
            cmd.Parameters.AddWithValue("noiTTTT", _noiTTTT);
            cmd.Parameters.AddWithValue("noiTTBH", _noiTTBH);
            cmd.Parameters.AddWithValue("nguoiTTTT", _nguoiTTTT);
            cmd.Parameters.AddWithValue("nguoiTTBH", _nguoiTTBH);
            cmd.Parameters.AddWithValue("maDT", _maDT);
            cmd.Parameters.AddWithValue("machuyenkhoa", _machuyenkhoa);
            cmd.Parameters.AddWithValue("bschidinh", _bschidinh);
            cmd.Parameters.AddWithValue("makhoacd", _makhoacd);
            cmd.Parameters.AddWithValue("ngayhen", _ngayhen.DBValue);
            cmd.Parameters.AddWithValue("GHICHU", _GHICHU);
            cmd.Parameters.AddWithValue("tenbenh", _tenbenh);
            cmd.Parameters.AddWithValue("mabenhkem", _mabenhkem);
            cmd.Parameters.AddWithValue("tenbenhkem", _tenbenhkem);
            cmd.Parameters.AddWithValue("mabenhkem2", _mabenhKem2);
            cmd.Parameters.AddWithValue("tenbenhkem2", _tenbenhKem2);
            cmd.Parameters.AddWithValue("mabenhkem3", _mabenhKem3);
            cmd.Parameters.AddWithValue("tenbenhkem3", _tenbenhKem3);

            cmd.ExecuteNonQuery();
            cmd.Dispose();
            cmd = null;
            return _sTT;
        }
        public override Int32 UpdateKhamBenh_C(String _maSoKham, Int32 _sTT, String _maDV, String _maBN, SmartDate _ngayDK, Boolean _tToanSau, String _soHD, String _soSoHD, Int32 _sophieu, Decimal _soLuong, Decimal _dongiaTT, Decimal _donGiaBH, Decimal _giaChenhLech, Decimal _ck, Byte _daTT, SmartDate _ngayTToan, String _makhoa, String _sophong, Int32 _soTT, Int32 _soTTCu, String _bSKham, String _maBS, SmartDate _ngayGioKham, SmartDate _ngayKT, String _maHuongDT, Boolean _tinhtien, Boolean _bHTinhTien, string _maMay, Boolean _huy, SmartDate _ngaySD, String _nguoiSD, Byte _trangthai, String _lydoTra, Boolean _daTra, String _nguoiTra, SmartDate _ngaytra, Decimal _sLTra, String _nguoiTT, Decimal _tyGia, Boolean _aDGiaUSD, Byte _uuTien, String _soHDTra, String _soSoHDTra, String _maDVTra, string _mabenh, string _makhoaChoVV, string _makhoaVV, Decimal _slmua, string _tenbenh, Byte _daTTTT, SmartDate _ngayTToanTT, Byte _daTTBH, SmartDate _ngayTToanBH, String _noiTTTT, String _noiTTBH, String _nguoiTTTT, String _nguoiTTBH, String _maDT, String _machuyenkhoa, string _bschidinh, string _makhoacd, SmartDate _ngayhen, string _mabenhkem, string tenbenhkem,  string _mabenhKem2, string _tenbenhKem2, string _mabenhKem3, string _tenbenhKem3,String _GHICHU, string _mabs3, string _mabs4, string _kq, byte _loai)
        {
            //  return System.Convert.ToInt32(SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spKhamBenh_C_Update", _maSoKham, _sTT, _maDV, _maBN, _ngayDK.DBValue, _tToanSau, _soHD, _soSoHD, _sophieu, _soLuong, _dongiaTT, _donGiaBH, _giaChenhLech, _ck, _daTT, _ngayTToan.DBValue, _makhoa, _sophong, _soTT, _soTTCu, _bSKham, _maBS, _ngayGioKham.DBValue, _ngayKT.DBValue, _maHuongDT, _tinhtien, _bHTinhTien, _maMay, _huy, _ngaySD.DBValue, _nguoiSD, _trangthai, _lydoTra, _daTra, _nguoiTra, _ngaytra.DBValue, _sLTra, _nguoiTT, _tyGia, _aDGiaUSD, _uuTien, _soHDTra, _soSoHDTra, _maDVTra, _mabenh, _makhoaChoVV, _makhoaVV, _slmua, _tenbenh, _daTTTT, _ngayTToanTT.DBValue, _daTTBH, _ngayTToanBH.DBValue, _noiTTTT, _noiTTBH, _nguoiTTTT, _nguoiTTBH, _maDT, _machuyenkhoa, _bschidinh, _makhoacd, _ngayhen.DBValue, _mabenhkem, tenbenhkem, _GHICHU, _mabs3, _mabs4, _kq, _loai));
            System.Data.SqlClient.SqlCommand cmd = SqlHelper.CreateCommand(SQLConnectionData, DatabaseOwner + ObjectQualifier + "spKhamBenh_C_Update1");

            cmd.CommandTimeout = 18000;
            cmd.CommandType = System.Data.CommandType.StoredProcedure;
            cmd.Parameters.AddWithValue("maSoKham", _maSoKham);
            cmd.Parameters.AddWithValue("sTT", _sTT);
            cmd.Parameters.AddWithValue("maDV", _maDV);
            cmd.Parameters.AddWithValue("maBN", _maBN);
            cmd.Parameters.AddWithValue("ngayDK", _ngayDK.DBValue);
            cmd.Parameters.AddWithValue("tToanSau", _tToanSau);
            cmd.Parameters.AddWithValue("soHD", _soHD);
            cmd.Parameters.AddWithValue("soSoHD", _soSoHD);
            cmd.Parameters.AddWithValue("sophieu", _sophieu);
            cmd.Parameters.AddWithValue("soLuong", _soLuong);

            cmd.Parameters.AddWithValue("dongiaTT", _dongiaTT);
            cmd.Parameters.AddWithValue("donGiaBH", _donGiaBH);
            cmd.Parameters.AddWithValue("giaChenhLech", _giaChenhLech);

            cmd.Parameters.AddWithValue("ck", _ck);
            cmd.Parameters.AddWithValue("daTT", _daTT);
            cmd.Parameters.AddWithValue("ngayTToan", _ngayTToan.DBValue);
            cmd.Parameters.AddWithValue("makhoa", _makhoa);
            cmd.Parameters.AddWithValue("sophong", _sophong);
            cmd.Parameters.AddWithValue("soTT", _soTT);
            cmd.Parameters.AddWithValue("soTTCu", _soTTCu);

            cmd.Parameters.AddWithValue("bSKham", _bSKham);
            cmd.Parameters.AddWithValue("maBS", _maBS);
            cmd.Parameters.AddWithValue("ngayGioKham", _ngayGioKham.DBValue);
            cmd.Parameters.AddWithValue("ngayKT", _ngayKT.DBValue);
            cmd.Parameters.AddWithValue("maHuongDT", _maHuongDT);
            cmd.Parameters.AddWithValue("tinhtien", _tinhtien);
            cmd.Parameters.AddWithValue("bHTinhTien", _bHTinhTien);
            cmd.Parameters.AddWithValue("maMay", _maMay);
            cmd.Parameters.AddWithValue("Huy", _huy);
            cmd.Parameters.AddWithValue("ngaysd", _ngaySD.DBValue);

            cmd.Parameters.AddWithValue("nguoiSD", _nguoiSD);
            cmd.Parameters.AddWithValue("trangThai", _trangthai);
            cmd.Parameters.AddWithValue("lydoTra", _lydoTra);
            cmd.Parameters.AddWithValue("daTra", _daTra);
            cmd.Parameters.AddWithValue("sLTra", _sLTra);
            cmd.Parameters.AddWithValue("ngaytra", _ngaytra.DBValue);
            cmd.Parameters.AddWithValue("nguoiTra", _nguoiTra);
            cmd.Parameters.AddWithValue("nguoiTT", _nguoiTT);
            cmd.Parameters.AddWithValue("tyGia", _tyGia);
            cmd.Parameters.AddWithValue("aDGiaUSD", _aDGiaUSD);

            cmd.Parameters.AddWithValue("uutien", _uuTien);
            cmd.Parameters.AddWithValue("soHDTra", _soHDTra);
            cmd.Parameters.AddWithValue("soSoHDTra", _soSoHDTra);
            cmd.Parameters.AddWithValue("maDVTra", _maDVTra);
            cmd.Parameters.AddWithValue("slmua", _slmua);
            cmd.Parameters.AddWithValue("mabenh", _mabenh);
            cmd.Parameters.AddWithValue("tenbenh", _tenbenh);
            cmd.Parameters.AddWithValue("makhoaChoVV", _makhoaChoVV);
            cmd.Parameters.AddWithValue("makhoaVV", _makhoaVV);
            cmd.Parameters.AddWithValue("daTTTT", _daTTTT);

            cmd.Parameters.AddWithValue("ngayTToanTT", _ngayTToanTT.DBValue);
            cmd.Parameters.AddWithValue("daTTBH", _daTTBH);
            cmd.Parameters.AddWithValue("ngayTToanBH", _ngayTToanBH.DBValue);
            cmd.Parameters.AddWithValue("noiTTTT", _noiTTTT);
            cmd.Parameters.AddWithValue("noiTTBH", _noiTTBH);
            cmd.Parameters.AddWithValue("nguoiTTTT", _nguoiTTTT);
            cmd.Parameters.AddWithValue("nguoiTTBH", _nguoiTTBH);
            cmd.Parameters.AddWithValue("maDT", _maDT);
            cmd.Parameters.AddWithValue("machuyenkhoa", _machuyenkhoa);
            cmd.Parameters.AddWithValue("bschidinh", _bschidinh);

            cmd.Parameters.AddWithValue("makhoacd", _makhoacd);
            cmd.Parameters.AddWithValue("ngayhen", _ngayhen.DBValue);
            cmd.Parameters.AddWithValue("GHICHU", _GHICHU);
            cmd.Parameters.AddWithValue("mabenhkem", _mabenhkem);
            cmd.Parameters.AddWithValue("tenbenhkem", tenbenhkem);
            cmd.Parameters.AddWithValue("mabenhkem2", _mabenhKem2);
            cmd.Parameters.AddWithValue("tenbenhkem2", _tenbenhKem2);
            cmd.Parameters.AddWithValue("mabenhkem3", _mabenhKem3);
            cmd.Parameters.AddWithValue("tenbenhkem3", _tenbenhKem3);

            cmd.Parameters.AddWithValue("mabs3", _mabs3);
            cmd.Parameters.AddWithValue("mabs4", _mabs4);
            cmd.Parameters.AddWithValue("kq", _kq);
            cmd.Parameters.AddWithValue("loai", _loai);
           
            cmd.ExecuteNonQuery();
            cmd.Dispose();
            cmd = null;
            return _sTT;
        }
        public override void DeleteKhamBenh_C(String _maMay, String _nguoiSD, String _maSoKham, Int32 STT, String _LydoHuy)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spKhamBenh_C_Deleted", _maMay, _nguoiSD, _maSoKham, STT, _LydoHuy);
        }
        public override void DeleteKhamBenh_BA(String _maMay, String _nguoiSD, String _maSoKham, Int32 STT, String _LydoHuy, Byte _LOAI)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spKhamBenh_BA_Deleted", _maSoKham, STT, _LOAI);
        }

        #endregion

        #region kham benh thu thuat

        public override int InsertKhamBenh_ThuThuat(String _maBA, Int32 _sTT, String _maPT, String _maBN, SmartDate _ngayDK, String _cDTruocMo, String _cDSauMo, String _maGPBenh, Byte _hTPhauThuat, Boolean _taibienPT, String _maMay, String _nguoiLap, string _machungloai, string _malh, string _ptvien, string _ptvienc, string _ptvien1, string _ptvien2, string _gayme, string _gaymec, string _gayme1, string _gayme2, string _cec, string _cecc, string _cec1, string _cec2, string _dungcu, string _dungcuc, string _dungcu1, string _dungcu2, string _loai, string _cachgayme, string ppphauthat, string maloaipt, string _tenBenhCDTruocMo, string _tenBenhCDSauMo, string _noidung)
        {
            return System.Convert.ToInt32(SqlHelper.ExecuteScalar(SQLConnectionDataNoiT, DatabaseOwner + ObjectQualifier + "spKhamBenh_ThuThuat_Create", _maBA, _sTT,  _maPT, _maBN, _ngayDK.DBValue, _cDTruocMo, _cDSauMo, _maGPBenh, _hTPhauThuat, _taibienPT, _maMay, _nguoiLap, _machungloai, _malh, _ptvien, _ptvienc, _ptvien1, _ptvien2, _gayme, _gaymec, _gayme1, _gayme2, _cec, _cecc, _cec1, _cec2, _dungcu, _dungcuc, _dungcu1, _dungcu2, _loai, _cachgayme, ppphauthat, maloaipt, _tenBenhCDTruocMo, _tenBenhCDSauMo, _noidung));
        }
        public override void UpdateKhamBenh_ThuThuat(String _maBA, Int32 _sTT,  String _maPT, String _maBN, SmartDate _ngayDK, String _cDTruocMo, String _cDSauMo, String _maGPBenh, Byte _hTPhauThuat, Boolean _taibienPT, String _maMay, Boolean _huy, String _nguoiSD, string _machungloai, string _malh, string _ptvien, string _ptvienc, string _ptvien1, string _ptvien2, string _gayme, string _gaymec, string _gayme1, string _gayme2, string _cec, string _cecc, string _cec1, string _cec2, string _dungcu, string _dungcuc, string _dungcu1, string _dungcu2, string _loai, string _cachgayme, string ppphauthat, string maloaipt, string _tenBenhCDTruocMo, string _tenBenhCDSauMo, string _noidung)
        {
            SqlHelper.ExecuteNonQuery(SQLConnectionDataNoiT, DatabaseOwner + ObjectQualifier + "spKhamBenh_ThuThuat_Update", _maBA, _sTT,  _maPT, _maBN, _ngayDK.DBValue, _cDTruocMo, _cDSauMo, _maGPBenh, _hTPhauThuat, _taibienPT, _maMay, _huy, _nguoiSD, _machungloai, _malh, _ptvien, _ptvienc, _ptvien1, _ptvien2, _gayme, _gaymec, _gayme1, _gayme2, _cec, _cecc, _cec1, _cec2, _dungcu, _dungcuc, _dungcu1, _dungcu2, _loai, _cachgayme, ppphauthat, maloaipt, _tenBenhCDTruocMo, _tenBenhCDSauMo, _noidung);
        }
        public override void DeleteKhamBenh_ThuThuat(string _maMay, String _nguoiSD, string _maBA, Int32 _sTT,  string lydohuy)
        {
            SqlHelper.ExecuteNonQuery(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spKhamBenh_ThuThuat_Deleted", _maMay, _nguoiSD, _maBA, _sTT,  lydohuy);
        }



        #endregion
        #region Thong tin Kham Benh XN-KQ
        public override Int32 UpdateKhamBenh_KQXNPK(String _maSoKham, Int32 _sTT, String _maHuongDT, String _maMay, String _nguoiSD)
        {
            return System.Convert.ToInt32(SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spKhamBenh_C_Update_KQXNPK", _maSoKham, _sTT, _maHuongDT, _maMay, _nguoiSD));
        }

        #endregion
        #region Thong tin Kham Benh Thuoc Su dung

        public override String InsertKhamBenh_ThuocSD(String _maSoKham, int _sTT, String _mathuoc, String _maBN, SmartDate _ngayDK, Decimal _sLKeDon, Decimal _sLMua, Decimal _dongiaTT, Decimal _donGiaBH, Decimal _giaChenhLech, String _soHD, String _soSoHD, Int32 _sophieu, Decimal _ck, String _bSChiDinh, string _lieuDung, string _cachDung, Boolean _tinhtien, Boolean _bHTinhTien, Byte _dATT, Boolean _tToanSau, String _nguoiTT, SmartDate _ngayTToan, Boolean _daTra, String _nguoiTra, SmartDate _ngaytra, Decimal _sLTra, Boolean _duyet, Boolean _phat, SmartDate _ngayP, String _nguoiD, String _nguoiP, SmartDate _ngayD, string _maMay, String _nguoiLap, String _makx, string _mapx, String _makhoa, Boolean _dadung, Byte _daTTTT, SmartDate _ngayTToanTT, Byte _daTTBH, SmartDate _ngayTToanBH, String _noiTTTT, String _noiTTBH, String _nguoiTTTT, String _nguoiTTBH, String _MaDT)
        {

            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spKhambenh_ThuocSD_Create1", _maSoKham, _sTT, _mathuoc, _maBN, _ngayDK.DBValue, _sLKeDon, _sLMua, _dongiaTT, _donGiaBH, _giaChenhLech, _soHD, _soSoHD, _sophieu, _ck, _bSChiDinh, _lieuDung, _cachDung, _tinhtien, _bHTinhTien, _dATT, _tToanSau, _nguoiTT, _ngayTToan.DBValue, _daTra, _nguoiTra, _ngaytra.DBValue, _sLTra, _duyet, _phat, _ngayP.DBValue, _nguoiD, _nguoiP, _ngayD.DBValue, _maMay, _nguoiLap, _makx, _mapx, _makhoa, _dadung, _daTTTT, _ngayTToanTT.DBValue, _daTTBH, _ngayTToanBH.DBValue, _noiTTTT, _noiTTBH, _nguoiTTTT, _nguoiTTBH, _MaDT));
        }
        public override void UpdateKhamBenh_ThuocSD(String _maSoKham, int _sTT, String _mathuoc, String _maBN, SmartDate _ngayDK, Decimal _sLKeDon, Decimal _sLMua, Decimal _dongiaTT, Decimal _donGiaBH, Decimal _giaChenhLech, String _soHD, String _soSoHD, Int32 _sophieu, Decimal _ck, String _bSChiDinh, string _lieuDung, string _cachDung, Boolean _tinhtien, Boolean _bHTinhTien, Byte _dATT, Boolean _tToanSau, String _nguoiTT, SmartDate _ngayTToan, Boolean _daTra, String _nguoiTra, SmartDate _ngaytra, Decimal _sLTra, Boolean _duyet, Boolean _phat, SmartDate _ngayP, String _nguoiD, String _nguoiP, SmartDate _ngayD, string _maMay, Boolean _huy, String _nguoiSD, String _soHDTra, String _soSoHDTra, String _makx, string _mapx, String _makhoa, Boolean _dadung, Byte _daTTTT, SmartDate _ngayTToanTT, Byte _daTTBH, SmartDate _ngayTToanBH, String _noiTTTT, String _noiTTBH, String _nguoiTTTT, String _nguoiTTBH, String _MaDT, byte _loai)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spKhambenh_ThuocSD_Update1", _maSoKham, _sTT, _mathuoc, _maBN, _ngayDK.DBValue, _sLKeDon, _sLMua, _dongiaTT, _donGiaBH, _giaChenhLech, _soHD, _soSoHD, _sophieu, _ck, _bSChiDinh, _lieuDung, _cachDung, _tinhtien, _bHTinhTien, _dATT, _tToanSau, _nguoiTT, _ngayTToan.DBValue, _daTra, _nguoiTra, _ngaytra.DBValue, _sLTra, _duyet, _phat, _ngayP.DBValue, _nguoiD, _nguoiP, _ngayD.DBValue, _maMay, _huy, _nguoiSD, _soHDTra, _soSoHDTra, _makx, _mapx, _makhoa, _dadung, _daTTTT, _ngayTToanTT.DBValue, _daTTBH, _ngayTToanBH.DBValue, _noiTTTT, _noiTTBH, _nguoiTTTT, _nguoiTTBH, _MaDT, _loai);
        }
        public override void DeleteKhamBenh_ThuocSD(String _maMay, String _nguoihuy, String _masokham, int _STT, String _LydoHuy)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spKhambenh_ThuocSD_Deleted", _maMay, _nguoihuy, _masokham, _STT, _LydoHuy);
        }
        #endregion

        #region kham benh Thuoc Dong y
        public override Int32 InsertKhamBenh_ThuocSD_DY(String _MaSoKham, Int32 _sTT, String _maBN, SmartDate _ngayDK, SmartDate _tuNgay, SmartDate _denNgay, Decimal _sLThang, Decimal _sLMua, Decimal _ck, String _bSChiDinh, String _lieuDung, String _cachDung, Boolean _tinhtien, Boolean _sac, Byte _dATT, String _nguoiTT, SmartDate _ngayTToan, Boolean _daTra, String _nguoiTra, SmartDate _ngaytra, Decimal _sLTra, Boolean _duyet, Boolean _phat, SmartDate _ngayP, String _MaPX, String _nguoiP, SmartDate _ngayD, String _maMay, String _nguoiLap, String _maKX, Boolean _thuocBX, Boolean _thuocDX, String _maKhoa, string _madt, Decimal _giasac, Byte _daTTTT, SmartDate _ngayTToanTT, Byte _daTTBH, SmartDate _ngayTToanBH, String _noiTTTT, String _noiTTBH, String _nguoiTTTT, String _nguoiTTBH, String _soHD, String _soSoHD)
        {
            return System.Convert.ToInt32(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spKhamBenh_ThuocSD_DY_Create2", _MaSoKham, _sTT, _maBN, _ngayDK.DBValue, _tuNgay.DBValue, _denNgay.DBValue, _sLThang, _sLMua, _ck, _bSChiDinh, _lieuDung, _cachDung, _tinhtien, _sac, _dATT, _nguoiTT, _ngayTToan.DBValue, _daTra, _nguoiTra, _ngaytra.DBValue, _sLTra, _duyet, _phat, _ngayP.DBValue, _MaPX, _nguoiP, _ngayD.DBValue, _maMay, _nguoiLap, _maKX, _thuocBX, _thuocDX, _maKhoa, _madt, _giasac, _daTTTT, _ngayTToanTT.DBValue, _daTTBH, _ngayTToanBH.DBValue, _noiTTTT, _noiTTBH, _nguoiTTTT, _nguoiTTBH, _soHD, _soSoHD));
        }
        public override void UpdateKhamBenh_ThuocSD_DY(String _MaSoKham, Int32 _sTT, String _maBN, SmartDate _ngayDK, SmartDate _tuNgay, SmartDate _denNgay, Decimal _sLThang, Decimal _sLMua, Decimal _ck, String _bSChiDinh, String _lieuDung, String _cachDung, Boolean _tinhtien, Boolean _sac, Byte _dATT, String _nguoiTT, SmartDate _ngayTToan, Boolean _daTra, String _nguoiTra, SmartDate _ngaytra, Decimal _sLTra, Boolean _duyet, Boolean _phat, SmartDate _ngayP, String _MaPX, String _nguoiP, SmartDate _ngayD, String _maMay, Boolean _huy, String _nguoiSD, String _maKX, Boolean _thuocBX, Boolean _thuocDX, Decimal _giasac, Byte _daTTTT, SmartDate _ngayTToanTT, Byte _daTTBH, SmartDate _ngayTToanBH, String _noiTTTT, String _noiTTBH, String _nguoiTTTT, String _nguoiTTBH, String _soHD, String _soSoHD, byte _loai)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spKhamBenh_ThuocSD_DY_Update", _MaSoKham, _sTT, _maBN, _ngayDK.DBValue, _tuNgay.DBValue, _denNgay.DBValue, _sLThang, _sLMua, _ck, _bSChiDinh, _lieuDung, _cachDung, _tinhtien, _sac, _dATT, _nguoiTT, _ngayTToan.DBValue, _daTra, _nguoiTra, _ngaytra.DBValue, _sLTra, _duyet, _phat, _ngayP.DBValue, _MaPX, _nguoiP, _ngayD.DBValue, _maMay, _huy, _nguoiSD, _maKX, _thuocBX, _thuocDX, _giasac, _daTTTT, _ngayTToanTT.DBValue, _daTTBH, _ngayTToanBH.DBValue, _noiTTTT, _noiTTBH, _nguoiTTTT, _nguoiTTBH, _soHD, _soSoHD, _loai);
        }
        public override void DeleteKhamBenh_ThuocSD_DY(String _maMay, String _nguoiSD, String _MaSoKham, Int32 _sTT, string lydohuy)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spKhamBenh_ThuocSD_DY_Deleted", _maMay, _nguoiSD, _MaSoKham, _sTT, lydohuy);
        }

        #endregion

        #region kham benh Thuoc Dong y Chi tiet

        public override Int32 InsertKhamBenh_ThuocSD_DY_C(String _MaSoKham, Int32 _sTT, String _mathuoc, Decimal _sLKeDon, Decimal _sLMua, Decimal _dongiaTT, Decimal _donGiaBH, Decimal _giaChenhLech, Decimal _ck, Boolean _tinhtien, Boolean _bHTinhtien, Boolean _tinhNgoai, String _maMay, String _nguoiSD)
        {
            return System.Convert.ToInt32(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spKhamBenh_ThuocSD_DYC_Create", _MaSoKham, _sTT, _mathuoc, _sLKeDon, _sLMua, _dongiaTT, _donGiaBH, _giaChenhLech, _ck, _tinhtien, _bHTinhtien, _tinhNgoai, _maMay, _nguoiSD));
        }
        public override void UpdateKhamBenh_ThuocSD_DY_C(String _MaSoKham, Int32 _sTT, Int32 _sTTThuoc, String _mathuoc, Decimal _sLKeDon, Decimal _sLMua, Decimal _dongiaTT, Decimal _donGiaBH, Decimal _giaChenhLech, Decimal _ck, Boolean _tinhtien, Boolean _bHTinhtien, Boolean _tinhNgoai, String _maMay, Boolean _huy, String _nguoiSD)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spKhamBenh_ThuocSD_DYC_Update", _MaSoKham, _sTT, _sTTThuoc, _mathuoc, _sLKeDon, _sLMua, _dongiaTT, _donGiaBH, _giaChenhLech, _ck, _tinhtien, _bHTinhtien, _tinhNgoai, _maMay, _huy, _nguoiSD);
        }
        public override void DeleteKhamBenh_ThuocSD_DY_C(String _maMay, String _nguoiSD, String _MaSoKham, Int32 _sTT, Int32 _sTTThuoc)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spKhamBenh_ThuocSD_DYC_Deleted", _maMay, _nguoiSD, _MaSoKham, _sTT, _sTTThuoc);
        }
        #endregion

        #region Thong tin Kham Benh mau Su dung

        public override String InsertKhamBenh_Mau(String _maSoKham, int _sTT, String _mathuoc, String _maBN, SmartDate _ngayDK, Decimal _sLKeDon, Decimal _sLMua, Decimal _dongiaTT, Decimal _donGiaBH, Decimal _giaChenhLech, String _soHD, String _soSoHD, Int32 _sophieu, Decimal _ck, String _bSChiDinh, Boolean _tinhtien, Boolean _bHTinhTien, Byte _dATT, Boolean _tToanSau, String _nguoiTT, SmartDate _ngayTToan, Boolean _daTra, String _nguoiTra, SmartDate _ngaytra, Decimal _sLTra, Boolean _duyet, Boolean _phat, SmartDate _ngayP, String _nguoiD, String _nguoiP, SmartDate _ngayD, string _maMay, String _nguoiLap, String _makhoa, Boolean _dadung, Byte _daTTTT, SmartDate _ngayTToanTT, Byte _daTTBH, SmartDate _ngayTToanBH, String _noiTTTT, String _noiTTBH, String _nguoiTTTT, String _nguoiTTBH, String _maDT)
        {



            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spKhamBenh_Mau_Create", _maSoKham, _sTT, _mathuoc, _maBN, _ngayDK.DBValue, _sLKeDon, _sLMua, _dongiaTT, _donGiaBH, _giaChenhLech, _soHD, _soSoHD, _sophieu, _ck, _bSChiDinh, _tinhtien, _bHTinhTien, _dATT, _tToanSau, _nguoiTT, _ngayTToan.DBValue, _daTra, _nguoiTra, _ngaytra.DBValue, _sLTra, _duyet, _phat, _ngayP.DBValue, _nguoiD, _nguoiP, _ngayD.DBValue, _maMay, _nguoiLap, _makhoa, _dadung, _daTTTT, _ngayTToanTT.DBValue, _daTTBH, _ngayTToanBH.DBValue, _noiTTTT, _noiTTBH, _nguoiTTTT, _nguoiTTBH, _maDT));
        }
        public override void UpdateKhamBenh_Mau(String _maSoKham, int _sTT, String _mathuoc, String _maBN, SmartDate _ngayDK, Decimal _sLKeDon, Decimal _sLMua, Decimal _dongiaTT, Decimal _donGiaBH, Decimal _giaChenhLech, String _soHD, String _soSoHD, Int32 _sophieu, Decimal _ck, String _bSChiDinh, Boolean _tinhtien, Boolean _bHTinhTien, Byte _dATT, Boolean _tToanSau, String _nguoiTT, SmartDate _ngayTToan, Boolean _daTra, String _nguoiTra, SmartDate _ngaytra, Decimal _sLTra, Boolean _duyet, Boolean _phat, SmartDate _ngayP, String _nguoiD, String _nguoiP, SmartDate _ngayD, string _maMay, Boolean _huy, String _nguoiSD, String _soHDTra, String _soSoHDTra, String _makhoa, Boolean _dadung, Byte _daTTTT, SmartDate _ngayTToanTT, Byte _daTTBH, SmartDate _ngayTToanBH, String _noiTTTT, String _noiTTBH, String _nguoiTTTT, String _nguoiTTBH, String _maDT, byte _loai)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spKhamBenh_Mau_Update", _maSoKham, _sTT, _mathuoc, _maBN, _ngayDK.DBValue, _sLKeDon, _sLMua, _dongiaTT, _donGiaBH, _giaChenhLech, _soHD, _soSoHD, _sophieu, _ck, _bSChiDinh, _tinhtien, _bHTinhTien, _dATT, _tToanSau, _nguoiTT, _ngayTToan.DBValue, _daTra, _nguoiTra, _ngaytra.DBValue, _sLTra, _duyet, _phat, _ngayP.DBValue, _nguoiD, _nguoiP, _ngayD.DBValue, _maMay, _huy, _nguoiSD, _soHDTra, _soSoHDTra, _makhoa, _dadung, _daTTTT, _ngayTToanTT.DBValue, _daTTBH, _ngayTToanBH.DBValue, _noiTTTT, _noiTTBH, _nguoiTTTT, _nguoiTTBH, _maDT, _loai);
        }
        public override void DeleteKhamBenh_Mau(String _maMay, String _nguoihuy, String _masokham, int _STT, String _LydoHuy)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spKhamBenh_Mau_Deleted", _masokham, _STT, _maMay, _nguoihuy, _LydoHuy);
        }
        #endregion

        #region Thong tin Kham Benh vtth Su dung

        public override String InsertKhamBenh_VTTH(String _maSoKham, int _sTT, String _mathuoc, String _maBN, SmartDate _ngayDK, Decimal _sLKeDon, Decimal _sLMua, Decimal _dongiaTT, Decimal _donGiaBH, Decimal _giaChenhLech, String _soHD, String _soSoHD, Int32 _sophieu, Decimal _ck, String _bSChiDinh, Boolean _tinhtien, Boolean _bHTinhTien, Byte _dATT, Boolean _tToanSau, String _nguoiTT, SmartDate _ngayTToan, Boolean _daTra, String _nguoiTra, SmartDate _ngaytra, Decimal _sLTra, Boolean _duyet, Boolean _phat, SmartDate _ngayP, String _nguoiD, String _nguoiP, SmartDate _ngayD, string _maMay, String _nguoiLap, String _makhoa, Boolean _dadung, Byte _daTTTT, SmartDate _ngayTToanTT, Byte _daTTBH, SmartDate _ngayTToanBH, String _noiTTTT, String _noiTTBH, String _nguoiTTTT, String _nguoiTTBH, String _maDT)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spKhamBenh_VTTH_Create", _maSoKham, _sTT, _mathuoc, _maBN, _ngayDK.DBValue, _sLKeDon, _sLMua, _dongiaTT, _donGiaBH, _giaChenhLech, _soHD, _soSoHD, _sophieu, _ck, _bSChiDinh, _tinhtien, _bHTinhTien, _dATT, _tToanSau, _nguoiTT, _ngayTToan.DBValue, _daTra, _nguoiTra, _ngaytra.DBValue, _sLTra, _duyet, _phat, _ngayP.DBValue, _nguoiD, _nguoiP, _ngayD.DBValue, _maMay, _nguoiLap, _makhoa, _dadung, _daTTTT, _ngayTToanTT.DBValue, _daTTBH, _ngayTToanBH.DBValue, _noiTTTT, _noiTTBH, _nguoiTTTT, _nguoiTTBH, _maDT));
        }
        public override void UpdateKhamBenh_VTTH(String _maSoKham, int _sTT, String _mathuoc, String _maBN, SmartDate _ngayDK, Decimal _sLKeDon, Decimal _sLMua, Decimal _dongiaTT, Decimal _donGiaBH, Decimal _giaChenhLech, String _soHD, String _soSoHD, Int32 _sophieu, Decimal _ck, String _bSChiDinh, Boolean _tinhtien, Boolean _bHTinhTien, Byte _dATT, Boolean _tToanSau, String _nguoiTT, SmartDate _ngayTToan, Boolean _daTra, String _nguoiTra, SmartDate _ngaytra, Decimal _sLTra, Boolean _duyet, Boolean _phat, SmartDate _ngayP, String _nguoiD, String _nguoiP, SmartDate _ngayD, string _maMay, Boolean _huy, String _nguoiSD, String _soHDTra, String _soSoHDTra, String _makhoa, Boolean _dadung, Byte _daTTTT, SmartDate _ngayTToanTT, Byte _daTTBH, SmartDate _ngayTToanBH, String _noiTTTT, String _noiTTBH, String _nguoiTTTT, String _nguoiTTBH, String _maDT, byte _loai)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spKhamBenh_VTTH_Update", _maSoKham, _sTT, _mathuoc, _maBN, _ngayDK.DBValue, _sLKeDon, _sLMua, _dongiaTT, _donGiaBH, _giaChenhLech, _soHD, _soSoHD, _sophieu, _ck, _bSChiDinh, _tinhtien, _bHTinhTien, _dATT, _tToanSau, _nguoiTT, _ngayTToan.DBValue, _daTra, _nguoiTra, _ngaytra.DBValue, _sLTra, _duyet, _phat, _ngayP.DBValue, _nguoiD, _nguoiP, _ngayD.DBValue, _maMay, _huy, _nguoiSD, _soHDTra, _soSoHDTra, _makhoa, _dadung, _daTTTT, _ngayTToanTT.DBValue, _daTTBH, _ngayTToanBH.DBValue, _noiTTTT, _noiTTBH, _nguoiTTTT, _nguoiTTBH, _maDT, _loai);
        }
        public override void DeleteKhamBenh_VTTH(String _masokham, String _nguoihuy, String _maMay, int _STT, String _LydoHuy)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spKhamBenh_VTTH_Deleted", _masokham, _STT, _maMay, _nguoihuy, _LydoHuy);
        }
        #endregion

        #region Thong tin Kham Benh HoaChat Su dung

        public override String InsertKhamBenh_HoaChat(String _maSoKham, int _sTT, String _mathuoc, String _maBN, SmartDate _ngayDK, decimal _sLKeDon, decimal _sLMua, Decimal _dongiaTT, Decimal _donGiaBH, Decimal _giaChenhLech, String _soHD, String _soSoHD, Int32 _sophieu, Decimal _ck, String _bSChiDinh, Boolean _tinhtien, Boolean _bHTinhTien, Byte _dATT, Boolean _tToanSau, String _nguoiTT, SmartDate _ngayTToan, Boolean _daTra, String _nguoiTra, SmartDate _ngaytra, decimal _sLTra, Boolean _duyet, Boolean _phat, SmartDate _ngayP, String _nguoiD, String _nguoiP, SmartDate _ngayD, string _maMay, String _nguoiLap, String _makhoa, Boolean _dadung, Byte _daTTTT, SmartDate _ngayTToanTT, Byte _daTTBH, SmartDate _ngayTToanBH, String _noiTTTT, String _noiTTBH, String _nguoiTTTT, String _nguoiTTBH, String _maDT)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spKhamBenh_HoaChat_Create", _maSoKham, _sTT, _mathuoc, _maBN, _ngayDK.DBValue, _sLKeDon, _sLMua, _dongiaTT, _donGiaBH, _giaChenhLech, _soHD, _soSoHD, _sophieu, _ck, _bSChiDinh, _tinhtien, _bHTinhTien, _dATT, _tToanSau, _nguoiTT, _ngayTToan.DBValue, _daTra, _nguoiTra, _ngaytra.DBValue, _sLTra, _duyet, _phat, _ngayP.DBValue, _nguoiD, _nguoiP, _ngayD.DBValue, _maMay, _nguoiLap, _makhoa, _dadung, _daTTTT, _ngayTToanTT.DBValue, _daTTBH, _ngayTToanBH.DBValue, _noiTTTT, _noiTTBH, _nguoiTTTT, _nguoiTTBH, _maDT));
        }
        public override void UpdateKhamBenh_HoaChat(String _maSoKham, int _sTT, String _mathuoc, String _maBN, SmartDate _ngayDK, decimal _sLKeDon, decimal _sLMua, Decimal _dongiaTT, Decimal _donGiaBH, Decimal _giaChenhLech, String _soHD, String _soSoHD, Int32 _sophieu, Decimal _ck, String _bSChiDinh, Boolean _tinhtien, Boolean _bHTinhTien, Byte _dATT, Boolean _tToanSau, String _nguoiTT, SmartDate _ngayTToan, Boolean _daTra, String _nguoiTra, SmartDate _ngaytra, decimal _sLTra, Boolean _duyet, Boolean _phat, SmartDate _ngayP, String _nguoiD, String _nguoiP, SmartDate _ngayD, string _maMay, Boolean _huy, String _nguoiSD, String _soHDTra, String _soSoHDTra, String _makhoa, Boolean _dadung, Byte _daTTTT, SmartDate _ngayTToanTT, Byte _daTTBH, SmartDate _ngayTToanBH, String _noiTTTT, String _noiTTBH, String _nguoiTTTT, String _nguoiTTBH, String _maDT, byte _loai)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spKhamBenh_HoaChat_Update", _maSoKham, _sTT, _mathuoc, _maBN, _ngayDK.DBValue, _sLKeDon, _sLMua, _dongiaTT, _donGiaBH, _giaChenhLech, _soHD, _soSoHD, _sophieu, _ck, _bSChiDinh, _tinhtien, _bHTinhTien, _dATT, _tToanSau, _nguoiTT, _ngayTToan.DBValue, _daTra, _nguoiTra, _ngaytra.DBValue, _sLTra, _duyet, _phat, _ngayP.DBValue, _nguoiD, _nguoiP, _ngayD.DBValue, _maMay, _huy, _nguoiSD, _soHDTra, _soSoHDTra, _makhoa, _dadung, _daTTTT, _ngayTToanTT.DBValue, _daTTBH, _ngayTToanBH.DBValue, _noiTTTT, _noiTTBH, _nguoiTTTT, _nguoiTTBH, _maDT, _loai);
        }
        public override void DeleteKhamBenh_HoaChat(String _maMay, String _nguoihuy, String _masokham, int _STT, String _LydoHuy)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spKhamBenh_HoaChat_Deleted", _masokham, _STT, _maMay, _nguoihuy, _LydoHuy);
        }
        #endregion



        #region Phong kham RHM


        public override String InsertBenhAnPK_RHM(String _MaSoKham, SmartDate _ngayKham, String _bSKHAM, String _lyDoKham, String _quanhrang, String _ChiSoLoi, Boolean _ViemLoi, Boolean _ViemCauRang, String _TenBenh, String _TenBenhkem, String _dieuTri, String _benhSu, String _huongDT, String _mabenh, String _maBenhKem, String _maMay, String _nguoiSD)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spBenhAnPK_RHM_CREATE", _MaSoKham, _ngayKham.DBValue, _bSKHAM, _lyDoKham, _quanhrang, _ChiSoLoi, _ViemLoi, _ViemCauRang, _TenBenh, _TenBenhkem, _dieuTri, _benhSu, _huongDT, _mabenh, _maBenhKem, _maMay, _nguoiSD));
        }
        public override void UpdateBenhAnPK_RHM(String _MaSoKham, SmartDate _ngayKham, String _bSKHAM, String _lyDoKham, String _quanhrang, String _ChiSoLoi, Boolean _ViemLoi, Boolean _ViemCauRang, String _TenBenh, String _TenBenhkem, String _dieuTri, String _benhSu, String _huongDT, String _mabenh, String _maBenhKem, String _maMay, Boolean _huy, String _nguoiSD)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spBenhAnPK_RHM_UPDATE", _MaSoKham, _ngayKham.DBValue, _bSKHAM, _lyDoKham, _quanhrang, _ChiSoLoi, _ViemLoi, _ViemCauRang, _TenBenh, _TenBenhkem, _dieuTri, _benhSu, _huongDT, _mabenh, _maBenhKem, _maMay, _huy, _nguoiSD);
        }
        public override void DeleteBenhAnPK_RHM(String _maMay, String _nguoiSD, String _MaSoKham)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spBenhAnPK_RHM_Deleted", _maMay, _nguoiSD, _MaSoKham);
        }
        #endregion
        #region Thong tin Kham Benh N
        public override String InsertKhamBenh_TM(String _maSoKham, Int32 _sTT, String _maDV, String _lyDoKham, String _mach, String _apHuyet, String _nhietDo, String _nhipTho, String _canNang, String _chieuCao, Boolean _da, Boolean _phu, Boolean _ngonTay, Boolean _hach, Boolean _khotho, Boolean _ho, Boolean _daunguc, Boolean _tim, Boolean _ngoiXom, Boolean _ngat, Boolean _hoihop, String _dauhieuKhac, String _longnguc, String _vitrimomtim, String _tiengtim, String _tiengthoitim, String _tiengthoimach, String _tiengthoikhac, String _machtuchi, String _hohap, String _bung, String _thanhkinh, String _coquankhac, String _chanDoanBD, String _dieuTri, String _benhSu, String _huongDT, String _mabenh, String _maBenhKem, String _machuyenkhoa, String _maPhieuHen, SmartDate _ngayHen, string _maMay, String _nguoiSD, String _mABV, SmartDate _ngayVV, String _makhoaVV, String _makhoaChoVV, string _tenbenhbd, String _NYHA)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spKhamBenh_TM_CREATE", _maSoKham, _sTT, _maDV, _lyDoKham, _mach, _apHuyet, _nhietDo, _nhipTho, _canNang, _chieuCao, _da, _phu, _ngonTay, _hach, _khotho, _ho, _daunguc, _tim, _ngoiXom, _ngat, _hoihop, _dauhieuKhac, _longnguc, _vitrimomtim, _tiengtim, _tiengthoitim, _tiengthoimach, _tiengthoikhac, _machtuchi, _hohap, _bung, _thanhkinh, _coquankhac, _chanDoanBD, _dieuTri, _benhSu, _huongDT, _mabenh, _maBenhKem, _machuyenkhoa, _maPhieuHen, _ngayHen.DBValue, _maMay, _nguoiSD, _mABV, _ngayVV.DBValue, _makhoaVV, _makhoaChoVV, _tenbenhbd, _NYHA));
        }
        public override void UpdateKhamBenh_TM(String _maSoKham, Int32 _sTT, String _maDV, String _lyDoKham, String _mach, String _apHuyet, String _nhietDo, String _nhipTho, String _canNang, String _chieuCao, Boolean _da, Boolean _phu, Boolean _ngonTay, Boolean _hach, Boolean _khotho, Boolean _ho, Boolean _daunguc, Boolean _tim, Boolean _ngoiXom, Boolean _ngat, Boolean _hoihop, String _dauhieuKhac, String _longnguc, String _vitrimomtim, String _tiengtim, String _tiengthoitim, String _tiengthoimach, String _tiengthoikhac, String _machtuchi, String _hohap, String _bung, String _thanhkinh, String _coquankhac, String _chanDoanBD, String _dieuTri, String _benhSu, String _huongDT, String _mabenh, String _maBenhKem, String _machuyenkhoa, String _maPhieuHen, SmartDate _ngayHen, string _maMay, String _nguoiSD, Boolean _huy, String _mABV, SmartDate _ngayVV, String _makhoaVV, String _makhoaChoVV, string _tenbenhbd, String _NYHA)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spKhamBenh_TM_UPDATE", _maSoKham, _sTT, _maDV, _lyDoKham, _mach, _apHuyet, _nhietDo, _nhipTho, _canNang, _chieuCao, _da, _phu, _ngonTay, _hach, _khotho, _ho, _daunguc, _tim, _ngoiXom, _ngat, _hoihop, _dauhieuKhac, _longnguc, _vitrimomtim, _tiengtim, _tiengthoitim, _tiengthoimach, _tiengthoikhac, _machtuchi, _hohap, _bung, _thanhkinh, _coquankhac, _chanDoanBD, _dieuTri, _benhSu, _huongDT, _mabenh, _maBenhKem, _machuyenkhoa, _maPhieuHen, _ngayHen.DBValue, _maMay, _nguoiSD, _huy, _mABV, _ngayVV.DBValue, _makhoaVV, _makhoaChoVV, _tenbenhbd, _NYHA);
        }
        public override void DeleteKhamBenh_TM(String _maMay, String _nguoisd, String _maSoKham, Int32 _sTT)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spKhamBenh_TM_Deleted", _maMay, _nguoisd, _maSoKham, _sTT);
        }

        #endregion
        #region Benh an  ke ngoai
        public override int InsertKhamBenh_KeNgoai(String _maBA, Int32 _sTT, String _mathuoc, String _maBN, SmartDate _ngayDK, Decimal _sLKeDon, Decimal _sLMua, String _bSChiDinh, String _chandoan, String _makhoa, String _lieuDung, String _cachDung, String _maMay, String _nguoiLap)
        {
            return System.Convert.ToInt32(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spKhamBenh_KeNgoai_Create", _maBA, _sTT, _mathuoc, _maBN, _ngayDK.DBValue, _sLKeDon, _bSChiDinh, _chandoan, _makhoa, _lieuDung, _cachDung, _maMay, _nguoiLap));
        }
        public override void UpdateKhamBenh_KeNgoai(String _maBA, Int32 _sTT, String _mathuoc, String _maBN, SmartDate _ngayDK, Decimal _sLKeDon, Decimal _sLMua, String _bSChiDinh, String _chandoan, String _makhoa, String _lieuDung, String _cachDung, String _maMay, Boolean _huy, String _nguoiSD)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spKhamBenh_KeNgoai_Update", _maBA, _sTT, _mathuoc, _maBN, _ngayDK.DBValue, _sLKeDon, _sLMua, _bSChiDinh, _chandoan, _makhoa, _lieuDung, _cachDung, _maMay, _huy, _nguoiSD);
        }
        public override void DeleteKhamBenh_KeNgoai(String _maMay, String _nguoiSD, String _maBA, Int32 _sTT, string lydohuy)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spKhamBenh_KeNgoai_Deleted", _maMay, _nguoiSD, _maBA, _sTT, lydohuy);
        }
        #endregion

        #region Phong kham Ngoai
        public override String InsertKhamBenh_Ngoai(String _MaSoKham, Int32 _sTT, string _madv, SmartDate _ngayKham, String _bSKHAM, String _lyDoKham, String _mach, String _apHuyet, String _nhietDo, String _nhipTho, String _canNang, String _chieuCao, String _toanthan, String _benhngoaikhoa, String _coquankhac, String _dieuTri, String _benhSu, String _huongDT, String _mabenh, String _maBenhKem, String _MaBV, String _maMay, String _nguoiSD)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spKhamBenh_Ngoai_CREATE", _MaSoKham, _sTT, _madv, _ngayKham.DBValue, _bSKHAM, _lyDoKham, _mach, _apHuyet, _nhietDo, _nhipTho, _canNang, _chieuCao, _toanthan, _benhngoaikhoa, _coquankhac, _dieuTri, _benhSu, _huongDT, _mabenh, _maBenhKem, _MaBV, _maMay, _nguoiSD));
        }
        public override void UpdateKhamBenh_Ngoai(String _MaSoKham, Int32 _sTT, string _madv, SmartDate _ngayKham, String _bSKHAM, String _lyDoKham, String _mach, String _apHuyet, String _nhietDo, String _nhipTho, String _canNang, String _chieuCao, String _toanthan, String _benhngoaikhoa, String _coquankhac, String _dieuTri, String _benhSu, String _huongDT, String _mabenh, String _maBenhKem, String _MaBV, String _maMay, Boolean _huy, String _nguoiSD)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spKhamBenh_Ngoai_UPDATE", _MaSoKham, _sTT, _madv, _ngayKham.DBValue, _bSKHAM, _lyDoKham, _mach, _apHuyet, _nhietDo, _nhipTho, _canNang, _chieuCao, _toanthan, _benhngoaikhoa, _coquankhac, _dieuTri, _benhSu, _huongDT, _mabenh, _maBenhKem, _MaBV, _maMay, _huy, _nguoiSD);
        }
        public override void DeleteKhamBenh_Ngoai(string _maMay, String _nguoiSD, String _MaSoKham, Int32 _sTT)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spKhamBenh_Ngoai_Deleted", _maMay, _nguoiSD, _MaSoKham, _sTT);
        }
        #endregion

        #region Phong kham Co Xuong Khop
        public override String InsertKhamBenh_CoXuongKhop(String _MaSoKham, Int32 _sTT, string _madv, SmartDate _ngayKham, String _bSKHAM, String _lyDoKham, String _mach, String _apHuyet, String _nhietDo, String _nhipTho, String _canNang, String _chieuCao, String _tinhThan, String _daNiemMac, String _tTNgoaiDa, String _hach, String _kNDiLai, String _ngonDuiTrong, String _hCRaynand, String _coXuongKhop, String _tuanHoan, String _hoHap, String _tieuHoa, String _thanTNieuSDuc, String _thanKinh, String _noiTiet, String _taiMuiHong, String _mat, String _dieuTri, String _benhSu, String _huongDT, String _mabenh, String _maBenhKem, String _MaBV, String _maMay, String _nguoiSD)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spKhamBenh_CoXuongKhop_CREATE", _MaSoKham, _sTT, _madv, _ngayKham.DBValue, _bSKHAM, _lyDoKham, _mach, _apHuyet, _nhietDo, _nhipTho, _canNang, _chieuCao, _tinhThan, _daNiemMac, _tTNgoaiDa, _hach, _kNDiLai, _ngonDuiTrong, _hCRaynand, _coXuongKhop, _tuanHoan, _hoHap, _tieuHoa, _thanTNieuSDuc, _thanKinh, _noiTiet, _taiMuiHong, _mat, _dieuTri, _benhSu, _huongDT, _mabenh, _maBenhKem, _MaBV, _maMay, _nguoiSD));
        }
        public override void UpdateKhamBenh_CoXuongKhop(String _MaSoKham, Int32 _sTT, string _madv, SmartDate _ngayKham, String _bSKHAM, String _lyDoKham, String _mach, String _apHuyet, String _nhietDo, String _nhipTho, String _canNang, String _chieuCao, String _tinhThan, String _daNiemMac, String _tTNgoaiDa, String _hach, String _kNDiLai, String _ngonDuiTrong, String _hCRaynand, String _coXuongKhop, String _tuanHoan, String _hoHap, String _tieuHoa, String _thanTNieuSDuc, String _thanKinh, String _noiTiet, String _taiMuiHong, String _mat, String _dieuTri, String _benhSu, String _huongDT, String _mabenh, String _maBenhKem, String _MaBV, String _maMay, Boolean _huy, String _nguoiSD)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spKhamBenh_CoXuongKhop_UPDATE", _MaSoKham, _sTT, _madv, _ngayKham.DBValue, _bSKHAM, _lyDoKham, _mach, _apHuyet, _nhietDo, _nhipTho, _canNang, _chieuCao, _tinhThan, _daNiemMac, _tTNgoaiDa, _hach, _kNDiLai, _ngonDuiTrong, _hCRaynand, _coXuongKhop, _tuanHoan, _hoHap, _tieuHoa, _thanTNieuSDuc, _thanKinh, _noiTiet, _taiMuiHong, _mat, _dieuTri, _benhSu, _huongDT, _mabenh, _maBenhKem, _MaBV, _maMay, _huy, _nguoiSD);
        }
        public override void DeleteKhamBenh_CoXuongKhop(string _maMay, String _nguoiSD, String _MaSoKham, Int32 _sTT)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spKhamBenh_CoXuongKhop_Deleted", _maMay, _nguoiSD, _MaSoKham, _sTT);
        }
        #endregion

        #region Phong kham Phu
        public override String InsertKhamBenh_Phu(String _MaSoKham, Int32 _sTT, string _madv, SmartDate _ngayKham, String _bSKham, String _lyDoKham, String _mach, String _da, String _niemMac, String _apHuyet, String _xuatHuyet, String _nhietDo, String _nhipTho, String _canNang, String _chieuCao, String _phu, String _thieuMau, String _cao, String _tim, String _gan, String _phoi, String _than, String _benhKhac, String _tomTat, String _dieuTri, String _chanDoan, String _maMay, String _nguoiSD)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spKhamBenh_Phu_CREATE", _MaSoKham, _sTT, _madv, _ngayKham.DBValue, _bSKham, _lyDoKham, _mach, _da, _niemMac, _apHuyet, _xuatHuyet, _nhietDo, _nhipTho, _canNang, _chieuCao, _phu, _thieuMau, _cao, _tim, _gan, _phoi, _than, _benhKhac, _tomTat, _dieuTri, _chanDoan, _maMay, _nguoiSD));
        }
        public override void UpdateKhamBenh_Phu(String _MaSoKham, Int32 _sTT, string _madv, SmartDate _ngayKham, String _bSKham, String _lyDoKham, String _mach, String _da, String _niemMac, String _apHuyet, String _xuatHuyet, String _nhietDo, String _nhipTho, String _canNang, String _chieuCao, String _phu, String _thieuMau, String _cao, String _tim, String _gan, String _phoi, String _than, String _benhKhac, String _tomTat, String _dieuTri, String _chanDoan, String _maMay, Boolean _huy, String _nguoiSD)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spKhamBenh_Phu_UPDATE", _MaSoKham, _sTT, _madv, _ngayKham.DBValue, _bSKham, _lyDoKham, _mach, _da, _niemMac, _apHuyet, _xuatHuyet, _nhietDo, _nhipTho, _canNang, _chieuCao, _phu, _thieuMau, _cao, _tim, _gan, _phoi, _than, _benhKhac, _tomTat, _dieuTri, _chanDoan, _maMay, _huy, _nguoiSD);
        }
        public override void DeleteKhamBenh_Phu(string _maMay, String _nguoiSD, String _MaSoKham, Int32 _sTT)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spKhamBenh_Phu_Deleted", _maMay, _nguoiSD, _MaSoKham, _sTT);
        }
        #endregion

        #region Phong kham Chan thuong chinh hinh


        public override String InsertKhamBenh_CTCH(String _MaSoKham, Int32 _sTT, string _madv, SmartDate _ngayKham, String _bSKHAM, String _lyDoKham, String _mach, String _apHuyet, String _nhietDo, String _nhipTho, String _canNang, String _chieuCao, String _toanThan, String _benhngoaiKhoa, String _tuanHoan, String _hoHap, String _tieuHoa, String _thanTNSD, String _thanKinh, String _coXuongKhop, String _taiMuiHong, String _rangHamMat, String _mat, String _khac, String _dieuTri, String _benhSu, String _huongDT, String _mabenh, String _maBenhKem, String _MaBV, String _maMay, String _nguoiSD)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spKhamBenh_CTCH_CREATE", _MaSoKham, _sTT, _madv, _ngayKham.DBValue, _bSKHAM, _lyDoKham, _mach, _apHuyet, _nhietDo, _nhipTho, _canNang, _chieuCao, _toanThan, _benhngoaiKhoa, _tuanHoan, _hoHap, _tieuHoa, _thanTNSD, _thanKinh, _coXuongKhop, _taiMuiHong, _rangHamMat, _mat, _khac, _dieuTri, _benhSu, _huongDT, _mabenh, _maBenhKem, _MaBV, _maMay, _nguoiSD));
        }
        public override void UpdateKhamBenh_CTCH(String _MaSoKham, Int32 _sTT, string _madv, SmartDate _ngayKham, String _bSKHAM, String _lyDoKham, String _mach, String _apHuyet, String _nhietDo, String _nhipTho, String _canNang, String _chieuCao, String _toanThan, String _benhngoaiKhoa, String _tuanHoan, String _hoHap, String _tieuHoa, String _thanTNSD, String _thanKinh, String _coXuongKhop, String _taiMuiHong, String _rangHamMat, String _mat, String _khac, String _dieuTri, String _benhSu, String _huongDT, String _mabenh, String _maBenhKem, String _MaBV, String _maMay, Boolean _huy, String _nguoiSD)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spKhamBenh_CTCH_UPDATE", _MaSoKham, _sTT, _madv, _ngayKham.DBValue, _bSKHAM, _lyDoKham, _mach, _apHuyet, _nhietDo, _nhipTho, _canNang, _chieuCao, _toanThan, _benhngoaiKhoa, _tuanHoan, _hoHap, _tieuHoa, _thanTNSD, _thanKinh, _coXuongKhop, _taiMuiHong, _rangHamMat, _mat, _khac, _dieuTri, _benhSu, _huongDT, _mabenh, _maBenhKem, _MaBV, _maMay, _huy, _nguoiSD);
        }
        public override void DeleteKhamBenh_CTCH(String _maMay, String _nguoiSD, String _MaSoKham, Int32 _sTT)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spKhamBenh_CTCH_Deleted", _maMay, _nguoiSD, _MaSoKham, _sTT);
        }
        #endregion

        #region Phong kham Noi


        public override String InsertKhamBenh_Noi(String _MaSoKham, Int32 _sTT, string _madv, SmartDate _ngayKham, String _bSKHAM, String _lyDoKham, Boolean _Rubella, Boolean _UonVan, Boolean _TiemChungKhac, String _mach, String _apHuyet, String _nhietDo, String _nhipTho, String _canNang, String _chieuCao, String _toanThan, String _tuanHoan, String _hoHap, String _tieuHoa, String _thanTNSD, String _thanKinh, String _coXuongKhop, String _taiMuiHong, String _rangHamMat, String _mat, String _khac, String _dieuTri, String _benhSu, String _huongDT, String _mabenh, String _maBenhKem, String _MaBV, String _maMay, String _nguoiSD, String _noitiet)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spKhamBenh_Noi_CREATE", _MaSoKham, _sTT, _madv, _ngayKham.DBValue, _bSKHAM, _lyDoKham, _Rubella, _UonVan, _TiemChungKhac, _mach, _apHuyet, _nhietDo, _nhipTho, _canNang, _chieuCao, _toanThan, _tuanHoan, _hoHap, _tieuHoa, _thanTNSD, _thanKinh, _coXuongKhop, _taiMuiHong, _rangHamMat, _mat, _khac, _dieuTri, _benhSu, _huongDT, _mabenh, _maBenhKem, _MaBV, _maMay, _nguoiSD, _noitiet));
        }
        public override void UpdateKhamBenh_Noi(String _MaSoKham, Int32 _sTT, string _madv, SmartDate _ngayKham, String _bSKHAM, String _lyDoKham, Boolean _Rubella, Boolean _UonVan, Boolean _TiemChungKhac, String _mach, String _apHuyet, String _nhietDo, String _nhipTho, String _canNang, String _chieuCao, String _toanThan, String _tuanHoan, String _hoHap, String _tieuHoa, String _thanTNSD, String _thanKinh, String _coXuongKhop, String _taiMuiHong, String _rangHamMat, String _mat, String _khac, String _dieuTri, String _benhSu, String _huongDT, String _mabenh, String _maBenhKem, String _MaBV, String _maMay, Boolean _huy, String _nguoiSD, String _noitiet)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spKhamBenh_Noi_UPDATE", _MaSoKham, _sTT, _madv, _ngayKham.DBValue, _bSKHAM, _lyDoKham, _Rubella, _UonVan, _TiemChungKhac, _mach, _apHuyet, _nhietDo, _nhipTho, _canNang, _chieuCao, _toanThan, _tuanHoan, _hoHap, _tieuHoa, _thanTNSD, _thanKinh, _coXuongKhop, _taiMuiHong, _rangHamMat, _mat, _khac, _dieuTri, _benhSu, _huongDT, _mabenh, _maBenhKem, _MaBV, _maMay, _huy, _nguoiSD, _noitiet);
        }
        public override void DeleteKhamBenh_Noi(String _maMay, String _nguoiSD, String _MaSoKham, Int32 _sTT)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spKhamBenh_Noi_Deleted", _maMay, _nguoiSD, _MaSoKham, _sTT);
        }
        #endregion
        #region Phong kham Noi


        public override String InsertKhamBenh_Noi(String _MaSoKham, Int32 _sTT, string _madv, SmartDate _ngayKham, String _bSKHAM, String _lyDoKham, Boolean _Rubella, Boolean _UonVan, Boolean _TiemChungKhac, String _mach, String _apHuyet, String _nhietDo, String _nhipTho, String _canNang, String _chieuCao, String _toanThan, String _tuanHoan, String _hoHap, String _tieuHoa, String _thanTNSD, String _thanKinh, String _coXuongKhop, String _taiMuiHong, String _rangHamMat, String _mat, String _khac, String _dieuTri, String _benhSu, String _huongDT, String _mabenh, String _maBenhKem, String _MaBV, String _maMay, String _nguoiSD, String _noitiet, int _GiaidoanHIV, String _Phacdo1, String _Phacdo2, String _Phacdo3, String _Lydophacdo1, String _Lydophacdo2, String _Lydophacdo3, SmartDate _ngayphacdo1, SmartDate _ngayphacdo2, SmartDate _ngayphacdo3, SmartDate _NgaydkHIV, SmartDate _NgaykhangdinhHIV, String _NoikhangdinhHIV, String MAHsoHIV, String _KetQuaXNCD4, String _NgayXNCD4, String _KetQuaTLHIV, String _NgayTLHIV)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spKhamBenh_Noi_CREATE1", _MaSoKham, _sTT, _madv, _ngayKham.DBValue, _bSKHAM, _lyDoKham, _Rubella, _UonVan, _TiemChungKhac, _mach, _apHuyet, _nhietDo, _nhipTho, _canNang, _chieuCao, _toanThan, _tuanHoan, _hoHap, _tieuHoa, _thanTNSD, _thanKinh, _coXuongKhop, _taiMuiHong, _rangHamMat, _mat, _khac, _dieuTri, _benhSu, _huongDT, _mabenh, _maBenhKem, _MaBV, _maMay, _nguoiSD, _noitiet, _GiaidoanHIV, _Phacdo1, _Phacdo2, _Phacdo3, _Lydophacdo1, _Lydophacdo2, _Lydophacdo3, _ngayphacdo1.DBValue, _ngayphacdo2.DBValue, _ngayphacdo3.DBValue, _NgaydkHIV.DBValue, _NgaykhangdinhHIV.DBValue, _NoikhangdinhHIV, MAHsoHIV, _KetQuaXNCD4, _NgayXNCD4, _KetQuaTLHIV, _NgayTLHIV));
        }
        public override void UpdateKhamBenh_Noi(String _MaSoKham, Int32 _sTT, string _madv, SmartDate _ngayKham, String _bSKHAM, String _lyDoKham, Boolean _Rubella, Boolean _UonVan, Boolean _TiemChungKhac, String _mach, String _apHuyet, String _nhietDo, String _nhipTho, String _canNang, String _chieuCao, String _toanThan, String _tuanHoan, String _hoHap, String _tieuHoa, String _thanTNSD, String _thanKinh, String _coXuongKhop, String _taiMuiHong, String _rangHamMat, String _mat, String _khac, String _dieuTri, String _benhSu, String _huongDT, String _mabenh, String _maBenhKem, String _MaBV, String _maMay, Boolean _huy, String _nguoiSD, String _noitiet, int _GiaidoanHIV, String _Phacdo1, String _Phacdo2, String _Phacdo3, String _Lydophacdo1, String _Lydophacdo2, String _Lydophacdo3, SmartDate _ngayphacdo1, SmartDate _ngayphacdo2, SmartDate _ngayphacdo3, SmartDate _NgaydkHIV, SmartDate _NgaykhangdinhHIV, String _NoikhangdinhHIV, String MAHsoHIV, String _KetQuaXNCD4, String _NgayXNCD4, String _KetQuaTLHIV, String _NgayTLHIV)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spKhamBenh_Noi_UPDATE1", _MaSoKham, _sTT, _madv, _ngayKham.DBValue, _bSKHAM, _lyDoKham, _Rubella, _UonVan, _TiemChungKhac, _mach, _apHuyet, _nhietDo, _nhipTho, _canNang, _chieuCao, _toanThan, _tuanHoan, _hoHap, _tieuHoa, _thanTNSD, _thanKinh, _coXuongKhop, _taiMuiHong, _rangHamMat, _mat, _khac, _dieuTri, _benhSu, _huongDT, _mabenh, _maBenhKem, _MaBV, _maMay, _huy, _nguoiSD, _noitiet, _GiaidoanHIV, _Phacdo1, _Phacdo2, _Phacdo3, _Lydophacdo1, _Lydophacdo2, _Lydophacdo3, _ngayphacdo1.DBValue, _ngayphacdo2.DBValue, _ngayphacdo3.DBValue, _NgaydkHIV.DBValue, _NgaykhangdinhHIV.DBValue, _NoikhangdinhHIV, MAHsoHIV, _KetQuaXNCD4, _NgayXNCD4, _KetQuaTLHIV, _NgayTLHIV);
        }

        #endregion
        #region Phong kham Dong y


        public override String InsertKhamBenh_DY(String _MaSoKham, Int32 _sTT, string _madv, SmartDate _ngayKham, String _bSKHAM, String _lyDoKham, String _mach, String _apHuyet, String _nhietDo, String _nhipTho, String _canNang, String _chieuCao, String _toanThan, Boolean _Batcuong_Bieu, Boolean _Batcuong_Ly, Boolean _Batcuong_Hu, Boolean _Batcuong_Thuc, Boolean _Batcuong_Han, Boolean _Batcuong_Nhiet, Boolean _Batcuong_Am, Boolean _Batcuong_Duong, Boolean _Tangphu_Tam, Boolean _Tangphu_Can, Boolean _Tangphu_Ty, Boolean _Tangphu_Phe, Boolean _Tangphu_Than, Boolean _Tangphu_vi, Boolean _Tangphu_DaiTrang, Boolean _Tangphu_TieuTruong, Boolean _Tangphu_TamBao, Boolean _Tangphu_TamTieu, Boolean _Tangphu_Dom, Boolean _Tangphu_BangQuang, Boolean _Tangphu_PhuKyHang, Boolean _KinhMach_Tam, Boolean _KinhMach_Can, Boolean _KinhMach_Ty, Boolean _KinhMach_Phe, Boolean _KinhMach_Than, Boolean _KinhMach_vi, Boolean _KinhMach_DaiTruong, Boolean _KinhMach_TieuTruong, Boolean _KinhMach_TamBaoLac, Boolean _KinhMach_TamTieu, Boolean _KinhMach_Dom, Boolean _KinhMach_BangQuang, Boolean _KinhMach_MachDoc, Boolean _KinhMach_MachNham, Boolean _DinhViTheo_Dinh, Boolean _DinhViTheo_Ve, Boolean _DinhViTheo_Khi, Boolean _DinhViTheo_Huyet, Boolean _NguyenNhan_NoiNhan, Boolean _NguyenNhan_NgoaiNhan, Boolean _NguyenNhan_BatNoiNgoaiNhan, String _BenhLyKhac, String _dieuTri, String _benhSu, String _huongDT, String _mabenh, String _maBenhKem, String _MaBV, String _maMay, String _nguoiSD)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spKhamBenh_DY_CREATE", _MaSoKham, _sTT, _madv, _ngayKham.DBValue, _bSKHAM, _lyDoKham, _mach, _apHuyet, _nhietDo, _nhipTho, _canNang, _chieuCao, _toanThan, _Batcuong_Bieu, _Batcuong_Ly, _Batcuong_Hu, _Batcuong_Thuc, _Batcuong_Han, _Batcuong_Nhiet, _Batcuong_Am, _Batcuong_Duong, _Tangphu_Tam, _Tangphu_Can, _Tangphu_Ty, _Tangphu_Phe, _Tangphu_Than, _Tangphu_vi, _Tangphu_DaiTrang, _Tangphu_TieuTruong, _Tangphu_TamBao, _Tangphu_TamTieu, _Tangphu_Dom, _Tangphu_BangQuang, _Tangphu_PhuKyHang, _KinhMach_MachDoc, _KinhMach_Tam, _KinhMach_Can, _KinhMach_Ty, _KinhMach_Phe, _KinhMach_Than, _KinhMach_vi, _KinhMach_DaiTruong, _KinhMach_TieuTruong, _KinhMach_TamBaoLac, _KinhMach_TamTieu, _KinhMach_Dom, _KinhMach_BangQuang, _KinhMach_MachNham, _DinhViTheo_Dinh, _DinhViTheo_Ve, _DinhViTheo_Khi, _DinhViTheo_Huyet, _NguyenNhan_NoiNhan, _NguyenNhan_NgoaiNhan, _NguyenNhan_BatNoiNgoaiNhan, _BenhLyKhac, _dieuTri, _benhSu, _huongDT, _mabenh, _maBenhKem, _MaBV, _maMay, _nguoiSD));
        }
        public override void UpdateKhamBenh_DY(String _MaSoKham, Int32 _sTT, string _madv, SmartDate _ngayKham, String _bSKHAM, String _lyDoKham, String _mach, String _apHuyet, String _nhietDo, String _nhipTho, String _canNang, String _chieuCao, String _toanThan, Boolean _Batcuong_Bieu, Boolean _Batcuong_Ly, Boolean _Batcuong_Hu, Boolean _Batcuong_Thuc, Boolean _Batcuong_Han, Boolean _Batcuong_Nhiet, Boolean _Batcuong_Am, Boolean _Batcuong_Duong, Boolean _Tangphu_Tam, Boolean _Tangphu_Can, Boolean _Tangphu_Ty, Boolean _Tangphu_Phe, Boolean _Tangphu_Than, Boolean _Tangphu_vi, Boolean _Tangphu_DaiTrang, Boolean _Tangphu_TieuTruong, Boolean _Tangphu_TamBao, Boolean _Tangphu_TamTieu, Boolean _Tangphu_Dom, Boolean _Tangphu_BangQuang, Boolean _Tangphu_PhuKyHang, Boolean _KinhMach_Tam, Boolean _KinhMach_Can, Boolean _KinhMach_Ty, Boolean _KinhMach_Phe, Boolean _KinhMach_Than, Boolean _KinhMach_vi, Boolean _KinhMach_DaiTruong, Boolean _KinhMach_TieuTruong, Boolean _KinhMach_TamBaoLac, Boolean _KinhMach_TamTieu, Boolean _KinhMach_Dom, Boolean _KinhMach_BangQuang, Boolean _KinhMach_MachDoc, Boolean _KinhMach_MachNham, Boolean _DinhViTheo_Dinh, Boolean _DinhViTheo_Ve, Boolean _DinhViTheo_Khi, Boolean _DinhViTheo_Huyet, Boolean _NguyenNhan_NoiNhan, Boolean _NguyenNhan_NgoaiNhan, Boolean _NguyenNhan_BatNoiNgoaiNhan, String _BenhLyKhac, String _dieuTri, String _benhSu, String _huongDT, String _mabenh, String _maBenhKem, String _MaBV, String _maMay, Boolean _huy, String _nguoiSD)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spKhamBenh_DY_UPDATE", _MaSoKham, _sTT, _madv, _ngayKham.DBValue, _bSKHAM, _lyDoKham, _mach, _apHuyet, _nhietDo, _nhipTho, _canNang, _chieuCao, _toanThan, _Batcuong_Bieu, _Batcuong_Ly, _Batcuong_Hu, _Batcuong_Thuc, _Batcuong_Han, _Batcuong_Nhiet, _Batcuong_Am, _Batcuong_Duong, _Tangphu_Tam, _Tangphu_Can, _Tangphu_Ty, _Tangphu_Phe, _Tangphu_Than, _Tangphu_vi, _Tangphu_DaiTrang, _Tangphu_TieuTruong, _Tangphu_TamBao, _Tangphu_TamTieu, _Tangphu_Dom, _Tangphu_BangQuang, _Tangphu_PhuKyHang, _KinhMach_MachDoc, _KinhMach_Tam, _KinhMach_Can, _KinhMach_Ty, _KinhMach_Phe, _KinhMach_Than, _KinhMach_vi, _KinhMach_DaiTruong, _KinhMach_TieuTruong, _KinhMach_TamBaoLac, _KinhMach_TamTieu, _KinhMach_Dom, _KinhMach_BangQuang, _KinhMach_MachNham, _DinhViTheo_Dinh, _DinhViTheo_Ve, _DinhViTheo_Khi, _DinhViTheo_Huyet, _NguyenNhan_NoiNhan, _NguyenNhan_NgoaiNhan, _NguyenNhan_BatNoiNgoaiNhan, _BenhLyKhac, _dieuTri, _benhSu, _huongDT, _mabenh, _maBenhKem, _MaBV, _maMay, _huy, _nguoiSD);
        }
        public override void DeleteKhamBenh_DY(String _maMay, String _nguoiSD, String _MaSoKham, Int32 _sTT)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spKhamBenh_DY_Deleted", _maMay, _nguoiSD, _MaSoKham, _sTT);
        }
        #endregion
        #region Phong kham SanPhu


        public override String InsertKhamBenh_SanPhu(String _MaSoKham, Int32 _sTT, string _maDV, SmartDate _ngayKham, String _bSKham, String _lyDoKham, Boolean _Rubella, Boolean _UonVan, Boolean _TiemChungKhac, String _TrieuChung, String _amho, String _amdao, String _CTC, String _Tucung, String _PhanPhu, String _KetLuan, String _Tuvan, String _Mach, String _ApHuyet, String _NhietDo, String _NhipTho, String _Chuandoan, String _BenhKhac, String _TenBenh, String _LoiDanBS, String _BenhSu, String _HuongDT, String _Mabenh, String _MaBenhKem, String _MaBV, String _DieuTri, String _maMay, String _NguoiSD)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spKhamBenh_SanPhu_CREATE", _MaSoKham, _sTT, _maDV, _ngayKham.DBValue, _bSKham, _lyDoKham, _Rubella, _UonVan, _TiemChungKhac, _TrieuChung, _amho, _amdao, _CTC, _Tucung, _PhanPhu, _KetLuan, _Tuvan, _Mach, _ApHuyet, _NhietDo, _NhipTho, _Chuandoan, _BenhKhac, _TenBenh, _LoiDanBS, _BenhSu, _HuongDT, _Mabenh, _MaBenhKem, _MaBV, _DieuTri, _maMay, _NguoiSD));
        }
        public override void UpdateKhamBenh_SanPhu(String _MaSoKham, Int32 _sTT, string _maDV, SmartDate _ngayKham, String _bSKham, String _lyDoKham, Boolean _Rubella, Boolean _UonVan, Boolean _TiemChungKhac, String _TrieuChung, String _amho, String _amdao, String _CTC, String _Tucung, String _PhanPhu, String _KetLuan, String _Tuvan, String _Mach, String _ApHuyet, String _NhietDo, String _NhipTho, String _Chuandoan, String _BenhKhac, String _TenBenh, String _LoiDanBS, String _BenhSu, String _HuongDT, String _Mabenh, String _MaBenhKem, String _MaBV, String _DieuTri, String _maMay, Boolean _Huy, String _NguoiSD)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spKhamBenh_SanPhu_UPDATE", _MaSoKham, _sTT, _maDV, _ngayKham.DBValue, _bSKham, _lyDoKham, _Rubella, _UonVan, _TiemChungKhac, _TrieuChung, _amho, _amdao, _CTC, _Tucung, _PhanPhu, _KetLuan, _Tuvan, _Mach, _ApHuyet, _NhietDo, _NhipTho, _Chuandoan, _BenhKhac, _TenBenh, _LoiDanBS, _BenhSu, _HuongDT, _Mabenh, _MaBenhKem, _MaBV, _DieuTri, _maMay, _Huy, _NguoiSD);
        }
        public override void DeleteKhamBenh_SanPhu(String _maMay, String _nguoiSD, String _MaSoKham, Int32 _sTT)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spKhamBenh_SanPhu_Deleted", _maMay, _nguoiSD, _MaSoKham, _sTT);
        }
        #endregion

        #region Phong kham KHGD


        public override String InsertKhamBenh_KHGD(String _MaSoKham, Int32 _sTT, String _maDV, SmartDate _ngayKham, String _bSKHAM, String _lyDoKham, String _mach, String _apHuyet, String _nhietDo, String _nhipTho, String _canNang, String _chieuCao, Boolean _Rubella, Boolean _UonVan, Boolean _TiemChungKhac, String _Para, String _TuoiThai, Boolean _ChuaCoChong, Boolean _ThaiLuu, String _BPTranhThai, String _DitatMota, Boolean _Ditat, String _BatThuong, String _Tuvan, String _Chuandoan, String _BenhKhac, String _LoiDanBS, String _BenhSu, String _HuongDT, String _Mabenh, String _MaBenhKem, String _MaBV, String _DieuTri, String _sMaMay, String _nguoiSD)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spKhamBenh_KHGD_CREATE", _MaSoKham, _sTT, _maDV, _ngayKham.DBValue, _bSKHAM, _lyDoKham, _mach, _apHuyet, _nhietDo, _nhipTho, _canNang, _chieuCao, _Rubella, _UonVan, _TiemChungKhac, _Para, _TuoiThai, _ChuaCoChong, _ThaiLuu, _BPTranhThai, _DitatMota, _Ditat, _BatThuong, _Tuvan, _Chuandoan, _BenhKhac, _LoiDanBS, _BenhSu, _HuongDT, _Mabenh, _MaBenhKem, _MaBV, _DieuTri, _sMaMay, _nguoiSD));
        }
        public override void UpdateKhamBenh_KHGD(String _MaSoKham, Int32 _sTT, String _maDV, SmartDate _ngayKham, String _bSKHAM, String _lyDoKham, String _mach, String _apHuyet, String _nhietDo, String _nhipTho, String _canNang, String _chieuCao, Boolean _Rubella, Boolean _UonVan, Boolean _TiemChungKhac, String _Para, String _TuoiThai, Boolean _ChuaCoChong, Boolean _ThaiLuu, String _BPTranhThai, String _DitatMota, Boolean _Ditat, String _BatThuong, String _Tuvan, String _Chuandoan, String _BenhKhac, String _LoiDanBS, String _BenhSu, String _HuongDT, String _Mabenh, String _MaBenhKem, String _MaBV, String _DieuTri, String _sMaMay, String _nguoiSD)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spKhamBenh_KHGD_UPDATE", _MaSoKham, _sTT, _maDV, _ngayKham.DBValue, _bSKHAM, _lyDoKham, _mach, _apHuyet, _nhietDo, _nhipTho, _canNang, _chieuCao, _Rubella, _UonVan, _TiemChungKhac, _Para, _TuoiThai, _ChuaCoChong, _ThaiLuu, _BPTranhThai, _DitatMota, _Ditat, _BatThuong, _Tuvan, _Chuandoan, _BenhKhac, _LoiDanBS, _BenhSu, _HuongDT, _Mabenh, _MaBenhKem, _MaBV, _DieuTri, _sMaMay, _nguoiSD);
        }
        public override void DeleteKhamBenh_KHGD(String _maMay, String _nguoiSD, String _MaSoKham, Int32 _sTT)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spKhamBenh_KHGD_Deleted", _maMay, _nguoiSD, _MaSoKham, _sTT);
        }
        #endregion

        #region Phong kham SanSan


        public override String InsertKhamBenh_SanSan(String _MaSoKham, Int32 _sTT, String _maDV, SmartDate _ngayKham, String _bSKHAM, String _lyDoKham, String _mach, String _apHuyet, String _nhietDo, String _nhipTho, String _canNang, String _chieuCao, Boolean _Rubella, Boolean _UonVan, Boolean _TiemChungKhac, SmartDate _NgayDauKyKCC, String _CannangTruoc, String _TuoiThai, Boolean _Seomocu, Boolean _dauvetmo, SmartDate _ngaydedukien, SmartDate _ngaydedukienSA, String _TaiTdThai, String _ChieuCaoTC, String _CTCVB, String _NgoiThai, String _SLThai, String _TimThaiMoTa, Boolean _TimThai, String _BatThuong, String _Tuvan, String _Chuandoan, String _BenhKhac, String _LoiDanBS, String _BenhSu, String _HuongDT, String _Mabenh, String _MaBenhKem, String _MaBV, String _DieuTri, String _sMaMay, String _nguoiSD)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spKhamBenh_SanSan_CREATE", _MaSoKham, _sTT, _maDV, _ngayKham.DBValue, _bSKHAM, _lyDoKham, _mach, _apHuyet, _nhietDo, _nhipTho, _canNang, _chieuCao, _Rubella, _UonVan, _TiemChungKhac, _NgayDauKyKCC.DBValue, _CannangTruoc, _TuoiThai, _Seomocu, _dauvetmo, _ngaydedukien.DBValue, _ngaydedukienSA.DBValue, _TaiTdThai, _ChieuCaoTC, _CTCVB, _NgoiThai, _SLThai, _TimThaiMoTa, _TimThai, _BatThuong, _Tuvan, _Chuandoan, _BenhKhac, _LoiDanBS, _BenhSu, _HuongDT, _Mabenh, _MaBenhKem, _MaBV, _DieuTri, _sMaMay, _nguoiSD));
        }
        public override void UpdateKhamBenh_SanSan(String _MaSoKham, Int32 _sTT, String _maDV, SmartDate _ngayKham, String _bSKHAM, String _lyDoKham, String _mach, String _apHuyet, String _nhietDo, String _nhipTho, String _canNang, String _chieuCao, Boolean _Rubella, Boolean _UonVan, Boolean _TiemChungKhac, SmartDate _NgayDauKyKCC, String _CannangTruoc, String _TuoiThai, Boolean _Seomocu, Boolean _dauvetmo, SmartDate _ngaydedukien, SmartDate _ngaydedukienSA, String _TaiTdThai, String _ChieuCaoTC, String _CTCVB, String _NgoiThai, String _SLThai, String _TimThaiMoTa, Boolean _TimThai, String _BatThuong, String _Tuvan, String _Chuandoan, String _BenhKhac, String _LoiDanBS, String _BenhSu, String _HuongDT, String _Mabenh, String _MaBenhKem, String _MaBV, String _DieuTri, String _sMaMay, String _nguoiSD)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spKhamBenh_SanSan_UPDATE", _MaSoKham, _sTT, _maDV, _ngayKham.DBValue, _bSKHAM, _lyDoKham, _mach, _apHuyet, _nhietDo, _nhipTho, _canNang, _chieuCao, _Rubella, _UonVan, _TiemChungKhac, _NgayDauKyKCC.DBValue, _CannangTruoc, _TuoiThai, _Seomocu, _dauvetmo, _ngaydedukien.DBValue, _ngaydedukienSA.DBValue, _TaiTdThai, _ChieuCaoTC, _CTCVB, _NgoiThai, _SLThai, _TimThaiMoTa, _TimThai, _BatThuong, _Tuvan, _Chuandoan, _BenhKhac, _LoiDanBS, _BenhSu, _HuongDT, _Mabenh, _MaBenhKem, _MaBV, _DieuTri, _sMaMay, _nguoiSD);
        }
        public override void DeleteKhamBenh_SanSan(String _maMay, String _nguoiSD, String _MaSoKham, Int32 _sTT)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spKhamBenh_SanSan_Deleted", _maMay, _nguoiSD, _MaSoKham, _sTT);
        }
        #endregion
       
        #region Phong kham SanSanCC


        public override String InsertKhamBenh_SanSanCC(String _MaSoKham, Int32 _sTT, String _maDV, SmartDate _ngayKham, String _bSKHAM, String _lyDoKham, String _mach, String _apHuyet, String _nhietDo, String _nhipTho, String _canNang, String _chieuCao, Boolean _Rubella, Boolean _UonVan, Boolean _TiemChungKhac, String _MaTinhThan, String _TinhThanCT, String _MaPhu, String _ProteinNieu, String _MaCTC, String _ConCoTC, String _CTCMo, String _CTCBishop, String _MaDauOi, String _TGDauOi, String _TienLuong, String _MaNuocOi, String _Chuandoan, String _BenhKhac, String _LoiDanBS, String _BenhSu, String _HuongDT, String _Mabenh, String _MaBenhKem, String _MaBV, String _DieuTri, String _sMaMay, String _nguoiSD)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spKhamBenh_SanCC_CREATE", _MaSoKham, _sTT, _maDV, _ngayKham.DBValue, _bSKHAM, _lyDoKham, _mach, _apHuyet, _nhietDo, _nhipTho, _canNang, _chieuCao, _Rubella, _UonVan, _TiemChungKhac, _MaTinhThan, _TinhThanCT, _MaPhu, _ProteinNieu, _MaCTC, _ConCoTC, _CTCMo, _CTCBishop, _MaDauOi, _TGDauOi, _TienLuong, _MaNuocOi, _Chuandoan, _BenhKhac, _LoiDanBS, _BenhSu, _HuongDT, _Mabenh, _MaBenhKem, _MaBV, _DieuTri, _sMaMay, _nguoiSD));
        }
        public override void UpdateKhamBenh_SanSanCC(String _MaSoKham, Int32 _sTT, String _maDV, SmartDate _ngayKham, String _bSKHAM, String _lyDoKham, String _mach, String _apHuyet, String _nhietDo, String _nhipTho, String _canNang, String _chieuCao, Boolean _Rubella, Boolean _UonVan, Boolean _TiemChungKhac, String _MaTinhThan, String _TinhThanCT, String _MaPhu, String _ProteinNieu, String _MaCTC, String _ConCoTC, String _CTCMo, String _CTCBishop, String _MaDauOi, String _TGDauOi, String _TienLuong, String _MaNuocOi, String _Chuandoan, String _BenhKhac, String _LoiDanBS, String _BenhSu, String _HuongDT, String _Mabenh, String _MaBenhKem, String _MaBV, String _DieuTri, String _sMaMay, String _nguoiSD)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spKhamBenh_SanCC_UPDATE", _MaSoKham, _sTT, _maDV, _ngayKham.DBValue, _bSKHAM, _lyDoKham, _mach, _apHuyet, _nhietDo, _nhipTho, _canNang, _chieuCao, _Rubella, _UonVan, _TiemChungKhac, _MaTinhThan, _TinhThanCT, _MaPhu, _ProteinNieu, _MaCTC, _ConCoTC, _CTCMo, _CTCBishop, _MaDauOi, _TGDauOi, _TienLuong, _MaNuocOi, _Chuandoan, _BenhKhac, _LoiDanBS, _BenhSu, _HuongDT, _Mabenh, _MaBenhKem, _MaBV, _DieuTri, _sMaMay, _nguoiSD);
        }
        public override void DeleteKhamBenh_SanSanCC(String _maMay, String _nguoiSD, String _MaSoKham, Int32 _sTT)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spKhamBenh_SanCC_Deleted", _maMay, _nguoiSD, _MaSoKham, _sTT);
        }
        #endregion
        #region Phong kham Nhi


        public override String InsertKhamBenh_Nhi(String _MaSoKham, Int32 _sTT, string _maDV, SmartDate _ngayKham, String _bSKHAM, String _lyDoKham, String _mach, String _apHuyet, String _nhietDo, String _nhipTho, String _canNang, String _chieuCao, Boolean _Rubella, Boolean _UonVan, Boolean _TiemChungKhac, String _TrieuChung, String _Tiensu, String _DiungThuoc, String nhommau, String _Chuandoan, String _BenhKhac, String _TenBenh, String _BenhLyKhac, String _DieuTri, String _LoiDanBS, string _BenhSu, String _HuongDT, String _Mabenh, String _MaBenhKem, String _MaBV, String _maMay, String _NguoiSD)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spKhamBenh_Nhi_CREATE", _MaSoKham, _sTT, _maDV, _ngayKham.DBValue, _bSKHAM, _lyDoKham, _mach, _apHuyet, _nhietDo, _nhipTho, _canNang, _chieuCao, _Rubella, _UonVan, _TiemChungKhac, _TrieuChung, _Tiensu, _DiungThuoc, nhommau, _Chuandoan, _BenhKhac, _TenBenh, _BenhLyKhac, _DieuTri, _LoiDanBS, _BenhSu, _HuongDT, _Mabenh, _MaBenhKem, _MaBV, _maMay, _NguoiSD));
        }
        public override void UpdateKhamBenh_Nhi(String _MaSoKham, Int32 _sTT, string _madv, SmartDate _ngayKham, String _bSKHAM, String _lyDoKham, String _mach, String _apHuyet, String _nhietDo, String _nhipTho, String _canNang, String _chieuCao, Boolean _Rubella, Boolean _UonVan, Boolean _TiemChungKhac, String _TrieuChung, String _Tiensu, String _DiungThuoc, String nhommau, String _Chuandoan, String _BenhKhac, String _TenBenh, String _BenhLyKhac, String _DieuTri, String _LoiDanBS, string _BenhSu, String _huongDT, String _mabenh, String _maBenhKem, String _MaBV, String _maMay, Boolean _huy, String _nguoiSD)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spKhamBenh_Nhi_UPDATE", _MaSoKham, _sTT, _madv, _ngayKham.DBValue, _bSKHAM, _lyDoKham, _mach, _apHuyet, _nhietDo, _nhipTho, _canNang, _chieuCao, _Rubella, _UonVan, _TiemChungKhac, _TrieuChung, _Tiensu, _DiungThuoc, nhommau, _Chuandoan, _BenhKhac, _TenBenh, _BenhLyKhac, _DieuTri, _LoiDanBS, _BenhSu, _huongDT, _mabenh, _maBenhKem, _MaBV, _maMay, _huy, _nguoiSD);
        }
        public override void DeleteKhamBenh_Nhi(String _maMay, String _nguoiSD, String _MaSoKham, Int32 _sTT)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spKhamBenh_Nhi_Deleted", _maMay, _nguoiSD, _MaSoKham, _sTT);
        }
        #endregion

        #region Phong kham BenhMau


        public override String InsertKhamBenh_BenhMau(String _MaSoKham, Int32 _sTT, string _madv, SmartDate _ngayKham, String _bSKHAM, String _lyDoKham, String _mach, String _apHuyet, String _nhietDo, String _nhipTho, String _canNang, String _chieuCao, String _toanThan, String _benhngoaiKhoa, String _CoQuankhac, String _dieuTri, String _benhSu, String _huongDT, String _mabenh, String _maBenhKem, String _MaBV, String _maMay, String _nguoiSD)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spKhamBenh_BenhMau_CREATE", _MaSoKham, _sTT, _madv, _ngayKham.DBValue, _bSKHAM, _lyDoKham, _mach, _apHuyet, _nhietDo, _nhipTho, _canNang, _chieuCao, _toanThan, _benhngoaiKhoa, _CoQuankhac, _dieuTri, _benhSu, _huongDT, _mabenh, _maBenhKem, _MaBV, _maMay, _nguoiSD));
        }
        public override void UpdateKhamBenh_BenhMau(String _MaSoKham, Int32 _sTT, string _madv, SmartDate _ngayKham, String _bSKHAM, String _lyDoKham, String _mach, String _apHuyet, String _nhietDo, String _nhipTho, String _canNang, String _chieuCao, String _toanThan, String _benhngoaiKhoa, String _CoQuankhac, String _dieuTri, String _benhSu, String _huongDT, String _mabenh, String _maBenhKem, String _MaBV, String _maMay, Boolean _huy, String _nguoiSD)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spKhamBenh_BenhMau_UPDATE", _MaSoKham, _sTT, _madv, _ngayKham.DBValue, _bSKHAM, _lyDoKham, _mach, _apHuyet, _nhietDo, _nhipTho, _canNang, _chieuCao, _toanThan, _benhngoaiKhoa, _CoQuankhac, _dieuTri, _benhSu, _huongDT, _mabenh, _maBenhKem, _MaBV, _maMay, _huy, _nguoiSD);
        }
        public override void DeleteKhamBenh_BenhMau(String _maMay, String _nguoiSD, String _MaSoKham, Int32 _sTT)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spKhamBenh_BenhMau_Deleted", _maMay, _nguoiSD, _MaSoKham, _sTT);
        }
        #endregion

        #region Phong kham RHM


        public override String InsertKhamBenh_RHM(String _MaSoKham, Int32 _sTT, string _madv, SmartDate _ngayKham, String _bSKHAM, String _lyDoKham, String _mach, String _apHuyet, String _nhietDo, String _nhipTho, String _canNang, String _chieuCao, String _toanThan, String _benhngoaiKhoa, String _CoQuankhac, String _TonThuong, String _dieuTri, String _benhSu, String _huongDT, String _mabenh, String _maBenhKem, String _MaBV, String _maMay, String _nguoiSD)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spKhamBenh_RHM_CREATE", _MaSoKham, _sTT, _madv, _ngayKham.DBValue, _bSKHAM, _lyDoKham, _mach, _apHuyet, _nhietDo, _nhipTho, _canNang, _chieuCao, _toanThan, _benhngoaiKhoa, _CoQuankhac, _TonThuong, _dieuTri, _benhSu, _huongDT, _mabenh, _maBenhKem, _MaBV, _maMay, _nguoiSD));
        }
        public override void UpdateKhamBenh_RHM(String _MaSoKham, Int32 _sTT, string _madv, SmartDate _ngayKham, String _bSKHAM, String _lyDoKham, String _mach, String _apHuyet, String _nhietDo, String _nhipTho, String _canNang, String _chieuCao, String _toanThan, String _benhngoaiKhoa, String _CoQuankhac, String _TonThuong, String _dieuTri, String _benhSu, String _huongDT, String _mabenh, String _maBenhKem, String _MaBV, String _maMay, Boolean _huy, String _nguoiSD)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spKhamBenh_RHM_UPDATE", _MaSoKham, _sTT, _madv, _ngayKham.DBValue, _bSKHAM, _lyDoKham, _mach, _apHuyet, _nhietDo, _nhipTho, _canNang, _chieuCao, _toanThan, _benhngoaiKhoa, _CoQuankhac, _TonThuong, _dieuTri, _benhSu, _huongDT, _mabenh, _maBenhKem, _MaBV, _maMay, _huy, _nguoiSD);
        }
        public override void DeleteKhamBenh_RHM(String _maMay, String _nguoiSD, String _MaSoKham, Int32 _sTT)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spKhamBenh_RHM_Deleted", _maMay, _nguoiSD, _MaSoKham, _sTT);
        }
        #endregion
        #region Phong kham DaLieu


        public override String InsertKhamBenh_DaLieu(String _MaSoKham, Int32 _sTT, string _madv, SmartDate _ngayKham, String _bSKHAM, String _lyDoKham, String _mach, String _apHuyet, String _nhietDo, String _nhipTho, String _canNang, String _chieuCao, String _toanThan, String _benhngoaiKhoa, String _CoQuankhac, String _TonThuong, String _dieuTri, String _benhSu, String _huongDT, String _mabenh, String _maBenhKem, String _MaBV, String _maMay, String _nguoiSD)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spKhamBenh_DaLieu_CREATE", _MaSoKham, _sTT, _madv, _ngayKham.DBValue, _bSKHAM, _lyDoKham, _mach, _apHuyet, _nhietDo, _nhipTho, _canNang, _chieuCao, _toanThan, _benhngoaiKhoa, _CoQuankhac, _TonThuong, _dieuTri, _benhSu, _huongDT, _mabenh, _maBenhKem, _MaBV, _maMay, _nguoiSD));
        }
        public override void UpdateKhamBenh_DaLieu(String _MaSoKham, Int32 _sTT, string _madv, SmartDate _ngayKham, String _bSKHAM, String _lyDoKham, String _mach, String _apHuyet, String _nhietDo, String _nhipTho, String _canNang, String _chieuCao, String _toanThan, String _benhngoaiKhoa, String _CoQuankhac, String _TonThuong, String _dieuTri, String _benhSu, String _huongDT, String _mabenh, String _maBenhKem, String _MaBV, String _maMay, Boolean _huy, String _nguoiSD)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spKhamBenh_DaLieu_UPDATE", _MaSoKham, _sTT, _madv, _ngayKham.DBValue, _bSKHAM, _lyDoKham, _mach, _apHuyet, _nhietDo, _nhipTho, _canNang, _chieuCao, _toanThan, _benhngoaiKhoa, _CoQuankhac, _TonThuong, _dieuTri, _benhSu, _huongDT, _mabenh, _maBenhKem, _MaBV, _maMay, _huy, _nguoiSD);
        }
        public override void DeleteKhamBenh_DaLieu(String _maMay, String _nguoiSD, String _MaSoKham, Int32 _sTT)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spKhamBenh_DaLieu_Deleted", _maMay, _nguoiSD, _MaSoKham, _sTT);
        }
        #endregion

        #region Phong kham TruyenNhiem

      
        public override String InsertKhamBenh_TruyenNhiem(String _MaSoKham, Int32 _sTT, string _madv, SmartDate _ngayKham, String _bSKHAM, String _lyDoKham, String _mach, String _apHuyet, String _nhietDo, String _nhipTho, String _canNang, String _chieuCao, String _toanThan, String _benhngoaiKhoa, String _CoQuankhac, String _DichTe, String _dieuTri, String _benhSu, String _huongDT, String _mabenh, String _maBenhKem, String _MaBV, String _maMay, String _nguoiSD)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spKhamBenh_TruyenNhiem_CREATE", _MaSoKham, _sTT, _madv, _ngayKham.DBValue, _bSKHAM, _lyDoKham, _mach, _apHuyet, _nhietDo, _nhipTho, _canNang, _chieuCao, _toanThan, _benhngoaiKhoa, _CoQuankhac, _DichTe, _dieuTri, _benhSu, _huongDT, _mabenh, _maBenhKem, _MaBV, _maMay, _nguoiSD));
        }
        public override void UpdateKhamBenh_TruyenNhiem(String _MaSoKham, Int32 _sTT, string _madv, SmartDate _ngayKham, String _bSKHAM, String _lyDoKham, String _mach, String _apHuyet, String _nhietDo, String _nhipTho, String _canNang, String _chieuCao, String _toanThan, String _benhngoaiKhoa, String _CoQuankhac, String _DichTe, String _dieuTri, String _benhSu, String _huongDT, String _mabenh, String _maBenhKem, String _MaBV, String _maMay, Boolean _huy, String _nguoiSD)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spKhamBenh_TruyenNhiem_UPDATE", _MaSoKham, _sTT, _madv, _ngayKham.DBValue, _bSKHAM, _lyDoKham, _mach, _apHuyet, _nhietDo, _nhipTho, _canNang, _chieuCao, _toanThan, _benhngoaiKhoa, _CoQuankhac, _DichTe, _dieuTri, _benhSu, _huongDT, _mabenh, _maBenhKem, _MaBV, _maMay, _huy, _nguoiSD);
        }
        public override void DeleteKhamBenh_TruyenNhiem(String _maMay, String _nguoiSD, String _MaSoKham, Int32 _sTT)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spKhamBenh_TruyenNhiem_Deleted", _maMay, _nguoiSD, _MaSoKham, _sTT);
        }
        #endregion
        #region Phong kham PHCN


        public override String InsertKhamBenh_PHCN(String _MaSoKham, Int32 _sTT, string _madv, SmartDate _ngayKham, String _bSKHAM, String _lyDoKham, String _mach, String _apHuyet, String _nhietDo, String _nhipTho, String _canNang, String _chieuCao, String _luonggia, String _toanThan, String _CoQuankhac, String _TonThuong, String _dieuTri, String _benhSu, String _huongDT, String _mabenh, String _maBenhKem, String _MaBV, String _maMay, String _nguoiSD)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spKhamBenh_PHCN_CREATE", _MaSoKham, _sTT, _madv, _ngayKham.DBValue, _bSKHAM, _lyDoKham, _mach, _apHuyet, _nhietDo, _nhipTho, _canNang, _chieuCao, _luonggia, _toanThan, _CoQuankhac, _TonThuong, _dieuTri, _benhSu, _huongDT, _mabenh, _maBenhKem, _MaBV, _maMay, _nguoiSD));
        }
        public override void UpdateKhamBenh_PHCN(String _MaSoKham, Int32 _sTT, string _madv, SmartDate _ngayKham, String _bSKHAM, String _lyDoKham, String _mach, String _apHuyet, String _nhietDo, String _nhipTho, String _canNang, String _chieuCao, String _luonggia, String _toanThan, String _CoQuankhac, String _TonThuong, String _dieuTri, String _benhSu, String _huongDT, String _mabenh, String _maBenhKem, String _MaBV, String _maMay, Boolean _huy, String _nguoiSD)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spKhamBenh_PHCN_UPDATE", _MaSoKham, _sTT, _madv, _ngayKham.DBValue, _bSKHAM, _lyDoKham, _mach, _apHuyet, _nhietDo, _nhipTho, _canNang, _chieuCao, _luonggia, _toanThan, _CoQuankhac, _TonThuong, _dieuTri, _benhSu, _huongDT, _mabenh, _maBenhKem, _MaBV, _maMay, _huy, _nguoiSD);
        }
        public override void DeleteKhamBenh_PHCN(String _maMay, String _nguoiSD, String _MaSoKham, Int32 _sTT)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spKhamBenh_PHCN_Deleted", _maMay, _nguoiSD, _MaSoKham, _sTT);
        }
        #endregion

        #region Phong kham UB


        public override String InsertKhamBenh_UB(String _MaSoKham, Int32 _sTT, string _madv, SmartDate _ngayKham, String _bSKHAM, String _lyDoKham, String _mach, String _apHuyet, String _nhietDo, String _nhipTho, String _canNang, String _chieuCao, String _toanThan, String _benhngoaiKhoa, String _CoQuankhac, String _TonThuong, String _dieuTri, String _benhSu, String _huongDT, String _mabenh, String _maBenhKem, String _MaBV, String _maMay, String _nguoiSD)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spKhamBenh_UB_CREATE", _MaSoKham, _sTT, _madv, _ngayKham.DBValue, _bSKHAM, _lyDoKham, _mach, _apHuyet, _nhietDo, _nhipTho, _canNang, _chieuCao, _toanThan, _benhngoaiKhoa, _CoQuankhac, _TonThuong, _dieuTri, _benhSu, _huongDT, _mabenh, _maBenhKem, _MaBV, _maMay, _nguoiSD));
        }
        public override void UpdateKhamBenh_UB(String _MaSoKham, Int32 _sTT, string _madv, SmartDate _ngayKham, String _bSKHAM, String _lyDoKham, String _mach, String _apHuyet, String _nhietDo, String _nhipTho, String _canNang, String _chieuCao, String _toanThan, String _benhngoaiKhoa, String _CoQuankhac, String _TonThuong, String _dieuTri, String _benhSu, String _huongDT, String _mabenh, String _maBenhKem, String _MaBV, String _maMay, Boolean _huy, String _nguoiSD)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spKhamBenh_UB_UPDATE", _MaSoKham, _sTT, _madv, _ngayKham.DBValue, _bSKHAM, _lyDoKham, _mach, _apHuyet, _nhietDo, _nhipTho, _canNang, _chieuCao, _toanThan, _benhngoaiKhoa, _CoQuankhac, _TonThuong, _dieuTri, _benhSu, _huongDT, _mabenh, _maBenhKem, _MaBV, _maMay, _huy, _nguoiSD);
        }
        public override void DeleteKhamBenh_UB(String _maMay, String _nguoiSD, String _MaSoKham, Int32 _sTT)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spKhamBenh_UB_Deleted", _maMay, _nguoiSD, _MaSoKham, _sTT);
        }
        #endregion
        #region Phong kham Bong


        public override String InsertKhamBenh_Bong(String _MaSoKham, Int32 _sTT, string _madv, SmartDate _ngayKham, String _bSKHAM, String _lyDoKham, String _mach, String _apHuyet, String _nhietDo, String _nhipTho, String _canNang, String _chieuCao, String _toanThan, String _benhngoaiKhoa, String _CoQuankhac, String _TonThuong, String _dieuTri, String _benhSu, String _huongDT, String _mabenh, String _maBenhKem, String _MaBV, String _maMay, String _nguoiSD)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spKhamBenh_Bong_CREATE", _MaSoKham, _sTT, _madv, _ngayKham.DBValue, _bSKHAM, _lyDoKham, _mach, _apHuyet, _nhietDo, _nhipTho, _canNang, _chieuCao, _toanThan, _benhngoaiKhoa, _CoQuankhac, _TonThuong, _dieuTri, _benhSu, _huongDT, _mabenh, _maBenhKem, _MaBV, _maMay, _nguoiSD));
        }
        public override void UpdateKhamBenh_Bong(String _MaSoKham, Int32 _sTT, string _madv, SmartDate _ngayKham, String _bSKHAM, String _lyDoKham, String _mach, String _apHuyet, String _nhietDo, String _nhipTho, String _canNang, String _chieuCao, String _toanThan, String _benhngoaiKhoa, String _CoQuankhac, String _TonThuong, String _dieuTri, String _benhSu, String _huongDT, String _mabenh, String _maBenhKem, String _MaBV, String _maMay, Boolean _huy, String _nguoiSD)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spKhamBenh_Bong_UPDATE", _MaSoKham, _sTT, _madv, _ngayKham.DBValue, _bSKHAM, _lyDoKham, _mach, _apHuyet, _nhietDo, _nhipTho, _canNang, _chieuCao, _toanThan, _benhngoaiKhoa, _CoQuankhac, _TonThuong, _dieuTri, _benhSu, _huongDT, _mabenh, _maBenhKem, _MaBV, _maMay, _huy, _nguoiSD);
        }
        public override void DeleteKhamBenh_Bong(String _maMay, String _nguoiSD, String _MaSoKham, Int32 _sTT)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spKhamBenh_Bong_Deleted", _maMay, _nguoiSD, _MaSoKham, _sTT);
        }
        #endregion
        #region Phong kham lao


        public override String InsertKhamBenh_Lao(String _MaSoKham, Int32 _sTT, string _madv, SmartDate _ngayKham, String _bSKHAM, String _lyDoKham, String _mach, String _apHuyet, String _nhietDo, String _nhipTho, String _canNang, String _chieuCao, String _toanThan, String _tuanHoan, String _hoHap, String _tieuHoa, String _thanTNSD, String _thanKinh, String _coXuongKhop, String _taiMuiHong, String _rangHamMat, String _mat, String _khac, String _dieuTri, String _benhSu, String _huongDT, String _mabenh, String _maBenhKem, String _MaBV, String _maMay, String _nguoiSD, String _noitiet)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spKhamBenh_Lao_CREATE", _MaSoKham, _sTT, _madv, _ngayKham.DBValue, _bSKHAM, _lyDoKham, _mach, _apHuyet, _nhietDo, _nhipTho, _canNang, _chieuCao, _toanThan, _tuanHoan, _hoHap, _tieuHoa, _thanTNSD, _thanKinh, _coXuongKhop, _taiMuiHong, _rangHamMat, _mat, _khac, _dieuTri, _benhSu, _huongDT, _mabenh, _maBenhKem, _MaBV, _maMay, _nguoiSD, _noitiet));
        }
        public override void UpdateKhamBenh_Lao(String _MaSoKham, Int32 _sTT, string _madv, SmartDate _ngayKham, String _bSKHAM, String _lyDoKham, String _mach, String _apHuyet, String _nhietDo, String _nhipTho, String _canNang, String _chieuCao, String _toanThan, String _tuanHoan, String _hoHap, String _tieuHoa, String _thanTNSD, String _thanKinh, String _coXuongKhop, String _taiMuiHong, String _rangHamMat, String _mat, String _khac, String _dieuTri, String _benhSu, String _huongDT, String _mabenh, String _maBenhKem, String _MaBV, String _maMay, Boolean _huy, String _nguoiSD, String _noitiet)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spKhamBenh_Lao_UPDATE", _MaSoKham, _sTT, _madv, _ngayKham.DBValue, _bSKHAM, _lyDoKham, _mach, _apHuyet, _nhietDo, _nhipTho, _canNang, _chieuCao, _toanThan, _tuanHoan, _hoHap, _tieuHoa, _thanTNSD, _thanKinh, _coXuongKhop, _taiMuiHong, _rangHamMat, _mat, _khac, _dieuTri, _benhSu, _huongDT, _mabenh, _maBenhKem, _MaBV, _maMay, _huy, _nguoiSD, _noitiet);
        }
        public override void DeleteKhamBenh_Lao(String _maMay, String _nguoiSD, String _MaSoKham, Int32 _sTT)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spKhamBenh_Lao_Deleted", _maMay, _nguoiSD, _MaSoKham, _sTT);
        }
        #endregion
        #region Phong kham TamThan


        public override String InsertKhamBenh_TamThan(String _MaSoKham, Int32 _sTT, string _madv, SmartDate _ngayKham, String _bSKHAM, String _lyDoKham, String _mach, String _apHuyet, String _nhietDo, String _nhipTho, String _canNang, String _chieuCao, String _toanThan, String _ThanKinh, String _CoQuankhac, String _TamThan, String _dieuTri, String _benhSu, String _huongDT, String _mabenh, String _maBenhKem, String _MaBV, String _maMay, String _nguoiSD)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spKhamBenh_TamThan_CREATE", _MaSoKham, _sTT, _madv, _ngayKham.DBValue, _bSKHAM, _lyDoKham, _mach, _apHuyet, _nhietDo, _nhipTho, _canNang, _chieuCao, _toanThan, _ThanKinh, _CoQuankhac, _TamThan, _dieuTri, _benhSu, _huongDT, _mabenh, _maBenhKem, _MaBV, _maMay, _nguoiSD));
        }
        public override void UpdateKhamBenh_TamThan(String _MaSoKham, Int32 _sTT, string _madv, SmartDate _ngayKham, String _bSKHAM, String _lyDoKham, String _mach, String _apHuyet, String _nhietDo, String _nhipTho, String _canNang, String _chieuCao, String _toanThan, String _ThanKinh, String _CoQuankhac, String _TamThan, String _dieuTri, String _benhSu, String _huongDT, String _mabenh, String _maBenhKem, String _MaBV, String _maMay, Boolean _huy, String _nguoiSD)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spKhamBenh_TamThan_UPDATE", _MaSoKham, _sTT, _madv, _ngayKham.DBValue, _bSKHAM, _lyDoKham, _mach, _apHuyet, _nhietDo, _nhipTho, _canNang, _chieuCao, _toanThan, _ThanKinh, _CoQuankhac, _TamThan, _dieuTri, _benhSu, _huongDT, _mabenh, _maBenhKem, _MaBV, _maMay, _huy, _nguoiSD);
        }
        public override void DeleteKhamBenh_TamThan(String _maMay, String _nguoiSD, String _MaSoKham, Int32 _sTT)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spKhamBenh_TamThan_Deleted", _maMay, _nguoiSD, _MaSoKham, _sTT);
        }
        #endregion
       
        #region Phong kham VoSinh


        public override String InsertKhamBenh_VoSinh(String _MaSoKham, Int32 _sTT, String _maDV, SmartDate _ngayKham, String _bSKHAM, String _lyDoKham, String _mach, String _apHuyet, String _nhietDo, String _nhipTho, String _canNang, String _chieuCao, Boolean _kichthuocqd, Boolean _hepquydau, Boolean _SuiMaoga, Boolean _Miengsaolaccho, String _Vitri, Boolean _comu, Boolean _dabiu, String _Cuthedabiu, Boolean _danTM, String _THTrai, String _THPhai, String _KichThuoc, String _MatDo, String _MDChiTiet, String _ucuc, String _UcucChitiet, Boolean _UcucDau, String _maotinh, String _MaoTinhChitiet, String _ThuongTinh, Boolean _SothayOngDanT, String _KetLuan, String _Tuvan, String _Chuandoan, String _LoiDanBS, String _TenBenh, String _BenhKhac, String _DieuTri, String _BenhSu, String _HuongDT, String _Mabenh, String _MaBenhKem, String _MaBV, String _sMaMay, String _nguoiSD)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spKhamBenh_VoSinh_CREATE", _MaSoKham, _sTT, _maDV, _ngayKham.DBValue, _bSKHAM, _lyDoKham, _mach, _apHuyet, _nhietDo, _nhipTho, _canNang, _chieuCao, _kichthuocqd, _hepquydau, _SuiMaoga, _Miengsaolaccho, _Vitri, _comu, _dabiu, _Cuthedabiu, _danTM, _THTrai, _THPhai, _KichThuoc, _MatDo, _MDChiTiet, _ucuc, _UcucChitiet, _UcucDau, _maotinh, _MaoTinhChitiet, _ThuongTinh, _SothayOngDanT, _KetLuan, _Tuvan, _Chuandoan, _LoiDanBS, _TenBenh, _BenhKhac, _DieuTri, _BenhSu, _HuongDT, _Mabenh, _MaBenhKem, _MaBV, _sMaMay, _nguoiSD));
        }
        public override void UpdateKhamBenh_VoSinh(String _MaSoKham, Int32 _sTT, String _maDV, SmartDate _ngayKham, String _bSKHAM, String _lyDoKham, String _mach, String _apHuyet, String _nhietDo, String _nhipTho, String _canNang, String _chieuCao, Boolean _kichthuocqd, Boolean _hepquydau, Boolean _SuiMaoga, Boolean _Miengsaolaccho, String _Vitri, Boolean _comu, Boolean _dabiu, String _Cuthedabiu, Boolean _danTM, String _THTrai, String _THPhai, String _KichThuoc, String _MatDo, String _MDChiTiet, String _ucuc, String _UcucChitiet, Boolean _UcucDau, String _maotinh, String _MaoTinhChitiet, String _ThuongTinh, Boolean _SothayOngDanT, String _KetLuan, String _Tuvan, String _Chuandoan, String _LoiDanBS, String _TenBenh, String _BenhKhac, String _DieuTri, String _BenhSu, String _HuongDT, String _Mabenh, String _MaBenhKem, String _MaBV, String _sMaMay, Boolean _huy, String _nguoiSD)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spKhamBenh_VoSinh_UPDATE", _MaSoKham, _sTT, _maDV, _ngayKham.DBValue, _bSKHAM, _lyDoKham, _mach, _apHuyet, _nhietDo, _nhipTho, _canNang, _chieuCao, _kichthuocqd, _hepquydau, _SuiMaoga, _Miengsaolaccho, _Vitri, _comu, _dabiu, _Cuthedabiu, _danTM, _THTrai, _THPhai, _KichThuoc, _MatDo, _MDChiTiet, _ucuc, _UcucChitiet, _UcucDau, _maotinh, _MaoTinhChitiet, _ThuongTinh, _SothayOngDanT, _KetLuan, _Tuvan, _Chuandoan, _LoiDanBS, _TenBenh, _BenhKhac, _DieuTri, _BenhSu, _HuongDT, _Mabenh, _MaBenhKem, _MaBV, _sMaMay, _huy, _nguoiSD);
        }
        public override void DeleteKhamBenh_VoSinh(String _maMay, String _nguoiSD, String _MaSoKham, Int32 _sTT)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spKhamBenh_VoSinh_Deleted", _maMay, _nguoiSD, _MaSoKham, _sTT);
        }
        #endregion

        #region Phong kham VoSinh


        public override String InsertKhamBenh_VoSinhNu(String _MaSoKham, Int32 _sTT, String _maDV, SmartDate _ngayKham, String _bSKHAM, String _lyDoKham, String _mach, String _apHuyet, String _nhietDo, String _nhipTho, String _canNang, String _chieuCao, byte _cokinhlandau, Boolean _chukykinhnguyet_deu, byte _chukykinhnguyet_ngay, byte _songaycokinh, byte _soluongkinhnguyet, Boolean _vokinh, Boolean _vosinh, byte _solancothai_chonghientai,  byte _soconsong_chonghientai, byte _saythai_chonghientai, byte _nao_hut_chonghientai, byte _thailuu_chonghientai, byte _solancothai, byte _soconsong, byte _saythai, byte _nao_hut, byte _thailuu, Boolean _phattrienvu, Boolean _mangtrinh, Boolean _amdao, byte _co_tc, string _tucung_thetich, Boolean _haiphanphu, string _tucung_matdo, string _tucung_tuthe, string _tucung_didong, Boolean _test_catheter, String _KetLuan, String _Tuvan, String _Chuandoan, String _LoiDanBS, String _TenBenh, String _BenhKhac, String _DieuTri, String _BenhSu, String _HuongDT, String _Mabenh, String _MaBenhKem, String _MaBV, String _sMaMay, String _nguoiSD)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spKhamBenh_VoSinhNu_CREATE", _MaSoKham, _sTT, _maDV, _ngayKham.DBValue, _bSKHAM, _lyDoKham, _mach, _apHuyet, _nhietDo, _nhipTho, _canNang, _chieuCao, _cokinhlandau, _chukykinhnguyet_deu, _chukykinhnguyet_ngay, _songaycokinh, _soluongkinhnguyet, _vokinh, _vosinh, _solancothai_chonghientai, _soconsong_chonghientai, _saythai_chonghientai, _nao_hut_chonghientai, _thailuu_chonghientai, _solancothai, _soconsong, _saythai, _nao_hut, _thailuu, _phattrienvu, _mangtrinh, _amdao, _co_tc, _tucung_thetich, _haiphanphu, _tucung_matdo, _tucung_tuthe, _tucung_didong, _test_catheter, _KetLuan, _Tuvan, _Chuandoan, _LoiDanBS, _TenBenh, _BenhKhac, _DieuTri, _BenhSu, _HuongDT, _Mabenh, _MaBenhKem, _MaBV, _sMaMay, _nguoiSD));
        }
        public override void UpdateKhamBenh_VoSinhNu(String _MaSoKham, Int32 _sTT, String _maDV, SmartDate _ngayKham, String _bSKHAM, String _lyDoKham, String _mach, String _apHuyet, String _nhietDo, String _nhipTho, String _canNang, String _chieuCao, byte _cokinhlandau, Boolean _chukykinhnguyet_deu, byte _chukykinhnguyet_ngay, byte _songaycokinh, byte _soluongkinhnguyet, Boolean _vokinh, Boolean _vosinh, byte _solancothai_chonghientai, byte _soconsong_chonghientai, byte _saythai_chonghientai, byte _nao_hut_chonghientai, byte _thailuu_chonghientai, byte _solancothai, byte _soconsong, byte _saythai, byte _nao_hut, byte _thailuu, Boolean _phattrienvu, Boolean _mangtrinh, Boolean _amdao, byte _co_tc, string _tucung_thetich, Boolean _haiphanphu, string _tucung_matdo, string _tucung_tuthe, string _tucung_didong, Boolean _test_catheter, String _KetLuan, String _Tuvan, String _Chuandoan, String _LoiDanBS, String _TenBenh, String _BenhKhac, String _DieuTri, String _BenhSu, String _HuongDT, String _Mabenh, String _MaBenhKem, String _MaBV, String _sMaMay, Boolean _huy, String _nguoiSD)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spKhamBenh_VoSinhNu_UPDATE", _MaSoKham, _sTT, _maDV, _ngayKham.DBValue, _bSKHAM, _lyDoKham, _mach, _apHuyet, _nhietDo, _nhipTho, _canNang, _chieuCao, _cokinhlandau, _chukykinhnguyet_deu, _chukykinhnguyet_ngay, _songaycokinh, _soluongkinhnguyet, _vokinh, _vosinh, _solancothai_chonghientai, _soconsong_chonghientai, _saythai_chonghientai, _nao_hut_chonghientai, _thailuu_chonghientai, _solancothai, _soconsong, _saythai, _nao_hut, _thailuu, _phattrienvu, _mangtrinh, _amdao, _co_tc, _tucung_thetich, _haiphanphu, _tucung_matdo, _tucung_tuthe, _tucung_didong, _test_catheter, _KetLuan, _Tuvan, _Chuandoan, _LoiDanBS, _TenBenh, _BenhKhac, _DieuTri, _BenhSu, _HuongDT, _Mabenh, _MaBenhKem, _MaBV, _sMaMay, _huy, _nguoiSD);
        }
        public override void DeleteKhamBenh_VoSinhNu(String _maMay, String _nguoiSD, String _MaSoKham, Int32 _sTT)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spKhamBenh_VoSinhNu_Deleted", _maMay, _nguoiSD, _MaSoKham, _sTT);
        }
        #endregion
        
        #region Phong kham San
        public override String InsertKhamBenh_San(String _MaSoKham, Int32 _sTT, string _madv, SmartDate _ngayKham, String _bSKham, String _lyDoKham, String _mach, String _apHuyet, String _nhietDo, String _nhipTho, String _canNang, String _chieuCao, Boolean _phu, String _toanThan, String _toanTrang, String _cao, String _tim, String _gan, String _phoi, String _than, String _benhKhac, Boolean _seoPTCu, String _chieuCaoTC, String _vongBung, String _timThai, Boolean _timThaiRo, String _luongGai, String _baudelocque, String _luongUNgoi, String _hinhDangTC, String _tuThe, String _conCoTC, String _vu, String _luongMao, String _luongMau, String _cutHaVe, String _amHo, String _amDao, String _coTuCung, String _phanPhu, SmartDate _oiVo, String _mauOi, String _ngoi, String _the, String _doLot, String _tangSinhMon, String _tinhTrangOi, String _oivoTuNhien, String _luongNuocOi, String _kieuThe, String _duongKinhNho, String _tomTat, String _dieuTri, String _benhSu, String _huongDT, String _mabenh, String _maBenhKem, String _MaBV, String _maMay, String _nguoiSD)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spKhamBenh_San_CREATE", _MaSoKham, _sTT, _madv, _ngayKham.DBValue, _bSKham, _lyDoKham, _mach, _apHuyet, _nhietDo, _nhipTho, _canNang, _chieuCao, _phu, _toanThan, _toanTrang, _cao, _tim, _gan, _phoi, _than, _benhKhac, _seoPTCu, _chieuCaoTC, _vongBung, _timThai, _timThaiRo, _luongGai, _baudelocque, _luongUNgoi, _hinhDangTC, _tuThe, _conCoTC, _vu, _luongMao, _luongMau, _cutHaVe, _amHo, _amDao, _coTuCung, _phanPhu, _oiVo.DBValue, _mauOi, _ngoi, _the, _doLot, _tangSinhMon, _tinhTrangOi, _oivoTuNhien, _luongNuocOi, _kieuThe, _duongKinhNho, _tomTat, _dieuTri, _benhSu, _huongDT, _mabenh, _maBenhKem, _MaBV, _maMay, _nguoiSD));
        }
        public override void UpdateKhamBenh_San(String _MaSoKham, Int32 _sTT, string _madv, SmartDate _ngayKham, String _bSKham, String _lyDoKham, String _mach, String _apHuyet, String _nhietDo, String _nhipTho, String _canNang, String _chieuCao, Boolean _phu, String _toanThan, String _toanTrang, String _cao, String _tim, String _gan, String _phoi, String _than, String _benhKhac, Boolean _seoPTCu, String _chieuCaoTC, String _vongBung, String _timThai, Boolean _timThaiRo, String _luongGai, String _baudelocque, String _luongUNgoi, String _hinhDangTC, String _tuThe, String _conCoTC, String _vu, String _luongMao, String _luongMau, String _cutHaVe, String _amHo, String _amDao, String _coTuCung, String _phanPhu, SmartDate _oiVo, String _mauOi, String _ngoi, String _the, String _doLot, String _tangSinhMon, String _tinhTrangOi, String _oivoTuNhien, String _luongNuocOi, String _kieuThe, String _duongKinhNho, String _tomTat, String _dieuTri, String _benhSu, String _huongDT, String _mabenh, String _maBenhKem, String _MaBV, String _maMay, Boolean _huy, String _nguoiSD)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spKhamBenh_San_UPDATE", _MaSoKham, _sTT, _madv, _ngayKham.DBValue, _bSKham, _lyDoKham, _mach, _apHuyet, _nhietDo, _nhipTho, _canNang, _chieuCao, _phu, _toanThan, _toanTrang, _cao, _tim, _gan, _phoi, _than, _benhKhac, _seoPTCu, _chieuCaoTC, _vongBung, _timThai, _timThaiRo, _luongGai, _baudelocque, _luongUNgoi, _hinhDangTC, _tuThe, _conCoTC, _vu, _luongMao, _luongMau, _cutHaVe, _amHo, _amDao, _coTuCung, _phanPhu, _oiVo.DBValue, _mauOi, _ngoi, _the, _doLot, _tangSinhMon, _tinhTrangOi, _oivoTuNhien, _luongNuocOi, _kieuThe, _duongKinhNho, _tomTat, _dieuTri, _benhSu, _huongDT, _mabenh, _maBenhKem, _MaBV, _maMay, _huy, _nguoiSD);
        }
        public override void DeleteKhamBenh_San(String _maMay, String _nguoiSD, String _MaSoKham, Int32 _sTT)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spKhamBenh_San_Deleted", _maMay, _nguoiSD, _MaSoKham, _sTT);
        }

        #endregion



        #region Phong kham TMH

        public override String InsertKhamBenh_TMH(String _MaSoKham, Int32 _sTT, string _madv, SmartDate _ngayKham, String _bSKHAM, String _lyDoKham, String _mach, String _apHuyet, String _nhietDo, String _nhipTho, String _canNang, String _chieuCao, String _toanThan, String _tai, String _mui, String _hong, String _tuanHoan, String _hoHap, String _dieuTri, String _benhSu, String _huongDT, String _mabenh, String _maBenhKem, String _MaBV, String _maMay, String _nguoiSD)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spKhamBenh_TMH_CREATE", _MaSoKham, _sTT, _madv, _ngayKham.DBValue, _bSKHAM, _lyDoKham, _mach, _apHuyet, _nhietDo, _nhipTho, _canNang, _chieuCao, _toanThan, _tai, _mui, _hong, _tuanHoan, _hoHap, _dieuTri, _benhSu, _huongDT, _mabenh, _maBenhKem, _MaBV, _maMay, _nguoiSD));
        }
        public override void UpdateKhamBenh_TMH(String _MaSoKham, Int32 _sTT, string _madv, SmartDate _ngayKham, String _bSKHAM, String _lyDoKham, String _mach, String _apHuyet, String _nhietDo, String _nhipTho, String _canNang, String _chieuCao, String _toanThan, String _tai, String _mui, String _hong, String _tuanHoan, String _hoHap, String _dieuTri, String _benhSu, String _huongDT, String _mabenh, String _maBenhKem, String _MaBV, String _maMay, Boolean _huy, String _nguoiSD)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spKhamBenh_TMH_UPDATE", _MaSoKham, _sTT, _madv, _ngayKham.DBValue, _bSKHAM, _lyDoKham, _mach, _apHuyet, _nhietDo, _nhipTho, _canNang, _chieuCao, _toanThan, _tai, _mui, _hong, _tuanHoan, _hoHap, _dieuTri, _benhSu, _huongDT, _mabenh, _maBenhKem, _MaBV, _maMay, _huy, _nguoiSD);
        }
        public override void DeleteKhamBenh_TMH(String _maMay, String _nguoiSD, String _MaSoKham, Int32 _sTT)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spKhamBenh_TMH_Deleted", _maMay, _nguoiSD, _MaSoKham, _sTT);
        }
        #endregion


        #region Phong kham VLTL

        public override String InsertKhamBenh_VLTL(String _MaSoKham, Int32 _sTT, string _madv, SmartDate _ngayKham, String _bSKHAM, String _lyDoKham, String _mach, String _apHuyet, String _nhietDo, String _nhipTho, String _canNang, String _chieuCao, String _thanKinh, String _tuanHoan, String _hoHap, String _tieuHoa, String _daMo, String _khop, String _co, String _cotSong, String _tNieuSDuc, String _cQKhac, String _dieuTri, String _benhSu, String _huongDT, String _mabenh, String _maBenhKem, String _machuyenkhoa, String _maMay, String _nguoiSD)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spKhamBenh_VLTL_CREATE", _MaSoKham, _sTT, _madv, _ngayKham.DBValue, _bSKHAM, _lyDoKham, _mach, _apHuyet, _nhietDo, _nhipTho, _canNang, _chieuCao, _thanKinh, _tuanHoan, _hoHap, _tieuHoa, _daMo, _khop, _co, _cotSong, _tNieuSDuc, _cQKhac, _dieuTri, _benhSu, _huongDT, _mabenh, _maBenhKem, _machuyenkhoa, _maMay, _nguoiSD));
        }
        public override void UpdateKhamBenh_VLTL(String _MaSoKham, Int32 _sTT, string _madv, SmartDate _ngayKham, String _bSKHAM, String _lyDoKham, String _mach, String _apHuyet, String _nhietDo, String _nhipTho, String _canNang, String _chieuCao, String _thanKinh, String _tuanHoan, String _hoHap, String _tieuHoa, String _daMo, String _khop, String _co, String _cotSong, String _tNieuSDuc, String _cQKhac, String _dieuTri, String _benhSu, String _huongDT, String _mabenh, String _maBenhKem, String _machuyenkhoa, String _maMay, Boolean _huy, String _nguoiSD)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spKhamBenh_VLTL_UPDATE", _MaSoKham, _sTT, _madv, _ngayKham.DBValue, _bSKHAM, _lyDoKham, _mach, _apHuyet, _nhietDo, _nhipTho, _canNang, _chieuCao, _thanKinh, _tuanHoan, _hoHap, _tieuHoa, _daMo, _khop, _co, _cotSong, _tNieuSDuc, _cQKhac, _dieuTri, _benhSu, _huongDT, _mabenh, _maBenhKem, _machuyenkhoa, _maMay, _huy, _nguoiSD);
        }
        public override void DeleteKhamBenh_VLTL(String _maMay, String _nguoiSD, String _MaSoKham, Int32 _sTT)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spKhamBenh_VLTL_Deleted", _maMay, _nguoiSD, _MaSoKham, _sTT);
        }
        #endregion


        #region Phong kham Mat

        public override String InsertKhamBenh_Mat(String _MaSoKham, Int32 _sTT, string _madv, SmartDate _ngayKham, String _bSKHAM, String _lyDoKham, String _mach, String _apHuyet, String _nhietDo, String _nhipTho, String _canNang, String _chieuCao, String _toanThan, String _thiLucVV, String _khongKinhMP, String _khongKinhMT, String _coKinhMP, String _coKinhMT, String _nhanAPMP, String _nhanApMT, String _thiTruongMP, String _thiTruongMT, String _moTaBenhLy, String _tonThuong, String _coQuanKhac, String _dieuTri, String _benhSu, String _huongDT, String _mabenh, String _maBenhKem, String _MaBV, String _maMay, String _nguoiSD)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spKhamBenh_Mat_CREATE", _MaSoKham, _sTT, _madv, _ngayKham.DBValue, _bSKHAM, _lyDoKham, _mach, _apHuyet, _nhietDo, _nhipTho, _canNang, _chieuCao, _toanThan, _thiLucVV, _khongKinhMP, _khongKinhMT, _coKinhMP, _coKinhMT, _nhanAPMP, _nhanApMT, _thiTruongMP, _thiTruongMT, _moTaBenhLy, _tonThuong, _coQuanKhac, _dieuTri, _benhSu, _huongDT, _mabenh, _maBenhKem, _MaBV, _maMay, _nguoiSD));
        }
        public override void UpdateKhamBenh_Mat(String _MaSoKham, Int32 _sTT, string _madv, SmartDate _ngayKham, String _bSKHAM, String _lyDoKham, String _mach, String _apHuyet, String _nhietDo, String _nhipTho, String _canNang, String _chieuCao, String _toanThan, String _thiLucVV, String _khongKinhMP, String _khongKinhMT, String _coKinhMP, String _coKinhMT, String _nhanAPMP, String _nhanApMT, String _thiTruongMP, String _thiTruongMT, String _moTaBenhLy, String _tonThuong, String _coQuanKhac, String _dieuTri, String _benhSu, String _huongDT, String _mabenh, String _maBenhKem, String _MaBV, String _maMay, Boolean _huy, String _nguoiSD)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spKhamBenh_Mat_UPDATE", _MaSoKham, _sTT, _madv, _ngayKham.DBValue, _bSKHAM, _lyDoKham, _mach, _apHuyet, _nhietDo, _nhipTho, _canNang, _chieuCao, _toanThan, _thiLucVV, _khongKinhMP, _khongKinhMT, _coKinhMP, _coKinhMT, _nhanAPMP, _nhanApMT, _thiTruongMP, _thiTruongMT, _moTaBenhLy, _tonThuong, _coQuanKhac, _dieuTri, _benhSu, _huongDT, _mabenh, _maBenhKem, _MaBV, _maMay, _huy, _nguoiSD);
        }
        public override void DeleteKhamBenh_Mat(String _maMay, String _nguoiSD, String _MaSoKham, Int32 _sTT)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spKhamBenh_Mat_Deleted", _maMay, _nguoiSD, _MaSoKham, _sTT);
        }
        #endregion

        public override IDataReader GetHopDongKB(String _maKK, bool qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spHopDongKB_GET", _maKK, qadmin));
        }
        public override IDataReader GetAllHopDongKB(DateTime tungay, DateTime denngay, String dieukienthem, bool qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spHopDongKB_GETALL", tungay, denngay, dieukienthem, qadmin));
        }
        public override IDataReader GetHopDongKB_DV(String _maKK, Decimal _sTT)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spHopDongKB_DV_GET", _maKK, _sTT));
        }
        public override IDataReader GetHopDongKB_BN(String _mAKK, Decimal _sTT)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spHopDongKB_BN_GET", _mAKK, _sTT));
        }

        #region Thong tin Kham Benh Xet Nghiem
        public override String InsertKhamBenh_XN(String _maSoKham, Int32 _sTT, String _maDV, String _bSChiDinh, String _maBP, SmartDate _ngayKQ, Byte[] _fileKQ, String _kq, String _makq, String _sID, string _maMay, String _nguoiSD, Byte _loaiKQ, Boolean _diDong, string _chandoanbd, byte _sotieuban, string _sosttbnXN, string _mabenhxn, string _tenbenhxn)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(SQLConnectionData, DatabaseOwner + ObjectQualifier + "spKhamBenh_XN_Create", _maSoKham, _sTT, _maDV, _bSChiDinh, _maBP, _ngayKQ.DBValue, _fileKQ, _kq, _makq, _sID, _maMay, _nguoiSD, _loaiKQ, _diDong, _chandoanbd, _sotieuban, _sosttbnXN, _mabenhxn, _tenbenhxn));

        }
        public override void UpdateKhamBenh_XN(String _maSoKham, Int32 _sTT, String _maDV, String _bSChiDinh, String _maBP, SmartDate _ngayKQ, Byte[] _fileKQ, String _kq, String _makq, String _sID, string _maMay, Boolean _huy, String _nguoiSD, Byte _loaiKQ, Boolean _diDong, string _chandoanbd, byte _sotieuban, string _sosttbnXN, string _mabenhxn, string _tenbenhxn)
        {
            SqlHelper.ExecuteNonQuery(SQLConnectionData, DatabaseOwner + ObjectQualifier + "spKhamBenh_XN_Update", _maSoKham, _sTT, _maDV, _bSChiDinh, _maBP, _ngayKQ.DBValue, _fileKQ, _kq, _makq, _sID, _maMay, _huy, _nguoiSD, _loaiKQ, _diDong, _chandoanbd, _sotieuban, _sosttbnXN, _mabenhxn, _tenbenhxn);
        }
        public override void DeleteKhamBenh_XN(String _maMay, String _nguoihuy, String _maSoKham, Int32 _sTT)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spKhamBenh_XN_Deleted", _maMay, _nguoihuy, _maSoKham, _sTT);
        }
        #endregion

        #region Thong tin Kham Benh Xet Nghiem Chi tiet
        public override String InsertKhamBenh_XN_C(String _maSoKham, Int32 _sTT, String _maDV, String _maCS, String _kq, String _makq, string _maMay, String _nguoiSD)
        {
           // return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spKhamBenh_XN_C_Create", _maSoKham, _sTT, _maDV, _maCS, _kq, _makq, _maMay, _nguoiSD));
            System.Data.SqlClient.SqlCommand cmd = SqlHelper.CreateCommand(SQLConnectionData, DatabaseOwner + ObjectQualifier + "spKhamBenh_XN_C_Create");
            cmd.CommandTimeout = 18000;

            cmd.CommandType = System.Data.CommandType.StoredProcedure;
            cmd.Parameters.AddWithValue("maSoKham", _maSoKham);
            cmd.Parameters.AddWithValue("sTT", _sTT);
            cmd.Parameters.AddWithValue("maDV", _maDV);
            cmd.Parameters.AddWithValue("maCS", _maCS);
            cmd.Parameters.AddWithValue("kq", _kq);
            cmd.Parameters.AddWithValue("makq", _makq);
            cmd.Parameters.AddWithValue("maMay", _maMay);
            cmd.Parameters.AddWithValue("nguoiSD", _nguoiSD);
            cmd.ExecuteNonQuery();
            cmd.Dispose();
            cmd = null;
            return _maSoKham;
        }
        public override void UpdateKhamBenh_XN_C(String _maSoKham, Int32 _sTT, Int32 _sTTCS, String _maDV, String _maCS, String _kq, String _makq, string _maMay, Boolean _huy, String _nguoiSD)
        {
           // SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spKhamBenh_XN_C_Update", _maSoKham, _sTT, _sTTCS, _maDV, _maCS, _kq, _makq, _maMay, _huy, _nguoiSD);
            System.Data.SqlClient.SqlCommand cmd = SqlHelper.CreateCommand(SQLConnectionData, DatabaseOwner + ObjectQualifier + "spKhamBenh_XN_C_Update");
            cmd.CommandTimeout = 18000;

            cmd.CommandType = System.Data.CommandType.StoredProcedure;
            cmd.Parameters.AddWithValue("maSoKham", _maSoKham);
            cmd.Parameters.AddWithValue("sTT", _sTT);
            cmd.Parameters.AddWithValue("sTTCS", _sTTCS);
            cmd.Parameters.AddWithValue("maDV", _maDV);
            cmd.Parameters.AddWithValue("maCS", _maCS);
            cmd.Parameters.AddWithValue("kq", _kq);
            cmd.Parameters.AddWithValue("makq", _makq);
            cmd.Parameters.AddWithValue("maMay", _maMay);
            cmd.Parameters.AddWithValue("Huy", _huy);
            cmd.Parameters.AddWithValue("nguoiSD", _nguoiSD);
            cmd.ExecuteNonQuery();
            cmd.Dispose();
            cmd = null;
           
        }
        public override void DeleteKhamBenh_XN_C(String _maMay, String _nguoisd, String _maSoKham, Int32 _sTT, Int32 _sTTCS)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spKhamBenh_XN_C_DELETED", _maMay, _nguoisd, _maSoKham, _sTT, _sTTCS);
        }
        #endregion
        #region Thong tin Kham Benh ly lieu
        public override String InsertKhamBenh_LL(String _maSoKham, Int32 _sTT, SmartDate _ngayTH, Decimal _Soluong, String _maDV, String _ViTri, String _ThoiGian, String _kq, String _nguoith, String _ghichu, String _maMay, String _nguoiSD)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spKhamBenh_LL_Create", _maSoKham, _sTT, _ngayTH.DBValue, _Soluong, _maDV, _ViTri, _ThoiGian, _kq, _nguoith, _ghichu, _maMay, _nguoiSD));
        }
        public override void UpdateKhamBenh_LL(String _maSoKham, Int32 _sTT, SmartDate _ngayTH, Decimal _Soluong, Int32 _sTTTH, String _maDV, String _ViTri, String _ThoiGian, String _kq, String _nguoith, String _ghichu, String _maMay, Boolean _huy, String _nguoiSD)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spKhamBenh_LL_Update", _maSoKham, _sTT, _ngayTH.DBValue, _Soluong, _sTTTH, _maDV, _ViTri, _ThoiGian, _kq, _nguoith, _ghichu, _maMay, _huy, _nguoiSD);
        }
        public override void DeleteKhamBenh_LL(String _maMay, String _nguoisd, String _maSoKham, Int32 _sTT, Int32 _sTTTH)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spKhamBenh_LL_DELETED", _maMay, _nguoisd, _maSoKham, _sTT, _sTTTH);
        }
        #endregion
        #region Thong tin Kham Benh hoa don chi tiet

        public override String InsertKhamBenh_HoaDon(String _maSoKham, String _maBN, SmartDate _ngayDK, Decimal _tongthu, String _soHD, String _soSoHD, Int32 _sophieu, SmartDate _ngaythu, string _maMay, String _nguoiLap, string _nguoithu, String _lydothu, byte _loai, byte _lanin, string _LydoChi, Decimal _tongchi, Decimal _TongTienBH, Decimal _tongBHTra, Decimal _tongBH, string _noitt, string _madt)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(SQLConnectionData, DatabaseOwner + ObjectQualifier + "spKhamBenh_HoaDon_Create1", _maSoKham, _maBN, _ngayDK.DBValue, _tongthu, _soHD, _soSoHD, _sophieu, _ngaythu.DBValue, _maMay, _nguoiLap, _nguoithu, _lydothu, _loai, _lanin, _LydoChi, _tongchi, _TongTienBH, _tongBHTra, _tongBH, _noitt, _madt));
        }
        public override void UpdateKhamBenh_HoaDon(String _maSoKham, int _sTT, String _maBN, SmartDate _ngayDK, String _soHD, String _soSoHD, Int32 _sophieu, Decimal _tongthu, Decimal _tongchi, SmartDate _ngaythu, SmartDate _ngaychi, String _nguoithu, String _nguoichi, string _maMay, Boolean _huy, String _nguoiSD, String _lydothu, byte _lanin, string _LydoChi, Decimal _TongTienBH, Decimal _tongBHTra, Decimal _tongBH, string _noitt, string _madt, string _noict)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spKhamBenh_HoaDon_Update1", _maSoKham, _sTT, _maBN, _ngayDK.DBValue, _soHD, _soSoHD, _sophieu, _tongthu, _tongchi, _ngaythu.DBValue, _ngaychi.DBValue, _nguoithu, _nguoichi, _maMay, _huy, _nguoiSD, _lydothu, _lanin, _LydoChi, _TongTienBH, _tongBHTra, _tongBH, _noitt, _madt, _noict);
        }
        public override void DeleteKhamBenh_HoaDon(String _maMay, String _nguoihuy, String _masokham, int _STT)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spKhamBenh_C_Deleted", _maMay, _nguoihuy, _masokham, _STT);
        }
        #endregion
        #region kham benh Mien Giam
        public override int InsertKhamBenh_MienGiam(String _maSoKham, String _maKhoa, int _sTT, String _maMienGiam, Decimal _soTien, Decimal _soTienUSD, Decimal _tyGia, SmartDate _ngayKy, String _ghiChu, String _nguoiKy, String _maMay, String _nguoiSD, String _soCT, String _maDT, Decimal _ck, Byte _dATT, string _noitt)
        {
            return System.Convert.ToInt32(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spKhamBenh_MienGiam_CREATE", _maSoKham, _maKhoa, _sTT, _maMienGiam, _soTien, _soTienUSD, _tyGia, _ngayKy.DBValue, _ghiChu, _nguoiKy, _maMay, _nguoiSD, _soCT, _maDT, _ck, _dATT, _noitt));
        }
        public override void UpdateKhamBenh_MienGiam(String _maSoKham, String _maKhoa, int _sTT, String _maMienGiam, Decimal _soTien, Decimal _soTienUSD, Decimal _tyGia, SmartDate _ngayKy, String _ghiChu, String _nguoiKy, String _maMay, Boolean _huy, String _nguoiSD, String _soCT, String _maDT, Decimal _ck, Byte _dATT)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spKhamBenh_MienGiam_UPDATE", _maSoKham, _maKhoa, _sTT, _maMienGiam, _soTien, _soTienUSD, _tyGia, _ngayKy.DBValue, _ghiChu, _nguoiKy, _maMay, _huy, _nguoiSD, _soCT, _maDT, _ck, _dATT);
        }
        public override void DeleteKhamBenh_MienGiam(String _maMay, String _nguoiSD, String _maSoKham, Int32 _sTT)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spKhamBenh_MienGiam_DELETED", _maMay, _nguoiSD, _maSoKham, _sTT);
        }
        #endregion

        #region Benh an Phong kham
        public override String InsertBenhAnPK(String _maLoaiBA, String _maBN, SmartDate _ngayVKhoa, SmartDate _ngayGioVV, String _maKhoaVV, String _maNoiKham, String _maNoiGT, Byte _vaoLan, String _maBATruoc, String _maNoiChuyen, String _maBV, SmartDate _ngayRaVien, String _maHTRa, String _maKQDT, String _maGPBenh, SmartDate _ngayTVong, String _maLDTVong, String _maTGTVong, String _nNTVong, Boolean _kNTuThi, String _maGPTuThi, String _soRaVien, String _bSVaovien, String _maBenhRavien, String _nguoiSD, string _maMay, String _maDT, SmartDate _giaTriDN, String _sothe, Byte _loai, string _masokham, int _stt, string _loidan, string _dieutri, string _maHTDT, SmartDate _giaTriTN, string _maBenhNGT, string _maBenhKKB, string _tenBenhRaVien, string _Benhme, string _MABAQL, string _mabanoitru, string _mabvgt, String tVV, String nVV, String mVV, String gDVV, string _tenBenhKKB, string _tenBenhNGT, byte _nncapcuu, String _bSChuyenVao, SmartDate _ngayGioCV, string _mabenhkem, string _tenbenhkem, String _GHICHU, string _matgbthuong, string _maloaibn, Boolean _coan, string _noitt, string _benhly, string _ketquacls, string _tinhtrangbn, string _maKKBYHCT, string _tenKKBYHCT, string _maBenhRaVienYHCT, string _tenBenhRaVienYHCT)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(SQLConnectionData, DatabaseOwner + ObjectQualifier + "spBenhAnPK_CREATE1", _maLoaiBA, _maBN, _ngayVKhoa.DBValue, _ngayGioVV.DBValue, _maKhoaVV, _maNoiKham, _maNoiGT, _vaoLan, _maBATruoc, _maNoiChuyen, _maBV, _ngayRaVien.DBValue, _maHTRa, _maKQDT, _maGPBenh, _ngayTVong.DBValue, _maLDTVong, _maTGTVong, _nNTVong, _kNTuThi, _maGPTuThi, _soRaVien, _bSVaovien, _maBenhRavien, _nguoiSD, _maMay, _maDT, _giaTriDN.DBValue, _sothe, _loai, _masokham, _stt, _loidan, _dieutri, _maHTDT, _giaTriTN.DBValue, _maBenhNGT, _maBenhKKB, _tenBenhRaVien, _Benhme, _MABAQL, _mabanoitru, _mabvgt, tVV, nVV, mVV, gDVV, _tenBenhKKB, _tenBenhNGT, _nncapcuu, _bSChuyenVao, _ngayGioCV.DBValue, _mabenhkem, _tenbenhkem, _GHICHU, _matgbthuong, _maloaibn, _coan, _noitt, _benhly, _ketquacls, _tinhtrangbn, _maKKBYHCT,_tenKKBYHCT, _maBenhRaVienYHCT, _tenBenhRaVienYHCT));
        }
        public override void UpdateBenhAnPK(String _maLoaiBA, String _maBA, String _maBN, SmartDate _ngayVKhoa, SmartDate _ngayGioVV, String _maKhoaVV, String _maNoiKham, String _maNoiGT, Byte _vaoLan, String _maBATruoc, String _maNoiChuyen, String _maBV, SmartDate _ngayRaVien, String _maHTRa, String _maKQDT, String _maGPBenh, SmartDate _ngayTVong, String _maLDTVong, String _maTGTVong, String _nNTVong, Boolean _kNTuThi, String _maGPTuThi, String _soRaVien, String _bSVaovien, String _maBenhRavien, Boolean _huy, String _nguoiSD, string _maMay, String _maDT, SmartDate _giaTriDN, String _sothe, string _loidan, string _dieutri, string _maHTDT, string _maBANoiTru, SmartDate _giaTriTN, string _maBenhNGT, string _maBenhKKB, string _tenBenhRaVien, string _Benhme, string _MABAQL, string _mabvgt, String tVV, String nVV, String mVV, String gDVV, String tRV, String nRV, String mRV, String gDRV, string _tenBenhKKB, string _tenBenhNGT, byte _nncapcuu, String _bSChuyenVao, SmartDate _ngayGioCV, string _mabenhkem, string _tenbenhkem, String _GHICHU, string _matgbthuong, string _maloaibn, string _tenbenhgp, Boolean _coan, string _benhly, string _ketquacls, string _tinhtrangbn, string _maKKBYHCT, string _tenKKBYHCT, string _maBenhRaVienYHCT, string _tenBenhRaVienYHCT)
        {
            SqlHelper.ExecuteNonQuery(SQLConnectionDataNoiT, DatabaseOwner + ObjectQualifier + "spBenhAnPK_UPDATE1", _maLoaiBA, _maBA, _maBN, _ngayVKhoa.DBValue, _ngayGioVV.DBValue, _maKhoaVV, _maNoiKham, _maNoiGT, _vaoLan, _maBATruoc, _maNoiChuyen, _maBV, _ngayRaVien.DBValue, _maHTRa, _maKQDT, _maGPBenh, _ngayTVong.DBValue, _maLDTVong, _maTGTVong, _nNTVong, _kNTuThi, _maGPTuThi, _soRaVien, _bSVaovien, _maBenhRavien, _huy, _nguoiSD, _maMay, _maDT, _giaTriDN.DBValue, _sothe, _loidan, _dieutri, _maHTDT, _maBANoiTru, _giaTriTN.DBValue, _maBenhNGT, _maBenhKKB, _tenBenhRaVien, _Benhme, _MABAQL, _mabvgt, tVV, nVV, mVV, gDVV, tRV, nRV, mRV, gDRV, _tenBenhKKB, _tenBenhNGT, _nncapcuu, _bSChuyenVao, _ngayGioCV.DBValue, _mabenhkem, _tenbenhkem, _GHICHU, _matgbthuong, _maloaibn, _tenbenhgp, _coan, _benhly, _ketquacls, _tinhtrangbn, _maKKBYHCT, _tenKKBYHCT, _maBenhRaVienYHCT, _tenBenhRaVienYHCT);
        }
        public override void DeleteBenhAnPK(String _maMay, String _nguoihuy, String _maBA)
        {
            SqlHelper.ExecuteNonQuery(SQLConnectionDataNoiT, DatabaseOwner + ObjectQualifier + "spBenhAnPK_DELETED", _maMay, _nguoihuy, _maBA);
        }


        #endregion

        #region Benh an dy


        public override String InsertBenhAnPK_DY(String _maBA, SmartDate _ngayKham,
            String _bSKHAM, String LyDoKham, String ToanThan,
         String BoPhan,
             String _mach, String _apHuyet, String _nhietDo, String _nhipTho, String _canNang, String _chieuCao, 
         String MotaVongChan,

         String MoTaVanChan,

         String MTVaanChan,


         String MTXucChan,

         String MachTrai,
         String MachPhai,

         String TomtatTuChan,

         String BenhDanh,
         String Batcuong,
         String Tangphu,
         String KinhMach,

         String Nguyennhan,
              String BenhDanhRV,
              String BatcuongRV,
         String TangphuRV,
         String NguyennhanRV,
         String ChanDoanRaVien,
         String Phapdieutri,
         String Phuongthuoc,
         String Phuonghuyet,
       
         String Khac,
         String mabenhRaVien,
         String maBenhvv,

         String ChanDoanVV,

         String CheDoDinhDuong,
         String CheDoChamSoc, String TienLuong, String _maMay, String _nguoiSD, string _TomTatKQCLS, string _maBenhChinh, string _tenBenhChinh, string _maBenhKemTheo, string _tenBenhKemTheo, string _maBenhPhanBiet, string _tenBenhPhanBiet)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spBenhAnPK_DY_CREATE", _maBA, _ngayKham.DBValue, _bSKHAM, LyDoKham,
         ToanThan,
         BoPhan,
          _mach, _apHuyet, _nhietDo, _nhipTho, _canNang, _chieuCao, 
         MotaVongChan,

         MoTaVanChan,

         MTVaanChan,


         MTXucChan,

         MachTrai,
         MachPhai,

         TomtatTuChan,

         BenhDanh,
         Batcuong,
         Tangphu,
         KinhMach,

         Nguyennhan,
            BenhDanhRV,
               BatcuongRV,
          TangphuRV,
          NguyennhanRV,
         ChanDoanRaVien,
         Phapdieutri,
         Phuongthuoc,
         Phuonghuyet,

         Khac,
         mabenhRaVien,

         maBenhvv,


         ChanDoanVV,
         CheDoDinhDuong,
         CheDoChamSoc, TienLuong, _maMay, _nguoiSD, _TomTatKQCLS, _maBenhChinh, _tenBenhChinh, _maBenhKemTheo, _tenBenhKemTheo, _maBenhPhanBiet, _tenBenhPhanBiet));
        }
        public override void UpdateBenhAnPK_DY(String _maBA, SmartDate _ngayKham,
            String _bSKHAM, String LyDoKham, String ToanThan,
         String BoPhan,
             String _mach, String _apHuyet, String _nhietDo, String _nhipTho, String _canNang, String _chieuCao, 
         String MotaVongChan,

         String MoTaVanChan,

         String MTVaanChan,


         String MTXucChan,

         String MachTrai,
         String MachPhai,

         String TomtatTuChan,

         String BenhDanh,
         String Batcuong,
         String Tangphu,
         String KinhMach,

         String Nguyennhan,
              String BenhDanhRV,
              String BatcuongRV,
         String TangphuRV,
         String NguyennhanRV,
         String ChanDoanRaVien,
         String Phapdieutri,
         String Phuongthuoc,
         String Phuonghuyet,
       
         String Khac,
         String mabenhRaVien,
         String maBenhvv,

         String ChanDoanVV,

         String CheDoDinhDuong,
         String CheDoChamSoc, String TienLuong, String _maMay, Boolean _huy, String _nguoiSD, string _TomTatKQCLS, string _maBenhChinh, string _tenBenhChinh, string _maBenhKemTheo, string _tenBenhKemTheo, string _maBenhPhanBiet, string _tenBenhPhanBiet)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spBenhAnPK_DY_UPDATE", _maBA, _ngayKham.DBValue, _bSKHAM, LyDoKham,
         ToanThan,
         BoPhan,
          _mach, _apHuyet, _nhietDo, _nhipTho, _canNang, _chieuCao, 
         MotaVongChan,

         MoTaVanChan,

         MTVaanChan,


         MTXucChan,

         MachTrai,
         MachPhai,

         TomtatTuChan,

         BenhDanh,
         Batcuong,
         Tangphu,
         KinhMach,

         Nguyennhan,
            BenhDanhRV,
               BatcuongRV,
          TangphuRV,
          NguyennhanRV,
         ChanDoanRaVien,
         Phapdieutri,
         Phuongthuoc,
         Phuonghuyet,

         Khac,
         mabenhRaVien,

         maBenhvv,


         ChanDoanVV,
         CheDoDinhDuong,
         CheDoChamSoc, TienLuong, _maMay, _huy, _nguoiSD, _TomTatKQCLS, _maBenhChinh, _tenBenhChinh, _maBenhKemTheo, _tenBenhKemTheo, _maBenhPhanBiet, _tenBenhPhanBiet);
        }
        public override void DeleteBenhAnPK_DY(String _maMay, String _nguoiSD, String _maBA)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spBenhAnPK_DY_Deleted", _maMay, _nguoiSD, _maBA);
        }
        #endregion
        #region Hoi chan
        public override String InsertHoiChan(String _maBA, String _maBN, String _hoten, Byte _tuoi, Boolean _gt, SmartDate _ngaySinh, String _maKhoa, String _maHTHoiChan, String _maLDHoiChan, SmartDate _ngayHC, String _diaDiem, String _yeuCauHC, String _tinhtrang, String _tomTat, String _maBenhID, String _nguyenNhan, String _phuongPhap, String _chamSoc, String _ketLuan, string _maMay, String _nguoiLap, String _maBenhIDkhoa, SmartDate _ngaygiovv, string _makhoavv, string _tenbenh, string tenbenhkhoa, string _MaBSYC)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spHOICHAN_CREATE", _maBA, _maBN, _hoten, _tuoi, _gt, _ngaySinh.DBValue, _maKhoa, _maHTHoiChan, _maLDHoiChan, _ngayHC.DBValue, _diaDiem, _yeuCauHC, _tinhtrang, _tomTat, _maBenhID, _nguyenNhan, _phuongPhap, _chamSoc, _ketLuan, _maMay, _nguoiLap, _maBenhIDkhoa, _ngaygiovv.DBValue, _makhoavv, _tenbenh, tenbenhkhoa, _MaBSYC));
        }
        public override void UpdateHoiChan(String _maHC, String _maBA, String _maBN, String _hoten, Byte _tuoi, Boolean _gt, SmartDate _ngaySinh, String _maKhoa, String _maHTHoiChan, String _maLDHoiChan, SmartDate _ngayHC, String _diaDiem, String _yeuCauHC, String _tinhtrang, String _tomTat, String _maBenhID, String _nguyenNhan, String _phuongPhap, String _chamSoc, String _ketLuan, Boolean _huy, String _nguoiSD, String _maMay, String _maBenhIDkhoa, SmartDate _ngaygiovv, string _makhoavv, string _tenbenh, string _tenbenhkhoa, string _MaBSYC)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spHOICHAN_UPDATE", _maHC, _maBA, _maBN, _hoten, _tuoi, _gt, _ngaySinh.DBValue, _maKhoa, _maHTHoiChan, _maLDHoiChan, _ngayHC.DBValue, _diaDiem, _yeuCauHC, _tinhtrang, _tomTat, _maBenhID, _nguyenNhan, _phuongPhap, _chamSoc, _ketLuan, _huy, _nguoiSD, _maMay, _maBenhIDkhoa, _ngaygiovv.DBValue, _makhoavv, _tenbenh, _tenbenhkhoa, _MaBSYC);
        }
        public override void DeleteHoiChan(String _maMay, String _nguoihuy, String _maHC)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spHOICHAN_DELETED", _maMay, _nguoihuy, _maHC);
        }
        #endregion

        #region Hoi chan thanh vien
        public override String InsertHoiChan_TV(String _maHC, String _maNV, String _maCD, String _ghichu, String _maMay, String _nguoiSD, Byte _vaiTro, string _hoten)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spHoiChan_TV_CREATE", _maHC, _maNV, _maCD, _ghichu, _maMay, _nguoiSD, _vaiTro, _hoten));
        }
        public override void UpdateHoiChan_TV(String _maHC, Byte _sTT, String _maNV, String _maCD, Boolean _huy, String _ghichu, String _maMay, String _nguoiSD, Byte _vaiTro, string _hoten)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spHoiChan_TV_UPDATE", _maHC, _sTT, _maNV, _maCD, _huy, _ghichu, _maMay, _nguoiSD, _vaiTro, _hoten);
        }
        public override void DeleteHoiChan_TV(String _maMay, String _nguoisd, String _maHC, Byte _sTT)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spHoiChan_TV_DELETED", _maMay, _nguoisd, _maHC, _sTT);
        }

        #endregion


         #region khambenh_cstn
        public override Int32 InsertKhamBenh_CSTN(String _masokham,int stt,SmartDate _ngayth, String _noidung,string _ghichu, string _maMay, String _nguoiLap, string _MaBSYC)
        {
            return System.Convert.ToInt32(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spKhamBenh_CSTN_CREATE", _masokham, stt, _ngayth.DBValue, _noidung, _ghichu, _maMay, _nguoiLap, _MaBSYC));
        }
        public override void UpdateKhamBenh_CSTN(String _maSoKham, int stt, int sttth, SmartDate _ngayth, String _noidung, string _ghichu, Boolean _huy, String _nguoiSD, String _maMay, string _MaBSYC)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spKhamBenh_CSTN_UPDATE",  _maSoKham, stt, sttth, _ngayth.DBValue ,  _noidung,_ghichu, _huy, _nguoiSD, _maMay, _MaBSYC);
        }
        public override void DeleteKhamBenh_CSTN(String _maMay, String _nguoihuy, String _maSoKham, int stt, int sttth)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spKhamBenh_CSTN_DELETED", _maMay, _nguoihuy, _maSoKham,  stt,  sttth);
        }
        #endregion

        #region khambenh_cstn thanh vien
        public override Int32 InsertKhamBenh_CSTN_TV(String _maSoKham, int stt, int sttth, String _maNV, String _maCD, String _ghichu, String _maMay, String _nguoiSD, Byte _vaiTro, string _hoten)
        {
            return System.Convert.ToInt32 (SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spKhamBenh_CSTN_TV_CREATE", _maSoKham,  stt,  sttth, _maNV, _maCD, _ghichu, _maMay, _nguoiSD, _vaiTro, _hoten));
        }
        public override void UpdateKhamBenh_CSTN_TV(String _maSoKham, int _sTTtv, String _maNV, String _maCD, Boolean _huy, String _ghichu, String _maMay, String _nguoiSD, Byte _vaiTro, string _hoten)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spKhamBenh_CSTN_TV_UPDATE", _maSoKham, _sTTtv, _maNV, _maCD, _huy, _ghichu, _maMay, _nguoiSD, _vaiTro, _hoten);
        }
        public override void DeleteKhamBenh_CSTN_TV(String _maMay, String _nguoisd, String _maSoKham, int _sTTtv)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spKhamBenh_CSTN_TV_DELETED", _maMay, _nguoisd, _maSoKham, _sTTtv);
        }

        #endregion

        #endregion
        #region Noi tru

        #region Get list
        public override IDataReader GetPhacDoDT_GetAll(Boolean _qadmin, String _mabenh, String _tenbenh, String _mabenhkem, String _tenbenhkem, string _dk)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spPhacDoDT_GETALL", _qadmin, _mabenh, _tenbenh, _mabenhkem, _tenbenhkem, _dk));

        }
        public override IDataReader GetAllPhacDoDT_Get(String _maPD, Boolean _qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spPhacDoDT_GET", _maPD, _qadmin));

        }
        public override IDataReader GetPhacDoDT_C_GetAll(Boolean _qadmin, String _maPD)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spPhacDoDT_C_GETAll", _qadmin, _maPD));

        }
        public override IDataReader GetPhacDoDT_C_Get(String _maPD, decimal STT)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spPhacDoDT_C_GET", _maPD, STT));

        }



        public override IDataReader GetBenhNhan(String _maBN)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spBENHNHAN_GET", _maBN));
        }
        public override IDataReader GetAllBenhNhan(DateTime tungay, DateTime denngay, string madt, string dk, bool qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spBenhNhan_GETALL", tungay, denngay, madt, dk, qadmin));
        }
        public override IDataReader GetTaiBien(String _maTB, Byte _loai, Boolean qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spTaiBien_GET", _maTB, _loai, qadmin));
        }
        public override IDataReader GetAllTaiBien(Boolean qadmin, string maKhoa, DateTime Tungay, DateTime Denngay, byte loai, string dk)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spTaiBien_GETAll", qadmin, maKhoa, Tungay, Denngay, loai, dk));
        }
        public override IDataReader GetAllTaiBien(Boolean qadmin, string maKhoa, DateTime Tungay, DateTime Denngay, byte loai, string dk, string dkfilter)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spTaiBienFilter_GETAll", qadmin, maKhoa, Tungay, Denngay, loai, dk, dkfilter));
        }
        public override IDataReader GetTaiBien_DV(String _maTB, Byte _sTT, Byte _loai)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spTaiBien_DV_GET", _maTB, _sTT, _loai));
        }
        public override IDataReader GetBenhAn(String _maBA, string dk)
        {
          
                return ((IDataReader)SqlHelper.ExecuteReader(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spBenhAn_GET", _maBA, dk));
            // NEW
        }
        public override IDataReader GetBenhAn(String _maBA, string dk, byte loaikq =0)
        {
            if (loaikq ==1)
                return ((IDataReader)SqlHelper.ExecuteReader(ConnectionStringChuyenBN, DatabaseOwner + ObjectQualifier + "spBenhAn_GET", _maBA, dk));
            else
                return ((IDataReader)SqlHelper.ExecuteReader(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spBenhAn_GET", _maBA, dk));
            // NEW
        }
        public override IDataReader GetBenhAn_VP_GetsInfo(String _maBA, Byte _datt, string dk)
        {

            //  return ((IDataReader)SqlHelper.ExecuteReader(SQLConnectionBDNoiT , DatabaseOwner + ObjectQualifier + "spBenhAn_VP", _maBA, _datt, dk));
            System.Data.SqlClient.SqlCommand cmd = SqlHelper.CreateCommand(SQLConnectionBDNoiT, DatabaseOwner + ObjectQualifier + "spBenhAn_VP");
            cmd.CommandTimeout = 18000;

            cmd.CommandType = System.Data.CommandType.StoredProcedure;
            cmd.Parameters.AddWithValue("maba", _maBA);
            cmd.Parameters.AddWithValue("datt", _datt);
            cmd.Parameters.AddWithValue("DK", dk);
            IDataReader dt;
            dt = (IDataReader)cmd.ExecuteReader(CommandBehavior.CloseConnection);
            cmd.Dispose();
            cmd = null;
            return dt;
        }

        public override IDataReader BenhAn_GETsBCDICHVUInfo(String _maSoKham, Byte _DaTT, byte _loai, String _dK)
        {
            // return ((IDataReader)SqlHelper.ExecuteReader(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spBENHAN_GETsBCDICHVU2", _maSoKham, _DaTT, _loai, _dK));
            System.Data.SqlClient.SqlCommand cmd = SqlHelper.CreateCommand(SQLConnectionBDNoiT, DatabaseOwner + ObjectQualifier + "spBENHAN_GETsBCDICHVU2");
            cmd.CommandTimeout = 18000;

            cmd.CommandType = System.Data.CommandType.StoredProcedure;
            cmd.Parameters.AddWithValue("maba", _maSoKham);
            cmd.Parameters.AddWithValue("loai", _loai);

            cmd.Parameters.AddWithValue("datt", _DaTT);
            cmd.Parameters.AddWithValue("DK", _dK);
            IDataReader dt;
            dt = (IDataReader)cmd.ExecuteReader(CommandBehavior.CloseConnection);
            cmd.Dispose();
            cmd = null;
            return dt;
        }
        public override IDataReader FindBenhAn_SearchInfo(string _maDT,
      string _MaBN,
      string _Hoten,
      bool _DungTen,
      string _SoThe,
      string _MaBV,
      DateTime _GiaTriDN,
      string _DiaChi,
      string _DienThoai,
      string _DTDD,
      string _DTCQ,
      string _Mail,
      Byte _Tuoi,
      DateTime _NgaySinh,
      bool _GT,
      string _BaoTin,
      string _MaQG,
      string _MaTinh,
      string _MaHuyen,
      string _MaNN,
      string _MaBA,
      string _MABENH,
      string _MABAQL,
      string _MaLoaiBA,
      DateTime _TuNgayYC,
      DateTime _DenNgayYC,
      string _DK,
      bool qadmin,
      DateTime _DenNgaysinh,
      bool _YCDANGDK,
      bool _YCNGAYSINH)
        {
            //DateTime __GiaTriDN = _GiaTriDN;
            //if (_GiaTriDN.ToShortDateString() == "01/01/0001")
            //{ __GiaTriDN = DateTime.Parse("01/01/1753"); };
            //DateTime __DenNgaysinh = _DenNgaysinh;
            //if (_DenNgaysinh.ToShortDateString() == "01/01/0001")
            //{ __DenNgaysinh = DateTime.Parse("01/01/1753"); };
            //DateTime __NgaySinh = _NgaySinh;
            //if (_NgaySinh.ToShortDateString() == "01/01/0001")
            //{ __NgaySinh = DateTime.Parse("01/01/1753"); };
            //DateTime __TuNgayYC = _TuNgayYC;
            //if (_TuNgayYC.ToShortDateString() == "01/01/0001")
            //{ __TuNgayYC = DateTime.Parse("01/01/1753"); };
            //DateTime __DenNgayYC = _DenNgayYC;
            //if (_DenNgayYC.ToShortDateString() == "01/01/0001")
            //{ __DenNgayYC = DateTime.Parse("01/01/1753"); };

            //try { 
            //_GiaTriDN = DateTime.Parse(_GiaTriDN.ToString("MM/dd/yyyy"));
            //_NgaySinh = DateTime.Parse(_NgaySinh.ToString("MM/dd/yyyy"));
            //_DenNgaysinh = DateTime.Parse(_DenNgaysinh.ToString("MM/dd/yyyy"));
            //_TuNgayYC = DateTime.Parse(_TuNgayYC.ToString("MM/dd/yyyy"));
            //_DenNgaysinh = DateTime.Parse(_DenNgaysinh.ToString("MM/dd/yyyy"));
            //_GiaTriDN = DateTime.Parse(_GiaTriDN.ToString("dd/MM/yyyy"));
            //_NgaySinh = DateTime.Parse(_NgaySinh.ToString("dd/MM/yyyy"));
            //_DenNgaysinh = DateTime.Parse(_DenNgaysinh.ToString("dd/MM/yyyy"));
            //_TuNgayYC = DateTime.Parse(_TuNgayYC.ToString("dd/MM/yyyy"));
            //_DenNgaysinh = DateTime.Parse(_DenNgaysinh.ToString("dd/MM/yyyy")); 
            IDataReader _iddata = ((IDataReader)SqlHelper.ExecuteReader(SQLConnectionDataBC, DatabaseOwner + ObjectQualifier + "spBENHAN_SEARCH", _maDT,
               _MaBN,
               _Hoten,
               _DungTen,
               _SoThe,
               _MaBV,
               _GiaTriDN,
               _DiaChi,
               _DienThoai,
               _DTDD,
               _DTCQ,
               _Mail,
               _Tuoi,
               _NgaySinh,
               _GT,
               _BaoTin,
               _MaQG,
               _MaTinh,
               _MaHuyen,
               _MaNN,
               _MaBA,
               _MABENH,
               _MABAQL,
               _MaLoaiBA,
               _TuNgayYC,
               _DenNgayYC,

               _DK, qadmin,
               _DenNgaysinh,
               _YCDANGDK, _YCNGAYSINH));

            //}
            //catch (Exception ex)
            //{
            //    //ex.Message ;
            //};
            //// if (SQLConnectionBDNoiT.State == System.Data.ConnectionState.Closed)
            //     //SQLConnectionBDNoiT.Close(); SQLConnectionBDNoiT.Dispose();
            // //if (_sqlConnection.State == System.Data.ConnectionState.Closed)
            // {
            //     //_sqlConnection.Close(); _sqlConnection.Dispose();
            //     //_sqlConnection = null;
            // }
            return _iddata;

        }
        public override IDataReader GetAllBenhAn(string maKhoa, DateTime Tungay, DateTime Denngay, Byte loaikqkhoa, string madt, string dk, bool qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spBenhAn_GETAll", maKhoa, Tungay, Denngay, loaikqkhoa, madt, dk, qadmin));
        }
        public override IDataReader GetBenhAn_Tien(String _maBA)
        {
            // return ((IDataReader)SqlHelper.ExecuteReader(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spBenhAn_GETTien", _maBA));
            System.Data.SqlClient.SqlCommand cmd = SqlHelper.CreateCommand(SQLConnectionBDNoiT, DatabaseOwner + ObjectQualifier + "spBenhAn_GETTien");
            cmd.CommandTimeout = 18000;

            cmd.CommandType = System.Data.CommandType.StoredProcedure;
            cmd.Parameters.AddWithValue("maBA", _maBA);

            IDataReader dt;
            dt = (IDataReader)cmd.ExecuteReader(CommandBehavior.CloseConnection);
            cmd.Dispose();
            cmd = null;
            return dt;
        }
        public override IDataReader GetBenhAn_KhoaTT(String _maBA, Int32 _sTTKhoa)
        {
            // return ((IDataReader)SqlHelper.ExecuteReader(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spBenhAn_Khoa_GETT", _maBA, _sTTKhoa));
            System.Data.SqlClient.SqlCommand cmd;
           
                cmd = SqlHelper.CreateCommand(SQLConnectionBDNoiT, DatabaseOwner + ObjectQualifier + "spBenhAn_Khoa_GETT");
            cmd.CommandTimeout = 18000;

            cmd.CommandType = System.Data.CommandType.StoredProcedure;
            cmd.Parameters.AddWithValue("maBA", _maBA);
            cmd.Parameters.AddWithValue("sTTKhoa", _sTTKhoa);
            //cmd.Parameters.AddWithValue("maKhoa", maKhoa);
            //cmd.Parameters.AddWithValue("loai", loai);
            //cmd.Parameters.AddWithValue("DK", dk);
            //cmd.Parameters.AddWithValue("qadmin", _qadmin);
            IDataReader dt;
            dt = (IDataReader)cmd.ExecuteReader(CommandBehavior.CloseConnection);
            cmd.Dispose();
            cmd = null;
            return dt;
        }
        public override IDataReader GetBenhAn_KhoaTT(String _maBA, Int32 _sTTKhoa,byte loaikq)
        {
            // return ((IDataReader)SqlHelper.ExecuteReader(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spBenhAn_Khoa_GETT", _maBA, _sTTKhoa));
            System.Data.SqlClient.SqlCommand cmd;
            if (loaikq ==1)
                cmd = SqlHelper.CreateCommand(SQLConnectionDataChuyenBN, DatabaseOwner + ObjectQualifier + "spBenhAn_Khoa_GETT");
            else
                cmd = SqlHelper.CreateCommand(SQLConnectionBDNoiT, DatabaseOwner + ObjectQualifier + "spBenhAn_Khoa_GETT");
            cmd.CommandTimeout = 18000;

            cmd.CommandType = System.Data.CommandType.StoredProcedure;
            cmd.Parameters.AddWithValue("maBA", _maBA);
            cmd.Parameters.AddWithValue("sTTKhoa", _sTTKhoa);
            //cmd.Parameters.AddWithValue("maKhoa", maKhoa);
            //cmd.Parameters.AddWithValue("loai", loai);
            //cmd.Parameters.AddWithValue("DK", dk);
            //cmd.Parameters.AddWithValue("qadmin", _qadmin);
            IDataReader dt;
            dt = (IDataReader)cmd.ExecuteReader(CommandBehavior.CloseConnection);
            cmd.Dispose();
            cmd = null;
            return dt;
        }
        public override IDataReader GetBenhAn_Khoa(String _maBA, Int32 _sTTKhoa)
        {
            //  return ((IDataReader)SqlHelper.ExecuteReader(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spBenhAn_Khoa_GET", _maBA, _sTTKhoa));
            System.Data.SqlClient.SqlCommand cmd = SqlHelper.CreateCommand(SQLConnectionBDNoiT, DatabaseOwner + ObjectQualifier + "spBenhAn_Khoa_GET");
            cmd.CommandTimeout = 18000;

            cmd.CommandType = System.Data.CommandType.StoredProcedure;
            cmd.Parameters.AddWithValue("maBA", _maBA);
            cmd.Parameters.AddWithValue("sTTKhoa", _sTTKhoa);
            //cmd.Parameters.AddWithValue("maKhoa", maKhoa);
            //cmd.Parameters.AddWithValue("loai", loai);
            //cmd.Parameters.AddWithValue("DK", dk);
            //cmd.Parameters.AddWithValue("qadmin", _qadmin);
            IDataReader dt;
            dt = (IDataReader)cmd.ExecuteReader(CommandBehavior.CloseConnection);
            cmd.Dispose();
            cmd = null;
            return dt;
        }
        public override IDataReader GetBenhAn_DoiTuong(String _maBA, Int32 _sTT)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spBenhAn_DoiTuong_GET", _maBA, _sTT));
        }
        public override IDataReader GetBenhAn_ThanhToan(String _maBA, Int32 _sTT)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spBenhAn_ThanhToan_GET", _maBA, _sTT));
        }
        public override IDataReader GetAllBenhAn_Khoa(string maKhoa, DateTime Tungay, DateTime Denngay, Byte loaikqkhoa, string madt, string dk, bool qadmin)
        {
            // return ((IDataReader)SqlHelper.ExecuteReader( ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spBenhAn_Khoa_GETAll", maKhoa, Tungay, Denngay, loaikqkhoa, madt, dk, qadmin));
            System.Data.SqlClient.SqlCommand cmd = SqlHelper.CreateCommand(SQLConnectionBDNoiT, DatabaseOwner + ObjectQualifier + "spBenhAn_Khoa_GETAll");
            cmd.CommandTimeout = 18000;

            cmd.CommandType = System.Data.CommandType.StoredProcedure;
            cmd.Parameters.AddWithValue("MaKhoa", maKhoa);
            cmd.Parameters.AddWithValue("TuNgay", Tungay);
            cmd.Parameters.AddWithValue("DenNgay", Denngay);
            cmd.Parameters.AddWithValue("loaikqkhoa", loaikqkhoa);
            cmd.Parameters.AddWithValue("MaDT", madt);
            cmd.Parameters.AddWithValue("DK", dk);
            cmd.Parameters.AddWithValue("qadmin", qadmin);
            IDataReader dt;
            dt = (IDataReader)cmd.ExecuteReader(CommandBehavior.CloseConnection);
            cmd.Dispose();
            cmd = null;
            // if (SQLConnectionBDNoiT.State == System.Data.ConnectionState.Closed)
            //SQLConnectionBDNoiT.Close(); SQLConnectionBDNoiT.Dispose();
            //if (_sqlConnection.State == System.Data.ConnectionState.Closed)
            //{
            //    //_sqlConnection.Close(); _sqlConnection.Dispose();
            //    //_sqlConnection = null;
            //}
            return dt;
        }
        public override IDataReader GetAllBenhAn_KhoaByKhoaHT(string maKhoa, DateTime Tungay, DateTime Denngay, Byte loaikqkhoa, string madt, string dk, bool qadmin)
        {

            System.Data.SqlClient.SqlCommand cmd = SqlHelper.CreateCommand(SQLConnectionBDNoiT, DatabaseOwner + ObjectQualifier + "spBenhAn_Khoa_GETAll");
            cmd.CommandTimeout = 18000;
            cmd.CommandType = System.Data.CommandType.StoredProcedure;
            cmd.Parameters.AddWithValue("MaKhoa", maKhoa);
            cmd.Parameters.AddWithValue("TuNgay", Tungay);
            cmd.Parameters.AddWithValue("DenNgay", Denngay);
            cmd.Parameters.AddWithValue("loaikqkhoa", loaikqkhoa);
            cmd.Parameters.AddWithValue("MaDT", madt);
            if (dk == null)
                cmd.Parameters.AddWithValue("DK", "");
            else
                cmd.Parameters.AddWithValue("DK", dk);
            cmd.Parameters.AddWithValue("qadmin", qadmin);
            IDataReader dt;
            dt = (IDataReader)cmd.ExecuteReader(CommandBehavior.CloseConnection); ;
            cmd.Dispose();
            cmd = null;
            // if (SQLConnectionBDNoiT.State == System.Data.ConnectionState.Closed)
            //SQLConnectionBDNoiT.Close(); SQLConnectionBDNoiT.Dispose();
            //if (_sqlConnection.State == System.Data.ConnectionState.Closed)
            //{
            //    //_sqlConnection.Close(); _sqlConnection.Dispose();
            //    //_sqlConnection = null;
            //}
            return dt;
        }
        public override IDataReader GetAllBenhAn_KhoaByMaBA(string maBA, string dk, bool qadmin)
        {
            // return ((IDataReader)SqlHelper.ExecuteReader( ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spBenhAn_Khoa_GETALLBYMABA", maBA, dk, qadmin));
            System.Data.SqlClient.SqlCommand cmd = SqlHelper.CreateCommand(SQLConnectionBDNoiT, DatabaseOwner + ObjectQualifier + "spBenhAn_Khoa_GETALLBYMABA");
            cmd.CommandTimeout = 18000;
            cmd.CommandType = System.Data.CommandType.StoredProcedure;
            cmd.Parameters.AddWithValue("maba", maBA);
            if (dk == null)
                cmd.Parameters.AddWithValue("DK", "");
            else
                cmd.Parameters.AddWithValue("DK", dk);
            cmd.Parameters.AddWithValue("qadmin", qadmin);
            IDataReader dt;
            dt = (IDataReader)cmd.ExecuteReader(CommandBehavior.CloseConnection); ;
            cmd.Dispose();
            cmd = null;
            //// if (SQLConnectionBDNoiT.State == System.Data.ConnectionState.Closed)
            //     //SQLConnectionBDNoiT.Close(); SQLConnectionBDNoiT.Dispose();
            // //if (_sqlConnection.State == System.Data.ConnectionState.Closed)
            // {
            //     //_sqlConnection.Close(); _sqlConnection.Dispose();
            //     //_sqlConnection = null;
            // }
            return dt;
        }
        public override IDataReader GetAllBenhAn_KhoaFilter(string maKhoa, DateTime Tungay, DateTime Denngay, Byte loaikqkhoa, string madt, string dk, bool qadmin, string _dkfilter)
        {
            // return ((IDataReader)SqlHelper.ExecuteReader( ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spBenhAn_Khoa_GETAll", maKhoa, Tungay, Denngay, loaikqkhoa, madt, dk, qadmin));
            System.Data.SqlClient.SqlCommand cmd = SqlHelper.CreateCommand(SQLConnectionDataBC, DatabaseOwner + ObjectQualifier + "spBenhAn_KhoaFilter_GETAll");
            cmd.CommandTimeout = 18000;

            cmd.CommandType = System.Data.CommandType.StoredProcedure;
            cmd.Parameters.AddWithValue("MaKhoa", maKhoa);
            cmd.Parameters.AddWithValue("TuNgay", Tungay);
            cmd.Parameters.AddWithValue("DenNgay", Denngay);
            cmd.Parameters.AddWithValue("loaikqkhoa", loaikqkhoa);
            cmd.Parameters.AddWithValue("MaDT", madt);
            cmd.Parameters.AddWithValue("DK", dk);
            cmd.Parameters.AddWithValue("qadmin", qadmin);
            cmd.Parameters.AddWithValue("DKFilter", _dkfilter);
            IDataReader dt;
            dt = (IDataReader)cmd.ExecuteReader(CommandBehavior.CloseConnection);
            cmd.Dispose();
            cmd = null;
            // if (SQLConnectionBDNoiT.State == System.Data.ConnectionState.Closed)
            //SQLConnectionBDNoiT.Close(); SQLConnectionBDNoiT.Dispose();
            //if (_sqlConnection.State == System.Data.ConnectionState.Closed)
            //{
            //    //_sqlConnection.Close(); _sqlConnection.Dispose();
            //    //_sqlConnection = null;
            //}
            return dt;
        }

        public override IDataReader GetBenhAn_ChuyenBN(String _maBA, Int32 _sTTKhoa)
        {
            //  return ((IDataReader)SqlHelper.ExecuteReader(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spBenhAn_Khoa_GET", _maBA, _sTTKhoa));
            System.Data.SqlClient.SqlCommand cmd = SqlHelper.CreateCommand(SQLConnectionBDNoiT, DatabaseOwner + ObjectQualifier + "spBenhAn_ChuyenBN_GET");
            cmd.CommandTimeout = 18000;

            cmd.CommandType = System.Data.CommandType.StoredProcedure;
            cmd.Parameters.AddWithValue("maBA", _maBA);
            cmd.Parameters.AddWithValue("sTTKhoa", _sTTKhoa);
            //cmd.Parameters.AddWithValue("maKhoa", maKhoa);
            //cmd.Parameters.AddWithValue("loai", loai);
            //cmd.Parameters.AddWithValue("DK", dk);
            //cmd.Parameters.AddWithValue("qadmin", _qadmin);
            IDataReader dt;
            dt = (IDataReader)cmd.ExecuteReader(CommandBehavior.CloseConnection);
            cmd.Dispose();
            cmd = null;
            return dt;
        }
        public override IDataReader GetAllBenhAn_ChuyenBN(DateTime Tungay, DateTime Denngay, Byte loaikqkhoa, string madt, string dk, bool qadmin)
        {
            // return ((IDataReader)SqlHelper.ExecuteReader( ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spBenhAn_Khoa_GETAll", maKhoa, Tungay, Denngay, loaikqkhoa, madt, dk, qadmin));
            System.Data.SqlClient.SqlCommand cmd = SqlHelper.CreateCommand(SQLConnectionBDNoiT, DatabaseOwner + ObjectQualifier + "spBenhAn_ChuyenBN_GETAll");
            cmd.CommandTimeout = 18000;

            cmd.CommandType = System.Data.CommandType.StoredProcedure;
            cmd.Parameters.AddWithValue("TuNgay", Tungay);
            cmd.Parameters.AddWithValue("DenNgay", Denngay);
            cmd.Parameters.AddWithValue("loaikqkhoa", loaikqkhoa);
            cmd.Parameters.AddWithValue("MaDT", madt);
            cmd.Parameters.AddWithValue("DK", dk);
            cmd.Parameters.AddWithValue("qadmin", qadmin);
            IDataReader dt;
            dt = (IDataReader)cmd.ExecuteReader(CommandBehavior.CloseConnection);
            cmd.Dispose();
            cmd = null;
            // if (SQLConnectionBDNoiT.State == System.Data.ConnectionState.Closed)
            //SQLConnectionBDNoiT.Close(); SQLConnectionBDNoiT.Dispose();
            //if (_sqlConnection.State == System.Data.ConnectionState.Closed)
            //{
            //    //_sqlConnection.Close(); _sqlConnection.Dispose();
            //    //_sqlConnection = null;
            //}
            return dt;
        }
        public override IDataReader GetAllBenhAn_ChuyenBNFilter( DateTime Tungay, DateTime Denngay, Byte loaikqkhoa, string madt, string dk, bool qadmin, string _dkfilter)
        {
            // return ((IDataReader)SqlHelper.ExecuteReader( ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spBenhAn_Khoa_GETAll", maKhoa, Tungay, Denngay, loaikqkhoa, madt, dk, qadmin));
            System.Data.SqlClient.SqlCommand cmd = SqlHelper.CreateCommand(SQLConnectionDataBC, DatabaseOwner + ObjectQualifier + "spBenhAn_ChuyenBNFilter_GETAll");
            cmd.CommandTimeout = 18000;

            cmd.CommandType = System.Data.CommandType.StoredProcedure;
            cmd.Parameters.AddWithValue("TuNgay", Tungay);
            cmd.Parameters.AddWithValue("DenNgay", Denngay);
            cmd.Parameters.AddWithValue("loaikqkhoa", loaikqkhoa);
            cmd.Parameters.AddWithValue("MaDT", madt);
            cmd.Parameters.AddWithValue("DK", dk);
            cmd.Parameters.AddWithValue("qadmin", qadmin);
            cmd.Parameters.AddWithValue("DKFilter", _dkfilter);
            IDataReader dt;
            dt = (IDataReader)cmd.ExecuteReader(CommandBehavior.CloseConnection);
            cmd.Dispose();
            cmd = null;
            // if (SQLConnectionBDNoiT.State == System.Data.ConnectionState.Closed)
            //SQLConnectionBDNoiT.Close(); SQLConnectionBDNoiT.Dispose();
            //if (_sqlConnection.State == System.Data.ConnectionState.Closed)
            //{
            //    //_sqlConnection.Close(); _sqlConnection.Dispose();
            //    //_sqlConnection = null;
            //}
            return dt;
        }

        public override IDataReader GetAllBenhAn_ThanhToan(string maBA, string dk, bool qadmin)
        {
            // return ((IDataReader)SqlHelper.ExecuteReader(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spBenhAn_ThanhToan_GETALL", maBA, dk, qadmin));
            System.Data.SqlClient.SqlCommand cmd;
           
                cmd = SqlHelper.CreateCommand(SQLConnectionBDNoiT, DatabaseOwner + ObjectQualifier + "spBenhAn_ThanhToan_GETALL");

            cmd.CommandTimeout = 18000;

            cmd.CommandType = System.Data.CommandType.StoredProcedure;
            cmd.Parameters.AddWithValue("maBA", maBA);

            cmd.Parameters.AddWithValue("DK", (dk == null ? "" : dk));
            cmd.Parameters.AddWithValue("qadmin", qadmin);
            IDataReader dt;
            dt = (IDataReader)cmd.ExecuteReader(CommandBehavior.CloseConnection);
            cmd.Dispose();
            cmd = null;
            return dt;
        }
      
        public override IDataReader GetAllBenhAn_ThanhToan(string maBA, string dk, bool qadmin, byte loaikq)
        {
            // return ((IDataReader)SqlHelper.ExecuteReader(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spBenhAn_ThanhToan_GETALL", maBA, dk, qadmin));
            System.Data.SqlClient.SqlCommand cmd ;
            if (loaikq ==1)
                cmd = SqlHelper.CreateCommand(SQLConnectionDataChuyenBN, DatabaseOwner + ObjectQualifier + "spBenhAn_ThanhToan_GETALL");
            else
                cmd = SqlHelper.CreateCommand(SQLConnectionBDNoiT, DatabaseOwner + ObjectQualifier + "spBenhAn_ThanhToan_GETALL");
        
            cmd.CommandTimeout = 18000;

            cmd.CommandType = System.Data.CommandType.StoredProcedure;
            cmd.Parameters.AddWithValue("maBA", maBA);

            cmd.Parameters.AddWithValue("DK", (dk == null ? "" : dk));
            cmd.Parameters.AddWithValue("qadmin", qadmin);
            IDataReader dt;
            dt = (IDataReader)cmd.ExecuteReader(CommandBehavior.CloseConnection);
            cmd.Dispose();
            cmd = null;
            return dt;
        }
        public override IDataReader GetAllBenhAn_DoiTuong(string maBA, string dk, bool qadmin)
        {
          
                return ((IDataReader)SqlHelper.ExecuteReader(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spBenhAn_DoiTuong_GETALL", maBA, dk, qadmin));
        }
        public override IDataReader GetAllBenhAn_DoiTuong(string maBA, string dk, bool qadmin, byte loaikq)
        {
            if (loaikq ==1)
                return ((IDataReader)SqlHelper.ExecuteReader(ConnectionStringChuyenBN, DatabaseOwner + ObjectQualifier + "spBenhAn_DoiTuong_GETALL", maBA, dk, qadmin));
            else
                return ((IDataReader)SqlHelper.ExecuteReader(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spBenhAn_DoiTuong_GETALL", maBA, dk, qadmin));
        }
        public override IDataReader GetBenhAn_Chamsoc(String _maBA, Int32 _sTT, Int32 _sTTKhoa)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spBenhAn_Chamsoc_GET", _maBA, _sTT, _sTTKhoa));
        }
        public override IDataReader GetAllBenhAn_Chamsoc(string maBA, Byte STTkhoa, bool qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spBenhAn_Chamsoc_GETAll", maBA, STTkhoa, qadmin));
        }
        public override IDataReader GetBenhAn_ChamsocPT(String _maBA, Int32 _sTT, Int32 _sTTKhoa)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spBenhAn_ChamsocPT_GET", _maBA, _sTT, _sTTKhoa));
        }
        public override IDataReader GetAllBenhAn_ChamsocPT(string maBA, Byte STTkhoa, bool qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spBenhAn_ChamsocPT_GETAll", maBA, STTkhoa, qadmin));
        }
        public override IDataReader GetBenhAn_TheoDoi(String _maBA, Int32 _sTT, Int32 _sTTKhoa)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spBenhAn_TheoDoi_GET", _maBA, _sTT, _sTTKhoa));
        }
        public override IDataReader GetAllBenhAn_TheoDoi(string maBA, Byte STTkhoa, bool qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spBenhAn_TheoDoi_GETAll", maBA, STTkhoa, qadmin));
        }
        public override IDataReader GetBenhAn_Chamsoc_San(String _maBA, Int32 _sTT, Int32 _sTTKhoa)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spBenhAn_Chamsoc_San_GET", _maBA, _sTT, _sTTKhoa));
        }
        public override IDataReader GetAllBenhAn_Chamsoc_San(string maBA, Byte STTkhoa, bool qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spBenhAn_Chamsoc_San_GETAll", maBA, STTkhoa, qadmin));
        }
        public override IDataReader GetBenhAn_Chamsoc_TNT(String _maBA, Int32 _sTT, Int32 _sTTKhoa)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spBenhAn_Chamsoc_TNT_GET", _maBA, _sTT, _sTTKhoa));
        }
        public override IDataReader GetAllBenhAn_Chamsoc_TNT(string maBA, Byte STTkhoa, bool qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spBenhAn_Chamsoc_TNT_GETAll", maBA, STTkhoa, qadmin));
        }
        public override IDataReader GetBenhAn_Chamsoc_SoSinh(String _maBA, Int32 _sTT, Int32 _sTTKhoa)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spBenhAn_Chamsoc_SoSinh_GET", _maBA, _sTT, _sTTKhoa));
        }
        public override IDataReader GetAllBenhAn_Chamsoc_SoSinh(string maBA, Byte STTkhoa, bool qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spBenhAn_Chamsoc_SoSinh_GETAll", maBA, STTkhoa, qadmin));
        }
        public override IDataReader GetAllBenhAn_ThuocSD_Ke(String MaBA, string dk, bool qadmin)
        {
            //return ((IDataReader)SqlHelper.ExecuteReader( ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spBenhAn_ThuocSD_Ke_GETAll", MaBA, dk, qadmin));
            System.Data.SqlClient.SqlCommand cmd = SqlHelper.CreateCommand(SQLConnectionBDNoiT, DatabaseOwner + ObjectQualifier + "spBenhAn_ThuocSD_Ke_GETAll");
            cmd.CommandTimeout = 18000;
            cmd.CommandType = System.Data.CommandType.StoredProcedure;
            cmd.Parameters.AddWithValue("maba", MaBA);
            cmd.Parameters.AddWithValue("DK", dk);
            cmd.Parameters.AddWithValue("qadmin", qadmin);
            IDataReader dt;
            dt = (IDataReader)cmd.ExecuteReader(CommandBehavior.CloseConnection); ;
            cmd.Dispose();
            cmd = null;
            //// if (SQLConnectionBDNoiT.State == System.Data.ConnectionState.Closed)
            //     //SQLConnectionBDNoiT.Close(); SQLConnectionBDNoiT.Dispose();
            // //if (_sqlConnection.State == System.Data.ConnectionState.Closed)
            // {
            //     //_sqlConnection.Close(); _sqlConnection.Dispose();
            //     //_sqlConnection = null;
            // }
            return dt;
        }
      
        public override IDataReader GetAllBenhAn_KeNgoai(String MaBA, string dk, bool qadmin)
        {
            //return ((IDataReader)SqlHelper.ExecuteReader( ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spBenhAn_KeNgoai_GETAll", MaBA, dk, qadmin));
            System.Data.SqlClient.SqlCommand cmd = SqlHelper.CreateCommand(SQLConnectionBDNoiT, DatabaseOwner + ObjectQualifier + "spBenhAn_KeNgoai_GETAll");
            cmd.CommandTimeout = 18000;
            cmd.CommandType = System.Data.CommandType.StoredProcedure;
            cmd.Parameters.AddWithValue("maba", MaBA);
            cmd.Parameters.AddWithValue("DK", dk);
            cmd.Parameters.AddWithValue("qadmin", qadmin);
            IDataReader dt;
            dt = (IDataReader)cmd.ExecuteReader(CommandBehavior.CloseConnection); ;
            cmd.Dispose();
            cmd = null;
            //// if (SQLConnectionBDNoiT.State == System.Data.ConnectionState.Closed)
            //     //SQLConnectionBDNoiT.Close(); SQLConnectionBDNoiT.Dispose();
            // //if (_sqlConnection.State == System.Data.ConnectionState.Closed)
            // {
            //     //_sqlConnection.Close(); _sqlConnection.Dispose();
            //     //_sqlConnection = null;
            // }
            return dt;
        }

        public override IDataReader GetAllBenhAn_ThuocSD(String MaBA, string dk, bool qadmin)
        {
            // return ((IDataReader)SqlHelper.ExecuteReader(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spBenhAn_ThuocSD_GETAll", MaBA, dk, qadmin));
            System.Data.SqlClient.SqlCommand cmd = SqlHelper.CreateCommand(SQLConnectionBDNoiT, DatabaseOwner + ObjectQualifier + "spBenhAn_ThuocSD_GETAll");
            cmd.CommandTimeout = 18000;
            cmd.CommandType = System.Data.CommandType.StoredProcedure;
            cmd.Parameters.AddWithValue("maba", MaBA);
            cmd.Parameters.AddWithValue("DK", dk);
            cmd.Parameters.AddWithValue("qadmin", qadmin);
            IDataReader dt;
            dt = (IDataReader)cmd.ExecuteReader(CommandBehavior.CloseConnection); ;
            cmd.Dispose();
            cmd = null;
            // if (SQLConnectionBDNoiT.State == System.Data.ConnectionState.Closed)
            //SQLConnectionBDNoiT.Close(); SQLConnectionBDNoiT.Dispose();
            //if (_sqlConnection.State == System.Data.ConnectionState.Closed)
            {
                //_sqlConnection.Close(); _sqlConnection.Dispose();
                //_sqlConnection = null;
            }
            return dt;
        }
        public override IDataReader GetAllBenhAn_ThuocSDBySTTKhoa(string maba, string dk, bool qadmin)
        {
            // return ((IDataReader)SqlHelper.ExecuteReader(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spBenhAn_ThuocSD_GETAll", maba, dk, qadmin));
            System.Data.SqlClient.SqlCommand cmd = SqlHelper.CreateCommand(SQLConnectionBDNoiT, DatabaseOwner + ObjectQualifier + "spBenhAn_ThuocSD_GETAll");
            cmd.CommandTimeout = 18000;
            cmd.CommandType = System.Data.CommandType.StoredProcedure;
            cmd.Parameters.AddWithValue("maba", maba);
            cmd.Parameters.AddWithValue("DK", dk);
            cmd.Parameters.AddWithValue("qadmin", qadmin);
            IDataReader dt;
            dt = (IDataReader)cmd.ExecuteReader(CommandBehavior.CloseConnection); ;
            cmd.Dispose();
            cmd = null;
            //// if (SQLConnectionBDNoiT.State == System.Data.ConnectionState.Closed)
            //     //SQLConnectionBDNoiT.Close(); SQLConnectionBDNoiT.Dispose();
            // //if (_sqlConnection.State == System.Data.ConnectionState.Closed)
            // {
            //     //_sqlConnection.Close(); _sqlConnection.Dispose();
            //     //_sqlConnection = null;
            // }
            return dt;
        }
        public override IDataReader GetAllBenhAn_ThuocSD_DY(String MaBA, string dk, bool qadmin)
        {
            // return ((IDataReader)SqlHelper.ExecuteReader(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spBenhAn_ThuocSD_DY_GETAll", MaBA, dk, qadmin));
            System.Data.SqlClient.SqlCommand cmd = SqlHelper.CreateCommand(SQLConnectionBDNoiT, DatabaseOwner + ObjectQualifier + "spBenhAn_ThuocSD_DY_GETAll");
            cmd.CommandTimeout = 18000;
            cmd.CommandType = System.Data.CommandType.StoredProcedure;
            cmd.Parameters.AddWithValue("maba", MaBA);
            cmd.Parameters.AddWithValue("DK", dk);
            cmd.Parameters.AddWithValue("qadmin", qadmin);
            IDataReader dt;
            dt = (IDataReader)cmd.ExecuteReader(CommandBehavior.CloseConnection); ;
            cmd.Dispose();
            cmd = null;
            // if (SQLConnectionBDNoiT.State == System.Data.ConnectionState.Closed)
            //SQLConnectionBDNoiT.Close(); SQLConnectionBDNoiT.Dispose();
            //if (_sqlConnection.State == System.Data.ConnectionState.Closed)
            {
                //_sqlConnection.Close(); _sqlConnection.Dispose();
                //_sqlConnection = null;
            }
            return dt;
        }
        public override IDataReader GetAllBenhAn_ThuocSD_DYBySTTKhoa(string maba, string dk, bool qadmin)
        {
            // return ((IDataReader)SqlHelper.ExecuteReader(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spBenhAn_ThuocSD_DY_GETAll", maba, dk, qadmin));
            System.Data.SqlClient.SqlCommand cmd = SqlHelper.CreateCommand(SQLConnectionBDNoiT, DatabaseOwner + ObjectQualifier + "spBenhAn_ThuocSD_DY_GETAll");
            cmd.CommandTimeout = 18000;
            cmd.CommandType = System.Data.CommandType.StoredProcedure;
            cmd.Parameters.AddWithValue("maba", maba);
            cmd.Parameters.AddWithValue("DK", dk);
            cmd.Parameters.AddWithValue("qadmin", qadmin);
            IDataReader dt;
            dt = (IDataReader)cmd.ExecuteReader(CommandBehavior.CloseConnection); ;
            cmd.Dispose();
            cmd = null;
            //// if (SQLConnectionBDNoiT.State == System.Data.ConnectionState.Closed)
            //     //SQLConnectionBDNoiT.Close(); SQLConnectionBDNoiT.Dispose();
            // //if (_sqlConnection.State == System.Data.ConnectionState.Closed)
            // {
            //     //_sqlConnection.Close(); _sqlConnection.Dispose();
            //     //_sqlConnection = null;
            // }
            return dt;
        }
        public override IDataReader GetAllBenhAn_VTTH(String MaBA, string dk, bool qadmin)
        {
            //  return ((IDataReader)SqlHelper.ExecuteReader(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spBenhAn_VTTH_GETAll", MaBA, dk, qadmin));
            System.Data.SqlClient.SqlCommand cmd = SqlHelper.CreateCommand(SQLConnectionBDNoiT, DatabaseOwner + ObjectQualifier + "spBenhAn_VTTH_GETAll");
            cmd.CommandTimeout = 18000;
            cmd.CommandType = System.Data.CommandType.StoredProcedure;
            cmd.Parameters.AddWithValue("maba", MaBA);
            cmd.Parameters.AddWithValue("DK", dk);
            cmd.Parameters.AddWithValue("qadmin", qadmin);
            IDataReader dt;
            dt = (IDataReader)cmd.ExecuteReader(CommandBehavior.CloseConnection); ;
            cmd.Dispose();
            cmd = null;
            //// if (SQLConnectionBDNoiT.State == System.Data.ConnectionState.Closed)
            //     //SQLConnectionBDNoiT.Close(); SQLConnectionBDNoiT.Dispose();
            // //if (_sqlConnection.State == System.Data.ConnectionState.Closed)
            // {
            //     //_sqlConnection.Close(); _sqlConnection.Dispose();
            //     //_sqlConnection = null;
            // }
            return dt;
        }
        public override IDataReader GetAllBenhAn_VTTHBySTTKhoa(String MaBA, string dk, bool qadmin)
        {
            //  return ((IDataReader)SqlHelper.ExecuteReader(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spBenhAn_VTTH_GETAll", MaBA, dk, qadmin));
            System.Data.SqlClient.SqlCommand cmd = SqlHelper.CreateCommand(SQLConnectionBDNoiT, DatabaseOwner + ObjectQualifier + "spBenhAn_VTTH_GETAll");
            cmd.CommandTimeout = 18000;
            cmd.CommandType = System.Data.CommandType.StoredProcedure;
            cmd.Parameters.AddWithValue("maba", MaBA);
            cmd.Parameters.AddWithValue("DK", dk);
            cmd.Parameters.AddWithValue("qadmin", qadmin);
            IDataReader dt;
            dt = (IDataReader)cmd.ExecuteReader(CommandBehavior.CloseConnection); ;
            cmd.Dispose();
            cmd = null;
            //// if (SQLConnectionBDNoiT.State == System.Data.ConnectionState.Closed)
            //     //SQLConnectionBDNoiT.Close(); SQLConnectionBDNoiT.Dispose();
            // //if (_sqlConnection.State == System.Data.ConnectionState.Closed)
            // {
            //     //_sqlConnection.Close(); _sqlConnection.Dispose();
            //     //_sqlConnection = null;
            // }
            return dt;
        }

        public override IDataReader GetAllBenhAn_Mau(String MaBA, string dk, bool qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spBenhAn_Mau_GETAll", MaBA, dk, qadmin));
        }
         public override IDataReader GetAllBenhAn_Mau_CT(String MaBA, string dk, bool qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spBenhAn_Mau_CT_GETAll", MaBA, dk, qadmin));
        }
         public override IDataReader GetAllBenhAn_Mau_CT_T(String MaBA, Int32 sttkhoa,Int32 stt, bool qadmin)
         {
             return ((IDataReader)SqlHelper.ExecuteReader(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spBenhAn_Mau_CT_T_GETAll", MaBA, sttkhoa,stt, qadmin));
         }
         public override IDataReader GetBenhAn_Mau_CT_T(String MaBA, Int32 sttkhoa, Int32 stt, Int32 stttruyen)
         {
             return ((IDataReader)SqlHelper.ExecuteReader(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spBenhAn_Mau_CT_T_GET", MaBA, sttkhoa, stt, stttruyen));
         }
        public override IDataReader GetAllBenhAn_MauBySTTKhoa(String maBA, string dk, bool qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spBenhAn_Mau_GETAll", maBA, dk, qadmin));
        }
        public override IDataReader GetAllBenhAn_Mau_CTBySTTKhoa(String maBA, string dk, bool qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spBenhAn_Mau_CT_GETAll", maBA, dk, qadmin));
        }
        public override IDataReader GetBenhAn_TM(String _maBA, Int32 _sTT, Int32 _sTTKhoa)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spBenhAn_TM_GET", _maBA, _sTT, _sTTKhoa));
        }
        public override IDataReader GetAllBenhAn_TM(string maBA, Byte STTkhoa, bool qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spBenhAn_TM_GETAll", maBA, STTkhoa, qadmin));
        }

        public override IDataReader GetBenhAn_Ngoai(String _maBA, Int32 _sTT, Int32 _sTTKhoa)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spBenhAn_Ngoai_GET", _maBA, _sTT, _sTTKhoa));
        }
        public override IDataReader GetAllBenhAn_Ngoai(string maBA, Byte STTkhoa, bool qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spBenhAn_Ngoai_GETAll", maBA, STTkhoa, qadmin));
        }
        public override IDataReader GetBenhAn_NgoaiKhoa(String _maBA, Int32 _sTT, Int32 _sTTKhoa)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spBenhAn_NgoaiKhoa_GET", _maBA, _sTT, _sTTKhoa));
        }
        public override IDataReader GetAllBenhAn_NgoaiKhoa(string maBA, Byte STTkhoa, bool qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spBenhAn_NgoaiKhoa_GETAll", maBA, STTkhoa, qadmin));
        }
        public override IDataReader GetBenhAn_CoXuongKhop(String _maBA, Int32 _sTT, Int32 _sTTKhoa)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spBenhAn_CoXuongKhop_GET", _maBA, _sTT, _sTTKhoa));
        }
        public override IDataReader GetAllBenhAn_CoXuongKhop(string maBA, Byte STTkhoa, bool qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spBenhAn_CoXuongKhop_GETAll", maBA, STTkhoa, qadmin));
        }
        public override IDataReader GetAllBenhAn_HoaChat(String MaBA, string dk, bool qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spBenhAn_HoaChat_GETAll", MaBA, dk, qadmin));
            // System.Data.SqlClient.SqlCommand cmd = SqlHelper.CreateCommand(SQLConnectionBDNoiT, DatabaseOwner + ObjectQualifier + "spBenhAn_HoaChat_GETAll");
            // cmd.CommandTimeout = 18000;
            // cmd.CommandType = System.Data.CommandType.StoredProcedure;
            // cmd.Parameters.AddWithValue("maba", MaBA);
            // cmd.Parameters.AddWithValue("DK", dk);
            // cmd.Parameters.AddWithValue("qadmin", qadmin);
            // IDataReader dt;
            // dt = (IDataReader)cmd.ExecuteReader(CommandBehavior.CloseConnection);;
            // cmd.Dispose();
            // cmd = null;
            ////// if (SQLConnectionBDNoiT.State == System.Data.ConnectionState.Closed)
            ////     //SQLConnectionBDNoiT.Close(); SQLConnectionBDNoiT.Dispose();
            //// //if (_sqlConnection.State == System.Data.ConnectionState.Closed)
            //// {
            ////     //_sqlConnection.Close(); _sqlConnection.Dispose();
            ////     //_sqlConnection = null;
            //// }
            // return dt;
        }
        public override IDataReader GetAllBenhAn_HoaChatBySTTKhoa(String maBA, string dk, bool qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spBenhAn_HoaChat_GETAll", maBA, dk, qadmin));
            //System.Data.SqlClient.SqlCommand cmd = SqlHelper.CreateCommand(SQLConnectionBDNoiT, DatabaseOwner + ObjectQualifier + "spBenhAn_HoaChat_GETAll");
            //cmd.CommandTimeout = 18000;
            //cmd.CommandType = System.Data.CommandType.StoredProcedure;
            //cmd.Parameters.AddWithValue("maba", maBA);
            //cmd.Parameters.AddWithValue("DK", dk);
            //cmd.Parameters.AddWithValue("qadmin", qadmin);
            //IDataReader dt;
            //dt = (IDataReader)cmd.ExecuteReader(CommandBehavior.CloseConnection);;
            //cmd.Dispose();
            //cmd = null;
            //// if (SQLConnectionBDNoiT.State == System.Data.ConnectionState.Closed)
            //     //SQLConnectionBDNoiT.Close(); SQLConnectionBDNoiT.Dispose();
            // //if (_sqlConnection.State == System.Data.ConnectionState.Closed)
            // {
            //     //_sqlConnection.Close(); _sqlConnection.Dispose();
            //     //_sqlConnection = null;
            // }
            // return dt;
        }
        public override IDataReader GetBenhAn_C(String _maBA, Int32 _sTT, Int32 _sTTKhoa)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spBENHAN_C_GET", _maBA, _sTT, _sTTKhoa));
        }
        public override IDataReader GetBenhAn_PhauThuat(String _maBA, Int32 _sTT, Int32 _sTTKhoa, bool qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spBenhan_PhauThuat_GET", _maBA, _sTT, _sTTKhoa, qadmin));
        }
        public override IDataReader GetBenhAn_Mau(String _maBA, Int32 _sTT, Int32 _sTTKhoa)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spBenhan_Mau_GET", _maBA, _sTT, _sTTKhoa));
        }
        public override IDataReader GetBenhAn_Mau_CT(String _maBA, Int32 _sTT, Int32 _sTTKhoa)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spBenhan_Mau_CT_GET", _maBA, _sTT, _sTTKhoa));
        }
        public override IDataReader GetAllBenhAn_PhauThuat(String _maBA, String _dKien, Boolean _qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spBenhan_PhauThuat_GETAll", _maBA, _dKien, _qadmin));
            //System.Data.SqlClient.SqlCommand cmd = SqlHelper.CreateCommand(SQLConnectionBDNoiT, DatabaseOwner + ObjectQualifier + "spBenhan_PhauThuat_GETAll");
            //cmd.CommandTimeout = 18000;
            //cmd.CommandType = System.Data.CommandType.StoredProcedure;
            //cmd.Parameters.AddWithValue("maba", _maBA);
            //cmd.Parameters.AddWithValue("DK", _dKien);
            //cmd.Parameters.AddWithValue("qadmin", _qadmin);
            //IDataReader dt;
            //dt = (IDataReader)cmd.ExecuteReader(CommandBehavior.CloseConnection);;
            //cmd.Dispose();
            //cmd = null;
            //// if (SQLConnectionBDNoiT.State == System.Data.ConnectionState.Closed)
            //     //SQLConnectionBDNoiT.Close(); SQLConnectionBDNoiT.Dispose();
            // //if (_sqlConnection.State == System.Data.ConnectionState.Closed)
            // {
            //     //_sqlConnection.Close(); _sqlConnection.Dispose();
            //     //_sqlConnection = null;
            // }
            // return dt;
        }
        public override IDataReader GetBenhAn_ThuThuat(String _maBA, Int32 _sTT, Int32 _sTTKhoa, bool qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spBenhan_ThuThuat_GET", _maBA, _sTT, _sTTKhoa, qadmin));
        }
        public override IDataReader GetAllBenhAn_ThuThuat(String _maBA, String _dKien, Boolean _qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spBenhan_ThuThuat_GETAll", _maBA, _dKien, _qadmin));
        }
        public override IDataReader GetAllBenhAn_TTNgoai(String MaBA, string dk, bool qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spBenhAn_TTNgoai_GETAll", MaBA, dk, qadmin));
            // System.Data.SqlClient.SqlCommand cmd = SqlHelper.CreateCommand(SQLConnectionBDNoiT, DatabaseOwner + ObjectQualifier + "spBenhAn_TTNgoaiGETAll");
            // cmd.CommandTimeout = 18000;
            // cmd.CommandType = System.Data.CommandType.StoredProcedure;
            // cmd.Parameters.AddWithValue("maba", MaBA);
            // cmd.Parameters.AddWithValue("DK", dk);
            // cmd.Parameters.AddWithValue("qadmin", qadmin);
            // IDataReader dt;
            // dt = (IDataReader)cmd.ExecuteReader(CommandBehavior.CloseConnection);;
            // cmd.Dispose();
            // cmd = null;
            ////// if (SQLConnectionBDNoiT.State == System.Data.ConnectionState.Closed)
            ////     //SQLConnectionBDNoiT.Close(); SQLConnectionBDNoiT.Dispose();
            //// //if (_sqlConnection.State == System.Data.ConnectionState.Closed)
            //// {
            ////     //_sqlConnection.Close(); _sqlConnection.Dispose();
            ////     //_sqlConnection = null;
            //// }
            // return dt;
        }
        public override IDataReader GetAllBenhAn_TTNgoaiBySTTKhoa(String maBA, string dk, bool qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spBenhAn_TTNgoai_GETAll", maBA, dk, qadmin));
            // System.Data.SqlClient.SqlCommand cmd = SqlHelper.CreateCommand(SQLConnectionBDNoiT, DatabaseOwner + ObjectQualifier + "spBenhAn_TTNgoaiGETAll");
            // cmd.CommandTimeout = 18000;
            // cmd.CommandType = System.Data.CommandType.StoredProcedure;
            // cmd.Parameters.AddWithValue("maba", maBA);
            // cmd.Parameters.AddWithValue("DK", dk);
            // cmd.Parameters.AddWithValue("qadmin", qadmin);
            // IDataReader dt;
            // dt = (IDataReader)cmd.ExecuteReader(CommandBehavior.CloseConnection);;
            // cmd.Dispose();
            // cmd = null;
            ////// if (SQLConnectionBDNoiT.State == System.Data.ConnectionState.Closed)
            ////     //SQLConnectionBDNoiT.Close(); SQLConnectionBDNoiT.Dispose();
            //// //if (_sqlConnection.State == System.Data.ConnectionState.Closed)
            //// {
            ////     //_sqlConnection.Close(); _sqlConnection.Dispose();
            ////     //_sqlConnection = null;
            //// }
            // return dt;
        }
      
        public override IDataReader GetAllBenhAn_C(String MaBA, string dk, bool qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spBenhAn_C_GETAll", MaBA, dk, qadmin));
            // System.Data.SqlClient.SqlCommand cmd = SqlHelper.CreateCommand(SQLConnectionBDNoiT, DatabaseOwner + ObjectQualifier + "spBenhAn_C_GETAll");
            // cmd.CommandTimeout = 18000;
            // cmd.CommandType = System.Data.CommandType.StoredProcedure;
            // cmd.Parameters.AddWithValue("maba", MaBA);
            // cmd.Parameters.AddWithValue("DK", dk);
            // cmd.Parameters.AddWithValue("qadmin", qadmin);
            // IDataReader dt;
            // dt = (IDataReader)cmd.ExecuteReader(CommandBehavior.CloseConnection);;
            // cmd.Dispose();
            // cmd = null;
            ////// if (SQLConnectionBDNoiT.State == System.Data.ConnectionState.Closed)
            ////     //SQLConnectionBDNoiT.Close(); SQLConnectionBDNoiT.Dispose();
            //// //if (_sqlConnection.State == System.Data.ConnectionState.Closed)
            //// {
            ////     //_sqlConnection.Close(); _sqlConnection.Dispose();
            ////     //_sqlConnection = null;
            //// }
            // return dt;
        }
        public override IDataReader GetAllBenhAn_CBySTTKhoa(String maBA, string dk, bool qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spBenhAn_C_GETAll", maBA, dk, qadmin));
            // System.Data.SqlClient.SqlCommand cmd = SqlHelper.CreateCommand(SQLConnectionBDNoiT, DatabaseOwner + ObjectQualifier + "spBenhAn_C_GETAll");
            // cmd.CommandTimeout = 18000;
            // cmd.CommandType = System.Data.CommandType.StoredProcedure;
            // cmd.Parameters.AddWithValue("maba", maBA);
            // cmd.Parameters.AddWithValue("DK", dk);
            // cmd.Parameters.AddWithValue("qadmin", qadmin);
            // IDataReader dt;
            // dt = (IDataReader)cmd.ExecuteReader(CommandBehavior.CloseConnection);;
            // cmd.Dispose();
            // cmd = null;
            ////// if (SQLConnectionBDNoiT.State == System.Data.ConnectionState.Closed)
            ////     //SQLConnectionBDNoiT.Close(); SQLConnectionBDNoiT.Dispose();
            //// //if (_sqlConnection.State == System.Data.ConnectionState.Closed)
            //// {
            ////     //_sqlConnection.Close(); _sqlConnection.Dispose();
            ////     //_sqlConnection = null;
            //// }
            // return dt;
        }
        public override IDataReader GetBenhAn_PhauThuat_TV(String _maBA, Int32 _sTT, Int32 _sTTKhoa, Int32 _sTTTV)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spBenhAn_PhauThuat_TV_GET", _maBA, _sTT, _sTTKhoa, _sTTTV));
        }

        public override IDataReader GetAllBenhAn_DongTien(String MaBA, string dk, bool qadmin)
        {
            // return ((IDataReader)SqlHelper.ExecuteReader(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spBenhAn_DongTien_GETAll", MaBA, dk, qadmin));
            System.Data.SqlClient.SqlCommand cmd;
           
                cmd = SqlHelper.CreateCommand(SQLConnectionBDNoiT, DatabaseOwner + ObjectQualifier + "spBenhAn_DongTien_GETAll");
            cmd.CommandTimeout = 18000;

            cmd.CommandType = System.Data.CommandType.StoredProcedure;
            cmd.Parameters.AddWithValue("MaBA", MaBA);

            cmd.Parameters.AddWithValue("DK", dk);
            cmd.Parameters.AddWithValue("qadmin", qadmin);

            IDataReader dt;
            dt = (IDataReader)cmd.ExecuteReader(CommandBehavior.CloseConnection);
            cmd.Dispose();
            cmd = null;
            return dt;
        }
        public override IDataReader GetAllBenhAn_DongTien(String MaBA, string dk, bool qadmin, byte loaikq)
        {
            // return ((IDataReader)SqlHelper.ExecuteReader(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spBenhAn_DongTien_GETAll", MaBA, dk, qadmin));
            System.Data.SqlClient.SqlCommand cmd ;
        if (loaikq ==1)
             cmd = SqlHelper.CreateCommand(SQLConnectionDataChuyenBN, DatabaseOwner + ObjectQualifier + "spBenhAn_DongTien_GETAll");
        else
             cmd = SqlHelper.CreateCommand(SQLConnectionBDNoiT, DatabaseOwner + ObjectQualifier + "spBenhAn_DongTien_GETAll");
            cmd.CommandTimeout = 18000;

            cmd.CommandType = System.Data.CommandType.StoredProcedure;
            cmd.Parameters.AddWithValue("MaBA", MaBA);

            cmd.Parameters.AddWithValue("DK", dk);
            cmd.Parameters.AddWithValue("qadmin", qadmin);

            IDataReader dt;
            dt = (IDataReader)cmd.ExecuteReader(CommandBehavior.CloseConnection);
            cmd.Dispose();
            cmd = null;
            return dt;
        }

        public override IDataReader BenhAn_DongTien_SearchInfo(String _maBA, String _dK, Boolean _Qadmin)
        {
            //  return ((IDataReader)SqlHelper.ExecuteReader(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spBenhAn_TimKiem_Tien", _maBA, _dK, _Qadmin));
            System.Data.SqlClient.SqlCommand cmd = SqlHelper.CreateCommand(SQLConnectionBDNoiT, DatabaseOwner + ObjectQualifier + "spBenhAn_TimKiem_Tien");
            cmd.CommandTimeout = 18000;

            cmd.CommandType = System.Data.CommandType.StoredProcedure;
            cmd.Parameters.AddWithValue("MaBA", _maBA);

            cmd.Parameters.AddWithValue("DK", (_dK == null ? "" : _dK));
            cmd.Parameters.AddWithValue("Qadmin", _Qadmin);
            IDataReader dt;
            dt = (IDataReader)cmd.ExecuteReader(CommandBehavior.CloseConnection);
            cmd.Dispose();
            cmd = null;
            return dt;
        }
        public override IDataReader GetAllBenhAn_DongTienBySTTKhoa(string maba, string dk, bool qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spBenhAn_DongTien_GETAll", maba, dk, qadmin));
        }
        public override IDataReader GetBenhAn_XN(Int32 _sTT, String _maBA, Int32 _sTTKhoa, bool qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spBENHAN_XN_GET", _sTT, _maBA, _sTTKhoa, qadmin));
        }
        public override IDataReader GetBenhAn_XN_GetAll(String _maBA, int sttKhoa, String _dKien, bool qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spBENHAN_XN_GETALL", _maBA, sttKhoa, _dKien, qadmin));
        }
        public override IDataReader GetBenhAn_XN_C(String _maBA, Int32 _sTTKhoa, Int32 _sTT, Int32 _sTTCS)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spBENHAN_XN_C_GET", _maBA, _sTTKhoa, _sTT, _sTTCS));
        }
        public override IDataReader GetAllBenhAn_HoaDon(DateTime tungay, DateTime denngay, byte loai, string dk)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spBenhAn_HoaDon_GETAll", tungay, denngay, loai, dk));
        }
        public override IDataReader GetAllBenhAn_File(String MaBA, int STTKhoa, int STT, string dk, bool qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spBenhAn_File_GETAll", MaBA, STTKhoa, STT, dk, qadmin));
        }
        public override string spBenhAn_Giuong_KT(String SoGiuong, string makhoa, string tuNgay, string denNgay)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spBenhAn_Giuong_KT", SoGiuong, makhoa, tuNgay,denNgay ));
        
        }
        public override IDataReader GetAllBenhAn_Giuong(String MaBA, string dk, bool qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spBenhan_Giuong_GETAll", MaBA, dk, qadmin));
            // System.Data.SqlClient.SqlCommand cmd = SqlHelper.CreateCommand(SQLConnectionBDNoiT, DatabaseOwner + ObjectQualifier + "spBenhan_Giuong_GETAll");
            // cmd.CommandTimeout = 18000;
            // cmd.CommandType = System.Data.CommandType.StoredProcedure;
            // cmd.Parameters.AddWithValue("maba", MaBA);
            // cmd.Parameters.AddWithValue("DK", dk);
            // cmd.Parameters.AddWithValue("qadmin", qadmin);
            // IDataReader dt;
            // dt = (IDataReader)cmd.ExecuteReader(CommandBehavior.CloseConnection);;
            // cmd.Dispose();
            // cmd = null;
            ////// if (SQLConnectionBDNoiT.State == System.Data.ConnectionState.Closed)
            ////     //SQLConnectionBDNoiT.Close(); SQLConnectionBDNoiT.Dispose();
            //// //if (_sqlConnection.State == System.Data.ConnectionState.Closed)
            //// {
            ////     //_sqlConnection.Close(); _sqlConnection.Dispose();
            ////     //_sqlConnection = null;
            //// }
            // return dt;
        }
        public override IDataReader GetAllBenhAn_GiuongBySTTKhoa(string maba, string dk, bool qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spBenhan_Giuong_GETAll", maba, dk, qadmin));
            // System.Data.SqlClient.SqlCommand cmd = SqlHelper.CreateCommand(SQLConnectionBDNoiT, DatabaseOwner + ObjectQualifier + "spBenhan_Giuong_GETAll");
            // cmd.CommandTimeout = 18000;
            // cmd.CommandType = System.Data.CommandType.StoredProcedure;
            // cmd.Parameters.AddWithValue("maba", maba);
            // cmd.Parameters.AddWithValue("DK", dk);
            // cmd.Parameters.AddWithValue("qadmin", qadmin);
            // IDataReader dt;
            // dt = (IDataReader)cmd.ExecuteReader(CommandBehavior.CloseConnection);;
            // cmd.Dispose();
            // cmd = null;
            ////// if (SQLConnectionBDNoiT.State == System.Data.ConnectionState.Closed)
            ////     //SQLConnectionBDNoiT.Close(); SQLConnectionBDNoiT.Dispose();
            //// //if (_sqlConnection.State == System.Data.ConnectionState.Closed)
            //// {
            ////     //_sqlConnection.Close(); _sqlConnection.Dispose();
            ////     //_sqlConnection = null;
            //// }
            // return dt;
        }
        public override IDataReader GetAllBenhAn_XN_Gets(Boolean _qadmin, string _maba, Byte _DaTT, DateTime _ngayYC, byte _loai, string _dk, int _stt, int _sttkhoa)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spBenhAn_XN_Gets", _qadmin, _maba, _DaTT, _ngayYC, _loai, _dk, _stt, _sttkhoa));
        }
        public override IDataReader GetAllBenhAn_XN_Gets(Boolean _qadmin, string _maba, int _sttkhoa, string _dk)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spBenhAn_XN_GetsTT", _qadmin, _maba, _sttkhoa, _dk));
        }
        public override DataSet CrBenhAn_XN_Gets(Boolean _qadmin, string _maba, int _sttkhoa, string _dk)
        {
          //  return ((IDataReader)SqlHelper.ExecuteReader(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spBenhAn_XN_GetsTT", _qadmin, _maba, _sttkhoa, _dk));

            DataSet ds = new DataSet("CrBenhAn_XN_Gets");
            string[] s = { "CrBenhAn_XN_Gets" };
            SqlHelper.FillDataset(SQLConnectionDataNoiT, DatabaseOwner + ObjectQualifier + "spBenhAn_XN_GetsTT", ds, s, _qadmin, _maba, _sttkhoa, _dk);
            
            return ds;
        }
        public override IDataReader GetBenhAn_XN_Gets(string _maba, int _sttkhoa, Int32 _sTT, Byte _Loai)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spBenhAn_GETsMABN", _maba, _sTT, _Loai));
        }
        public override string spKhamBenh_DongTien_KT(string _masokham, string _sothe,byte _loai)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spKhamBenh_DongTien_KT",_masokham , _sothe,_loai ));
           
        }
        public override IDataReader GetAllKhamBenh_KeNgoai(String MaBA, string dk, bool qadmin)
        {
            //return ((IDataReader)SqlHelper.ExecuteReader( ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spKhamBenh_KeNgoai_GETAll", MaBA, dk, qadmin));
            System.Data.SqlClient.SqlCommand cmd = SqlHelper.CreateCommand(SQLConnectionBD, DatabaseOwner + ObjectQualifier + "spKhamBenh_KeNgoai_GETAll");
            cmd.CommandTimeout = 18000;
            cmd.CommandType = System.Data.CommandType.StoredProcedure;
            cmd.Parameters.AddWithValue("masokham", MaBA);
            cmd.Parameters.AddWithValue("DK", dk);
            cmd.Parameters.AddWithValue("qadmin", qadmin);
            IDataReader dt;
            dt = (IDataReader)cmd.ExecuteReader(CommandBehavior.CloseConnection); ;
            cmd.Dispose();
            cmd = null;
            //// if (SQLConnectionBDNoiT.State == System.Data.ConnectionState.Closed)
            //     //SQLConnectionBDNoiT.Close(); SQLConnectionBDNoiT.Dispose();
            // //if (_sqlConnection.State == System.Data.ConnectionState.Closed)
            // {
            //     //_sqlConnection.Close(); _sqlConnection.Dispose();
            //     //_sqlConnection = null;
            // }
            return dt;
        }
        public override IDataReader GetAllBenhan_ThuocSD_DYDYCInfo(String MaBA, int STTKhoa, String dk, bool qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spBenhan_ThuocSD_DY_GETS", MaBA, STTKhoa, dk, qadmin));
        }
        public override IDataReader GetAllKhamBenh_ThuocSD_DYDYCInfo(String MaBA, int STTKhoa, String dk, bool qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spKhamBenh_ThuocSD_DYC_GETAll", MaBA, STTKhoa, dk, qadmin));
        }
        public override IDataReader GetBenhAn_ThuocSD_DY(String _maBA, Int32 _sTT, Int32 _sTTKhoa, bool qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spBenhan_ThuocSD_DY_GET", _maBA, _sTT, _sTTKhoa, qadmin));
        }
        public override IDataReader GetBenhAn_ThuocSD_DY_C(String _maBA, Int32 _sTT, Int32 _sTTKhoa, Int32 _sTTThuoc)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spBenhan_ThuocSD_DYC_GET", _maBA, _sTT, _sTTKhoa, _sTTThuoc));
        }
        public override IDataReader GetBenhAn_CTCH(String _maBA, Int32 _sTT, Int32 _sTTKhoa)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spBenhAn_CTCH_GET", _maBA, _sTT, _sTTKhoa));
        }
        public override IDataReader GetAllBenhAn_CTCH(string maBA, Byte STTkhoa, bool qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spBenhAn_CTCH_GETAll", maBA, STTkhoa, qadmin));
        }
        public override IDataReader GetBenhAn_Noi(String _maBA, Int32 _sTT, Int32 _sTTKhoa)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spBenhAn_Noi_GET", _maBA, _sTT, _sTTKhoa));
        }
        public override IDataReader GetBenhAn_GPB(String _maBA, Int32 _sTT, Int32 _sTTKhoa)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spBenhAn_GPB_GET", _maBA, _sTT, _sTTKhoa));
        }
        public override IDataReader GetAllBenhAn_Noi(string maBA, Byte STTkhoa, bool qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spBenhAn_Noi_GETAll", maBA, STTkhoa, qadmin));
        }
        public override IDataReader GetBenhAn_DY(String _maBA, Int32 _sTT, Int32 _sTTKhoa)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spBenhAn_DY_GET", _maBA, _sTT, _sTTKhoa));
        }
      
        public override IDataReader GetAllBenhAn_DY(string maBA, Byte STTkhoa, bool qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spBenhAn_DY_GETAll", maBA, STTkhoa, qadmin));
        }
        public override IDataReader GetBenhAn_RHM(String _maBA, Int32 _sTT, Int32 _sTTKhoa)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spBenhAn_RHM_GET", _maBA, _sTT, _sTTKhoa));
        }
        public override IDataReader GetAllBenhAn_RHM(string maBA, Byte STTkhoa, bool qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spBenhAn_RHM_GETAll", maBA, STTkhoa, qadmin));
        }
        public override IDataReader GetBenhAn_BenhMau(String _maBA, Int32 _sTT, Int32 _sTTKhoa)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spBenhAn_BenhMau_GET", _maBA, _sTT, _sTTKhoa));
        }
        public override IDataReader GetAllBenhAn_BenhMau(string maBA, Byte STTkhoa, bool qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spBenhAn_BenhMau_GETAll", maBA, STTkhoa, qadmin));
        }


        //Phu Khoa Hue
        public override IDataReader GetBenhAn_PhuKhoaH(String _maBA, Int32 _sTT, Int32 _sTTKhoa)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spBenhAn_PhuKhoaH_GET", _maBA, _sTT, _sTTKhoa));
        }
        public override IDataReader GetAllBenhAn_PhuKhoaH(string maBA, Byte STTkhoa, bool qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spBenhAn_PhuKhoaH_GETAll", maBA, STTkhoa, qadmin));
        }
        ////Ngoai Khoa Hue
        //public override IDataReader GetBenhAn_NgoaiKhoa(String _maBA, Int32 _sTT, Int32 _sTTKhoa)
        //{
        //    return ((IDataReader)SqlHelper.ExecuteReader(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spBenhAn_NgoaiKhoa_GET", _maBA, _sTT, _sTTKhoa));
        //}
        //public override IDataReader GetAllBenhAn_NgoaiKhoa(string maBA, Byte STTkhoa, bool qadmin)
        //{
        //    return ((IDataReader)SqlHelper.ExecuteReader(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spBenhAn_NgoaiKhoa_GETAll", maBA, STTkhoa, qadmin));
        //}

        //Nhi Khoa Hue
        public override IDataReader GetBenhAn_NhiKhoa(String _maBA, Int32 _sTT, Int32 _sTTKhoa)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spBenhAn_NhiKhoa_GET", _maBA, _sTT, _sTTKhoa));
        }
        public override IDataReader GetAllBenhAn_NhiKhoa(string maBA, Byte STTkhoa, bool qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spBenhAn_NhiKhoa_GETAll", maBA, STTkhoa, qadmin));
        }
        ////Tam Than Hue
        //public override IDataReader GetBenhAn_TamThanH(String _maBA, Int32 _sTT, Int32 _sTTKhoa)
        //{
        //    return ((IDataReader)SqlHelper.ExecuteReader(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spBenhAn_TamThanH_GET", _maBA, _sTT, _sTTKhoa));
        //}
        //public override IDataReader GetAllBenhAn_TamThanH(string maBA, Byte STTkhoa, bool qadmin)
        //{
        //    return ((IDataReader)SqlHelper.ExecuteReader(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spBenhAn_TamThanH_GETAll", maBA, STTkhoa, qadmin));
        //}
        ////Da Lieu Hue
        //public override IDataReader GetBenhAn_DaLieu(String _maBA, Int32 _sTT, Int32 _sTTKhoa)
        //{
        //    return ((IDataReader)SqlHelper.ExecuteReader(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spBenhAn_DaLieu_GET", _maBA, _sTT, _sTTKhoa));
        //}
        //public override IDataReader GetAllBenhAn_DaLieu(string maBA, Byte STTkhoa, bool qadmin)
        //{
        //    return ((IDataReader)SqlHelper.ExecuteReader(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spBenhAn_DaLieu_GETAll", maBA, STTkhoa, qadmin));
        //}
        ////Mat Hue
        //public override IDataReader GetBenhAn_MatH(String _maBA, Int32 _sTT, Int32 _sTTKhoa)
        //{
        //    return ((IDataReader)SqlHelper.ExecuteReader(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spBenhAn_MatH_GET", _maBA, _sTT, _sTTKhoa));
        //}
        //public override IDataReader GetAllBenhAn_MatH(string maBA, Byte STTkhoa, bool qadmin)
        //{
        //    return ((IDataReader)SqlHelper.ExecuteReader(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spBenhAn_MatH_GETAll", maBA, STTkhoa, qadmin));
        //}
        ////Tai Mui Hong Hue
        //public override IDataReader GetBenhAn_TMHH(String _maBA, Int32 _sTT, Int32 _sTTKhoa)
        //{
        //    return ((IDataReader)SqlHelper.ExecuteReader(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spBenhAn_TMHH_GET", _maBA, _sTT, _sTTKhoa));
        //}
        //public override IDataReader GetAllBenhAn_TMHH(string maBA, Byte STTkhoa, bool qadmin)
        //{
        //    return ((IDataReader)SqlHelper.ExecuteReader(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spBenhAn_TMHH_GETAll", maBA, STTkhoa, qadmin));
        //}
        ////Phuc hoi chuc nang Hue
        //public override IDataReader GetBenhAn_PHCN(String _maBA, Int32 _sTT, Int32 _sTTKhoa)
        //{
        //    return ((IDataReader)SqlHelper.ExecuteReader(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spBenhAn_PHCN_GET", _maBA, _sTT, _sTTKhoa));
        //}
        //public override IDataReader GetAllBenhAn_PHCN(string maBA, Byte STTkhoa, bool qadmin)
        //{
        //    return ((IDataReader)SqlHelper.ExecuteReader(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spBenhAn_PHCN_GETAll", maBA, STTkhoa, qadmin));
        //}
        //YHCT Noi Tru Hue
        public override IDataReader GetBenhAn_YHCT(String _maBA, Int32 _sTT, Int32 _sTTKhoa)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spBenhAn_YHCT_GET", _maBA, _sTT, _sTTKhoa));
        }
        public override IDataReader GetAllBenhAn_YHCT(string maBA, Byte STTkhoa, bool qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spBenhAn_YHCT_GETAll", maBA, STTkhoa, qadmin));
        }





         public override IDataReader GetBenhAn_Bong(String _maBA, Int32 _sTT, Int32 _sTTKhoa)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spBenhAn_Bong_GET", _maBA, _sTT, _sTTKhoa));
        }
        public override IDataReader GetAllBenhAn_Bong(string maBA, Byte STTkhoa, bool qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spBenhAn_Bong_GETAll", maBA, STTkhoa, qadmin));
        }
         public override IDataReader GetBenhAn_TamThan(String _maBA, Int32 _sTT, Int32 _sTTKhoa)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spBenhAn_TamThan_GET", _maBA, _sTT, _sTTKhoa));
        }
        public override IDataReader GetAllBenhAn_TamThan(string maBA, Byte STTkhoa, bool qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spBenhAn_TamThan_GETAll", maBA, STTkhoa, qadmin));
        }
         public override IDataReader GetBenhAn_UB(String _maBA, Int32 _sTT, Int32 _sTTKhoa)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spBenhAn_UB_GET", _maBA, _sTT, _sTTKhoa));
        }
        public override IDataReader GetAllBenhAn_UB(string maBA, Byte STTkhoa, bool qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spBenhAn_UB_GETAll", maBA, STTkhoa, qadmin));
        }
         public override IDataReader GetBenhAn_Lao(String _maBA, Int32 _sTT, Int32 _sTTKhoa)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spBenhAn_Lao_GET", _maBA, _sTT, _sTTKhoa));
        }
        public override IDataReader GetAllBenhAn_Lao(string maBA, Byte STTkhoa, bool qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spBenhAn_Lao_GETAll", maBA, STTkhoa, qadmin));
        }
         public override IDataReader GetBenhAn_PHCN(String _maBA, Int32 _sTT, Int32 _sTTKhoa)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spBenhAn_PHCN_GET", _maBA, _sTT, _sTTKhoa));
        }
        public override IDataReader GetAllBenhAn_PHCN(string maBA, Byte STTkhoa, bool qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spBenhAn_PHCN_GETAll", maBA, STTkhoa, qadmin));
        }
        // public override IDataReader GetBenhAn_RHM(String _maBA, Int32 _sTT, Int32 _sTTKhoa)
        //{
        //    return ((IDataReader)SqlHelper.ExecuteReader(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spBenhAn_RHM_GET", _maBA, _sTT, _sTTKhoa));
        //}
        //public override IDataReader GetAllBenhAn_RHM(string maBA, Byte STTkhoa, bool qadmin)
        //{
        //    return ((IDataReader)SqlHelper.ExecuteReader(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spBenhAn_RHM_GETAll", maBA, STTkhoa, qadmin));
        //}
         public override IDataReader GetBenhAn_TruyenNhiem(String _maBA, Int32 _sTT, Int32 _sTTKhoa)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spBenhAn_TruyenNhiem_GET", _maBA, _sTT, _sTTKhoa));
        }
        public override IDataReader GetAllBenhAn_TruyenNhiem(string maBA, Byte STTkhoa, bool qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spBenhAn_TruyenNhiem_GETAll", maBA, STTkhoa, qadmin));
        }
         public override IDataReader GetBenhAn_DaLieu(String _maBA, Int32 _sTT, Int32 _sTTKhoa)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spBenhAn_DaLieu_GET", _maBA, _sTT, _sTTKhoa));
        }
        public override IDataReader GetAllBenhAn_DaLieu(string maBA, Byte STTkhoa, bool qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spBenhAn_DaLieu_GETAll", maBA, STTkhoa, qadmin));
        }
        public override IDataReader GetBenhAn_San(String _maBA, Int32 _sTT, Int32 _sTTKhoa)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spBenhAn_San_GET", _maBA, _sTT, _sTTKhoa));
        }
        public override IDataReader GetAllBenhAn_San(string maBA, Byte STTkhoa, bool qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spBenhAn_San_GETAll", maBA, STTkhoa, qadmin));
        }
        public override IDataReader GetBenhAn_San_Kham(String _maBA)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spBenhAn_San_Kham_GET", _maBA));
        }
        public override IDataReader GetAllBenhAn_San_Kham(string maBA)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spBenhAn_San_Kham_GETAll", maBA));
        }
        public override IDataReader GetBenhAn_San_De(String _maBA, Int32 _sTT, Int32 _sTTKhoa)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spBenhAn_San_De_GET", _maBA, _sTT, _sTTKhoa));
        }
        public override IDataReader GetAllBenhAn_San_De(string maBA, Byte STTkhoa, bool qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spBenhAn_San_De_GETAll", maBA, STTkhoa, qadmin));
        }
        public override IDataReader GetBenhAn_TMH(String _maBA, Int32 _sTT, Int32 _sTTKhoa)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spBenhAn_TMH_GET", _maBA, _sTT, _sTTKhoa));
        }
        public override IDataReader GetAllBenhAn_TMH(string maBA, Byte STTkhoa, bool qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spBenhAn_TMH_GETAll", maBA, STTkhoa, qadmin));
        }
        public override IDataReader GetBenhAn_VLTL(String _maBA, Int32 _sTT, Int32 _sTTKhoa)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spBenhAn_VLTL_GET", _maBA, _sTT, _sTTKhoa));
        }
        public override IDataReader GetAllBenhAn_VLTL(string maBA, Byte STTkhoa, bool qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spBenhAn_VLTL_GETAll", maBA, STTkhoa, qadmin));
        }
        public override IDataReader GetBenhAn_Mat(String _maBA, Int32 _sTT, Int32 _sTTKhoa)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spBenhAn_Mat_GET", _maBA, _sTT, _sTTKhoa));
        }
        public override IDataReader GetAllBenhAn_Mat(string maBA, Byte STTkhoa, bool qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spBenhAn_Mat_GETAll", maBA, STTkhoa, qadmin));
        }
        public override IDataReader GetAllDMLoaiHDListcb(byte loaiBC)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spDMNoiTru", loaiBC));
        }
        public override IDataReader GetBenhAn_Phu(String _maBA, Int32 _sTT, Int32 _sTTKhoa)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spBenhAn_Phu_GET", _maBA, _sTT, _sTTKhoa));
        }
        public override IDataReader GetAllBenhAn_Phu(string maBA, Byte STTkhoa, bool qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spBenhAn_Phu_GETAll", maBA, STTkhoa, qadmin));
        }
        public override IDataReader GetBenhNhan_QTSinhTruong(String _maBN)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spBenhNhan_QTSinhTruong_GET", _maBN));
        }
        public override IDataReader GetBenhNhan_TienSu_San(String _maBN)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spBenhNhan_TienSu_San_GET", _maBN));
        }
        public override IDataReader GetAllBenhNhan_TienSu_San(String _dKien, bool qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spBenhNhan_TienSu_San_GETALL", _dKien, qadmin));
        }
        public override IDataReader GetBenhNhan_TienSu_San_C(String _maBN, Int32 _sTT)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spBenhNhan_TienSu_San_C_GET", _maBN, _sTT));
        }

        public override IDataReader GetBenhAn_SoSinh(String _maBA, Int32 _sTT, Int32 _sTTKhoa)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spBenhAn_SoSinh_GET", _maBA, _sTT, _sTTKhoa));
        }
        public override IDataReader GetAllBenhAn_SoSinh(string maBA, Byte STTkhoa, bool qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spBenhAn_SoSinh_GETAll", maBA, STTkhoa, qadmin));
        }
        public override IDataReader GetBenhAn_San_TK(String _maBA, Int32 _sTT)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spBenhAn_San_TK_GET", _maBA, _sTT));
        }
        public override IDataReader GetAllBenhAn_San_TK(String _maBA, String _dk, bool qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spBenhAn_San_TK_GETAll", _maBA, _dk, qadmin));
        }
        public override IDataReader GetAllBenhAn_SoSinh_LongNguc(String _maBA, Int32 _sTTKhoa, Int32 _sTTK)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spBenhAn_SoSinh_LongNguc_GETAll", _maBA, _sTTKhoa, _sTTK));
        }
        public override IDataReader GetAllBenhAn_San_TK_Apgar(String _maBA, Int32 _sTTDe)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spBenhAn_San_TK_Apgar_GETAll", _maBA, _sTTDe));
        }
        public override IDataReader GetSoChamCong_TV(String _maSCC, Int32 _sTT)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spSoChamCong_TV_GET", _maSCC, _sTT));
        }

        public override IDataReader GetSoChamCong(String _maSCC, bool qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spSOCHAMCONG_GET", _maSCC, qadmin));
        }
        public override IDataReader GetAllSoChamCong(Boolean _qadmin, String _maKhoa, DateTime _tuNgay, DateTime _denNgay, String _dKien)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spSOCHAMCONG_GETALL", _qadmin, _maKhoa, _tuNgay, _denNgay, _dKien));
        }

        public override IDataReader GetAllBenhAn_MienGiam(String MaBA, string dk, bool qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spBenhAn_MienGiam_GETAll", MaBA, dk, qadmin));
        }
        public override IDataReader GetAllBenhAn_MienGiamBySTTKhoa(string maba, string dk, bool qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spBenhAn_MienGiam_GETAll", maba, dk, qadmin));
        }

        #endregion

        #region Find list

       
      

        #region Benh an HSBA_MuonTra
        public override String InsertBenhAn_HSBA_MuonTra(String _maBA, String _nguoiMuon, String _khoaMuon, String _ghiChu, String _maMay, String _nguoiLap)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(SQLConnectionDataNoiT, DatabaseOwner + ObjectQualifier + "spBenhAn_HSBA_MuonTra_Create", _maBA, _nguoiMuon, _khoaMuon, _ghiChu, _maMay, _nguoiLap));
        }
        public override void UpdateBenhAn_HSBA_MuonTra(String _maMuon, String _maBA, Boolean _Muon, SmartDate _ngayMuon, SmartDate _ngayTra, String _nguoiMuon, String _khoaMuon, String _ghiChu, String _nguoiSD, Boolean _huy, String _maMay)
        {
            SqlHelper.ExecuteNonQuery(SQLConnectionDataNoiT, DatabaseOwner + ObjectQualifier + "spBenhAn_HSBA_MuonTra_Update", _maMuon, _maBA, _Muon, _ngayMuon.DBValue, _ngayTra.DBValue, _nguoiMuon, _khoaMuon, _ghiChu, _nguoiSD, _huy, _maMay);
        }
        public override void DeleteBenhAn_HSBA_MuonTra(String _maMay, String _nguoiSD, String _maBA, String _maMuon)
        {
            SqlHelper.ExecuteNonQuery(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spBenhAn_HSBA_MuonTra_Deleted", _maMay, _nguoiSD, _maBA, _maMuon);
        }
        public override IDataReader GetAllBenhAn_HSBA_MuonTra(String MaBA, bool qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spBenhAn_HSBA_MuonTra_GETAll", MaBA, qadmin));
        }
        public override IDataReader GetAllBenhAn_HSBA_MuonTraByPM(String MaPM, String DK, Boolean Tra, Boolean Qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spBenhAn_HSBA_MuonTra_GETAllByPM", MaPM, DK, Tra, Qadmin));
        }
        public override IDataReader GetBenhAn_HSBA_MuonTra(String _maBA, String _maMuon, bool qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spBenhan_HSBA_MuonTra_GET", _maBA, _maMuon, qadmin));
        }
        public override IDataReader FindBenhAn_QLHSBA(string _maDT,
      string _MaBN,
      string _Hoten,
      bool _DungTen,
      string _SoThe,
      string _MaBV,
      DateTime _GiaTriDN,
      string _DiaChi,
      string _DienThoai,
      string _DTDD,
      string _DTCQ,
      string _Mail,
      Byte _Tuoi,
      DateTime _NgaySinh,
      bool _GT,
      string _BaoTin,
      string _MaQG,
      string _MaTinh,
      string _MaHuyen,
      string _MaNN,
      string _MaBA,
      string _MABENH,
      string _MABAQL,
      string _MaLoaiBA,
      DateTime _TuNgayYC,
      DateTime _DenNgayYC,
      string _DK,
      bool qadmin,
      DateTime _DenNgaysinh,
      bool _YCDANGDK,
      bool _YCNGAYSINH, int PageIndex, int PageSize,
      bool NoiTru, bool CoSoLuuTru, bool DaMuon, string SoLuuTru, DateTime NgayRVTu, DateTime NgayRVDen, bool NTBN)
        {
            //DateTime __GiaTriDN = _GiaTriDN;
            //if (_GiaTriDN.ToShortDateString() == "01/01/0001")
            //{ __GiaTriDN = DateTime.Parse("01/01/1753"); };
            //DateTime __DenNgaysinh = _DenNgaysinh;
            //if (_DenNgaysinh.ToShortDateString() == "01/01/0001")
            //{ __DenNgaysinh = DateTime.Parse("01/01/1753"); };
            //DateTime __NgaySinh = _NgaySinh;
            //if (_NgaySinh.ToShortDateString() == "01/01/0001")
            //{ __NgaySinh = DateTime.Parse("01/01/1753"); };
            //DateTime __TuNgayYC = _TuNgayYC;
            //if (_TuNgayYC.ToShortDateString() == "01/01/0001")
            //{ __TuNgayYC = DateTime.Parse("01/01/1753"); };
            //DateTime __DenNgayYC = _DenNgayYC;
            //if (_DenNgayYC.ToShortDateString() == "01/01/0001")
            //{ __DenNgayYC = DateTime.Parse("01/01/1753"); };

            //try { 
            //_GiaTriDN = DateTime.Parse(_GiaTriDN.ToString("MM/dd/yyyy"));
            //_NgaySinh = DateTime.Parse(_NgaySinh.ToString("MM/dd/yyyy"));
            //_DenNgaysinh = DateTime.Parse(_DenNgaysinh.ToString("MM/dd/yyyy"));
            //_TuNgayYC = DateTime.Parse(_TuNgayYC.ToString("MM/dd/yyyy"));
            //_DenNgaysinh = DateTime.Parse(_DenNgaysinh.ToString("MM/dd/yyyy"));
            //_GiaTriDN = DateTime.Parse(_GiaTriDN.ToString("dd/MM/yyyy"));
            //_NgaySinh = DateTime.Parse(_NgaySinh.ToString("dd/MM/yyyy"));
            //_DenNgaysinh = DateTime.Parse(_DenNgaysinh.ToString("dd/MM/yyyy"));
            //_TuNgayYC = DateTime.Parse(_TuNgayYC.ToString("dd/MM/yyyy"));
            //_DenNgaysinh = DateTime.Parse(_DenNgaysinh.ToString("dd/MM/yyyy")); 
            System.Data.SqlClient.SqlCommand cmd = SqlHelper.CreateCommand(SQLConnectionBDNoiT, DatabaseOwner + ObjectQualifier + "spBENHAN_QL_SEARCH_Paging");
            cmd.CommandTimeout = 18000;

            cmd.CommandType = System.Data.CommandType.StoredProcedure;
            cmd.Parameters.AddWithValue("MADT", _maDT);
            cmd.Parameters.AddWithValue("MaBN", _MaBN);
            cmd.Parameters.AddWithValue("Hoten", _Hoten);
            cmd.Parameters.AddWithValue("DungTen", _DungTen);
            cmd.Parameters.AddWithValue("SoThe", _SoThe);
            cmd.Parameters.AddWithValue("MaBV", _MaBV);
            cmd.Parameters.AddWithValue("GiaTriDN", _GiaTriDN);
            cmd.Parameters.AddWithValue("DiaChi", _DiaChi);
            cmd.Parameters.AddWithValue("DienThoai", _DienThoai);
            cmd.Parameters.AddWithValue("DTDD", _DTDD);
            cmd.Parameters.AddWithValue("DTCQ", _DTCQ);
            cmd.Parameters.AddWithValue("Mail", _Mail);
            cmd.Parameters.AddWithValue("Tuoi", _Tuoi);
            cmd.Parameters.AddWithValue("TUNgaySinh", _NgaySinh);
            cmd.Parameters.AddWithValue("GT", _GT);
            cmd.Parameters.AddWithValue("BaoTin", _BaoTin);
            cmd.Parameters.AddWithValue("MaQG", _MaQG);
            cmd.Parameters.AddWithValue("MaTinh", _MaTinh);
            cmd.Parameters.AddWithValue("MaHuyen", _MaHuyen);
            cmd.Parameters.AddWithValue("MaNN", _MaNN);
            cmd.Parameters.AddWithValue("MaBA", _MaBA);
            cmd.Parameters.AddWithValue("MABENH", _MABENH);
            cmd.Parameters.AddWithValue("MABAQL", _MABAQL);
            cmd.Parameters.AddWithValue("MaLoaiBA", _MaLoaiBA);
            cmd.Parameters.AddWithValue("TuNgayYC", _TuNgayYC);
            cmd.Parameters.AddWithValue("DenNgayYC", _DenNgayYC);
            cmd.Parameters.AddWithValue("DK", _DK);
            cmd.Parameters.AddWithValue("qadmin", qadmin);
            cmd.Parameters.AddWithValue("DenNgaysinh", _DenNgaysinh);
            cmd.Parameters.AddWithValue("YCRAVIEN", _YCDANGDK);
            cmd.Parameters.AddWithValue("YCNGAYSINH", _YCNGAYSINH);
            cmd.Parameters.AddWithValue("PageIndex", PageIndex);
            cmd.Parameters.AddWithValue("PageSize", PageSize);
            cmd.Parameters.AddWithValue("NoiTru", NoiTru);
            cmd.Parameters.AddWithValue("CoSoLuuTru", CoSoLuuTru);
            cmd.Parameters.AddWithValue("DaMuon", DaMuon);
            cmd.Parameters.AddWithValue("SoLuuTru", SoLuuTru);
            cmd.Parameters.AddWithValue("NgayRVTu", NgayRVTu);
            cmd.Parameters.AddWithValue("NgayRVDen", NgayRVDen);
            cmd.Parameters.AddWithValue("NTBN", NTBN);
            IDataReader _iddata;
            _iddata = (IDataReader)cmd.ExecuteReader(CommandBehavior.CloseConnection);
            cmd.Dispose();
            cmd = null;

            //}
            //catch (Exception ex)
            //{
            //    //ex.Message ;
            //};
            //// if (SQLConnectionBDNoiT.State == System.Data.ConnectionState.Closed)
            //     //SQLConnectionBDNoiT.Close(); SQLConnectionBDNoiT.Dispose();
            // //if (_sqlConnection.State == System.Data.ConnectionState.Closed)
            // {
            //     //_sqlConnection.Close(); _sqlConnection.Dispose();
            //     //_sqlConnection = null;
            // }
            return _iddata;

        }
        #endregion
        #region BenhAn_PhieuGN
        public override String InsertBenhAn_PhieuGN(String _MaKhoa, String _GhiChu, SmartDate _NgayGN, String _maMay, String _nguoiSD, Boolean NoiTru)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spBenhAn_PhieuGN_CREATE", _MaKhoa, _GhiChu, _NgayGN.DBValue, _maMay, _nguoiSD, NoiTru));
        }
        public override void UpdateBenhAn_PhieuGN(String MaPhieuGN, String _MaKhoa, String _GhiChu, SmartDate _NgayGN, String _maMay, String _nguoiSD, bool Huy, bool NoiTru)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spBenhAn_PhieuGN_UPDATE", MaPhieuGN, _MaKhoa, _GhiChu, _NgayGN.DBValue, _maMay, _nguoiSD, Huy, NoiTru);
        }
        public override void DeleteBenhAn_PhieuGN(String _maMay, String _nguoiSD, String _MaPhieuGN)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spBenhAn_PhieuGN_DELETED", _maMay, _nguoiSD, _MaPhieuGN);
        }
        public override IDataReader GetBenhAn_PhieuGN(String _MaPhieuGN)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spBenhAn_PhieuGN_Get", _MaPhieuGN));
        }
        public override IDataReader GetAllBenhAn_PhieuGN(DateTime TuNgay, DateTime DenNgay, String MaKhoa, Boolean tra, Boolean NoiTru)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spBenhAn_PhieuGN_GetAll", TuNgay, DenNgay, MaKhoa, tra, NoiTru));
        }
        public override IDataReader FindBenhAn_PhieuGN(string _DK, Boolean _qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spBenhAn_PhieuGN_Finds", _DK, _qadmin));
        }

        public override IDataReader FindBenhAn_GiaoNhan(string _maDT,
      string _MaBN,
      string _Hoten,
      bool _DungTen,
      string _SoThe,
      string _MaBV,
      DateTime _GiaTriDN,
      string _DiaChi,
      string _DienThoai,
      string _DTDD,
      string _DTCQ,
      string _Mail,
      Byte _Tuoi,
      DateTime _NgaySinh,
      bool _GT,
      string _BaoTin,
      string _MaQG,
      string _MaTinh,
      string _MaHuyen,
      string _MaNN,
      string _MaBA,
      string _MABENH,
      string _MABAQL,
      string _MaLoaiBA,
      DateTime _TuNgayYC,
      DateTime _DenNgayYC,
      string _DK,
      bool qadmin,
      DateTime _DenNgaysinh,
      bool _YCDANGDK,
      bool _YCNGAYSINH, int PageIndex, int PageSize,
      bool NoiTru, bool CoSoLuuTru, bool DaMuon, string SoLuuTru, DateTime NgayRVTu, DateTime NgayRVDen)
        {
            //DateTime __GiaTriDN = _GiaTriDN;
            //if (_GiaTriDN.ToShortDateString() == "01/01/0001")
            //{ __GiaTriDN = DateTime.Parse("01/01/1753"); };
            //DateTime __DenNgaysinh = _DenNgaysinh;
            //if (_DenNgaysinh.ToShortDateString() == "01/01/0001")
            //{ __DenNgaysinh = DateTime.Parse("01/01/1753"); };
            //DateTime __NgaySinh = _NgaySinh;
            //if (_NgaySinh.ToShortDateString() == "01/01/0001")
            //{ __NgaySinh = DateTime.Parse("01/01/1753"); };
            //DateTime __TuNgayYC = _TuNgayYC;
            //if (_TuNgayYC.ToShortDateString() == "01/01/0001")
            //{ __TuNgayYC = DateTime.Parse("01/01/1753"); };
            //DateTime __DenNgayYC = _DenNgayYC;
            //if (_DenNgayYC.ToShortDateString() == "01/01/0001")
            //{ __DenNgayYC = DateTime.Parse("01/01/1753"); };

            //try { 
            //_GiaTriDN = DateTime.Parse(_GiaTriDN.ToString("MM/dd/yyyy"));
            //_NgaySinh = DateTime.Parse(_NgaySinh.ToString("MM/dd/yyyy"));
            //_DenNgaysinh = DateTime.Parse(_DenNgaysinh.ToString("MM/dd/yyyy"));
            //_TuNgayYC = DateTime.Parse(_TuNgayYC.ToString("MM/dd/yyyy"));
            //_DenNgaysinh = DateTime.Parse(_DenNgaysinh.ToString("MM/dd/yyyy"));
            //_GiaTriDN = DateTime.Parse(_GiaTriDN.ToString("dd/MM/yyyy"));
            //_NgaySinh = DateTime.Parse(_NgaySinh.ToString("dd/MM/yyyy"));
            //_DenNgaysinh = DateTime.Parse(_DenNgaysinh.ToString("dd/MM/yyyy"));
            //_TuNgayYC = DateTime.Parse(_TuNgayYC.ToString("dd/MM/yyyy"));
            //_DenNgaysinh = DateTime.Parse(_DenNgaysinh.ToString("dd/MM/yyyy")); 
            System.Data.SqlClient.SqlCommand cmd = SqlHelper.CreateCommand(SQLConnectionBDNoiT, DatabaseOwner + ObjectQualifier + "spBENHAN_GiaoNhan_SEARCH_Paging");
            cmd.CommandTimeout = 18000;

            cmd.CommandType = System.Data.CommandType.StoredProcedure;
            cmd.Parameters.AddWithValue("MADT", _maDT);
            cmd.Parameters.AddWithValue("MaBN", _MaBN);
            cmd.Parameters.AddWithValue("Hoten", _Hoten);
            cmd.Parameters.AddWithValue("DungTen", _DungTen);
            cmd.Parameters.AddWithValue("SoThe", _SoThe);
            cmd.Parameters.AddWithValue("MaBV", _MaBV);
            cmd.Parameters.AddWithValue("GiaTriDN", _GiaTriDN);
            cmd.Parameters.AddWithValue("DiaChi", _DiaChi);
            cmd.Parameters.AddWithValue("DienThoai", _DienThoai);
            cmd.Parameters.AddWithValue("DTDD", _DTDD);
            cmd.Parameters.AddWithValue("DTCQ", _DTCQ);
            cmd.Parameters.AddWithValue("Mail", _Mail);
            cmd.Parameters.AddWithValue("Tuoi", _Tuoi);
            cmd.Parameters.AddWithValue("TUNgaySinh", _NgaySinh);
            cmd.Parameters.AddWithValue("GT", _GT);
            cmd.Parameters.AddWithValue("BaoTin", _BaoTin);
            cmd.Parameters.AddWithValue("MaQG", _MaQG);
            cmd.Parameters.AddWithValue("MaTinh", _MaTinh);
            cmd.Parameters.AddWithValue("MaHuyen", _MaHuyen);
            cmd.Parameters.AddWithValue("MaNN", _MaNN);
            cmd.Parameters.AddWithValue("MaBA", _MaBA);
            cmd.Parameters.AddWithValue("MABENH", _MABENH);
            cmd.Parameters.AddWithValue("MABAQL", _MABAQL);
            cmd.Parameters.AddWithValue("MaLoaiBA", _MaLoaiBA);
            cmd.Parameters.AddWithValue("TuNgayYC", _TuNgayYC);
            cmd.Parameters.AddWithValue("DenNgayYC", _DenNgayYC);
            cmd.Parameters.AddWithValue("DK", _DK);
            cmd.Parameters.AddWithValue("qadmin", qadmin);
            cmd.Parameters.AddWithValue("DenNgaysinh", _DenNgaysinh);
            cmd.Parameters.AddWithValue("YCRAVIEN", _YCDANGDK);
            cmd.Parameters.AddWithValue("YCNGAYSINH", _YCNGAYSINH);
            cmd.Parameters.AddWithValue("PageIndex", PageIndex);
            cmd.Parameters.AddWithValue("PageSize", PageSize);
            cmd.Parameters.AddWithValue("NoiTru", NoiTru);
            cmd.Parameters.AddWithValue("CoSoLuuTru", CoSoLuuTru);
            cmd.Parameters.AddWithValue("DaMuon", DaMuon);
            cmd.Parameters.AddWithValue("SoLuuTru", SoLuuTru);
            cmd.Parameters.AddWithValue("NgayRVTu", NgayRVTu);
            cmd.Parameters.AddWithValue("NgayRVDen", NgayRVDen);
            IDataReader _iddata;
            _iddata = (IDataReader)cmd.ExecuteReader(CommandBehavior.CloseConnection);
            cmd.Dispose();
            cmd = null;

            //}
            //catch (Exception ex)
            //{
            //    //ex.Message ;
            //};
            //// if (SQLConnectionBDNoiT.State == System.Data.ConnectionState.Closed)
            //     //SQLConnectionBDNoiT.Close(); SQLConnectionBDNoiT.Dispose();
            // //if (_sqlConnection.State == System.Data.ConnectionState.Closed)
            // {
            //     //_sqlConnection.Close(); _sqlConnection.Dispose();
            //     //_sqlConnection = null;
            // }
            return _iddata;

        }
        public override IDataReader BenhAn_GetPhieuGN(string _MaPhieuGN, Boolean Tra)
        {
            System.Data.SqlClient.SqlCommand cmd = SqlHelper.CreateCommand(SQLConnectionBDNoiT, DatabaseOwner + ObjectQualifier + "spBENHAN_GiaoNhan_GetPhieuGN");
            cmd.CommandTimeout = 18000;

            cmd.CommandType = System.Data.CommandType.StoredProcedure;
            cmd.Parameters.AddWithValue("MaPhieuGN", _MaPhieuGN);
            cmd.Parameters.AddWithValue("Tra", Tra);
            IDataReader _iddata;
            _iddata = (IDataReader)cmd.ExecuteReader(CommandBehavior.CloseConnection);
            cmd.Dispose();
            cmd = null;
            return _iddata;
        }
        public override IDataReader BenhAn_GetPhieuGNByICD(string _MaICD, DateTime TuNgay, DateTime DenNgay)
        {
            System.Data.SqlClient.SqlCommand cmd = SqlHelper.CreateCommand(SQLConnectionBDNoiT, DatabaseOwner + ObjectQualifier + "spBENHAN_GiaoNhan_GetPhieuGNByICD");
            cmd.CommandTimeout = 18000;

            cmd.CommandType = System.Data.CommandType.StoredProcedure;
            cmd.Parameters.AddWithValue("MaICD", _MaICD);
            cmd.Parameters.AddWithValue("TuNgay", TuNgay);
            cmd.Parameters.AddWithValue("DenNgay", DenNgay);
            IDataReader _iddata;
            _iddata = (IDataReader)cmd.ExecuteReader(CommandBehavior.CloseConnection);
            cmd.Dispose();
            cmd = null;
            return _iddata;
        }
        #endregion
        #region BenhAn_QLHSBA_PhieuMuon
        public override String InsertBenhAn_QLHSBAPhieuMuon(DateTime _NgayMuon, String _NguoiMuon, String _KhoaMuon, String _GhiChu, String _maMay, String _nguoiSD, bool Tra)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spBenhAn_HSBA_PhieuMuon_CREATE", _NgayMuon, _NguoiMuon, _KhoaMuon, _GhiChu, _maMay, _nguoiSD, Tra));
        }
        public override void UpdateBenhAn_QLHSBAPhieuMuon(String _MaPM, DateTime _NgayMuon, String NguoiMuon, String _KhoaMuon, String _GhiChu, String _maMay, String _nguoiSD, bool Huy, bool Tra)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spBenhAn_HSBA_PhieuMuon_UPDATE", _MaPM, _NgayMuon, NguoiMuon, _KhoaMuon, _GhiChu, _maMay, _nguoiSD, Huy, Tra);
        }
        public override void DeleteBenhAn_QLHSBAPhieuMuon(String _maMay, String _nguoiSD, String _MaPhieuGN)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spBenhAn_HSBA_PhieuMuon_DELETED", _maMay, _nguoiSD, _MaPhieuGN);
        }
        public override IDataReader GetBenhAn_QLHSBAPhieuMuon(String _MaPM)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spBenhAn_HSBA_PhieuMuon_Get", _MaPM));
        }
        public override IDataReader GetAllBenhAn_QLHSBAPhieuMuon(DateTime TuNgay, DateTime DenNgay, String MaKhoa, bool Tra)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spBenhAn_HSBA_PhieuMuon_GetAll", TuNgay, DenNgay, MaKhoa, Tra));
        }
        public override IDataReader FindBenhAn_QLHSBAPhieuMuon(String _DK, Boolean qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spBenhAn_HSBA_PhieuMuon_Finds", _DK, qadmin));
        }
        public override void SaveDSHSBA(String _MaPM, DateTime NgayMuon, String NguoiMuon, String KhoaMuon, String GhiChu, Boolean Muon, Boolean Huy, String DSHSBA, String _maMay, String _nguoiSD, Boolean capnhat)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spBenhAn_HSBA_MuonTra_SaveDS", _MaPM, NgayMuon, NguoiMuon, KhoaMuon, GhiChu, Muon, Huy, DSHSBA, _maMay, _nguoiSD, capnhat);
        }
        #endregion
        #region BenhAn_ThongKeICD
        public override IDataReader GetAllBenhAn_ThongKeICD(DateTime TuNgay, DateTime DenNgay, Boolean ntbn)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spBenhAn_ThongKeICD_GetAll", TuNgay, DenNgay, ntbn));
        }
        public override void UpdateBenhAn_TTHauKiem(String MaBN, String MaBA, String MaPhieuGN, String MaPhieuGN_C, String MaBAluu, String maqlnew, String MaMay, String NguoiSD)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spBenhAn_PhieuGN_C_UPDATEMaBAluu", MaBN, MaBA, MaPhieuGN, MaPhieuGN_C, MaBAluu, maqlnew, MaMay, NguoiSD);
        }

        #endregion
      

        public override IDataReader FindBenhNhan(Byte _Loai,
                                 string _MaBN,
                                 string _Hoten,
                                 bool _DungTen,
                                 string _SoThe,
                                 string _MaBV,
                                 DateTime _GiaTriDN,
                                 string _DiaChi,
                                 string _DienThoai,
                                 string _DTDD,
                                 string _DTCQ,
                                 string _Mail,
                                 Byte _Tuoi,
                                 DateTime _NgaySinh,
                                 bool _GT,
                                 string _BaoTin,
                                 string _MaQG,
                                 string _MaTinh,
                                 string _MaHuyen,
                                 string _MaNN,
                                 string _MaBANgoaiT,
                                 string _MABENH,
                                 string _MAKHOA,
                                 string _MABS,
                                 DateTime _TuNgayYC,
                                 DateTime _DenNgayYC,
                                 string _DK,
                                 bool qadmin,
                                 DateTime _DenNgaysinh,
                                 bool _YCDANGDK,
                                 bool _YCNGAYSINH)
        {
            DateTime __GiaTriDN = _GiaTriDN;
            if (_GiaTriDN.ToShortDateString() == "01/01/0001")
            { __GiaTriDN = DateTime.Parse("01/01/1753"); };
            DateTime __DenNgaysinh = _DenNgaysinh;
            if (_DenNgaysinh.ToShortDateString() == "01/01/0001")
            { __DenNgaysinh = DateTime.Parse("01/01/1753"); };
            DateTime __NgaySinh = _NgaySinh;
            if (_NgaySinh.ToShortDateString() == "01/01/0001")
            { __NgaySinh = DateTime.Parse("01/01/1753"); };
            DateTime __TuNgayYC = _TuNgayYC;
            if (_TuNgayYC.ToShortDateString() == "01/01/0001")
            { __TuNgayYC = DateTime.Parse("01/01/1753"); };
            DateTime __DenNgayYC = _DenNgayYC;
            if (_DenNgayYC.ToShortDateString() == "01/01/0001")
            { __DenNgayYC = DateTime.Parse("01/01/1753"); };

            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spBenhNhan_FINDS", _Loai,
               _MaBN,
               _Hoten,
               _DungTen,
               _SoThe,
               _MaBV,
               __GiaTriDN,
               _DiaChi,
               _DienThoai,
               _DTDD,
               _DTCQ,
               _Mail,
               _Tuoi,
               __NgaySinh,
               _GT,
               _BaoTin,
               _MaQG,
               _MaTinh,
               _MaHuyen,
               _MaNN,
               _MaBANgoaiT,
               _MABENH,
               _MAKHOA,
               _MABS,
               __TuNgayYC,
               __DenNgayYC,
               _DK, qadmin, __DenNgaysinh, _YCDANGDK, _YCNGAYSINH));
        }
        public override IDataReader FindBenhAn_HoaDon(String SosoHD, String SoHD)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spBenhAn_HoaDon_Find", SosoHD, SoHD));
        }

        #endregion

        #region Benh nhan
        public override String InsertBenhNhan(String _maBN, String _hoten, String _sothe, String _maBV, SmartDate _giaTriDN, String _diaChi, String _dienThoai, String _dTDD, String _dTCQ, String _mail, Byte _tuoi, SmartDate _ngaySinh, Boolean _gt, String _baoTin, String _maQG, String _maTinh, String _maHuyen, string _mapxa, String _maNN, String _tienSu, String _tienSuThuoc, String _tienSuGiaDinh, String _nhomMau, String _ghichu, String _maMay, String _nguoiLap, String _hoTenBoMe, String _maDanToc, SmartDate _giaTriTN, string _MaQuanHeQD, string _MaQuanHam, string _MaDonVi, string _SoCMT, string _noiLamViec)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spBENHNHAN_CREATE", _maBN, _hoten, _sothe, _maBV, _giaTriDN.DBValue, _diaChi, _dienThoai, _dTDD, _dTCQ, _mail, _tuoi, _ngaySinh.DBValue, _gt, _baoTin, _maQG, _maTinh, _maHuyen, _mapxa, _maNN, _tienSu, _tienSuThuoc, _tienSuGiaDinh, _nhomMau, _ghichu, _maMay, _nguoiLap, _hoTenBoMe, _maDanToc, _giaTriTN.DBValue, _MaQuanHeQD, _MaQuanHam, _MaDonVi, _SoCMT, _noiLamViec));
        }
        public override void UpdateBenhNhan(String _maBN, String _hoten, String _sothe, String _maBV, SmartDate _giaTriDN, String _diaChi, String _dienThoai, String _dTDD, String _dTCQ, String _mail, Byte _tuoi, SmartDate _ngaySinh, Boolean _gt, String _baoTin, String _maQG, String _maTinh, String _maHuyen, string _mapxa, String _maNN, String _tienSu, String _tienSuThuoc, String _tienSuGiaDinh, String _nhomMau, String _ghichu, String _maMay, Boolean _huy, String _nguoiSD, String _hoTenBoMe, String _maDanToc, SmartDate _giaTriTN, string _MaQuanHeQD, string _MaQuanHam, string _MaDonVi, string _SoCMT, string _noiLamViec)
        {
            SqlHelper.ExecuteNonQuery(SQLConnectionDataNoiT, DatabaseOwner + ObjectQualifier + "spBENHNHAN_UPDATE", _maBN, _hoten, _sothe, _maBV, _giaTriDN.DBValue, _diaChi, _dienThoai, _dTDD, _dTCQ, _mail, _tuoi, _ngaySinh.DBValue, _gt, _baoTin, _maQG, _maTinh, _maHuyen, _mapxa, _maNN, _tienSu, _tienSuThuoc, _tienSuGiaDinh, _nhomMau, _ghichu, _maMay, _huy, _nguoiSD, _hoTenBoMe, _maDanToc, _giaTriTN.DBValue, _MaQuanHeQD, _MaQuanHam, _MaDonVi, _SoCMT, _noiLamViec);
        }
        public override void DeleteBenhNhan(string _maMay, String _nguoiSD, String _maBN)
        {
            SqlHelper.ExecuteNonQuery(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spBENHNHAN_DELETED", _maMay, _nguoiSD, _maBN);
        }

        #endregion
        #region Benh nhan
        public override String InsertBenhNhan(String _maBN, String _hoten, String _sothe, String _maBV, SmartDate _giaTriDN, String _diaChi, String _dienThoai, String _dTDD, String _dTCQ, String _mail, Byte _tuoi, SmartDate _ngaySinh, Boolean _gt, String _baoTin, String _maQG, String _maTinh, String _maHuyen, string _mapxa, String _maNN, String _tienSu, String _tienSuThuoc, String _tienSuGiaDinh, String _nhomMau, String _ghichu, String _maMay, String _nguoiLap, String _hoTenBoMe, String _maDanToc, SmartDate _giaTriTN, string _MaQuanHeQD, string _MaQuanHam, string _MaDonVi, string _SoCMT, string _noiLamViec, string _maKV, string _ngayMienCCT, string _ngayDu5Nam)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spBENHNHAN_CREATE1", _maBN, _hoten, _sothe, _maBV, _giaTriDN.DBValue, _diaChi, _dienThoai, _dTDD, _dTCQ, _mail, _tuoi, _ngaySinh.DBValue, _gt, _baoTin, _maQG, _maTinh, _maHuyen, _mapxa, _maNN, _tienSu, _tienSuThuoc, _tienSuGiaDinh, _nhomMau, _ghichu, _maMay, _nguoiLap, _hoTenBoMe, _maDanToc, _giaTriTN.DBValue, _MaQuanHeQD, _MaQuanHam, _MaDonVi, _SoCMT, _noiLamViec, _maKV, _ngayMienCCT, _ngayDu5Nam));
        }
        public override void UpdateBenhNhan(String _maBN, String _hoten, String _sothe, String _maBV, SmartDate _giaTriDN, String _diaChi, String _dienThoai, String _dTDD, String _dTCQ, String _mail, Byte _tuoi, SmartDate _ngaySinh, Boolean _gt, String _baoTin, String _maQG, String _maTinh, String _maHuyen, string _mapxa, String _maNN, String _tienSu, String _tienSuThuoc, String _tienSuGiaDinh, String _nhomMau, String _ghichu, String _maMay, Boolean _huy, String _nguoiSD, String _hoTenBoMe, String _maDanToc, SmartDate _giaTriTN, string _MaQuanHeQD, string _MaQuanHam, string _MaDonVi, string _SoCMT, string _noiLamViec, string _maKV, string _ngayMienCCT, string _ngayDu5Nam)
        {
            SqlHelper.ExecuteNonQuery(SQLConnectionDataNoiT, DatabaseOwner + ObjectQualifier + "spBENHNHAN_UPDATE1", _maBN, _hoten, _sothe, _maBV, _giaTriDN.DBValue, _diaChi, _dienThoai, _dTDD, _dTCQ, _mail, _tuoi, _ngaySinh.DBValue, _gt, _baoTin, _maQG, _maTinh, _maHuyen, _mapxa, _maNN, _tienSu, _tienSuThuoc, _tienSuGiaDinh, _nhomMau, _ghichu, _maMay, _huy, _nguoiSD, _hoTenBoMe, _maDanToc, _giaTriTN.DBValue, _MaQuanHeQD, _MaQuanHam, _MaDonVi, _SoCMT, _noiLamViec, _maKV, _ngayMienCCT, _ngayDu5Nam);
        }
       

        #endregion

        #region Tai bien
        public override String InsertTaiBien(String _maBN, String _maBA_HT, SmartDate _ngayTaiBien, SmartDate _ngayThucHien, String _maKhoa, String _maTaiBien, String _maKQTaiBien, string _ghichu, Byte _loai, String _maMay, String _nguoiLap)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spTAIBIEN_CREATE", _maBN, _maBA_HT, _ngayTaiBien.DBValue, _ngayThucHien.DBValue, _maKhoa, _maTaiBien, _maKQTaiBien, _ghichu, _loai, _maMay, _nguoiLap));
        }
        public override void UpdateTaiBien(String _maTB, String _maBN, String _maBA_HT, SmartDate _ngayTaiBien, SmartDate _ngayThucHien, String _maKhoa, String _maTaiBien, String _maKQTaiBien, String _ghichu, Byte _loai, String _maMay, Boolean _huy, String _nguoiSD)
        {
            SqlHelper.ExecuteNonQuery(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spTAIBIEN_UPDATE", _maTB, _maBN, _maBA_HT, _ngayTaiBien.DBValue, _ngayThucHien.DBValue, _maKhoa, _maTaiBien, _maKQTaiBien, _ghichu, _loai, _maMay, _huy, _nguoiSD);
        }
        public override void DeleteTaiBien(string _maMay, String _nguoiSD, String _maTB)
        {
            SqlHelper.ExecuteNonQuery(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spTaiBien_DELETED", _maMay, _nguoiSD, _maTB);
        }
        #endregion

        #region Tai bien Dich vu
        public override String InsertTaiBien_DV(String _maTB, String _maDV, String _ghiChu, String _maMay, String _nguoiSD)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spTaiBien_DV_CREATE", _maTB, _maDV, _ghiChu, _maMay, _nguoiSD));
        }
        public override void UpdateTaiBien_DV(String _MaTB, Byte _sTT, String _maDV, String _ghiChu, String _maMay, Boolean _huy, String _nguoiSD)
        {
            SqlHelper.ExecuteNonQuery(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spTaiBien_DV_UPDATE", _MaTB, _sTT, _maDV, _ghiChu, _maMay, _huy, _nguoiSD);
        }
        public override void DeleteTaiBien_DV(string _maMay, String _nguoiSD, String _maTB, Byte _sTT)
        {
            SqlHelper.ExecuteNonQuery(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spTaiBien_DV_DELETED", _maMay, _nguoiSD, _maTB, _sTT);
        }
        #endregion

        #region PhacDoDT
        // public abstract String InsertPhacDoDT(string _maNCC, String _soHD, String _soCT, SmartDate _ngayPNhap, String _maKho, decimal _chietKhau, Boolean _thanhToan, SmartDate _ngayTToan, SmartDate _ngayNhapTT, String _NVNhap, decimal _Tong, String _ghiChu, Boolean _huy, String _nguoiSD, string _maMay, String _nguoiGiao);
        public override String InsertPhacDoDT(string _mabenh, string _tenbenh, string _tenbenhKem, string _mabenhKem, string _GiaiDoan, Boolean _GTNu, Boolean _GTNam, Byte _TuoiTu, Byte _TuoiDen, String _VungAD, String _MoTa, String _XuTri, String _TruocPD, String _SauPD, String _ghiChu, Boolean _huy, String _nguoiSD, string _maMay)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spPhacDoDT_CREATE", _mabenh, _tenbenh, _tenbenhKem, _mabenhKem, _GiaiDoan, _GTNu, _GTNam, _TuoiTu, _TuoiDen, _VungAD, _MoTa, _XuTri, _TruocPD, _SauPD, _ghiChu, _huy, _nguoiSD, _maMay));
        }
        public override void UpdatePhacDoDT(String _maPD, string _mabenh, string _tenbenh, string _tenbenhKem, string _mabenhKem, string _GiaiDoan, Boolean _GTNu, Boolean _GTNam, Byte _TuoiTu, Byte _TuoiDen, String _VungAD, String _MoTa, String _XuTri, String _TruocPD, String _SauPD, String _ghiChu, Boolean _huy, String _nguoiSD, string _mamay)
        {
            System.Data.SqlClient.SqlDataReader dr;
            dr = SqlHelper.ExecuteReader(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spPhacDoDT_UPDATE", _maPD, _mabenh, _tenbenh, _tenbenhKem, _mabenhKem, _GiaiDoan, _GTNu, _GTNam, _TuoiTu, _TuoiDen, _VungAD, _MoTa, _XuTri, _TruocPD, _SauPD, _ghiChu, _huy, _nguoiSD, _mamay);
            dr.Close();
            dr = null;
        }
        public override void DeletePhacDoDT(String _maPD, SmartDate _ngaySD, string _maMay, String _nguoiSD)
        {
            SqlHelper.ExecuteNonQuery(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spPhacDoDT_DELETED", _maPD, _ngaySD.DBValue, _maMay, _nguoiSD);
        }
        #endregion

        #region PhacDoDT chi tiet

        public override String InsertPhacDoDT_C(String _maPD, String _maThuoc, String _lieudung, String _cachdung, Boolean _huy, String _ghiChu, string _maMay, String _nguoiSD)
        {

            System.Data.SqlClient.SqlDataReader dr;
            dr = SqlHelper.ExecuteReader(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spPhacDoDT_C_CREATE", _maPD, _maThuoc, _lieudung, _cachdung, _huy, _ghiChu, _maMay, _nguoiSD);
            dr.Close();
            dr = null;
            return "";
        }
        public override void UpdatePhacDoDT_C(String _maPD, decimal _sTT, String _maThuoc, String _lieudung, String _cachdung, Boolean _huy, String _ghiChu, SmartDate _ngaySD, string _maMay, String _nguoiSD)
        {

            SqlHelper.ExecuteNonQuery(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spPhacDoDT_C_UPDATE", _maPD, _sTT, _maThuoc, _lieudung, _cachdung, _huy, _ghiChu, _ngaySD.DBValue, _maMay, _nguoiSD);
        }
        public override void DeletePhacDoDT_C(String _maPD, decimal _sTT, String _nguoiSD, String _maMay)
        {
            SqlHelper.ExecuteNonQuery(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spPhacDoDT_C_DELETED", _maPD, _sTT, _nguoiSD, _maMay);
        }
        #endregion
        #region Benh an
        public override String InsertBenhAn(String _maBN, string _noitt, String _maDT, String _sothe, SmartDate _giatriDN, String _maBV, String _maTinh, SmartDate _ngayKT, SmartDate _ngayduyet, String _nguoiduyet, SmartDate _ngayQT, SmartDate _ngayQTTT, String _nguoiQT, String _maBenhNoiGT, String _maNoiGT, String _cDNoiGT, String _ghichu, Boolean _cungtra, Decimal _ck, String _nguoiLap, String _maMay, SmartDate _ngayVV, String _maKhoa_HT, Boolean _apDungGoi, SmartDate _ngayhuongbh, SmartDate _giaTriTN, String _maLoaiBA, String _maBALienquan, string _MABAQL)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(SQLConnectionDataNoiT, DatabaseOwner + ObjectQualifier + "spBenhAn_Create1", _maBN, _noitt, _maDT, _sothe, _giatriDN.DBValue, _maBV, _maTinh, _ngayKT.DBValue, _ngayduyet.DBValue, _nguoiduyet, _ngayQT.DBValue, _ngayQTTT.DBValue, _nguoiQT, _maBenhNoiGT, _maNoiGT, _cDNoiGT, _ghichu, _cungtra, _ck, _nguoiLap, _maMay, _ngayVV.DBValue, _maKhoa_HT, _apDungGoi, _ngayhuongbh.DBValue, _giaTriTN.DBValue, _maLoaiBA, _maBALienquan, _MABAQL));
        }
        public override String UpdateBenhAn(String _maBA, String _maBN, String _maDT, String _sothe, SmartDate _giatriDN, String _maBV, String _maTinh, SmartDate _ngayKT, SmartDate _ngayduyet, String _nguoiduyet, SmartDate _ngayQT, SmartDate _ngayQTTT, String _nguoiQT, String _maBenhNoiGT, String _maNoiGT, String _cDNoiGT, String _ghichu, Boolean _cungtra, Decimal _ck, String _nguoiSD, String _maMay, Boolean _huy, SmartDate _ngayVV, Boolean _apDungGoi, SmartDate _ngayhuongbh, SmartDate _giaTriTN, SmartDate _ngayRaVien, String _maLoaiBA, bool _ravien, string _mabsravien, string _mabaluu, Boolean _daks, String _maBALienquan, string _MABAQL, Boolean _taibienThuoc, Boolean _taibienPT, Boolean _taibienTT, Boolean _hoichan)
        {
            return System.Convert.ToString(SqlHelper.ExecuteNonQuery(SQLConnectionDataNoiT, DatabaseOwner + ObjectQualifier + "spBenhAn_Update", _maBA, _maBN, _maDT, _sothe, _giatriDN.DBValue, _maBV, _maTinh, _ngayKT.DBValue, _ngayduyet.DBValue, _nguoiduyet, _ngayQT.DBValue, _ngayQTTT.DBValue, _nguoiQT, _maBenhNoiGT, _maNoiGT, _cDNoiGT, _ghichu, _cungtra, _ck, _nguoiSD, _maMay, _huy, _ngayVV.DBValue, _apDungGoi, _ngayhuongbh.DBValue, _giaTriTN.DBValue, _ngayRaVien.DBValue, _maLoaiBA, _ravien, _mabsravien, _mabaluu, _daks, _maBALienquan, _MABAQL, _taibienThuoc, _taibienPT, _taibienTT, _hoichan));
        }
        public override void DeleteBenhAn(string _maMay, String _nguoiSD, String _maBA)
        {
            SqlHelper.ExecuteNonQuery(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spBenhAn_Deleted", _maMay, _nguoiSD, _maBA);
        }
        public override String BenhAn_RaVienUp(String _maBA, DateTime _NgayRaVien, string mamay, string nguoisd)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spBENHAN_RAVIEN_UPDATE", _maBA, _NgayRaVien, nguoisd, mamay));
        }
        #endregion
        #region Benh an
        public override String InsertBenhAn(String _maBN, string _noitt, String _maDT, String _sothe, SmartDate _giatriDN, String _maBV, String _maTinh, SmartDate _ngayKT, SmartDate _ngayduyet, String _nguoiduyet, SmartDate _ngayQT, SmartDate _ngayQTTT, String _nguoiQT, String _maBenhNoiGT, String _maNoiGT, String _cDNoiGT, String _ghichu, Boolean _cungtra, Decimal _ck, String _nguoiLap, String _maMay, SmartDate _ngayVV, String _maKhoa_HT, Boolean _apDungGoi, SmartDate _ngayhuongbh, SmartDate _giaTriTN, String _maLoaiBA, String _maBALienquan, string _MABAQL, string _maKV, string _ngayMienCCT, string _ngayDu5Nam)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(SQLConnectionDataNoiT, DatabaseOwner + ObjectQualifier + "spBenhAn_Create", _maBN, _noitt, _maDT, _sothe, _giatriDN.DBValue, _maBV, _maTinh, _ngayKT.DBValue, _ngayduyet.DBValue, _nguoiduyet, _ngayQT.DBValue, _ngayQTTT.DBValue, _nguoiQT, _maBenhNoiGT, _maNoiGT, _cDNoiGT, _ghichu, _cungtra, _ck, _nguoiLap, _maMay, _ngayVV.DBValue, _maKhoa_HT, _apDungGoi, _ngayhuongbh.DBValue, _giaTriTN.DBValue, _maLoaiBA, _maBALienquan, _MABAQL, _maKV, _ngayMienCCT, _ngayDu5Nam));
        }
        public override String UpdateBenhAn(String _maBA, String _maBN, String _maDT, String _sothe, SmartDate _giatriDN, String _maBV, String _maTinh, SmartDate _ngayKT, SmartDate _ngayduyet, String _nguoiduyet, SmartDate _ngayQT, SmartDate _ngayQTTT, String _nguoiQT, String _maBenhNoiGT, String _maNoiGT, String _cDNoiGT, String _ghichu, Boolean _cungtra, Decimal _ck, String _nguoiSD, String _maMay, Boolean _huy, SmartDate _ngayVV, Boolean _apDungGoi, SmartDate _ngayhuongbh, SmartDate _giaTriTN, SmartDate _ngayRaVien, String _maLoaiBA, bool _ravien, string _mabsravien, string _mabaluu, Boolean _daks, String _maBALienquan, string _MABAQL, Boolean _taibienThuoc, Boolean _taibienPT, Boolean _taibienTT, Boolean _hoichan, string _maKV, string _ngayMienCCT, string _ngayDu5Nam)
        {
            return System.Convert.ToString(SqlHelper.ExecuteNonQuery(SQLConnectionDataNoiT, DatabaseOwner + ObjectQualifier + "spBenhAn_Update1", _maBA, _maBN, _maDT, _sothe, _giatriDN.DBValue, _maBV, _maTinh, _ngayKT.DBValue, _ngayduyet.DBValue, _nguoiduyet, _ngayQT.DBValue, _ngayQTTT.DBValue, _nguoiQT, _maBenhNoiGT, _maNoiGT, _cDNoiGT, _ghichu, _cungtra, _ck, _nguoiSD, _maMay, _huy, _ngayVV.DBValue, _apDungGoi, _ngayhuongbh.DBValue, _giaTriTN.DBValue, _ngayRaVien.DBValue, _maLoaiBA, _ravien, _mabsravien, _mabaluu, _daks, _maBALienquan, _MABAQL, _taibienThuoc, _taibienPT, _taibienTT, _hoichan, _maKV, _ngayMienCCT, _ngayDu5Nam));
        }
      
       
        #endregion

        #region Benh an Khoa

        public override int InsertBenhAn_Khoa(String _maBA, String _maKhoa, String _maBN, SmartDate _ngayVKhoa, String _maBenh, String _maBenhKem, String _maTienLuong, String _bSDieuTri, String _yta, String _soPhong, String _soGiuong, SmartDate _ngayKT, String _maMay, String _nguoiLap, string ghichu, String _tenBenh)
        {
            return System.Convert.ToInt32(SqlHelper.ExecuteScalar(SQLConnectionDataNoiT, DatabaseOwner + ObjectQualifier + "spBENHAN_KHOA_CREATE", _maBA, _maKhoa, _maBN, _ngayVKhoa.DBValue, _maBenh, _maBenhKem, _maTienLuong, _bSDieuTri, _yta, _soPhong, _soGiuong, _ngayKT.DBValue, _maMay, _nguoiLap, ghichu, _tenBenh));
        }
        public override void UpdateBenhAn_Khoa(String _maBA, Int32 _sTTKhoa, String _maKhoa, String _maBN, SmartDate _ngayVKhoa, String _maBenh, String _maBenhKem, String _maTienLuong, String _bSDieuTri, String _yta, String _soPhong, String _soGiuong, SmartDate _ngayKT, String _maMay, Boolean _huy, String _nguoiHuy, Byte _raKhoa, string ghichu, String _tenBenh,string _tenbenhkem)
        {
          
                SqlHelper.ExecuteNonQuery(SQLConnectionDataNoiT, DatabaseOwner + ObjectQualifier + "spBENHAN_KHOA_UPDATE1", _maBA, _sTTKhoa, _maKhoa, _maBN, _ngayVKhoa.DBValue, _maBenh, _maBenhKem, _maTienLuong, _bSDieuTri, _yta, _soPhong, _soGiuong, _ngayKT.DBValue, _maMay, _huy, _nguoiHuy, _raKhoa, ghichu, _tenBenh,_tenbenhkem );
        }
        public override void DeleteBenhAn_Khoa(string _maMay, String _nguoiSD, String _maBA, Int32 _sTTKhoa)
        {
            SqlHelper.ExecuteNonQuery(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spBENHAN_KHOA_DELETED", _maMay, _nguoiSD, _maBA, _sTTKhoa);
        }
        #endregion

        #region Benh an DoiTuong

        public override int InsertBenhAn_DoiTuong(String _maBA, SmartDate _ngayKT, String _maMay, String _nguoiLap, string _madt, SmartDate _ngayvvtt, string _sothe, SmartDate _giatridn, string _mabv, SmartDate _giatritn)
        {
            return System.Convert.ToInt32(SqlHelper.ExecuteScalar(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spBENHAN_DoiTuong_CREATE", _maBA, _ngayKT.DBValue, _maMay, _nguoiLap, _madt, _ngayvvtt.DBValue, _sothe, _giatridn.DBValue, _mabv, _giatritn.DBValue));
        }
        public override void UpdateBenhAn_DoiTuong(String _maBA, Int32 _sTT, SmartDate _ngayKT, String _maMay, Boolean _huy, String _nguoiHuy, string _madt, SmartDate _ngayvvtt, string _sothe, SmartDate _giatridn, string _mabv, SmartDate _giatritn)
        {
            SqlHelper.ExecuteNonQuery(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spBENHAN_DoiTuong_UPDATE", _maBA, _sTT, _ngayKT.DBValue, _maMay, _huy, _nguoiHuy, _madt, _ngayvvtt.DBValue, _sothe, _giatridn.DBValue, _mabv, _giatritn.DBValue);
        }
        public override void DeleteBenhAn_DoiTuong(string _maMay, String _nguoiSD, String _maBA, Int32 _sTT)
        {
            SqlHelper.ExecuteNonQuery(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spBENHAN_DoiTuong_DELETED", _maMay, _nguoiSD, _maBA, _sTT);
        }
        #endregion

        #region Benh an DoiTuong

        public override int InsertBenhAn_DoiTuong(String _maBA, SmartDate _ngayKT, String _maMay, String _nguoiLap, string _madt, SmartDate _ngayvvtt, string _sothe, SmartDate _giatridn, string _mabv, SmartDate _giatritn, string _maKV, string _ngayMienCCT, string _ngayDu5Nam)
        {
            return System.Convert.ToInt32(SqlHelper.ExecuteScalar(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spBENHAN_DoiTuong_CREATE1", _maBA, _ngayKT.DBValue, _maMay, _nguoiLap, _madt, _ngayvvtt.DBValue, _sothe, _giatridn.DBValue, _mabv, _giatritn.DBValue, _maKV, _ngayMienCCT, _ngayDu5Nam));
        }
        public override void UpdateBenhAn_DoiTuong(String _maBA, Int32 _sTT, SmartDate _ngayKT, String _maMay, Boolean _huy, String _nguoiHuy, string _madt, SmartDate _ngayvvtt, string _sothe, SmartDate _giatridn, string _mabv, SmartDate _giatritn, string _maKV, string _ngayMienCCT, string _ngayDu5Nam)
        {
            SqlHelper.ExecuteNonQuery(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spBENHAN_DoiTuong_UPDATE1", _maBA, _sTT, _ngayKT.DBValue, _maMay, _huy, _nguoiHuy, _madt, _ngayvvtt.DBValue, _sothe, _giatridn.DBValue, _mabv, _giatritn.DBValue, _maKV, _ngayMienCCT, _ngayDu5Nam);
        }
       
        #endregion

        #region Benh an ThanhToan

        public override int InsertBenhAn_ThanhToan(String _maBA, SmartDate _ngayKT, String _maMay, String _nguoiLap, string _madt, SmartDate _ngayvvtt, string _sothe, SmartDate _giatridn, string _mabv, SmartDate _giatritn, SmartDate _ngayQT, string _nguoiQT, Boolean _DaQT)
        {
            return System.Convert.ToInt32(SqlHelper.ExecuteScalar(SQLConnectionDataNoiT, DatabaseOwner + ObjectQualifier + "spBENHAN_ThanhToan_CREATE", _maBA, _ngayKT.DBValue, _maMay, _nguoiLap, _madt, _ngayvvtt.DBValue, _sothe, _giatridn.DBValue, _mabv, _giatritn.DBValue, _ngayQT.DBValue, _nguoiQT, _DaQT));
        }
        public override void UpdateBenhAn_ThanhToan(String _maBA, Int32 _sTT, SmartDate _ngayKT, String _maMay, Boolean _huy, String _nguoiHuy, string _madt, SmartDate _ngayvvtt, string _sothe, SmartDate _giatridn, string _mabv, SmartDate _giatritn, SmartDate _ngayQT, string _nguoiQT, Boolean _DaQT)
        {
            SqlHelper.ExecuteNonQuery(SQLConnectionDataNoiT, DatabaseOwner + ObjectQualifier + "spBENHAN_ThanhToan_UPDATE", _maBA, _sTT, _ngayKT.DBValue, _maMay, _huy, _nguoiHuy, _madt, _ngayvvtt.DBValue, _sothe, _giatridn.DBValue, _mabv, _giatritn.DBValue, _ngayQT.DBValue, _nguoiQT, _DaQT);
        }
        public override void DeleteBenhAn_ThanhToan(string _maMay, String _nguoiSD, String _maBA, Int32 _sTT)
        {
            SqlHelper.ExecuteNonQuery(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spBENHAN_ThanhToan_DELETED", _maMay, _nguoiSD, _maBA, _sTT);
        }
        #endregion
        #region Benh an theo doi
        public override String InsertBenhAn_TheoDoi(String _maBA, Int32 _sTTKhoa, SmartDate _tuNgay, SmartDate _denNgay, String _dienbien, String _yLenh, String _yta, String _maMay, String _nguoiSD, String _mach, String _apHuyet, String _nhietDo, String _TT, String _NuocTieu, string _theodoi)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spBENHAN_TheoDoi_CREATE", _maBA, _sTTKhoa, _tuNgay.DBValue, _denNgay.DBValue, _dienbien, _yLenh, _yta, _maMay, _nguoiSD, _mach, _apHuyet, _nhietDo, _TT, _NuocTieu, _theodoi));
        }
        public override void UpdateBenhAn_TheoDoi(String _maBA, Int32 _sTT, Int32 _sTTKhoa, SmartDate _tuNgay, SmartDate _denNgay, String _dienbien, String _yLenh, String _yta, Boolean _huy, String _maMay, String _nguoiSD, String _mach, String _apHuyet, String _nhietDo, String _TT, String _NuocTieu, string _theodoi)
        {
            SqlHelper.ExecuteNonQuery(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spBenhAn_TheoDoi_UPDATE", _maBA, _sTT, _sTTKhoa, _tuNgay.DBValue, _denNgay.DBValue, _dienbien, _yLenh, _yta, _huy, _maMay, _nguoiSD, _mach, _apHuyet, _nhietDo, _TT, _NuocTieu, _theodoi);
        }
        public override void DeleteBenhAn_TheoDoi(string _maMay, String _nguoiSD, String _maBA, Int32 _sTT, Int32 _sTTKhoa)
        {
            SqlHelper.ExecuteNonQuery(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spBenhAn_TheoDoi_DELETED", _maMay, _nguoiSD, _maBA, _sTT, _sTTKhoa);
        }
        #endregion
        #region Benh an Cham soc
        public override String InsertBenhAn_Chamsoc(String _maBA, Int32 _sTTKhoa, SmartDate _tuNgay, SmartDate _denNgay, String _dienbien, String _yLenh, String _yta, String _maMay, String _nguoiSD, String _mach, String _apHuyet, String _nhietDo, String _TT, String _NuocTieu)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(SQLConnectionDataNoiT, DatabaseOwner + ObjectQualifier + "spBENHAN_CHAMSOC_CREATE", _maBA, _sTTKhoa, _tuNgay.DBValue, _denNgay.DBValue, _dienbien, _yLenh, _yta, _maMay, _nguoiSD, _mach, _apHuyet, _nhietDo, _TT, _NuocTieu));
        }
        public override void UpdateBenhAn_Chamsoc(String _maBA, Int32 _sTT, Int32 _sTTKhoa, SmartDate _tuNgay, SmartDate _denNgay, String _dienbien, String _yLenh, String _yta, Boolean _huy, String _maMay, String _nguoiSD, String _mach, String _apHuyet, String _nhietDo, String _TT, String _NuocTieu)
        {
            SqlHelper.ExecuteNonQuery(SQLConnectionDataNoiT, DatabaseOwner + ObjectQualifier + "spBenhAn_Chamsoc_UPDATE", _maBA, _sTT, _sTTKhoa, _tuNgay.DBValue, _denNgay.DBValue, _dienbien, _yLenh, _yta, _huy, _maMay, _nguoiSD, _mach, _apHuyet, _nhietDo, _TT, _NuocTieu);
        }
        public override void DeleteBenhAn_Chamsoc(string _maMay, String _nguoiSD, String _maBA, Int32 _sTT, Int32 _sTTKhoa)
        {
            SqlHelper.ExecuteNonQuery(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spBenhAn_Chamsoc_DELETED", _maMay, _nguoiSD, _maBA, _sTT, _sTTKhoa);
        }
        #endregion
        #region Benh an Cham soc pt
     
	
	
        public override String InsertBenhAn_ChamsocPT(String _maBA, Int32 _sTTKhoa, SmartDate _tuNgay, SmartDate _denNgay, String _dienbien, String _yLenh, String _yta, String _maMay, String _nguoiSD, String _mach, String _apHuyet, String _nhietDo, String _TT, String _NuocTieu, String ToanTrang, String TinhTrang, String SanDich, String Mo, String TangSinhMon)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(SQLConnectionDataNoiT, DatabaseOwner + ObjectQualifier + "spBenhAn_ChamsocPT_CREATE", _maBA, _sTTKhoa, _tuNgay.DBValue, _denNgay.DBValue, _dienbien, _yLenh, _yta, _maMay, _nguoiSD, _mach, _apHuyet, _nhietDo, _TT, _NuocTieu, ToanTrang, TinhTrang, SanDich, Mo, TangSinhMon));
        }
        public override void UpdateBenhAn_ChamsocPT(String _maBA, Int32 _sTT, Int32 _sTTKhoa, SmartDate _tuNgay, SmartDate _denNgay, String _dienbien, String _yLenh, String _yta, Boolean _huy, String _maMay, String _nguoiSD, String _mach, String _apHuyet, String _nhietDo, String _TT, String _NuocTieu, String ToanTrang, String TinhTrang, String SanDich, String Mo, String TangSinhMon)
        {
            SqlHelper.ExecuteNonQuery(SQLConnectionDataNoiT, DatabaseOwner + ObjectQualifier + "spBenhAn_ChamsocPT_UPDATE", _maBA, _sTT, _sTTKhoa, _tuNgay.DBValue, _denNgay.DBValue, _dienbien, _yLenh, _yta, _huy, _maMay, _nguoiSD, _mach, _apHuyet, _nhietDo, _TT, _NuocTieu, ToanTrang, TinhTrang, SanDich, Mo, TangSinhMon);
        }
        public override void DeleteBenhAn_ChamsocPT(string _maMay, String _nguoiSD, String _maBA, Int32 _sTT, Int32 _sTTKhoa)
        {
            SqlHelper.ExecuteNonQuery(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spBenhAn_ChamsocPT_DELETED", _maMay, _nguoiSD, _maBA, _sTT, _sTTKhoa);
        }
        #endregion
        #region Benh an Cham soc san
        public override String InsertBenhAn_Chamsoc_San(String _maBA, Int32 _sTTKhoa, SmartDate _tuNgay, SmartDate _denNgay, String _dienbien, String _yLenh, String _yta, String _maMay, String _nguoiSD, String _mach, String _apHuyet, String _nhietDo, String _TT, String _NuocTieu)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(SQLConnectionDataNoiT, DatabaseOwner + ObjectQualifier + "spBenhAn_Chamsoc_San_CREATE", _maBA, _sTTKhoa, _tuNgay.DBValue, _denNgay.DBValue, _dienbien, _yLenh, _yta, _maMay, _nguoiSD, _mach, _apHuyet, _nhietDo, _TT, _NuocTieu));
        }
        public override void UpdateBenhAn_Chamsoc_San(String _maBA, Int32 _sTT, Int32 _sTTKhoa, SmartDate _tuNgay, SmartDate _denNgay, String _dienbien, String _yLenh, String _yta, Boolean _huy, String _maMay, String _nguoiSD, String _mach, String _apHuyet, String _nhietDo, String _TT, String _NuocTieu)
        {
            SqlHelper.ExecuteNonQuery(SQLConnectionDataNoiT, DatabaseOwner + ObjectQualifier + "spBenhAn_Chamsoc_San_UPDATE", _maBA, _sTT, _sTTKhoa, _tuNgay.DBValue, _denNgay.DBValue, _dienbien, _yLenh, _yta, _huy, _maMay, _nguoiSD, _mach, _apHuyet, _nhietDo, _TT, _NuocTieu);
        }
        public override void DeleteBenhAn_Chamsoc_San(string _maMay, String _nguoiSD, String _maBA, Int32 _sTT, Int32 _sTTKhoa)
        {
            SqlHelper.ExecuteNonQuery(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spBenhAn_Chamsoc_San_DELETED", _maMay, _nguoiSD, _maBA, _sTT, _sTTKhoa);
        }
        #endregion


        #region Benh an Cham soc san so sinh
        public override String InsertBenhAn_Chamsoc_SoSinh(String _maBA, Int32 _sTTKhoa, SmartDate _tuNgay, SmartDate _denNgay, String _dienbien, String _yLenh, String _yta, String _maMay, String _nguoiSD, String _An, String _Non, String _VangDa, String _phan, String _NuocTieu)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spBenhAn_Chamsoc_SoSinh_CREATE", _maBA, _sTTKhoa, _tuNgay.DBValue, _denNgay.DBValue, _dienbien, _yLenh, _yta, _maMay, _nguoiSD, _An, _Non, _VangDa, _phan, _NuocTieu));
        }
        public override void UpdateBenhAn_Chamsoc_SoSinh(String _maBA, Int32 _sTT, Int32 _sTTKhoa, SmartDate _tuNgay, SmartDate _denNgay, String _dienbien, String _yLenh, String _yta, Boolean _huy, String _maMay, String _nguoiSD, String _An, String _Non, String _VangDa, String _phan, String _NuocTieu)
        {
            SqlHelper.ExecuteNonQuery(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spBenhAn_Chamsoc_SoSinh_UPDATE", _maBA, _sTT, _sTTKhoa, _tuNgay.DBValue, _denNgay.DBValue, _dienbien, _yLenh, _yta, _huy, _maMay, _nguoiSD, _An, _Non, _VangDa, _phan, _NuocTieu);
        }
        public override void DeleteBenhAn_Chamsoc_SoSinh(string _maMay, String _nguoiSD, String _maBA, Int32 _sTT, Int32 _sTTKhoa)
        {
            SqlHelper.ExecuteNonQuery(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spBenhAn_Chamsoc_SoSinh_DELETED", _maMay, _nguoiSD, _maBA, _sTT, _sTTKhoa);
        }
        #endregion
        #region Benh an Cham soc than nhan tao

        public override String InsertBenhAn_Chamsoc_TNT(String _maBA, Int32 _sTTKhoa, SmartDate _ngayLoc, String _dienbien, String _yLenh, String _yta, String _maMay, String _nguoiSD, String _hepin, String _hepinKhac, String _kH_Loc, String _huyetApTruoc, String _huyetApSau, String _canNangTruoc, String _sieuLocUF)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spBenhAn_Chamsoc_TNT_CREATE", _maBA, _sTTKhoa, _ngayLoc.DBValue, _hepin, _hepinKhac, _kH_Loc, _huyetApTruoc, _huyetApSau, _canNangTruoc, _sieuLocUF, _dienbien, _yLenh, _yta, _maMay, _nguoiSD));
        }
        public override void UpdateBenhAn_Chamsoc_TNT(String _maBA, Int32 _sTTKhoa, Int32 _sTT, SmartDate _ngayLoc, String _dienbien, String _yLenh, String _yta, String _maMay, String _nguoiSD, String _hepin, String _hepinKhac, String _kH_Loc, String _huyetApTruoc, String _huyetApSau, String _canNangTruoc, String _sieuLocUF, bool _huy)
        {
            SqlHelper.ExecuteNonQuery(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spBenhAn_Chamsoc_TNT_UPDATE", _maBA, _sTTKhoa, _sTT, _ngayLoc.DBValue, _hepin, _hepinKhac, _kH_Loc, _huyetApTruoc, _huyetApSau, _canNangTruoc, _sieuLocUF, _dienbien, _yLenh, _yta, _maMay, _nguoiSD, _huy);
        }
        public override void DeleteBenhAn_Chamsoc_TNT(string _maMay, String _nguoiSD, String _maBA, Int32 _sTT, Int32 _sTTKhoa)
        {
            SqlHelper.ExecuteNonQuery(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spBenhAn_Chamsoc_TNT_DELETED", _maMay, _nguoiSD, _maBA, _sTT, _sTTKhoa);
        }
        #endregion

        #region DMPhauThuat_DungCu
        public override IDataReader GetDMPhauThuat_DungCu(String _MaDC)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMPhauThuat_DungCu_Get", _MaDC));
        }
        public override IDataReader GetAllDMPhauThuat_DungCu()
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMPhauThuat_DungCu_GetAll"));
        }
        public override IDataReader FindDMPhauThuat_DungCu(string _DK, Boolean _qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMPhauThuat_DungCu_Finds", _DK, _qadmin));
        }
        public override String InsertDMPhauThuat_DungCu(String _TenDC, string _maMay, String _nguoiSD, String MaDVT, String GhiChu)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMPhauThuat_DungCu_CREATE", _TenDC, _maMay, _nguoiSD, MaDVT, GhiChu));
        }
        public override void UpdateDMPhauThuat_DungCu(String _MaDC, String _TenDC, string _maMay, String _nguoiSD, String MaDVT, String GhiChu)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMPhauThuat_DungCu_update", _MaDC, _TenDC, _maMay, _nguoiSD, MaDVT, GhiChu);
        }
        public override void DeleteDMPhauThuat_DungCu(String _maMay, String _nguoiSD, String _MaDC)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMPhauThuat_DungCu_Deleted", _maMay, _nguoiSD, _MaDC);
        }
        #endregion
        #region Benh an BenhAn_PhauThuat_DungCuMo
        public override String InsertBenhAn_PhauThuat_DungCuMo(String _MaBA, int _STT, int _STTKhoa, String _MaDungCu, int _SLTruoc, int _SLSau, string _ghiChu)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(SQLConnectionDataNoiT, DatabaseOwner + ObjectQualifier + "spBenhAn_PhauThuat_DungCuMo_SCREATE", _MaBA, _STT, _STTKhoa, _MaDungCu, _SLTruoc, _SLSau, _ghiChu));
        }
        public override void UpdateBenhAn_PhauThuat_DungCuMo(String _MaBA, int _STT, int _STTKhoa, String _MaDC, int _SLTruoc, int _SLSau, String _ghiChu, Boolean _huy, String _maMay, String _nguoiSD)
        {
            SqlHelper.ExecuteNonQuery(SQLConnectionDataNoiT, DatabaseOwner + ObjectQualifier + "spBenhAn_PhauThuat_DungCuMo_SUPDATE", _MaBA, _STT, _STTKhoa, _MaDC, _SLTruoc, _SLSau, _ghiChu, _huy, _maMay, _nguoiSD);
        }
        public override void DeleteBenhAn_PhauThuat_DungCuMo(String maBA, int stt, int sttkhoa, string maDC, String Mamay, String Nguoisd)
        {
            SqlHelper.ExecuteNonQuery(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spBenhAn_PhauThuat_DungCuMo_SDELETE", maBA, stt, sttkhoa, maDC, Mamay, Nguoisd);
        }
        public override IDataReader GetAllBenhAn_PhauThuat_DungCuMo(String MaBA, int STT, int STTKhoa)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spBenhAn_PhauThuat_DungCuMo_GetAll", MaBA, STT, STTKhoa));
        }
        #endregion
        #region Benh an BenhAn_ThuPhanUngThuoc
        public override String InsertBenhAn_ThuPhanUngThuoc(String _MaBA, int _STT, int _STTKhoa, String _MaThuoc, String _MaBN, DateTime _TuNgay, DateTime _DenNgay, String _PhuongPhapThu, String _BSChiDinh, String _NguoiThu, String _BSDoc, String _KQ)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(SQLConnectionDataNoiT, DatabaseOwner + ObjectQualifier + "spBenhAn_ThuPhanUngThuoc_CREATE", _MaBA, _STT, _STTKhoa, _MaThuoc, _MaBN, _TuNgay, _DenNgay, _PhuongPhapThu, _BSChiDinh, _NguoiThu, _BSDoc, _KQ));
        }
        public override void UpdateBenhAn_ThuPhanUngThuoc(String _MaThu, String _MaBA, int _STT, int _STTKhoa, String _MaThuoc, String _MaBN, DateTime _TuNgay, DateTime _DenNgay, String _PhuongPhapThu, String _BSChiDinh, String _NguoiThu, String _BSDoc, String _KQ, Boolean _huy, String _maMay, String _nguoiSD)
        {
            SqlHelper.ExecuteNonQuery(SQLConnectionDataNoiT, DatabaseOwner + ObjectQualifier + "spBenhAn_ThuPhanUngThuoc_UPDATE", _MaThu, _MaBA, _STT, _STTKhoa, _MaThuoc, _MaBN, _TuNgay, _DenNgay, _PhuongPhapThu, _BSChiDinh, _NguoiThu, _BSDoc, _KQ, _huy, _maMay, _nguoiSD);
        }
        public override void DeleteBenhAn_ThuPhanUngThuoc(String Mamay, String Nguoisd, String MaThu)
        {
            SqlHelper.ExecuteNonQuery(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spBenhAn_ThuPhanUngThuoc_DELETED", Mamay, Nguoisd, MaThu);
        }
        public override IDataReader GetAllBenhAn_ThuPhanUngThuoc(String MaBA, int STT, int STTKhoa)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spBenhAn_ThuPhanUngThuoc_GetAll", MaBA, STT, STTKhoa));
        }
        public override IDataReader GetBenhAn_ThuPhanUngThuoc(String MaBA, int STT, int STTKhoa, String MaThu)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spBenhAn_ThuPhanUngThuoc_Get", MaBA, STT, STTKhoa, MaThu));
        }
        #endregion

        #region BenhAn_PhauThuat_PhieuKKDC
        public override String InsertBenhAn_PhauThuat_PhieuKKDC(String _MaBA, int _STT, int _STTKhoa, DateTime _ngayKK, String _nguoiKK, String _BSMo, String _maMay, String _nguoiSD)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(SQLConnectionDataNoiT, DatabaseOwner + ObjectQualifier + "spBenhAn_PhauThuat_PhieuKKDC_CREATE", _MaBA, _STT, _STTKhoa, _ngayKK, _nguoiKK, _BSMo, _maMay, _nguoiSD));
        }
        public override void UpdateBenhAn_PhauThuat_PhieuKKDC(String _MaBA, int _STT, int _STTKhoa, DateTime _ngayKK, String _nguoiKK, String _BSMo, String _maMay, String _nguoiSD, Boolean _huy)
        {
            SqlHelper.ExecuteNonQuery(SQLConnectionDataNoiT, DatabaseOwner + ObjectQualifier + "spBenhAn_PhauThuat_PhieuKKDC_UPDATE", _MaBA, _STT, _STTKhoa, _ngayKK, _nguoiKK, _BSMo, _maMay, _nguoiSD, _huy);
        }
        public override void DeleteBenhAn_PhauThuat_PhieuKKDC(String _MaBA, int _STT, int _STTKhoa, String _maMay, String _nguoiSD)
        {
            SqlHelper.ExecuteNonQuery(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spBenhAn_PhauThuat_PhieuKKDC_DELETED", _MaBA, _STT, _STTKhoa, _maMay, _nguoiSD);
        }
        public override IDataReader GetAllBenhAn_PhauThuat_PhieuKKDC(String MaBA, int STT, int STTKhoa)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spBenhAn_PhauThuat_PhieuKKDC_Get", MaBA, STT, STTKhoa));
        }
        #endregion
        #region Benh an Thuoc su dung ke
        public override int InsertBenhAn_ThuocSD_Ke(String _maBA, Int32 _sTT, String _mathuoc, String _maBN, SmartDate _ngayDK, Decimal _sLKeDon, Decimal _sLMua, String _bSChiDinh, String _chandoan, String _makhoa, String _lieuDung, String _cachDung, String _maMay, String _nguoiLap)
        {
            return System.Convert.ToInt32(SqlHelper.ExecuteScalar(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spBenhAn_ThuocSD_Ke_Create", _maBA, _sTT, _mathuoc, _maBN, _ngayDK.DBValue, _sLKeDon, _bSChiDinh, _chandoan, _makhoa, _lieuDung, _cachDung, _maMay, _nguoiLap));
        }
        public override void UpdateBenhAn_ThuocSD_Ke(String _maBA, Int32 _sTT, String _mathuoc, String _maBN, SmartDate _ngayDK, Decimal _sLKeDon, Decimal _sLMua, String _bSChiDinh, String _chandoan, String _makhoa, String _lieuDung, String _cachDung, String _maMay, Boolean _huy, String _nguoiSD)
        {
            SqlHelper.ExecuteNonQuery(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spBenhAn_ThuocSD_Ke_Update", _maBA, _sTT, _mathuoc, _maBN, _ngayDK.DBValue, _sLKeDon, _sLMua, _bSChiDinh, _chandoan, _makhoa, _lieuDung, _cachDung, _maMay, _huy, _nguoiSD);
        }
        public override void DeleteBenhAn_ThuocSD_Ke(String _maMay, String _nguoiSD, String _maBA, Int32 _sTT, string lydohuy)
        {
            SqlHelper.ExecuteNonQuery(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spBenhAn_ThuocSD_Ke_Deleted", _maMay, _nguoiSD, _maBA, _sTT, lydohuy);
        }
        #endregion
        #region Benh an  ke ngoai
        public override int InsertBenhAn_KeNgoai(String _maBA, Int32 _sTTKhoa, Int32 _sTT, String _mathuoc, String _maBN, SmartDate _ngayDK, Decimal _sLKeDon, Decimal _sLMua, String _bSChiDinh, String _chandoan, String _makhoa, String _lieuDung, String _cachDung, String _maMay, String _nguoiLap)
        {
            return System.Convert.ToInt32(SqlHelper.ExecuteScalar(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spBenhAn_KeNgoai_Create", _maBA, _sTTKhoa, _sTT, _mathuoc, _maBN, _ngayDK.DBValue, _sLKeDon, _bSChiDinh, _chandoan, _makhoa, _lieuDung, _cachDung, _maMay, _nguoiLap));
        }
        public override void UpdateBenhAn_KeNgoai(String _maBA, Int32 _sTTKhoa, Int32 _sTT, String _mathuoc, String _maBN, SmartDate _ngayDK, Decimal _sLKeDon, Decimal _sLMua, String _bSChiDinh, String _chandoan, String _makhoa, String _lieuDung, String _cachDung, String _maMay, Boolean _huy, String _nguoiSD)
        {
            SqlHelper.ExecuteNonQuery(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spBenhAn_KeNgoai_Update", _maBA, _sTTKhoa, _sTT, _mathuoc, _maBN, _ngayDK.DBValue, _sLKeDon, _sLMua, _bSChiDinh, _chandoan, _makhoa, _lieuDung, _cachDung, _maMay, _huy, _nguoiSD);
        }
        public override void DeleteBenhAn_KeNgoai(String _maMay, String _nguoiSD, String _maBA, Int32 _sTTKhoa, Int32 _sTT, string lydohuy)
        {
            SqlHelper.ExecuteNonQuery(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spBenhAn_KeNgoai_Deleted", _maMay, _nguoiSD, _maBA, _sTTKhoa, _sTT, lydohuy);
        }
        #endregion
        #region Benh an Thuoc su dung
        public override Int32 InsertBenhAn_ThuocSD(String _maBA, Int32 _sTT, Int32 _sTTKhoa, String _mathuoc, String _maBN, SmartDate _ngayDK, Decimal _sLKeDon, Decimal _sLMua, Decimal _dongiaTT, Decimal _donGiaBH, Decimal _giaChenhLech, Decimal _ck, String _bSChiDinh, string _lieuDung, string _cachDung, Boolean _tinhtien, Boolean _bHTinhtien, Boolean _tinhNgoai, Byte _dATT, String _nguoiTT, SmartDate _ngayTToan, Boolean _daTra, String _nguoiTra, SmartDate _ngaytra, Decimal _sLTra, Boolean _duyet, Boolean _phat, SmartDate _ngayP, String _nguoiD, String _nguoiP, SmartDate _ngayD, String _maMay, String _nguoiLap, String _maKX, SmartDate _TuNgay, SmartDate _DenNgay, Boolean _thuocbx, Boolean _thuocdx, string makhoa, Boolean _thuocpm, string _madt, Int32 _sTTdt, Boolean _Thuoctutruc, string _tenthuoc, byte _toso, string _dienbien, string _ylenh)
        {
            return System.Convert.ToInt16(SqlHelper.ExecuteScalar(SQLConnectionDataNoiT, DatabaseOwner + ObjectQualifier + "spBenhan_ThuocSD_Create", _maBA, _sTT, _sTTKhoa, _mathuoc, _maBN, _ngayDK.DBValue, _sLKeDon, _sLMua, _dongiaTT, _donGiaBH, _giaChenhLech, _ck, _bSChiDinh, _lieuDung, _cachDung, _tinhtien, _bHTinhtien, _tinhNgoai, _dATT, _nguoiTT, _ngayTToan.DBValue, _daTra, _nguoiTra, _ngaytra.DBValue, _sLTra, _duyet, _phat, _ngayP.DBValue, _nguoiD, _nguoiP, _ngayD.DBValue, _maMay, _nguoiLap, _maKX, _TuNgay.DBValue, _DenNgay.DBValue, _thuocbx, _thuocdx, makhoa, _thuocpm, _madt, _sTTdt, _Thuoctutruc, _tenthuoc, _toso, _dienbien, _ylenh));
        }
        public override void UpdateBenhAn_ThuocSD(String _maBA, Int32 _sTT, Int32 _sTTKhoa, String _mathuoc, String _maBN, SmartDate _ngayDK, Decimal _sLKeDon, Decimal _sLMua, Decimal _dongiaTT, Decimal _donGiaBH, Decimal _giaChenhLech, Decimal _ck, String _bSChiDinh, string _lieuDung, string _cachDung, Boolean _tinhtien, Boolean _bHTinhtien, Boolean _tinhNgoai, Byte _dATT, String _nguoiTT, SmartDate _ngayTToan, Boolean _daTra, String _nguoiTra, SmartDate _ngaytra, Decimal _sLTra, Boolean _duyet, Boolean _phat, SmartDate _ngayP, String _nguoiD, String _nguoiP, SmartDate _ngayD, String _maMay, Boolean _huy, String _nguoiSD, String _maKX, SmartDate _TuNgay, SmartDate _DenNgay, Boolean _thuocbx, Boolean _thuocdx, Boolean _thuocpm, Boolean _Thuoctutruc, string _tenthuoc, string _SOLO, string _TOCDO, SmartDate _NgayBD, SmartDate _NgayKT, string _YTA, byte _toso, string _dienbien, string _ylenh)
        {
            SqlHelper.ExecuteNonQuery(SQLConnectionDataNoiT, DatabaseOwner + ObjectQualifier + "spBenhan_ThuocSD_Update1", _maBA, _sTT, _sTTKhoa, _mathuoc, _maBN, _ngayDK.DBValue, _sLKeDon, _sLMua, _dongiaTT, _donGiaBH, _giaChenhLech, _ck, _bSChiDinh, _lieuDung, _cachDung, _tinhtien, _bHTinhtien, _tinhNgoai, _dATT, _nguoiTT, _ngayTToan.DBValue, _daTra, _nguoiTra, _ngaytra.DBValue, _sLTra, _duyet, _phat, _ngayP.DBValue, _nguoiD, _nguoiP, _ngayD.DBValue, _maMay, _huy, _nguoiSD, _maKX, _TuNgay.DBValue, _DenNgay.DBValue, _thuocbx, _thuocdx, _thuocpm, _Thuoctutruc, _tenthuoc, _SOLO, _TOCDO, _NgayBD.DBValue, _NgayKT.DBValue, _YTA, _toso, _dienbien, _ylenh);
        }
        public override void DeleteBenhAn_ThuocSD(string _maMay, String _nguoiSD, String _maBA, Int32 _sTT, Int32 _sTTKhoa, string lydohuy)
        {
            SqlHelper.ExecuteNonQuery(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spBenhan_ThuocSD_Deleted", _maMay, _nguoiSD, _maBA, _sTT, _sTTKhoa, lydohuy);
        }
        #endregion

        #region Benh an VTTH
        public override Int32 InsertBenhAn_VTTH(Int32 _sTT, String _maBA, Int32 _sTTKhoa, String _maVT, String _maBN, SmartDate _ngayDK, decimal _sLKeDon, decimal _sLMua, Decimal _dongiaTT, Decimal _donGiaBH, Decimal _giaChenhLech, Decimal _ck, String _bSChiDinh, Boolean _tinhtien, Boolean _bHTinhtien, Boolean _tinhNgoai, Byte _dATT, String _nguoiTT, SmartDate _ngayTToan, Boolean _daTra, String _nguoiTra, SmartDate _ngaytra, Decimal _sLTra, Boolean _duyet, Boolean _phat, SmartDate _ngayP, String _nguoiD, String _nguoiP, SmartDate _ngayD, String _maMay, String _nguoiLap, SmartDate _TuNgay, SmartDate _DenNgay, String _makhoa, Boolean _thuocpm, Boolean _thuocbx, Boolean _thuocdx, string _madt, Int32 _sTTdt, Boolean _Thuoctutruc)
        {
            return System.Convert.ToInt32(SqlHelper.ExecuteScalar(SQLConnectionDataNoiT, DatabaseOwner + ObjectQualifier + "spBenhan_VTTH_Create2", _sTT, _maBA, _sTTKhoa, _maVT, _maBN, _ngayDK.DBValue, _sLKeDon, _sLMua, _dongiaTT, _donGiaBH, _giaChenhLech, _ck, _bSChiDinh, _tinhtien, _bHTinhtien, _tinhNgoai, _dATT, _nguoiTT, _ngayTToan.DBValue, _daTra, _nguoiTra, _ngaytra.DBValue, _sLTra, _duyet, _phat, _ngayP.DBValue, _nguoiD, _nguoiP, _ngayD.DBValue, _maMay, _nguoiLap, _TuNgay.DBValue, _DenNgay.DBValue, _makhoa, _thuocpm, _thuocbx, _thuocdx, _madt, _sTTdt, _Thuoctutruc));
        }
        public override void UpdateBenhAn_VTTH(Int32 _sTT, String _maBA, Int32 _sTTKhoa, String _maVT, String _maBN, SmartDate _ngayDK, decimal _sLKeDon, decimal _sLMua, Decimal _dongiaTT, Decimal _donGiaBH, Decimal _giaChenhLech, Decimal _ck, String _bSChiDinh, Boolean _tinhtien, Boolean _bHTinhtien, Boolean _tinhNgoai, Byte _dATT, String _nguoiTT, SmartDate _ngayTToan, Boolean _daTra, String _nguoiTra, SmartDate _ngaytra, Decimal _sLTra, Boolean _duyet, Boolean _phat, SmartDate _ngayP, String _nguoiD, String _nguoiP, SmartDate _ngayD, String _maMay, Boolean _huy, String _nguoiSD, SmartDate _TuNgay, SmartDate _DenNgay, Boolean _thuocpm, Boolean _thuocdx, Boolean _thuocbx, Boolean _Thuoctutruc)
        {
            SqlHelper.ExecuteNonQuery(SQLConnectionDataNoiT, DatabaseOwner + ObjectQualifier + "spBenhan_VTTH_Update", _sTT, _maBA, _sTTKhoa, _maVT, _maBN, _ngayDK.DBValue, _sLKeDon, _sLMua, _dongiaTT, _donGiaBH, _giaChenhLech, _ck, _bSChiDinh, _tinhtien, _bHTinhtien, _tinhNgoai, _dATT, _nguoiTT, _ngayTToan.DBValue, _daTra, _nguoiTra, _ngaytra.DBValue, _sLTra, _duyet, _phat, _ngayP.DBValue, _nguoiD, _nguoiP, _ngayD.DBValue, _maMay, _huy, _nguoiSD, _TuNgay.DBValue, _DenNgay.DBValue, _thuocpm, _thuocdx, _thuocbx, _Thuoctutruc);
        }
        public override void DeleteBenhAn_VTTH(string _maMay, String _nguoiSD, String _maBA, Int32 _sTT, Int32 _sTTKhoa, string lydohuy)
        {
            SqlHelper.ExecuteNonQuery(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spBenhan_VTTH_Deleted", _maMay, _nguoiSD, _maBA, _sTT, _sTTKhoa, lydohuy);
        }
        #endregion

        #region Benh an Mau
        public override Int32 InsertBenhAn_Mau(String _maBA, Int32 _sTT, Int32 _sTTKhoa, String _maCPMau, String _maBN, SmartDate _ngayDK, Decimal _sLKeDon, Decimal _sLMua, Decimal _dongiaTT, Decimal _donGiaBH, Decimal _giaChenhLech, Decimal _ck, String _bSChiDinh, Boolean _tinhtien, Boolean _bHTinhtien, Boolean _tinhNgoai, Byte _dATT, String _nguoiTT, SmartDate _ngayTToan, Boolean _daTra, String _nguoiTra, SmartDate _ngaytra, Decimal _sLTra, Boolean _duyet, Boolean _phat, SmartDate _ngayP, String _nguoiD, String _nguoiP, SmartDate _ngayD, String _maMay, String _nguoiLap, SmartDate _TuNgay, SmartDate _DenNgay, string makhoa, Boolean _thuocpm, string _madt, Int32 _sTTdt)
        {
            return System.Convert.ToInt32(SqlHelper.ExecuteScalar(SQLConnectionDataNoiT, DatabaseOwner + ObjectQualifier + "spBenhan_Mau_Create2", _maBA, _sTT, _sTTKhoa, _maCPMau, _maBN, _ngayDK.DBValue, _sLKeDon, _sLMua, _dongiaTT, _donGiaBH, _giaChenhLech, _ck, _bSChiDinh, _tinhtien, _bHTinhtien, _tinhNgoai, _dATT, _nguoiTT, _ngayTToan.DBValue, _daTra, _nguoiTra, _ngaytra.DBValue, _sLTra, _duyet, _phat, _ngayP.DBValue, _nguoiD, _nguoiP, _ngayD.DBValue, _maMay, _nguoiLap, _TuNgay.DBValue, _DenNgay.DBValue, makhoa, _thuocpm, _madt, _sTTdt));
        }
        public override void UpdateBenhAn_Mau(String _maBA, Int32 _sTT, Int32 _sTTKhoa, String _maCPMau, String _maBN, SmartDate _ngayDK, Decimal _sLKeDon, Decimal _sLMua, Decimal _dongiaTT, Decimal _donGiaBH, Decimal _giaChenhLech, Decimal _ck, String _bSChiDinh, Boolean _tinhtien, Boolean _bHTinhtien, Boolean _tinhNgoai, Byte _dATT, String _nguoiTT, SmartDate _ngayTToan, Boolean _daTra, String _nguoiTra, SmartDate _ngaytra, Decimal _sLTra, Boolean _duyet, Boolean _phat, SmartDate _ngayP, String _nguoiD, String _nguoiP, SmartDate _ngayD, String _maMay, Boolean _huy, String _nguoiSD, SmartDate _TuNgay, SmartDate _DenNgay, Boolean _thuocpm)
        {
            SqlHelper.ExecuteNonQuery(SQLConnectionDataNoiT, DatabaseOwner + ObjectQualifier + "spBenhan_Mau_Update", _maBA, _sTT, _sTTKhoa, _maCPMau, _maBN, _ngayDK.DBValue, _sLKeDon, _sLMua, _dongiaTT, _donGiaBH, _giaChenhLech, _ck, _bSChiDinh, _tinhtien, _bHTinhtien, _tinhNgoai, _dATT, _nguoiTT, _ngayTToan.DBValue, _daTra, _nguoiTra, _ngaytra.DBValue, _sLTra, _duyet, _phat, _ngayP.DBValue, _nguoiD, _nguoiP, _ngayD.DBValue, _maMay, _huy, _nguoiSD, _TuNgay.DBValue, _DenNgay.DBValue, _thuocpm);
        }
        public override void DeleteBenhAn_Mau(string _maMay, String _nguoiSD, String _maBA, Int32 _sTT, Int32 _sTTKhoa, string lydohuy)
        {
            SqlHelper.ExecuteNonQuery(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spBenhan_Mau_Deleted", _maMay, _nguoiSD, _maBA, _sTT, _sTTKhoa, lydohuy);
        }
        public override Int32 InsertBenhAn_Mau(String _maBA, Int32 _sTT, Int32 _sTTKhoa, String _maCPMau, String _maBN, SmartDate _ngayDK, Decimal _sLKeDon, Decimal _sLMua, Decimal _dongiaTT, Decimal _donGiaBH, Decimal _giaChenhLech, Decimal _ck, String _bSChiDinh, Boolean _tinhtien, Boolean _bHTinhtien, Boolean _tinhNgoai, Byte _dATT, String _nguoiTT, SmartDate _ngayTToan, Boolean _daTra, String _nguoiTra, SmartDate _ngaytra, Decimal _sLTra, Boolean _duyet, Boolean _phat, SmartDate _ngayP, String _nguoiD, String _nguoiP, SmartDate _ngayD, String _maMay, String _nguoiLap, SmartDate _TuNgay, SmartDate _DenNgay, string makhoa, Boolean _thuocpm, string ABOBN, string ABOMau, string RhDBN
            , string HoaHopcheo1
            , string HoaHopcheo2
            , string HoaHoptieucau
            , string Coombs
            , string NguoiP2
            , string mapx
            , string mamau
            , string solo
            , string handung)
        {
            return System.Convert.ToInt32(SqlHelper.ExecuteScalar(SQLConnectionDataNoiT, DatabaseOwner + ObjectQualifier + "spBenhan_Mau_CT_Create", _maBA, _sTT, _sTTKhoa, _maCPMau, _maBN, _ngayDK.DBValue, _sLKeDon, _sLMua, _dongiaTT, _donGiaBH, _giaChenhLech, _ck, _bSChiDinh, _tinhtien, _bHTinhtien, _tinhNgoai, _dATT, _nguoiTT, _ngayTToan.DBValue, _daTra, _nguoiTra, _ngaytra.DBValue, _sLTra, _duyet, _phat, _ngayP.DBValue, _nguoiD, _nguoiP, _ngayD.DBValue, _maMay, _nguoiLap, _TuNgay.DBValue, _DenNgay.DBValue, makhoa, _thuocpm, ABOBN, ABOMau, RhDBN, HoaHopcheo1, HoaHopcheo2, HoaHoptieucau, Coombs, NguoiP2,mapx,mamau,solo,handung  ));
        }
        public override void UpdateBenhAn_Mau(String _maBA, Int32 _sTT, Int32 _sTTKhoa, String _maCPMau, String _maBN, SmartDate _ngayDK, Decimal _sLKeDon, Decimal _sLMua, Decimal _dongiaTT, Decimal _donGiaBH, Decimal _giaChenhLech, Decimal _ck, String _bSChiDinh, Boolean _tinhtien, Boolean _bHTinhtien, Boolean _tinhNgoai, Byte _dATT, String _nguoiTT, SmartDate _ngayTToan, Boolean _daTra, String _nguoiTra, SmartDate _ngaytra, Decimal _sLTra, Boolean _duyet, Boolean _phat, SmartDate _ngayP, String _nguoiD, String _nguoiP, SmartDate _ngayD, String _maMay, Boolean _huy, String _nguoiSD, SmartDate _TuNgay, SmartDate _DenNgay, Boolean _thuocpm,string ABOBN , string ABOMau, string RhDBN
            , string HoaHopcheo1
            , string HoaHopcheo2
            , string HoaHoptieucau
            , string Coombs
            , string NguoiP2
             , string mapx
             , string solo
            , string handung ,Boolean  _taibien, string _hoahoptaigiuong , SmartDate _ThoiGianBD, SmartDate _ThoiGianKT , decimal  _soluong, string _nhanxet , string _yta
     )
       {
           SqlHelper.ExecuteNonQuery(SQLConnectionDataNoiT, DatabaseOwner + ObjectQualifier + "spBenhan_Mau_CT_Update", _maBA, _sTT, _sTTKhoa, _maCPMau, _maBN, _ngayDK.DBValue, _sLKeDon, _sLMua, _dongiaTT, _donGiaBH, _giaChenhLech, _ck, _bSChiDinh, _tinhtien, _bHTinhtien, _tinhNgoai, _dATT, _nguoiTT, _ngayTToan.DBValue, _daTra, _nguoiTra, _ngaytra.DBValue, _sLTra, _duyet, _phat, _ngayP.DBValue, _nguoiD, _nguoiP, _ngayD.DBValue, _maMay, _huy, _nguoiSD, _TuNgay.DBValue, _DenNgay.DBValue, _thuocpm, ABOBN, ABOMau, RhDBN, HoaHopcheo1, HoaHopcheo2, HoaHoptieucau, Coombs, NguoiP2, mapx, solo, handung, _taibien, _hoahoptaigiuong, _ThoiGianBD.DBValue, _ThoiGianKT.DBValue , _soluong, _nhanxet, _yta);
        }
        #endregion

        #region Benh An Mau truyen
        public override Int32 InsertBenhAn_Mau_CT_T(String _maBA, Int32 _sTT, Int32 _sTTKhoa, SmartDate _ThoiGian, String _TocDo, String _MauSac, String _NhipTho, String _Mach, String _HuyetAp, String _maMay, String _nguoiSD, String _NhietDo, String Khac)
        {
            return System.Convert.ToInt32(SqlHelper.ExecuteScalar(SQLConnectionDataNoiT, DatabaseOwner + ObjectQualifier + "spBenhan_Mau_CT_T_Create", _maBA, _sTT, _sTTKhoa, _ThoiGian.DBValue, _TocDo, _MauSac, _NhipTho, _Mach, _HuyetAp, _maMay, _nguoiSD, _NhietDo, Khac));
        }
        public override void UpdateBenhAn_Mau_CT_T(String _maBA, Int32 _sTT, Int32 _sTTKhoa, Int32 _stttruyen, SmartDate _ThoiGian, String _TocDo, String _MauSac, String _NhipTho, String _Mach, String _HuyetAp, String _maMay, Boolean _huy, String _nguoiSD, String _NhietDo, String Khac)
        {
            SqlHelper.ExecuteNonQuery(SQLConnectionDataNoiT, DatabaseOwner + ObjectQualifier + "spBenhan_Mau_CT_T_Update", _maBA, _sTT, _sTTKhoa, _stttruyen, _ThoiGian.DBValue, _TocDo, _MauSac, _NhipTho, _Mach, _HuyetAp, _maMay, _huy, _nguoiSD, _NhietDo, Khac);
        }

        public override void DeleteBenhAn_Mau_CT_T(String _maMay, String _nguoiSD, String _maBA, Int32 _sTT, Int32 _sTTKhoa, Int32 _stttruyen)
        {
            SqlHelper.ExecuteNonQuery(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spBenhan_Mau_CT_T_Deleted", _maMay, _nguoiSD, _maBA, _sTT, _sTTKhoa, _stttruyen);
        }
        #endregion


        #region Benh an DanhGiaTTDD
        public override String InsertBenhAn_DanhGiaTTDD(String _maBA, Int32 _sTT, Int32 _sTTKhoa, Decimal _ChieuCao
           , Decimal _CanNangTruoc
           , Decimal _CanNangSau
           , Decimal _ChuViVongCanhTay
           , Decimal _Albumin
           , Decimal _Protein
           , Int32 _SutCan
           , Int32 _LuongAn
           , Int32 _BenhLy
           , Int32 _DuongNuoiAn
           , Boolean _HoiChanDD
           , Int32 _TaiDanhGia
           , String _KQDGTTDDBMI
           , Int32 _MucDoTTDDBMI
           , String _KQDGTTDDCanNangChieuCao
           , Int32 _MucDoTTDDCanNangChieuCao
           , String _KQDGTTDDChieuCaoTuoi
           , Int32 _MucDoTTDDChieuCaoTuoi
           , String _KQDGTTDDCanNangTuoi
           , Int32 _MucDoTTDDCanNangTuoi
           , String _KQDGTTDDAlbumin
           , Int32 _MucDoTTDDAlbumin
           , String _KQDGTTDDProtein
           , Int32 _MucDoTTDDProtein
           , Int32 _KetLuanTTDD
           , Int32 _LanDanhGia
           , String _DeNghiCanThiep
           , Int32 _TocDoTangCan, String _bsDieuTri, String _maMay, String _nguoiSD, String _maKhoa, String _ghiChu, String _chanDoan, String _MaCDAn, Decimal _CanNangTruocMangThai, SmartDate _CSTuNgay, SmartDate _CSDenNgay, SmartDate _NgayDG)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(SQLConnectionDataNoiT, DatabaseOwner + ObjectQualifier + "spBenhAn_DanhGiaTTDD_Create", _maBA, _sTT, _sTTKhoa, _ChieuCao
           , _CanNangTruoc
           , _CanNangSau
           , _ChuViVongCanhTay
           , _Albumin
           , _Protein
           , _SutCan
           , _LuongAn
           , _BenhLy
           , _DuongNuoiAn
           , _HoiChanDD
           , _TaiDanhGia
           , _KQDGTTDDBMI
           , _MucDoTTDDBMI
           , _KQDGTTDDCanNangChieuCao
           , _MucDoTTDDCanNangChieuCao
           , _KQDGTTDDChieuCaoTuoi
           , _MucDoTTDDChieuCaoTuoi
           , _KQDGTTDDCanNangTuoi
           , _MucDoTTDDCanNangTuoi
           , _KQDGTTDDAlbumin
           , _MucDoTTDDAlbumin
           , _KQDGTTDDProtein
           , _MucDoTTDDProtein
           , _KetLuanTTDD
           , _LanDanhGia
           , _DeNghiCanThiep
           , _TocDoTangCan, _bsDieuTri, _maMay, _nguoiSD, _maKhoa, _ghiChu, _chanDoan, _MaCDAn, _CanNangTruocMangThai, _CSTuNgay.DBValue, _CSDenNgay.DBValue, _NgayDG.DBValue));
        }
        public override void UpdateBenhAn_DanhGiaTTDD(String _maBA, Int32 _sTT, Int32 _sTTKhoa, Decimal _ChieuCao
           , Decimal _CanNangTruoc
           , Decimal _CanNangSau
           , Decimal _ChuViVongCanhTay
           , Decimal _Albumin
           , Decimal _Protein
           , Int32 _SutCan
           , Int32 _LuongAn
           , Int32 _BenhLy
           , Int32 _DuongNuoiAn
           , Boolean _HoiChanDD
           , Int32 _TaiDanhGia
           , String _KQDGTTDDBMI
           , Int32 _MucDoTTDDBMI
           , String _KQDGTTDDCanNangChieuCao
           , Int32 _MucDoTTDDCanNangChieuCao
           , String _KQDGTTDDChieuCaoTuoi
           , Int32 _MucDoTTDDChieuCaoTuoi
           , String _KQDGTTDDCanNangTuoi
           , Int32 _MucDoTTDDCanNangTuoi
           , String _KQDGTTDDAlbumin
           , Int32 _MucDoTTDDAlbumin
           , String _KQDGTTDDProtein
           , Int32 _MucDoTTDDProtein
           , Int32 _KetLuanTTDD
           , Int32 _LanDanhGia
           , String _DeNghiCanThiep
           , Int32 _TocDoTangCan, String _bsDieuTri, String _maMay, String _nguoiSD, Boolean _huy, String _maKhoa, String _ghiChu, String _chanDoan, String _MaCDAn, Decimal _CanNangTruocMangThai, SmartDate _CSTuNgay, SmartDate _CSDenNgay, SmartDate _NgayDG)
        {
            SqlHelper.ExecuteNonQuery(SQLConnectionDataNoiT, DatabaseOwner + ObjectQualifier + "spBenhAn_DanhGiaTTDD_Update", _maBA, _sTT, _sTTKhoa, _ChieuCao
           , _CanNangTruoc
           , _CanNangSau
           , _ChuViVongCanhTay
           , _Albumin
           , _Protein
           , _SutCan
           , _LuongAn
           , _BenhLy
           , _DuongNuoiAn
           , _HoiChanDD
           , _TaiDanhGia
           , _KQDGTTDDBMI
           , _MucDoTTDDBMI
           , _KQDGTTDDCanNangChieuCao
           , _MucDoTTDDCanNangChieuCao
           , _KQDGTTDDChieuCaoTuoi
           , _MucDoTTDDChieuCaoTuoi
           , _KQDGTTDDCanNangTuoi
           , _MucDoTTDDCanNangTuoi
           , _KQDGTTDDAlbumin
           , _MucDoTTDDAlbumin
           , _KQDGTTDDProtein
           , _MucDoTTDDProtein
           , _KetLuanTTDD
           , _LanDanhGia
           , _DeNghiCanThiep
           , _TocDoTangCan, _bsDieuTri, _maMay, _nguoiSD, _huy, _maKhoa, _ghiChu, _chanDoan, _MaCDAn, _CanNangTruocMangThai, _CSTuNgay.DBValue, _CSDenNgay.DBValue, _NgayDG.DBValue);
        }
        public override void DeleteBenhAn_DanhGiaTTDD(String _maMay, String _nguoiSD, String _maBA, Int32 _sTT, Int32 _sTTKhoa, Int32 LanDanhGia)
        {
            SqlHelper.ExecuteNonQuery(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spBenhAn_DanhGiaTTDD_Deleted", _maBA, _sTT, _sTTKhoa, _maMay, _nguoiSD, LanDanhGia);
        }
        public override IDataReader GetAllBenhAn_DanhGiaTTDD(String MaBA, bool qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spBenhAn_DanhGiaTTDD_GETAll", MaBA, qadmin));
        }
        public override IDataReader GetBenhAn_DanhGiaTTDD(String _maBA, Int32 _sTT, Int32 _sTTKhoa, bool qadmin, Int32 LanDanhGia)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spBenhan_DanhGiaTTDD_GET", _maBA, _sTT, _sTTKhoa, qadmin, LanDanhGia));
        }
        #endregion
        #region Benh an DanhGiaTTDD_BenhLQ
        public override String InsertBenhAn_DanhGiaTTDD_BenhLQ(String _maBA, String _MaBenhID, Int32 _LanDanhGia, String _maMay, String _nguoiSD)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(SQLConnectionDataNoiT, DatabaseOwner + ObjectQualifier + "spBenhAn_DanhGiaTTDD_BenhLQ_Create", _maBA, _MaBenhID, _LanDanhGia, _maMay, _nguoiSD));
        }
        public override void UpdateBenhAn_DanhGiaTTDD_BenhLQ(String _maBA, String _MaBenhID, Int32 _LanDanhGia, String _maMay, String _nguoiSD, Boolean _huy)
        {
            SqlHelper.ExecuteNonQuery(SQLConnectionDataNoiT, DatabaseOwner + ObjectQualifier + "spBenhAn_DanhGiaTTDD_BenhLQ_Update", _maBA, _MaBenhID, _LanDanhGia, _maMay, _nguoiSD, _huy);
        }
        public override void DeleteBenhAn_DanhGiaTTDD_BenhLQ(String _maMay, String _nguoiSD, String _maBA, String _MaBenhID, Int32 _LanDanhGia)
        {
            SqlHelper.ExecuteNonQuery(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spBenhAn_DanhGiaTTDD_BenhLQ_Deleted", _maMay, _nguoiSD, _maBA, _MaBenhID, _LanDanhGia);
        }
        public override IDataReader GetAllBenhAn_DanhGiaTTDD_BenhLQ(String MaBA, bool qadmin, Int32 _LanDanhGia)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spBenhAn_DanhGiaTTDD_BenhLQ_GETAll", MaBA, qadmin, _LanDanhGia));
        }
        public override IDataReader GetBenhAn_DanhGiaTTDD_BenhLQ(String MaBA, bool qadmin, Int32 _LanDanhGia)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spBenhan_DanhGiaTTDD_BenhLQ_GET", MaBA, qadmin, _LanDanhGia));
        }
        #endregion
        #region Benh an Nghi
        public override String InsertBenhAn_Nghi(String _maBA, Int32 _sTT, Int32 _sTTKhoa, String _maKhoa, String _maLDNghi, String _ghiChu, String _maMay, String _nguoiLap, SmartDate _tuNgay, SmartDate _denNgay)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(SQLConnectionDataNoiT, DatabaseOwner + ObjectQualifier + "spBenhAn_Nghi_Create", _maBA, _sTT, _sTTKhoa, _maKhoa, _maLDNghi, _ghiChu, _maMay, _nguoiLap, _tuNgay.DBValue, _denNgay.DBValue));
        }
        public override void UpdateBenhAn_Nghi(String _maBA, Int32 _sTT, Int32 _sTTKhoa, String _maKhoa, String _maLDNghi, String _ghiChu, SmartDate _tuNgay, SmartDate _denNgay, String _maMay, Boolean _huy, String _nguoiLap, SmartDate _NgayTT)
        {
            SqlHelper.ExecuteNonQuery(SQLConnectionDataNoiT, DatabaseOwner + ObjectQualifier + "spBenhAn_Nghi_Update", _maBA, _sTT, _sTTKhoa, _maKhoa, _maLDNghi, _ghiChu, _tuNgay.DBValue, _denNgay.DBValue, _maMay, _huy, _nguoiLap, _NgayTT.DBValue);
        }
        public override void DeleteBenhAn_Nghi(string _maMay, String _nguoiSD, String _maBA, Int32 _sTT, Int32 _sTTKhoa, string lydohuy)
        {
            SqlHelper.ExecuteNonQuery(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spBenhAn_Nghi_Deleted", _maMay, _nguoiSD, _maBA, _sTT, _sTTKhoa, lydohuy);
        }
        public override IDataReader GetAllBenhAn_Nghi(String MaBA, string dk, bool qadmin)
        {
           
                return ((IDataReader)SqlHelper.ExecuteReader(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spBenhAn_Nghi_GETAll", MaBA, dk, qadmin));
        }
        public override IDataReader GetAllBenhAn_Nghi(String MaBA, string dk, bool qadmin,byte loaikq)
        {
            if (loaikq ==1)
                return ((IDataReader)SqlHelper.ExecuteReader(ConnectionStringChuyenBN, DatabaseOwner + ObjectQualifier + "spBenhAn_Nghi_GETAll", MaBA, dk, qadmin));
            else
               return ((IDataReader)SqlHelper.ExecuteReader(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spBenhAn_Nghi_GETAll", MaBA, dk, qadmin));
        }
        public override IDataReader GetAllBenhAn_NghiBySTTKhoa(String maBA, string dk, bool qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spBenhAn_Nghi_GETAll", maBA, dk, qadmin));
        }
        public override IDataReader GetBenhAn_Nghi(String _maBA, Int32 _sTT, Int32 _sTTKhoa, bool qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spBenhan_Nghi_GET", _maBA, _sTT, _sTTKhoa, qadmin));
        }
        #endregion

        #region Benh an SoKet
        public override String InsertBenhAn_SoKet(String maBA, Int32 sTT, Int32 sTTKhoa, String maKhoa, String dienBien, String xetNghiem, String quaTrinh, String danhGia, String huongDT, String bsDieuTri, String ghiChu, String maMay, String nguoiLap, SmartDate tuNgay, SmartDate _denNgay, string chandoan)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(SQLConnectionDataNoiT, DatabaseOwner + ObjectQualifier + "spBenhAn_SoKet_Create", maBA, sTT, sTTKhoa, maKhoa, dienBien, xetNghiem, quaTrinh, danhGia, huongDT, bsDieuTri, ghiChu, maMay, nguoiLap, tuNgay.DBValue, _denNgay.DBValue,chandoan));
        }
        public override void UpdateBenhAn_SoKet(String maBA, Int32 sTT, Int32 sTTKhoa, String maKhoa, String dienBien, String xetNghiem, String quaTrinh, String danhGia, String huongDT, String bsDieuTri, String ghiChu, SmartDate tuNgay, SmartDate denNgay, String maMay, Boolean huy, String nguoiLap, string chandoan)
        {
            SqlHelper.ExecuteNonQuery(SQLConnectionDataNoiT, DatabaseOwner + ObjectQualifier + "spBenhAn_SoKet_Update", maBA, sTT, sTTKhoa, maKhoa, dienBien, xetNghiem, quaTrinh, danhGia, huongDT, bsDieuTri, ghiChu, tuNgay.DBValue, denNgay.DBValue, maMay, huy, nguoiLap, chandoan);
        }
        public override void DeleteBenhAn_SoKet(string maMay, String nguoiSD, String maBA, Int32 sTT, Int32 _sTTKhoa)
        {
            SqlHelper.ExecuteNonQuery(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spBenhAn_SoKet_Deleted", maMay, nguoiSD, maBA, sTT, _sTTKhoa);
        }
        public override IDataReader GetAllBenhAn_SoKet(String MaBA, string dk, bool qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spBenhAn_SoKet_GETAll", MaBA, dk, qadmin));
        }
        public override IDataReader GetAllBenhAn_SoKetBySTTKhoa(String maBA, string dk, bool qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spBenhAn_SoKet_GETAll", maBA, dk, qadmin));
        }
        public override IDataReader GetBenhAn_SoKet(String maBA, Int32 sTT, Int32 _sTTKhoa, bool qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spBenhan_SoKet_GET", maBA, sTT, _sTTKhoa, qadmin));
        }
        #endregion
        #region Benh an DanhGiaHoSo_C
        public override String InsertBenhAn_DanhGiaHoSo_C(String maBA, String maDGHS, Decimal diemDG, String ghiChu, String maMay, String nguoiSD)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(SQLConnectionDataNoiT, DatabaseOwner + ObjectQualifier + "spBenhAn_DanhGiaHoSo_C_Create", maBA, maDGHS, diemDG, ghiChu, maMay, nguoiSD));
        }
        public override void UpdateBenhAn_DanhGiaHoSo_C(String maBA, String maDGHS, Decimal diemDG, String ghiChu, String maMay, bool huy, String _nguoiSD)
        {
            SqlHelper.ExecuteNonQuery(SQLConnectionDataNoiT, DatabaseOwner + ObjectQualifier + "spBenhAn_DanhGiaHoSo_C_Update", maBA, maDGHS, diemDG, ghiChu, maMay, huy, _nguoiSD);
        }
        public override void DeleteBenhAn_DanhGiaHoSo_C(String maBA, String maDGHS, String maMay, String nguoiSD)
        {
            SqlHelper.ExecuteNonQuery(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spBenhAn_DanhGiaHoSo_C_Deleted", maBA, maDGHS, maMay, nguoiSD);
        }
        public override IDataReader GetAllBenhAn_DanhGiaHoSo_C(String MaDGHS, bool qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spBenhAn_DanhGiaHoSo_C_GET", MaDGHS, qadmin));
        }
        public override IDataReader GetAllBenhAn_DanhGiaHoSo_CByMaDGHS(String maBA, String maDGHS, string dk, bool qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spBenhAn_DanhGiaHoSo_C_GETAllByMaDGHS",maBA , maDGHS,dk, qadmin));
        }
        public override IDataReader GetBenhAn_DanhGiaHoSo_C(String _maDGHS, bool qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spBenhan_DanhGiaHoSo_C_GET", _maDGHS, qadmin));
        }
        #endregion
        #region Benh an DanhGiaHoSo
        public override String InsertBenhAn_DanhGiaHoSo(String maBA, String nguoiDG, SmartDate ngayDG, String nguoiLap, String ghiChu, String maMay, String _nguoiSD)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(SQLConnectionDataNoiT, DatabaseOwner + ObjectQualifier + "spBenhAn_DanhGiaHoSo_Create", maBA, nguoiDG, ngayDG.DBValue, nguoiLap, ghiChu, maMay, _nguoiSD));
        }
        public override void UpdateBenhAn_DanhGiaHoSo(String maBA, String nguoiDG, SmartDate ngayDG, String nguoiLap, String ghiChu, String maMay, String nguoiSD, Boolean huy)
        {
            SqlHelper.ExecuteNonQuery(SQLConnectionDataNoiT, DatabaseOwner + ObjectQualifier + "spBenhAn_DanhGiaHoSo_Update", maBA, nguoiDG, ngayDG.DBValue, nguoiLap, ghiChu, maMay, nguoiSD, huy);
        }
        public override void DeleteBenhAn_DanhGiaHoSo(String maBA, String maMay, String _nguoiSD)
        {
            SqlHelper.ExecuteNonQuery(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spBenhAn_DanhGiaHoSo_Deleted", maBA, maMay, _nguoiSD);
        }
        public override IDataReader GetAllBenhAn_DanhGiaHoSo(String MaBA, bool qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spBenhAn_DanhGiaHoSo_GETAll", MaBA, qadmin));
        }
        public override IDataReader GetBenhAn_DanhGiaHoSo(String _maBA, bool qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spBenhan_DanhGiaHoSo_GET", _maBA, qadmin));
        }
        #endregion

        #region Benh an Kham benh va tai kham
        public override String InsertBenhAn_TM(String _maBA, Int32 _sTTKhoa, SmartDate _ngayKham, String _bSKHAM, String _lyDoKham, String _mach, String _apHuyet, String _nhietDo, String _nhipTho, String _canNang, String _chieuCao, Boolean _da, Boolean _phu, Boolean _ngonTay, Boolean _hach, Boolean _khotho, Boolean _ho, Boolean _daunguc, Boolean _tim, Boolean _ngoiXom, Boolean _ngat, Boolean _hoihop, String _dauhieuKhac, String _longnguc, String _vitrimomtim, String _tiengtim, String _tiengthoitim, String _tiengthoimach, String _tiengthoikhac, String _machtuchi, String _hohap, String _bung, String _thanhkinh, String _coquankhac, String _dieuTri, String _benhSu, String _huongDT, String _mabenh, String _maBenhKem, String _machuyenkhoa, String _maMay, String _nguoiSD, String _tenBenh, String _tenBenhKem)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spBenhAn_TM_CREATE", _maBA, _sTTKhoa, _ngayKham.DBValue, _bSKHAM, _lyDoKham, _mach, _apHuyet, _nhietDo, _nhipTho, _canNang, _chieuCao, _da, _phu, _ngonTay, _hach, _khotho, _ho, _daunguc, _tim, _ngoiXom, _ngat, _hoihop, _dauhieuKhac, _longnguc, _vitrimomtim, _tiengtim, _tiengthoitim, _tiengthoimach, _tiengthoikhac, _machtuchi, _hohap, _bung, _thanhkinh, _coquankhac, _dieuTri, _benhSu, _huongDT, _mabenh, _maBenhKem, _machuyenkhoa, _maMay, _nguoiSD, _tenBenh, _tenBenhKem));
        }
        public override void UpdateBenhAn_TM(String _maBA, Int32 _sTT, Int32 _sTTKhoa, SmartDate _ngayKham, String _bSKHAM, String _lyDoKham, String _mach, String _apHuyet, String _nhietDo, String _nhipTho, String _canNang, String _chieuCao, Boolean _da, Boolean _phu, Boolean _ngonTay, Boolean _hach, Boolean _khotho, Boolean _ho, Boolean _daunguc, Boolean _tim, Boolean _ngoiXom, Boolean _ngat, Boolean _hoihop, String _dauhieuKhac, String _longnguc, String _vitrimomtim, String _tiengtim, String _tiengthoitim, String _tiengthoimach, String _tiengthoikhac, String _machtuchi, String _hohap, String _bung, String _thanhkinh, String _coquankhac, String _dieuTri, String _benhSu, String _huongDT, String _mabenh, String _maBenhKem, String _machuyenkhoa, String _maMay, Boolean _huy, String _nguoiSD, String _tenBenh, String _tenBenhKem)
        {
            SqlHelper.ExecuteNonQuery(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spBenhAn_TM_UPDATE", _maBA, _sTT, _sTTKhoa, _ngayKham.DBValue, _bSKHAM, _lyDoKham, _mach, _apHuyet, _nhietDo, _nhipTho, _canNang, _chieuCao, _da, _phu, _ngonTay, _hach, _khotho, _ho, _daunguc, _tim, _ngoiXom, _ngat, _hoihop, _dauhieuKhac, _longnguc, _vitrimomtim, _tiengtim, _tiengthoitim, _tiengthoimach, _tiengthoikhac, _machtuchi, _hohap, _bung, _thanhkinh, _coquankhac, _dieuTri, _benhSu, _huongDT, _mabenh, _maBenhKem, _machuyenkhoa, _maMay, _huy, _nguoiSD, _tenBenh, _tenBenhKem);
        }
        public override void DeleteBenhAn_TM(string _maMay, String _nguoiSD, String _maBA, Int32 _sTT, Int32 _sTTKhoa)
        {
            SqlHelper.ExecuteNonQuery(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spBenhAn_TM_Deleted", _maMay, _nguoiSD, _maBA, _sTT, _sTTKhoa);
        }
        #endregion

        #region Benh an Ngoai
        public override String InsertBenhAn_Ngoai(String _maBA, Int32 _sTTKhoa, SmartDate _ngayKham, String _bSKHAM, String _lyDoKham, String _mach, String _apHuyet, String _nhietDo, String _nhipTho, String _canNang, String _chieuCao, String _toanthan, String _benhngoaikhoa, String _coquankhac, String _dieuTri, String _benhSu, String _huongDT, String _mabenh, String _maBenhKem, String _machuyenkhoa, String _maMay, String _nguoiSD)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spBenhAn_Ngoai_CREATE", _maBA, _sTTKhoa, _ngayKham.DBValue, _bSKHAM, _lyDoKham, _mach, _apHuyet, _nhietDo, _nhipTho, _canNang, _chieuCao, _toanthan, _benhngoaikhoa, _coquankhac, _dieuTri, _benhSu, _huongDT, _mabenh, _maBenhKem, _machuyenkhoa, _maMay, _nguoiSD));
        }
        public override void UpdateBenhAn_Ngoai(String _maBA, Int32 _sTT, Int32 _sTTKhoa, SmartDate _ngayKham, String _bSKHAM, String _lyDoKham, String _mach, String _apHuyet, String _nhietDo, String _nhipTho, String _canNang, String _chieuCao, String _toanthan, String _benhngoaikhoa, String _coquankhac, String _dieuTri, String _benhSu, String _huongDT, String _mabenh, String _maBenhKem, String _machuyenkhoa, String _maMay, Boolean _huy, String _nguoiSD)
        {
            SqlHelper.ExecuteNonQuery(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spBenhAn_Ngoai_UPDATE", _maBA, _sTT, _sTTKhoa, _ngayKham.DBValue, _bSKHAM, _lyDoKham, _mach, _apHuyet, _nhietDo, _nhipTho, _canNang, _chieuCao, _toanthan, _benhngoaikhoa, _coquankhac, _dieuTri, _benhSu, _huongDT, _mabenh, _maBenhKem, _machuyenkhoa, _maMay, _huy, _nguoiSD);
        }
        public override void DeleteBenhAn_Ngoai(string _maMay, String _nguoiSD, String _maBA, Int32 _sTT, Int32 _sTTKhoa)
        {
            SqlHelper.ExecuteNonQuery(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spBenhAn_Ngoai_Deleted", _maMay, _nguoiSD, _maBA, _sTT, _sTTKhoa);
        }
        #endregion

        #region Benh an Co Xuong Khop
        public override String InsertBenhAn_CoXuongKhop(String _maBA, Int32 _sTTKhoa, SmartDate _ngayKham, String _bSKHAM, String _lyDoKham, String _mach, String _apHuyet, String _nhietDo, String _nhipTho, String _canNang, String _chieuCao, String _tinhThan, String _daNiemMac, String _tTNgoaiDa, String _hach, String _kNDiLai, String _ngonDuiTrong, String _hCRaynand, String _coXuongKhop, String _tuanHoan, String _hoHap, String _tieuHoa, String _thanTNieuSDuc, String _thanKinh, String _noiTiet, String _taiMuiHong, String _mat, String _dieuTri, String _benhSu, String _huongDT, String _mabenh, String _maBenhKem, String _machuyenkhoa, String _maMay, String _nguoiSD)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spBenhAn_CoXuongKhop_CREATE", _maBA, _sTTKhoa, _ngayKham.DBValue, _bSKHAM, _lyDoKham, _mach, _apHuyet, _nhietDo, _nhipTho, _canNang, _chieuCao, _tinhThan, _daNiemMac, _tTNgoaiDa, _hach, _kNDiLai, _ngonDuiTrong, _hCRaynand, _coXuongKhop, _tuanHoan, _hoHap, _tieuHoa, _thanTNieuSDuc, _thanKinh, _noiTiet, _taiMuiHong, _mat, _dieuTri, _benhSu, _huongDT, _mabenh, _maBenhKem, _machuyenkhoa, _maMay, _nguoiSD));
        }
        public override void UpdateBenhAn_CoXuongKhop(String _maBA, Int32 _sTT, Int32 _sTTKhoa, SmartDate _ngayKham, String _bSKHAM, String _lyDoKham, String _mach, String _apHuyet, String _nhietDo, String _nhipTho, String _canNang, String _chieuCao, String _tinhThan, String _daNiemMac, String _tTNgoaiDa, String _hach, String _kNDiLai, String _ngonDuiTrong, String _hCRaynand, String _coXuongKhop, String _tuanHoan, String _hoHap, String _tieuHoa, String _thanTNieuSDuc, String _thanKinh, String _noiTiet, String _taiMuiHong, String _mat, String _dieuTri, String _benhSu, String _huongDT, String _mabenh, String _maBenhKem, String _machuyenkhoa, String _maMay, Boolean _huy, String _nguoiSD)
        {
            SqlHelper.ExecuteNonQuery(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spBenhAn_CoXuongKhop_UPDATE", _maBA, _sTT, _sTTKhoa, _ngayKham.DBValue, _bSKHAM, _lyDoKham, _mach, _apHuyet, _nhietDo, _nhipTho, _canNang, _chieuCao, _tinhThan, _daNiemMac, _tTNgoaiDa, _hach, _kNDiLai, _ngonDuiTrong, _hCRaynand, _coXuongKhop, _tuanHoan, _hoHap, _tieuHoa, _thanTNieuSDuc, _thanKinh, _noiTiet, _taiMuiHong, _mat, _dieuTri, _benhSu, _huongDT, _mabenh, _maBenhKem, _machuyenkhoa, _maMay, _huy, _nguoiSD);
        }
        public override void DeleteBenhAn_CoXuongKhop(string _maMay, String _nguoiSD, String _maBA, Int32 _sTT, Int32 _sTTKhoa)
        {
            SqlHelper.ExecuteNonQuery(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spBenhAn_CoXuongKhop_Deleted", _maMay, _nguoiSD, _maBA, _sTT, _sTTKhoa);
        }
        #endregion

        #region Benh an Hoa chat
        public override Int32 InsertBenhAn_HoaChat(Int32 _sTT, String _maBA, Int32 _sTTKhoa, String _maHC, String _maBN, SmartDate _ngayDK, SmartDate _tuNgay, SmartDate _denNgay, Decimal _sLKeDon, Decimal _sLMua, Decimal _dongiaTT, Decimal _donGiaBH, Decimal _giaChenhLech, Decimal _ck, String _bSChiDinh, Boolean _tinhtien, Boolean _bHTinhtien, Boolean _tinhNgoai, Byte _dATT, String _nguoiTT, SmartDate _ngayTToan, Boolean _daTra, String _nguoiTra, SmartDate _ngaytra, Decimal _sLTra, Boolean _duyet, Boolean _phat, SmartDate _ngayP, String _nguoiD, String _nguoiP, SmartDate _ngayD, String _maMay, String _nguoiLap, String _maKhoa, Boolean _thuocpm, Boolean _thuocbx, Boolean _thuocdx, string _madt, Int32 _sTTdt, Boolean _Thuoctutruc)
        {
            return System.Convert.ToInt32(SqlHelper.ExecuteScalar(SQLConnectionDataNoiT, DatabaseOwner + ObjectQualifier + "spBenhan_HoaChat_Create2", _sTT, _maBA, _sTTKhoa, _maHC, _maBN, _ngayDK.DBValue, _tuNgay.DBValue, _denNgay.DBValue, _sLKeDon, _sLMua, _dongiaTT, _donGiaBH, _giaChenhLech, _ck, _bSChiDinh, _tinhtien, _bHTinhtien, _tinhNgoai, _dATT, _nguoiTT, _ngayTToan.DBValue, _daTra, _nguoiTra, _ngaytra.DBValue, _sLTra, _duyet, _phat, _ngayP.DBValue, _nguoiD, _nguoiP, _ngayD.DBValue, _maMay, _nguoiLap, _maKhoa, _thuocpm, _thuocbx, _thuocdx, _madt, _sTTdt, _Thuoctutruc));
        }
        public override void UpdateBenhAn_HoaChat(Int32 _sTT, String _maBA, Int32 _sTTKhoa, String _maHC, String _maBN, SmartDate _ngayDK, SmartDate _tuNgay, SmartDate _denNgay, Decimal _sLKeDon, Decimal _sLMua, Decimal _dongiaTT, Decimal _donGiaBH, Decimal _giaChenhLech, Decimal _ck, String _bSChiDinh, Boolean _tinhtien, Boolean _bHTinhtien, Boolean _tinhNgoai, Byte _dATT, String _nguoiTT, SmartDate _ngayTToan, Boolean _daTra, String _nguoiTra, SmartDate _ngaytra, Decimal _sLTra, Boolean _duyet, Boolean _phat, SmartDate _ngayP, String _nguoiD, String _nguoiP, SmartDate _ngayD, String _maMay, Boolean _huy, String _nguoiSD, Boolean _thuocpm, Boolean _thuocdx, Boolean _thuocbx, Boolean _Thuoctutruc)
        {
            SqlHelper.ExecuteNonQuery(SQLConnectionDataNoiT, DatabaseOwner + ObjectQualifier + "spBenhan_HoaChat_Update", _sTT, _maBA, _sTTKhoa, _maHC, _maBN, _ngayDK.DBValue, _tuNgay.DBValue, _denNgay.DBValue, _sLKeDon, _sLMua, _dongiaTT, _donGiaBH, _giaChenhLech, _ck, _bSChiDinh, _tinhtien, _bHTinhtien, _tinhNgoai, _dATT, _nguoiTT, _ngayTToan.DBValue, _daTra, _nguoiTra, _ngaytra.DBValue, _sLTra, _duyet, _phat, _ngayP.DBValue, _nguoiD, _nguoiP, _ngayD.DBValue, _maMay, _huy, _nguoiSD, _thuocpm, _thuocdx, _thuocbx, _Thuoctutruc);
        }
        public override void DeleteBenhAn_HoaChat(string _maMay, String _nguoiSD, Int32 _sTT, String _maBA, Int32 _sTTKhoa, string lydohuy)
        {
            SqlHelper.ExecuteNonQuery(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spBenhan_HoaChat_Deleted", _maMay, _nguoiSD, _maBA, _sTT, _sTTKhoa, lydohuy);
        }
        #endregion

        #region Benh an thanh toan ngoai

        public override Int32 InsertBenhAn_TTNgoai(String _maBA, Int32 _sTTKhoa, String _maDV, String _maBN, SmartDate _ngayDK, Decimal _soLuong, Decimal _slmua, Decimal _dongiaTT, Decimal _donGiaBH, Decimal _giaChenhLech, Decimal _ck, Byte _daTT, SmartDate _ngayTToan, String _bSKham, SmartDate _ngayGioKham, SmartDate _ngayKT, Boolean _tinhTien, Boolean _bHTinhTien, String _maMay, String _nguoiLap, String _nguoiTT, Decimal _tyGia, Boolean _aDGiaUSD, Byte _uuTien, String _maHuongDT, String _maBenh, String _maKhoa, SmartDate _tuNgay, SmartDate _denNgay, string khoakham, string _mabs, Boolean _thuocpm, string _madt, Int32 _sTTdt, String _bschidinh, String _ghichu)
        {
            return System.Convert.ToInt32(SqlHelper.ExecuteScalar(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spBenhAn_TTNgoai_Create", _maBA, _sTTKhoa, _maDV, _maBN, _ngayDK.DBValue, _soLuong, _slmua, _dongiaTT, _donGiaBH, _giaChenhLech, _ck, _daTT, _ngayTToan.DBValue, _bSKham, _ngayGioKham.DBValue, _ngayKT.DBValue, _tinhTien, _bHTinhTien, _maMay, _nguoiLap, _nguoiTT, _tyGia, _aDGiaUSD, _uuTien, _maHuongDT, _maBenh, _maKhoa, _tuNgay.DBValue, _denNgay.DBValue, khoakham, _mabs, _thuocpm, _madt, _sTTdt, _bschidinh, _ghichu));
        }
        public override void UpdateBenhAn_TTNgoai(String _maBA, Int32 _sTT, Int32 _sTTKhoa, String _maDV, String _maBN, SmartDate _ngayDK, Decimal _soLuong, Decimal _dongiaTT, Decimal _donGiaBH, Decimal _giaChenhLech, Decimal _ck, Byte _daTT, SmartDate _ngayTToan, String _bSKham, SmartDate _ngayGioKham, SmartDate _ngayKT, Boolean _tinhTien, Boolean _bHTinhTien, String _maMay, bool _huy, String _nguoiSD, String _lydoTra, Boolean _daTra, String _nguoiTra, SmartDate _ngaytra, Decimal _sLTra, String _nguoiTT, Decimal _tyGia, Boolean _aDGiaUSD, Byte _uuTien, String _maHuongDT, String _maBenh, String _maKhoa, SmartDate _tuNgay, SmartDate _denNgay, string khoakham, string _mabs, Boolean _thuocpm, String _bschidinh, String _ghichu, string _mabs3, string _mabs4, string _kq)
        {
            SqlHelper.ExecuteNonQuery(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spBenhAn_TTNgoai_Update", _maBA, _sTT, _sTTKhoa, _maDV, _maBN, _ngayDK.DBValue, _soLuong, _dongiaTT, _donGiaBH, _giaChenhLech, _ck, _daTT, _ngayTToan.DBValue, _bSKham, _ngayGioKham.DBValue, _ngayKT.DBValue, _tinhTien, _bHTinhTien, _maMay, _huy, _nguoiSD, _lydoTra, _daTra, _nguoiTra, _ngaytra.DBValue, _sLTra, _nguoiTT, _tyGia, _aDGiaUSD, _uuTien, _maHuongDT, _maBenh, _maKhoa, _tuNgay.DBValue, _denNgay.DBValue, khoakham, _mabs, _thuocpm, _bschidinh, _ghichu, _mabs3, _mabs4, _kq);
        }
        public override void DeleteBenhAn_TTNgoai(string _maMay, String _nguoiSD, String _maBA, Int32 _sTT, Int32 _sTTKhoa, string lydohuy)
        {
            SqlHelper.ExecuteNonQuery(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spBenhAn_TTNgoai_Deleted", _maMay, _nguoiSD, _maBA, _sTT, _sTTKhoa, lydohuy);
        }
        #endregion

        #region Benh an Chi tiet

        public override Int32 InsertBenhAn_C(String _maBA, Int32 _sTTKhoa, String _maDV, String _maBN, SmartDate _ngayDK, Decimal _soLuong, Decimal _slmua, Decimal _dongiaTT, Decimal _donGiaBH, Decimal _giaChenhLech, Decimal _ck, Byte _daTT, SmartDate _ngayTToan, String _bSKham, SmartDate _ngayGioKham, SmartDate _ngayKT, Boolean _tinhTien, Boolean _bHTinhTien, String _maMay, String _nguoiLap, String _nguoiTT, Decimal _tyGia, Boolean _aDGiaUSD, Byte _uuTien, String _maHuongDT, String _maBenh, String _maKhoa, SmartDate _tuNgay, SmartDate _denNgay, string khoakham, string _mabs, Boolean _thuocpm, string _madt, Int32 _sTTdt, String _bschidinh, String _ghichu)
        {
            return System.Convert.ToInt32(SqlHelper.ExecuteScalar(SQLConnectionDataNoiT, DatabaseOwner + ObjectQualifier + "spBENHAN_C_Create", _maBA, _sTTKhoa, _maDV, _maBN, _ngayDK.DBValue, _soLuong, _slmua, _dongiaTT, _donGiaBH, _giaChenhLech, _ck, _daTT, _ngayTToan.DBValue, _bSKham, _ngayGioKham.DBValue, _ngayKT.DBValue, _tinhTien, _bHTinhTien, _maMay, _nguoiLap, _nguoiTT, _tyGia, _aDGiaUSD, _uuTien, _maHuongDT, _maBenh, _maKhoa, _tuNgay.DBValue, _denNgay.DBValue, khoakham, _mabs, _thuocpm, _madt, _sTTdt, _bschidinh, _ghichu));
        }
        public override void UpdateBenhAn_C(String _maBA, Int32 _sTT, Int32 _sTTKhoa, String _maDV, String _maBN, SmartDate _ngayDK, Decimal _soLuong, Decimal _dongiaTT, Decimal _donGiaBH, Decimal _giaChenhLech, Decimal _ck, Byte _daTT, SmartDate _ngayTToan, String _bSKham, SmartDate _ngayGioKham, SmartDate _ngayKT, Boolean _tinhTien, Boolean _bHTinhTien, String _maMay, bool _huy, String _nguoiSD, String _lydoTra, Boolean _daTra, String _nguoiTra, SmartDate _ngaytra, Decimal _sLTra, String _nguoiTT, Decimal _tyGia, Boolean _aDGiaUSD, Byte _uuTien, String _maHuongDT, String _maBenh, String _maKhoa, SmartDate _tuNgay, SmartDate _denNgay, string khoakham, string _mabs, Boolean _thuocpm, String _bschidinh, String _ghichu, string _mabs3, string _mabs4, string _kq)
        {
            SqlHelper.ExecuteNonQuery(SQLConnectionDataNoiT, DatabaseOwner + ObjectQualifier + "spBENHAN_C_Update", _maBA, _sTT, _sTTKhoa, _maDV, _maBN, _ngayDK.DBValue, _soLuong, _dongiaTT, _donGiaBH, _giaChenhLech, _ck, _daTT, _ngayTToan.DBValue, _bSKham, _ngayGioKham.DBValue, _ngayKT.DBValue, _tinhTien, _bHTinhTien, _maMay, _huy, _nguoiSD, _lydoTra, _daTra, _nguoiTra, _ngaytra.DBValue, _sLTra, _nguoiTT, _tyGia, _aDGiaUSD, _uuTien, _maHuongDT, _maBenh, _maKhoa, _tuNgay.DBValue, _denNgay.DBValue, khoakham, _mabs, _thuocpm, _bschidinh, _ghichu, _mabs3, _mabs4, _kq);
        }
        public override void DeleteBenhAn_C(string _maMay, String _nguoiSD, String _maBA, Int32 _sTT, Int32 _sTTKhoa, string lydohuy)
        {
            SqlHelper.ExecuteNonQuery(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spBENHAN_C_Deleted", _maMay, _nguoiSD, _maBA, _sTT, _sTTKhoa, lydohuy);
        }
        #endregion

        #region Benh an Phau Thuat

        public override int InsertBenhAn_PhauThuat(String _maBA, Int32 _sTT, Int32 _sTTKhoa, String _maPT, String _maBN, SmartDate _ngayDK, Boolean _daThucHien, Decimal _sLYCau, Decimal _sLMua, Decimal _dongiaTT, Decimal _dongiaUSD, Decimal _tyGia, Decimal _donGiaBH, Decimal _giaChenhLech, Decimal _ck, String _bSChiDinh, String _cDTruocMo, String _cDSauMo, String _maGPBenh, Byte _hTPhauThuat, Boolean _taibienPT, Boolean _tinhtien, Boolean _bHTinhtien, Boolean _tinhNgoai, Byte _dATT, String _nguoiTT, SmartDate _ngayTToan, Boolean _aDGIAUSD, String _maMay, String _nguoiLap, string _makhoa, string _machungloai, string _malh, string _chieucao, string _cannang, byte _ca, string _maphong, string _ptvien, string _ptvienc, string _ptvien1, string _ptvien2, string _gayme, string _gaymec, string _gayme1, string _gayme2, string _cec, string _cecc, string _cec1, string _cec2, string _dungcu, string _dungcuc, string _dungcu1, string _dungcu2, string _loai, string _cachgayme, string pphauthuat, string maloaipt, string _tenBenhCDTruocMo, string _tenBenhCDSauMo, string _noidung, string _madt, Int32 _sTTdt)
        {
            return System.Convert.ToInt32(SqlHelper.ExecuteScalar(SQLConnectionDataNoiT, DatabaseOwner + ObjectQualifier + "spBenhan_PhauThuat_Create2", _maBA, _sTT, _sTTKhoa, _maPT, _maBN, _ngayDK.DBValue, _daThucHien, _sLYCau, _sLMua, _dongiaTT, _dongiaUSD, _tyGia, _donGiaBH, _giaChenhLech, _ck, _bSChiDinh, _cDTruocMo, _cDSauMo, _maGPBenh, _hTPhauThuat, _taibienPT, _tinhtien, _bHTinhtien, _tinhNgoai, _dATT, _nguoiTT, _ngayTToan.DBValue, _aDGIAUSD, _maMay, _nguoiLap, _makhoa, _machungloai, _malh, _chieucao, _cannang, _ca, _maphong, _ptvien, _ptvienc, _ptvien1, _ptvien2, _gayme, _gaymec, _gayme1, _gayme2, _cec, _cecc, _cec1, _cec2, _dungcu, _dungcuc, _dungcu1, _dungcu2, _loai, _cachgayme, pphauthuat, maloaipt, _tenBenhCDTruocMo, _tenBenhCDSauMo, _noidung, _madt, _sTTdt));
        }
        public override void UpdateBenhAn_PhauThuat(String _maBA, Int32 _sTT, Int32 _sTTKhoa, String _maPT, String _maBN, SmartDate _ngayDK, Boolean _daThucHien, Decimal _sLYCau, Decimal _sLMua, Decimal _dongiaTT, Decimal _dongiaUSD, Decimal _tyGia, Decimal _donGiaBH, Decimal _giaChenhLech, Decimal _ck, String _bSChiDinh, String _cDTruocMo, String _cDSauMo, String _maGPBenh, Byte _hTPhauThuat, Boolean _taibienPT, Boolean _tinhtien, Boolean _bHTinhtien, Boolean _tinhNgoai, Byte _dATT, String _nguoiTT, SmartDate _ngayTToan, Boolean _aDGIAUSD, String _maMay, Boolean _huy, String _nguoiSD, string _machungloai, string _malh, string _chieucao, string _cannang, byte _ca, string _maphong, string _ptvien, string _ptvienc, string _ptvien1, string _ptvien2, string _gayme, string _gaymec, string _gayme1, string _gayme2, string _cec, string _cecc, string _cec1, string _cec2, string _dungcu, string _dungcuc, string _dungcu1, string _dungcu2, string _loai, string _cachgayme, string pphauthuat, string maloaipt, string _tenBenhCDTruocMo, string _tenBenhCDSauMo, string _noidung)
        {
            SqlHelper.ExecuteNonQuery(SQLConnectionDataNoiT, DatabaseOwner + ObjectQualifier + "spBenhan_PhauThuat_Update", _maBA, _sTT, _sTTKhoa, _maPT, _maBN, _ngayDK.DBValue, _daThucHien, _sLYCau, _sLMua, _dongiaTT, _dongiaUSD, _tyGia, _donGiaBH, _giaChenhLech, _ck, _bSChiDinh, _cDTruocMo, _cDSauMo, _maGPBenh, _hTPhauThuat, _taibienPT, _tinhtien, _bHTinhtien, _tinhNgoai, _dATT, _nguoiTT, _ngayTToan.DBValue, _aDGIAUSD, _maMay, _huy, _nguoiSD, _machungloai, _malh, _chieucao, _cannang, _ca, _maphong, _ptvien, _ptvienc, _ptvien1, _ptvien2, _gayme, _gaymec, _gayme1, _gayme2, _cec, _cecc, _cec1, _cec2, _dungcu, _dungcuc, _dungcu1, _dungcu2, _loai, _cachgayme, pphauthuat, maloaipt, _tenBenhCDTruocMo, _tenBenhCDSauMo, _noidung);
        }
        public override void DeleteBenhAn_PhauThuat(string _maMay, String _nguoiSD, string _maBA, Int32 _sTT, Int32 _sTTKhoa, string lydohuy)
        {
            SqlHelper.ExecuteNonQuery(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spBenhan_PhauThuat_Deleted", _maMay, _nguoiSD, _maBA, _sTT, _sTTKhoa, lydohuy);
        }



        #endregion

        #region Benh an Phau Thuat Thanh vien
        public override int InsertBenhAn_PhauThuat_TV(String _maBA, Int32 _sTT, Int32 _sTTKhoa, String _maNV, Byte _vaiTro, String _ghichu, String _maMay, String _nguoiSD)
        {
            return System.Convert.ToInt32(SqlHelper.ExecuteScalar(SQLConnectionDataNoiT, DatabaseOwner + ObjectQualifier + "spBenhAn_PhauThuat_TV_CREATE", _maBA, _sTT, _sTTKhoa, _maNV, _vaiTro, _ghichu, _maMay, _nguoiSD));
        }
        public override void UpdateBenhAn_PhauThuat_TV(String _maBA, Int32 _sTT, Int32 _sTTKhoa, Int32 _sTTTV, String _maNV, Byte _vaiTro, String _ghichu, String _maMay, Boolean _huy, String _nguoiSD)
        {
            SqlHelper.ExecuteNonQuery(SQLConnectionDataNoiT, DatabaseOwner + ObjectQualifier + "spBenhAn_PhauThuat_TV_UPDATE", _maBA, _sTT, _sTTKhoa, _sTTTV, _maNV, _vaiTro, _ghichu, _maMay, _huy, _nguoiSD);
        }
        public override void DeleteBenhAn_PhauThuat_TV(String _maMay, String _nguoiSD, String _maBA, Int32 _sTT, Int32 _sTTKhoa, Int32 _sTTTV)
        {
            SqlHelper.ExecuteNonQuery(SQLConnectionDataNoiT, DatabaseOwner + ObjectQualifier + "spBenhAn_PhauThuat_TV_DELETED", _maMay, _nguoiSD, _maBA, _sTT, _sTTKhoa, _sTTTV);
        }



        #endregion


        #region Benh an thu thuat

        public override int InsertBenhAn_ThuThuat(String _maBA, Int32 _sTT, Int32 _sTTKhoa, String _maPT, String _maBN, SmartDate _ngayDK, String _cDTruocMo, String _cDSauMo, String _maGPBenh, Byte _hTPhauThuat, Boolean _taibienPT, String _maMay, String _nguoiLap, string _machungloai, string _malh, string _ptvien, string _ptvienc, string _ptvien1, string _ptvien2, string _gayme, string _gaymec, string _gayme1, string _gayme2, string _cec, string _cecc, string _cec1, string _cec2, string _dungcu, string _dungcuc, string _dungcu1, string _dungcu2, string _loai, string _cachgayme, string ppphauthat, string maloaipt, string _tenBenhCDTruocMo, string _tenBenhCDSauMo, string _noidung)
        {
            return System.Convert.ToInt32(SqlHelper.ExecuteScalar(SQLConnectionDataNoiT, DatabaseOwner + ObjectQualifier + "spBenhAn_ThuThuat_Create", _maBA, _sTT, _sTTKhoa, _maPT, _maBN, _ngayDK.DBValue, _cDTruocMo, _cDSauMo, _maGPBenh, _hTPhauThuat, _taibienPT,  _maMay, _nguoiLap,  _machungloai, _malh,  _ptvien, _ptvienc, _ptvien1, _ptvien2, _gayme, _gaymec, _gayme1, _gayme2, _cec, _cecc, _cec1, _cec2, _dungcu, _dungcuc, _dungcu1, _dungcu2, _loai, _cachgayme, ppphauthat, maloaipt, _tenBenhCDTruocMo, _tenBenhCDSauMo, _noidung));
        }
        public override void UpdateBenhAn_ThuThuat(String _maBA, Int32 _sTT, Int32 _sTTKhoa, String _maPT, String _maBN, SmartDate _ngayDK, String _cDTruocMo, String _cDSauMo, String _maGPBenh, Byte _hTPhauThuat, Boolean _taibienPT, String _maMay, Boolean _huy, String _nguoiSD, string _machungloai, string _malh, string _ptvien, string _ptvienc, string _ptvien1, string _ptvien2, string _gayme, string _gaymec, string _gayme1, string _gayme2, string _cec, string _cecc, string _cec1, string _cec2, string _dungcu, string _dungcuc, string _dungcu1, string _dungcu2, string _loai, string _cachgayme, string ppphauthat, string maloaipt, string _tenBenhCDTruocMo, string _tenBenhCDSauMo, string _noidung)
        {
            SqlHelper.ExecuteNonQuery(SQLConnectionDataNoiT, DatabaseOwner + ObjectQualifier + "spBenhAn_ThuThuat_Update", _maBA, _sTT, _sTTKhoa, _maPT, _maBN, _ngayDK.DBValue, _cDTruocMo, _cDSauMo, _maGPBenh, _hTPhauThuat, _taibienPT, _maMay, _huy, _nguoiSD, _machungloai, _malh, _ptvien, _ptvienc, _ptvien1, _ptvien2, _gayme, _gaymec, _gayme1, _gayme2, _cec, _cecc, _cec1, _cec2, _dungcu, _dungcuc, _dungcu1, _dungcu2, _loai, _cachgayme, ppphauthat, maloaipt, _tenBenhCDTruocMo, _tenBenhCDSauMo, _noidung);
        }
        public override void DeleteBenhAn_ThuThuat(string _maMay, String _nguoiSD, string _maBA, Int32 _sTT, Int32 _sTTKhoa, string lydohuy)
        {
            SqlHelper.ExecuteNonQuery(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spBenhAn_ThuThuat_Deleted", _maMay, _nguoiSD, _maBA, _sTT, _sTTKhoa, lydohuy);
        }



        #endregion

        #region Benh an Phu
        public override String InsertBenhAn_Phu(String _maBA, Int32 _sTTKhoa, SmartDate _ngayKham, String _bSKham, String _lyDoKham, String _mach, String _da, String _niemMac, String _apHuyet, String _xuatHuyet, String _nhietDo, String _nhipTho, String _canNang, String _chieuCao, String _phu, String _thieuMau, String _cao, String _tim, String _gan, String _phoi, String _than, String _benhKhac, string _TrieuChung, string _amho, string _amdao, string _CTC, string _Tucung, string _PhanPhu, string _KetLuan, string _Tuvan, string _BenhSu, String _tomTat, String _dieuTri, String _chanDoan, String _maMay, String _nguoiSD)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spBenhAn_Phu_CREATE", _maBA, _sTTKhoa, _ngayKham.DBValue, _bSKham, _lyDoKham, _mach, _da, _niemMac, _apHuyet, _xuatHuyet, _nhietDo, _nhipTho, _canNang, _chieuCao, _phu, _thieuMau, _cao, _tim, _gan, _phoi, _than, _benhKhac, _TrieuChung, _amho, _amdao, _CTC, _Tucung, _PhanPhu, _KetLuan, _Tuvan, _BenhSu, _tomTat, _dieuTri, _chanDoan, _maMay, _nguoiSD));
        }
        public override void UpdateBenhAn_Phu(String _maBA, Int32 _sTT, Int32 _sTTKhoa, SmartDate _ngayKham, String _bSKham, String _lyDoKham, String _mach, String _da, String _niemMac, String _apHuyet, String _xuatHuyet, String _nhietDo, String _nhipTho, String _canNang, String _chieuCao, String _phu, String _thieuMau, String _cao, String _tim, String _gan, String _phoi, String _than, String _benhKhac, string _TrieuChung, string _amho, string _amdao, string _CTC, string _Tucung, string _PhanPhu, string _KetLuan, string _Tuvan, string _BenhSu, String _tomTat, String _dieuTri, String _chanDoan, String _maMay, Boolean _huy, String _nguoiSD)
        {
            SqlHelper.ExecuteNonQuery(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spBenhAn_Phu_UPDATE", _maBA, _sTT, _sTTKhoa, _ngayKham.DBValue, _bSKham, _lyDoKham, _mach, _da, _niemMac, _apHuyet, _xuatHuyet, _nhietDo, _nhipTho, _canNang, _chieuCao, _phu, _thieuMau, _cao, _tim, _gan, _phoi, _than, _benhKhac, _TrieuChung, _amho, _amdao, _CTC, _Tucung, _PhanPhu, _KetLuan, _Tuvan, _BenhSu, _tomTat, _dieuTri, _chanDoan, _maMay, _huy, _nguoiSD);
        }
        public override void DeleteBenhAn_Phu(string _maMay, String _nguoiSD, String _maBA, Int32 _sTT, Int32 _sTTKhoa)
        {
            SqlHelper.ExecuteNonQuery(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spBenhan_Phu_Deleted", _maMay, _nguoiSD, _maBA, _sTT, _sTTKhoa);
        }
        #endregion

        #region Benh an San De
        public override String InsertBenhAn_San_De(String _maBA, Int32 _sTTKhoa, SmartDate _ngayKham, String _bSKham, String _lyDoKham, String _benhsu, SmartDate _ngayDe, String _tenConTrai, String _tenConGai, String _tinhThan, String _theTrang, String _mach, String _da, String _niemMac, String _apHuyet, String _nhietDo, String _nhipTho, String _canNang, String _chieuCao, Byte _phu, String _toanThan, String _toanTrang, String _cao, String _tim, String _gan, String _phoi, String _than, String _benhKhac, String _khamTai, Byte _tuoiThai, Boolean _tiemPhong, String _mui, SmartDate _ngayChuyenDa, String _trieuTrung, String _dauHieu, Byte _seoPTCu, Boolean _dauVetMo, String _chieuCaoTC, String _vongBung, String _timThai, Boolean _timThaiRo, String _luongGai, String _baudelocque, String _luongUNgoi, String _hinhDangTC, String _tuThe, String _conCoTC, String _ngoiThai, String _vu, String _luongMao, String _luongMau, Byte _khungChau, String _cutHaVe, String _amHo, String _amDao, Byte _coTuCung, String _mo, String _bishop, Boolean _khoiU, String _khoiUC, Byte _dauOi, Byte _kieuOiVo, SmartDate _oiVo, byte _mauOi, String _ngoi, String _the, Byte _doLot, String _tangSinhMon, String _kieuThe, String _duongKinhNho, String _tienLuong, String _dieuTri, String _chanDoan, String _khiDe, String _phanBiet, String _maMay, String _nguoiSD)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spBenhAn_San_De_CREATE", _maBA, _sTTKhoa, _ngayKham.DBValue, _bSKham, _lyDoKham, _benhsu, _ngayDe.DBValue, _tenConTrai, _tenConGai, _tinhThan, _theTrang, _mach, _da, _niemMac, _apHuyet, _nhietDo, _nhipTho, _canNang, _chieuCao, _phu, _toanThan, _toanTrang, _cao, _tim, _gan, _phoi, _than, _benhKhac, _khamTai, _tuoiThai, _tiemPhong, _mui, _ngayChuyenDa.DBValue, _trieuTrung, _dauHieu, _seoPTCu, _dauVetMo, _chieuCaoTC, _vongBung, _timThai, _timThaiRo, _luongGai, _baudelocque, _luongUNgoi, _hinhDangTC, _tuThe, _conCoTC, _ngoiThai, _vu, _luongMao, _luongMau, _khungChau, _cutHaVe, _amHo, _amDao, _coTuCung, _mo, _bishop, _khoiU, _khoiUC, _dauOi, _kieuOiVo, _oiVo.DBValue, _mauOi, _ngoi, _the, _doLot, _tangSinhMon, _kieuThe, _duongKinhNho, _tienLuong, _dieuTri, _chanDoan, _khiDe, _phanBiet, _maMay, _nguoiSD));
        }
        public override void UpdateBenhAn_San_De(String _maBA, Int32 _sTT, Int32 _sTTKhoa, SmartDate _ngayKham, String _bSKham, String _lyDoKham, String _benhsu, SmartDate _ngayDe, String _tenConTrai, String _tenConGai, String _tinhThan, String _theTrang, String _mach, String _da, String _niemMac, String _apHuyet, String _nhietDo, String _nhipTho, String _canNang, String _chieuCao, Byte _phu, String _toanThan, String _toanTrang, String _cao, String _tim, String _gan, String _phoi, String _than, String _benhKhac, String _khamTai, Byte _tuoiThai, Boolean _tiemPhong, String _mui, SmartDate _ngayChuyenDa, String _trieuTrung, String _dauHieu, Byte _seoPTCu, Boolean _dauVetMo, String _chieuCaoTC, String _vongBung, String _timThai, Boolean _timThaiRo, String _luongGai, String _baudelocque, String _luongUNgoi, String _hinhDangTC, String _tuThe, String _conCoTC, String _ngoiThai, String _vu, String _luongMao, String _luongMau, Byte _khungChau, String _cutHaVe, String _amHo, String _amDao, Byte _coTuCung, String _mo, String _bishop, Boolean _khoiU, String _khoiUC, Byte _dauOi, Byte _kieuOiVo, SmartDate _oiVo, byte _mauOi, String _ngoi, String _the, Byte _doLot, String _tangSinhMon, String _kieuThe, String _duongKinhNho, String _tienLuong, String _dieuTri, String _chanDoan, String _khiDe, String _phanBiet, String _maMay, Boolean _huy, String _nguoiSD)
        {
            SqlHelper.ExecuteNonQuery(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spBenhAn_San_De_UPDATE", _maBA, _sTT, _sTTKhoa, _ngayKham.DBValue, _bSKham, _lyDoKham, _benhsu, _ngayDe.DBValue, _tenConTrai, _tenConGai, _tinhThan, _theTrang, _mach, _da, _niemMac, _apHuyet, _nhietDo, _nhipTho, _canNang, _chieuCao, _phu, _toanThan, _toanTrang, _cao, _tim, _gan, _phoi, _than, _benhKhac, _khamTai, _tuoiThai, _tiemPhong, _mui, _ngayChuyenDa.DBValue, _trieuTrung, _dauHieu, _seoPTCu, _dauVetMo, _chieuCaoTC, _vongBung, _timThai, _timThaiRo, _luongGai, _baudelocque, _luongUNgoi, _hinhDangTC, _tuThe, _conCoTC, _ngoiThai, _vu, _luongMao, _luongMau, _khungChau, _cutHaVe, _amHo, _amDao, _coTuCung, _mo, _bishop, _khoiU, _khoiUC, _dauOi, _kieuOiVo, _oiVo.DBValue, _mauOi, _ngoi, _the, _doLot, _tangSinhMon, _kieuThe, _duongKinhNho, _tienLuong, _dieuTri, _chanDoan, _khiDe, _phanBiet, _maMay, _huy, _nguoiSD);
        }
        public override void DeleteBenhAn_San_De(string _maMay, String _nguoiSD, String _maBA, Int32 _sTT, Int32 _sTTKhoa)
        {
            SqlHelper.ExecuteNonQuery(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spBenhan_San_De_Deleted", _maMay, _nguoiSD, _maBA, _sTT, _sTTKhoa);
        }
        #endregion

     
        #region Benh an San Kham
        public override String InsertBenhAn_San_Kham(String _maBA, SmartDate _ngayDauKyKCC, Int16 _cannangtruocthai, Decimal _tuoithai, Byte _chieucaoTC, Int16 _cTC_VB, string _Ngoithai, Byte _sLThai, String _timthai, Byte _tinhtrangtimthai, SmartDate _ngaydukiende, String _dauhieubatthuong, String _xutri, String _lydoVV, Byte _tinhthan, Byte _phu, String _proteinNieu, Byte _seomocu, String _concotucung, Byte _cotucung, String _cTCMo, String _bishop, Byte _dauoi, String _tGVooi, Byte _nuocoi, String _tienluong, Byte _dauseomo, SmartDate _ngaydeDukienSA, Byte _tuanSA, String _tinhthanKhac, SmartDate _ngayDe, String _tenConTrai, String _tenConGai, String _maMay, String _nguoiSD, String _mach, String _apHuyet, String _nhietDo, String _nhipTho, String _canNang, String _chieuCao, String _dieuTri, String _chanDoan)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spBenhAn_San_Kham_CREATE", _maBA, _ngayDauKyKCC.DBValue, _cannangtruocthai, _tuoithai, _chieucaoTC, _cTC_VB, _Ngoithai, _sLThai, _timthai, _tinhtrangtimthai, _ngaydukiende.DBValue, _dauhieubatthuong, _xutri, _lydoVV, _tinhthan, _phu, _proteinNieu, _seomocu, _concotucung, _cotucung, _cTCMo, _bishop, _dauoi, _tGVooi, _nuocoi, _tienluong, _dauseomo, _ngaydeDukienSA.DBValue, _tuanSA, _tinhthanKhac, _ngayDe.DBValue, _tenConTrai, _tenConGai, _maMay, _nguoiSD, _mach, _apHuyet, _nhietDo, _nhipTho, _canNang, _chieuCao, _dieuTri, _chanDoan));
        }
        public override void UpdateBenhAn_San_Kham(String _maBA, SmartDate _ngayDauKyKCC, Int16 _cannangtruocthai, Decimal _tuoithai, Byte _chieucaoTC, Int16 _cTC_VB, string _Ngoithai, Byte _sLThai, String _timthai, Byte _tinhtrangtimthai, SmartDate _ngaydukiende, String _dauhieubatthuong, String _xutri, String _lydoVV, Byte _tinhthan, Byte _phu, String _proteinNieu, Byte _seomocu, String _concotucung, Byte _cotucung, String _cTCMo, String _bishop, Byte _dauoi, String _tGVooi, Byte _nuocoi, String _tienluong, Byte _dauseomo, SmartDate _ngaydeDukienSA, Byte _tuanSA, String _tinhthanKhac, SmartDate _ngayDe, String _tenConTrai, String _tenConGai, String _maMay, Boolean _huy, String _nguoiSD, String _mach, String _apHuyet, String _nhietDo, String _nhipTho, String _canNang, String _chieuCao, String _dieuTri, String _chanDoan)
        {
            SqlHelper.ExecuteNonQuery(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spBenhAn_San_Kham_Update", _maBA, _ngayDauKyKCC.DBValue, _cannangtruocthai, _tuoithai, _chieucaoTC, _cTC_VB, _Ngoithai, _sLThai, _timthai, _tinhtrangtimthai, _ngaydukiende.DBValue, _dauhieubatthuong, _xutri, _lydoVV, _tinhthan, _phu, _proteinNieu, _seomocu, _concotucung, _cotucung, _cTCMo, _bishop, _dauoi, _tGVooi, _nuocoi, _tienluong, _dauseomo, _ngaydeDukienSA.DBValue, _tuanSA, _tinhthanKhac, _ngayDe.DBValue, _tenConTrai, _tenConGai, _maMay, _huy, _nguoiSD, _mach, _apHuyet, _nhietDo, _nhipTho, _canNang, _chieuCao, _dieuTri, _chanDoan);
        }
        public override void DeleteBenhAn_San_Kham(string _maMay, String _nguoiSD, String _maBA)
        {
            SqlHelper.ExecuteNonQuery(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spBenhan_San_Kham_Deleted", _maMay, _nguoiSD, _maBA);
        }
        #endregion


        #region Benh an So sinh
        public override String InsertBenhAn_SoSinh(String _maBA, Int32 _sTTKhoa, SmartDate _ngayKham, String _bSKham, String _lyDoKham, String _benhsu, String _meMach, String _meDa, String _meNiemMac, String _meApHuyet, String _meNhietDo, String _meNhipTho, String _meCanNang, String _meChieuCao, Boolean _mePhu, String _meToanThan, String _meToanTrang, String _meCao, String _meTim, String _meGan, String _mePhoi, String _meThan, String _meBenhKhac, String _meKieuOiVo, String _meTieng, String _meCachDe, SmartDate _meGioDe, String _meLyDo, String _meNguoiDoDe, String _meApgar1, String _meApgar5, Boolean _hutDich, Boolean _xoaBop, Boolean _tho, Boolean _diTat, Boolean _datNoiKhiQuan, Boolean _bopBong, Boolean _diTathaumon, String _cuThe, String _nguoiChuyen, String _mach, String _niemMac, String _apHuyet, String _nhietDo, String _nhipTho, String _canNang, String _chieuCao, Boolean _phu, String _toanThan, String _toanTrang, String _vongDau, String _vongNguc, Byte _da, String _nghePhoi, String _chiSoSilerman, String _bung, String _sinhDucNgoai, String _phanXa, String _truongLucCo, String _boPhanKhac, String _tuoiThai, String _dieuTri, String _chanDoan, String _maMay, String _nguoiSD)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spBenhAn_SoSinh_CREATE", _maBA, _sTTKhoa, _ngayKham.DBValue, _bSKham, _lyDoKham, _benhsu, _meMach, _meDa, _meNiemMac, _meApHuyet, _meNhietDo, _meNhipTho, _meCanNang, _meChieuCao, _mePhu, _meToanThan, _meToanTrang, _meCao, _meTim, _meGan, _mePhoi, _meThan, _meBenhKhac, _meKieuOiVo, _meTieng, _meCachDe, _meGioDe.DBValue, _meLyDo, _meNguoiDoDe, _meApgar1, _meApgar5, _hutDich, _xoaBop, _tho, _diTat, _datNoiKhiQuan, _bopBong, _diTathaumon, _cuThe, _nguoiChuyen, _mach, _niemMac, _apHuyet, _nhietDo, _nhipTho, _canNang, _chieuCao, _phu, _toanThan, _toanTrang, _vongDau, _vongNguc, _da, _nghePhoi, _chiSoSilerman, _bung, _sinhDucNgoai, _phanXa, _truongLucCo, _boPhanKhac, _tuoiThai, _dieuTri, _chanDoan, _maMay, _nguoiSD));
        }
        public override void UpdateBenhAn_SoSinh(String _maBA, Int32 _sTT, Int32 _sTTKhoa, SmartDate _ngayKham, String _bSKham, String _lyDoKham, String _benhsu, String _meMach, String _meDa, String _meNiemMac, String _meApHuyet, String _meNhietDo, String _meNhipTho, String _meCanNang, String _meChieuCao, Boolean _mePhu, String _meToanThan, String _meToanTrang, String _meCao, String _meTim, String _meGan, String _mePhoi, String _meThan, String _meBenhKhac, String _meKieuOiVo, String _meTieng, String _meCachDe, SmartDate _meGioDe, String _meLyDo, String _meNguoiDoDe, String _meApgar1, String _meApgar5, Boolean _hutDich, Boolean _xoaBop, Boolean _tho, Boolean _diTat, Boolean _datNoiKhiQuan, Boolean _bopBong, Boolean _diTathaumon, String _cuThe, String _nguoiChuyen, String _mach, String _niemMac, String _apHuyet, String _nhietDo, String _nhipTho, String _canNang, String _chieuCao, Boolean _phu, String _toanThan, String _toanTrang, String _vongDau, String _vongNguc, Byte _da, String _nghePhoi, String _chiSoSilerman, String _bung, String _sinhDucNgoai, String _phanXa, String _truongLucCo, String _boPhanKhac, String _tuoiThai, String _dieuTri, String _chanDoan, String _maMay, Boolean _huy, String _nguoiSD)
        {
            SqlHelper.ExecuteNonQuery(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spBenhAn_SoSinh_UPDATE", _maBA, _sTT, _sTTKhoa, _ngayKham.DBValue, _bSKham, _lyDoKham, _benhsu, _meMach, _meDa, _meNiemMac, _meApHuyet, _meNhietDo, _meNhipTho, _meCanNang, _meChieuCao, _mePhu, _meToanThan, _meToanTrang, _meCao, _meTim, _meGan, _mePhoi, _meThan, _meBenhKhac, _meKieuOiVo, _meTieng, _meCachDe, _meGioDe.DBValue, _meLyDo, _meNguoiDoDe, _meApgar1, _meApgar5, _hutDich, _xoaBop, _tho, _diTat, _datNoiKhiQuan, _bopBong, _diTathaumon, _cuThe, _nguoiChuyen, _mach, _niemMac, _apHuyet, _nhietDo, _nhipTho, _canNang, _chieuCao, _phu, _toanThan, _toanTrang, _vongDau, _vongNguc, _da, _nghePhoi, _chiSoSilerman, _bung, _sinhDucNgoai, _phanXa, _truongLucCo, _boPhanKhac, _tuoiThai, _dieuTri, _chanDoan, _maMay, _huy, _nguoiSD);
        }
        public override void DeleteBenhAn_SoSinh(string _maMay, String _nguoiSD, String _maBA, Int32 _sTT, Int32 _sTTKhoa)
        {
            SqlHelper.ExecuteNonQuery(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spBenhAn_SoSinh_Deleted", _maMay, _nguoiSD, _maBA, _sTT, _sTTKhoa);
        }
        #endregion

        #region Benh an San tong ket
        public override int InsertBenhAn_San_TK(String _maBA, SmartDate _ngayKham, String _bSKham, String _lyDoKham, String _nhipTim, String _xuongKhop, String _apHuyet, String _nhietDo, String _nhipTho, String _canNang, String _chieuCao, Boolean _gt, String _luongDinh, String _toanTrang, Boolean _hutDich, Boolean _xoaBop, Boolean _tho, Boolean _diTat, Boolean _datNoiKhiQuan, Boolean _bopBong, Boolean _diTathaumon, Boolean _diTatKhac, String _cuThe, SmartDate _rauSo, Byte _kieuSo, String _thoiGianSoRau, Boolean _rauConCo, String _chieuDaiRau, Boolean _kiemSoatTuCung, String _lyDoKiemSoat, Boolean _bocRau, String _lyDoBocRau, Boolean _chayMau, String _soLuong, String _meMach, String _meDa, String _meNiemMac, String _meApHuyet, String _meNhietDo, String _meNhipTho, String _meCanNang, String _meChieuCao, Boolean _mePhu, String _meToanThan, String _meToanTrang, String _meCao, String _meTim, String _meGan, String _mePhoi, String _meThan, String _meNuocOi, Byte _meKieuOiVo, String _meTieng, String _meCachDe, SmartDate _meGioDe, String _meLyDoCachDe, String _meNguoiDoDe, String _meNguoiMo, Byte _meTSM, String _meLyDoTSM, Byte _meAmDao, String _meLyDoAmDao, Byte _meCoTuCung, String _meLyDoCoTuCung, String _meCanThiepKhac, String _meLyDo, String _meThoiGianChuyenDa, String _meThoiGianTheoDoi, String _dieuTri, String _chanDoan, String _maMay, String _nguoiSD, String _raucannang)
        {
            return System.Convert.ToInt32(SqlHelper.ExecuteScalar(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spBenhAn_San_TK_CREATE", _maBA, _ngayKham.DBValue, _bSKham, _lyDoKham, _nhipTim, _xuongKhop, _apHuyet, _nhietDo, _nhipTho, _canNang, _chieuCao, _gt, _luongDinh, _toanTrang, _hutDich, _xoaBop, _tho, _diTat, _datNoiKhiQuan, _bopBong, _diTathaumon, _diTatKhac, _cuThe, _rauSo.DBValue, _kieuSo, _thoiGianSoRau, _rauConCo, _chieuDaiRau, _kiemSoatTuCung, _lyDoKiemSoat, _bocRau, _lyDoBocRau, _chayMau, _soLuong, _meMach, _meDa, _meNiemMac, _meApHuyet, _meNhietDo, _meNhipTho, _meCanNang, _meChieuCao, _mePhu, _meToanThan, _meToanTrang, _meCao, _meTim, _meGan, _mePhoi, _meThan, _meNuocOi, _meKieuOiVo, _meTieng, _meCachDe, _meGioDe.DBValue, _meLyDoCachDe, _meNguoiDoDe, _meNguoiMo, _meTSM, _meLyDoTSM, _meAmDao, _meLyDoAmDao, _meCoTuCung, _meLyDoCoTuCung, _meCanThiepKhac, _meLyDo, _meThoiGianChuyenDa, _meThoiGianTheoDoi, _dieuTri, _chanDoan, _maMay, _nguoiSD, _raucannang));
        }
        public override void UpdateBenhAn_San_TK(String _maBA, int _stt, SmartDate _ngayKham, String _bSKham, String _lyDoKham, String _nhipTim, String _xuongKhop, String _apHuyet, String _nhietDo, String _nhipTho, String _canNang, String _chieuCao, Boolean _gt, String _luongDinh, String _toanTrang, Boolean _hutDich, Boolean _xoaBop, Boolean _tho, Boolean _diTat, Boolean _datNoiKhiQuan, Boolean _bopBong, Boolean _diTathaumon, Boolean _diTatKhac, String _cuThe, SmartDate _rauSo, Byte _kieuSo, String _thoiGianSoRau, Boolean _rauConCo, String _chieuDaiRau, Boolean _kiemSoatTuCung, String _lyDoKiemSoat, Boolean _bocRau, String _lyDoBocRau, Boolean _chayMau, String _soLuong, String _meMach, String _meDa, String _meNiemMac, String _meApHuyet, String _meNhietDo, String _meNhipTho, String _meCanNang, String _meChieuCao, Boolean _mePhu, String _meToanThan, String _meToanTrang, String _meCao, String _meTim, String _meGan, String _mePhoi, String _meThan, String _meNuocOi, Byte _meKieuOiVo, String _meTieng, String _meCachDe, SmartDate _meGioDe, String _meLyDoCachDe, String _meNguoiDoDe, String _meNguoiMo, Byte _meTSM, String _meLyDoTSM, Byte _meAmDao, String _meLyDoAmDao, Byte _meCoTuCung, String _meLyDoCoTuCung, String _meCanThiepKhac, String _meLyDo, String _meThoiGianChuyenDa, String _meThoiGianTheoDoi, String _dieuTri, String _chanDoan, String _maMay, Boolean _huy, String _nguoiSD, String _raucannang)
        {
            SqlHelper.ExecuteNonQuery(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spBenhAn_San_TK_UPDATE", _maBA, _stt, _ngayKham.DBValue, _bSKham, _lyDoKham, _nhipTim, _xuongKhop, _apHuyet, _nhietDo, _nhipTho, _canNang, _chieuCao, _gt, _luongDinh, _toanTrang, _hutDich, _xoaBop, _tho, _diTat, _datNoiKhiQuan, _bopBong, _diTathaumon, _diTatKhac, _cuThe, _rauSo.DBValue, _kieuSo, _thoiGianSoRau, _rauConCo, _chieuDaiRau, _kiemSoatTuCung, _lyDoKiemSoat, _bocRau, _lyDoBocRau, _chayMau, _soLuong, _meMach, _meDa, _meNiemMac, _meApHuyet, _meNhietDo, _meNhipTho, _meCanNang, _meChieuCao, _mePhu, _meToanThan, _meToanTrang, _meCao, _meTim, _meGan, _mePhoi, _meThan, _meNuocOi, _meKieuOiVo, _meTieng, _meCachDe, _meGioDe.DBValue, _meLyDoCachDe, _meNguoiDoDe, _meNguoiMo, _meTSM, _meLyDoTSM, _meAmDao, _meLyDoAmDao, _meCoTuCung, _meLyDoCoTuCung, _meCanThiepKhac, _meLyDo, _meThoiGianChuyenDa, _meThoiGianTheoDoi, _dieuTri, _chanDoan, _maMay, _huy, _nguoiSD, _raucannang);
        }
        public override void DeleteBenhAn_San_TK(string _maMay, String _nguoiSD, String _maBA, int _stt)
        {
            SqlHelper.ExecuteNonQuery(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spBenhAn_San_TK_Deleted", _maMay, _nguoiSD, _maBA, _stt);
        }
        #endregion

        #region Benh an San tong ket Apgar
        public override Int32 InsertBenhAn_San_TK_Apgar(String _maBA, int _stt, String _maApGar, Byte _tim, Byte _tho, Byte _mauDa, Byte _truongLucCo, Byte _phanXa, String _maMay, String _nguoiSD)
        {
            return System.Convert.ToInt32(SqlHelper.ExecuteScalar(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spBenhAn_San_TK_Apgar_CREATE", _maBA, _stt, _maApGar, _tim, _tho, _mauDa, _truongLucCo, _phanXa, _maMay, _nguoiSD));
        }
        public override void UpdateBenhAn_San_TK_Apgar(String _maBA, int _stt, Int32 _sTTde, String _maApGar, Byte _tim, Byte _tho, Byte _mauDa, Byte _truongLucCo, Byte _phanXa, String _maMay, Boolean _huy, String _nguoiSD)
        {
            SqlHelper.ExecuteNonQuery(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spBenhAn_San_TK_Apgar_UPDATE", _maBA, _stt, _sTTde, _maApGar, _tim, _tho, _mauDa, _truongLucCo, _phanXa, _maMay, _huy, _nguoiSD);
        }
        public override void DeleteBenhAn_San_TK_Apgar(string _maMay, String _nguoiSD, String _maBA, Int32 _sTT, Int32 _sTTDe)
        {
            SqlHelper.ExecuteNonQuery(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spBenhAn_San_TK_Apgar_Deleted", _maMay, _nguoiSD, _maBA, _sTT, _sTTDe);
        }
        #endregion

        #region Benh an San tong ket LongNguc
        public override Int32 InsertBenhAn_SoSinh_LongNguc(String _maBA, String _maLongNguc, Byte _tim, Byte _tho, Byte _mauDa, Byte _truongLucCo, Byte _phanXa, String _maMay, String _nguoiSD, Int32 _sTTKhoa, Int32 _sTTK)
        {
            return System.Convert.ToInt32(SqlHelper.ExecuteScalar(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spBenhAn_SoSinh_LongNguc_CREATE", _maBA, _maLongNguc, _tim, _tho, _mauDa, _truongLucCo, _phanXa, _maMay, _nguoiSD, _sTTKhoa, _sTTK));
        }
        public override void UpdateBenhAn_SoSinh_LongNguc(String _maBA, Int32 _sTT, String _maLongNguc, Byte _tim, Byte _tho, Byte _mauDa, Byte _truongLucCo, Byte _phanXa, String _maMay, Boolean _huy, String _nguoiSD, Int32 _sTTKhoa, Int32 _sTTK)
        {
            SqlHelper.ExecuteNonQuery(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spBenhAn_SoSinh_LongNguc_UPDATE", _maBA, _sTT, _maLongNguc, _tim, _tho, _mauDa, _truongLucCo, _phanXa, _maMay, _huy, _nguoiSD, _sTTKhoa, _sTTK);
        }
        public override void DeleteBenhAn_SoSinh_LongNguc(string _maMay, String _nguoiSD, String _maBA, Int32 _sTT, Int32 _sTTKhoa, Int32 _sTTK)
        {
            SqlHelper.ExecuteNonQuery(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spBenhAn_SoSinh_LongNguc_Deleted", _maMay, _nguoiSD, _maBA, _sTT, _sTTKhoa, _sTTK);
        }
        #endregion
        #region So Cham Cong



        public override string InsertSoChamCong(String _maSCC, SmartDate _ngayKham, String _maPhong, Decimal _ngayNgoaiTru, Decimal _nguoiNgoaiTru, Decimal _soCaSang, Decimal _soCaChieu, Decimal _holter, Decimal _huyetAp, String _bacSy, String _dieuDuong, String _ghichu, String _nguoiSD, String _maMay)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spSOCHAMCONG_CREATE", _maSCC, _ngayKham.DBValue, _maPhong, _ngayNgoaiTru, _nguoiNgoaiTru, _soCaSang, _soCaChieu, _holter, _huyetAp, _bacSy, _dieuDuong, _ghichu, _nguoiSD, _maMay));
        }
        public override void UpdateSoChamCong(String _maSCC, SmartDate _ngayKham, String _maPhong, Decimal _ngayNgoaiTru, Decimal _nguoiNgoaiTru, Decimal _soCaSang, Decimal _soCaChieu, Decimal _holter, Decimal _huyetAp, String _bacSy, String _dieuDuong, String _ghichu, String _nguoiSD, String _maMay, Boolean _huy)
        {
            SqlHelper.ExecuteNonQuery(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spSOCHAMCONG_Update", _maSCC, _ngayKham.DBValue, _maPhong, _ngayNgoaiTru, _nguoiNgoaiTru, _soCaSang, _soCaChieu, _holter, _huyetAp, _bacSy, _dieuDuong, _ghichu, _nguoiSD, _maMay, _huy);
        }
        public override void DeleteSoChamCong(String _maSCC, String _maMay, String _nguoiSD)
        {
            SqlHelper.ExecuteNonQuery(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spSOCHAMCONG_DELETED", _maSCC, _maMay, _nguoiSD);
        }
        #endregion



        #region So Cham Cong Thanh Vien
        public override string InsertSoChamCong_TV(String _maSCC, String _maNV, SmartDate _gioBD, Byte _SOCA, Byte _vaiTro, String _ghichu, String _maMay, String _nguoiSD)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spSoChamCong_TV_CREATE", _maSCC, _maNV, _gioBD.DBValue, _SOCA, _vaiTro, _ghichu, _maMay, _nguoiSD));
        }
        public override void UpdateSoChamCong_TV(String _maSCC, Int32 _sTT, String _maNV, SmartDate _gioBD, Byte _SOCA, Byte _vaiTro, String _ghichu, String _maMay, Boolean _huy, String _nguoiSD)
        {
            SqlHelper.ExecuteNonQuery(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spSoChamCong_TV_UPDATE", _maSCC, _sTT, _maNV, _gioBD.DBValue, _SOCA, _vaiTro, _ghichu, _maMay, _huy, _nguoiSD);
        }
        public override void DeleteSoChamCong_TV(String _maMay, String _nguoiSD, String _maSCC, Int32 _sTT)
        {
            SqlHelper.ExecuteNonQuery(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spSoChamCong_TV_DELETED", _maMay, _nguoiSD, _maSCC, _sTT);
        }



        #endregion

        #endregion

        #region Benh an Mien Giam
        public override int InsertBenhAn_MienGiam(String _maBA, String _maKhoa, int _sTTKhoa, int _sTT, String _maMienGiam, Decimal _soTien, Decimal _soTienUSD, Decimal _tyGia, SmartDate _ngayKy, String _ghiChu, String _nguoiKy, String _maMay, String _nguoiSD, String _soCT, String _maDT, Decimal _ck, Byte _dATT)
        {
            return System.Convert.ToInt32(SqlHelper.ExecuteScalar(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spBENHAN_MienGiam_CREATE", _maBA, _maKhoa, _sTTKhoa, _sTT, _maMienGiam, _soTien, _soTienUSD, _tyGia, _ngayKy.DBValue, _ghiChu, _nguoiKy, _maMay, _nguoiSD, _soCT, _maDT, _ck, _dATT));
        }
        public override void UpdateBenhAn_MienGiam(String _maBA, String _maKhoa, int _sTTKhoa, int _sTT, String _maMienGiam, Decimal _soTien, Decimal _soTienUSD, Decimal _tyGia, SmartDate _ngayKy, String _ghiChu, String _nguoiKy, String _maMay, Boolean _huy, String _nguoiSD, String _soCT, String _maDT, Decimal _ck, Byte _dATT)
        {
            SqlHelper.ExecuteNonQuery(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spBENHAN_MienGiam_UPDATE", _maBA, _maKhoa, _sTTKhoa, _sTT, _maMienGiam, _soTien, _soTienUSD, _tyGia, _ngayKy.DBValue, _ghiChu, _nguoiKy, _maMay, _huy, _nguoiSD, _soCT, _maDT, _ck, _dATT);
        }
        public override void DeleteBenhAn_MienGiam(String _maMay, String _nguoiSD, String _maBA, Int32 _sTT)
        {
            SqlHelper.ExecuteNonQuery(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spBenhAn_MienGiam_DELETED", _maMay, _nguoiSD, _maBA, _sTT);
        }
        #endregion

        #region tinh tien bs kham
        public override decimal BCVIENPHINGOAITRUBS(DateTime _TUNGAYYC, DateTime _DENNGAYYC, String _maDV, byte _loai, string _TRA, string _maNV, string _noitt, int LOAIPHIEU, String _dK, Byte _DaDung)
        {
            DataSet ds = new DataSet("CRInBCNhapThuoc_RPT");
            System.Data.SqlClient.SqlCommand cmd = SqlHelper.CreateCommand(SQLConnectionDataBC, DatabaseOwner + ObjectQualifier + "sp_BCVIENPHINGOAITRU");
         
            cmd.CommandTimeout = 18000;
            cmd.CommandType = System.Data.CommandType.StoredProcedure;
            cmd.Parameters.AddWithValue("TUNGAY", _TUNGAYYC);
            cmd.Parameters.AddWithValue("DENNGAY", _DENNGAYYC);
            cmd.Parameters.AddWithValue("MADV", _maDV);
            cmd.Parameters.AddWithValue("noitt", _noitt);
            cmd.Parameters.AddWithValue("LOAI", _loai);
            cmd.Parameters.AddWithValue("TRA", _TRA);
            cmd.Parameters.AddWithValue("MANV", _maNV);
            cmd.Parameters.AddWithValue("LOAIPHIEU", LOAIPHIEU);
            cmd.Parameters.AddWithValue("DK", _dK);
            cmd.Parameters.AddWithValue("DADUNG", _DaDung);
            System.Data.SqlClient.SqlDataAdapter sqlad = new System.Data.SqlClient.SqlDataAdapter(cmd);
            sqlad.Fill(ds);
            decimal sotien = 0;
            if (ds.Tables[0].Rows.Count > 0)
                sotien = (decimal)ds.Tables[0].Rows[0][0];
           sqlad.Dispose(); cmd.Dispose(); sqlad = null; ds.Dispose(); ds.Clear(); ds = null;
            cmd = null;
           
            return sotien;

        }
         #endregion

        #region kiem tra hoa don 

        public override string KiemTraHoaDon(String masokham, string sosohd, string sohd, byte loaiphieu)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(SQLConnectionData, DatabaseOwner + ObjectQualifier + "spKHAMBENH_HoaDon_KiemTra", masokham, sosohd, sohd, loaiphieu));
        }
        #endregion

        #region Cap Ma

        public override string CapMa(String _bang, String _madau, String _macuoi, byte _lenmacuoi, string _dk, String _ma)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(SQLConnectionDataNoiT, DatabaseOwner + ObjectQualifier + "sp_CapMa", _bang, _madau, _macuoi, _lenmacuoi, _dk, _ma));
        }
        #endregion
        #region Benh an Dong tien
        public override string InsertBenhAn_DongTien(String _maBA, String _maKhoa, Int32 _sTTKhoa, int _stt, String _maLDThuTien, Decimal _soTien, Decimal _soTienUSD, Decimal _tyGia, SmartDate _ngayDong, String _ghiChu, String _maPT, String _nguoiThu, String _maMay, String _nguoiSD, String _SPTHU, string _madt, Byte _dATT, Byte _lanin)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(SQLConnectionDataNoiT, DatabaseOwner + ObjectQualifier + "spBENHAN_DONGTIEN_CREATE", _maBA, _maKhoa, _sTTKhoa, _stt, _maLDThuTien, _soTien, _soTienUSD, _tyGia, _ngayDong.DBValue, _ghiChu, _maPT, _nguoiThu, _maMay, _nguoiSD, _SPTHU, _madt, _dATT, _lanin));
        }
        public override void UpdateBenhAn_DongTien(String _maBA, Int32 _sTT, String _maKhoa, Int32 _sTTKhoa, String _maLDThuTien, Decimal _soTien, Decimal _soTienUSD, Decimal _tyGia, SmartDate _ngayDong, String _ghiChu, String _maPT, String _nguoiThu, String _maMay, Boolean _huy, String _nguoiSD, String _SOPHIEU, string _madt, Byte _dATT, Byte _lanin)
        {
            SqlHelper.ExecuteNonQuery(SQLConnectionDataNoiT, DatabaseOwner + ObjectQualifier + "spBENHAN_DONGTIEN_UPDATE", _maBA, _sTT, _maKhoa, _sTTKhoa, _maLDThuTien, _soTien, _soTienUSD, _tyGia, _ngayDong.DBValue, _ghiChu, _maPT, _nguoiThu, _maMay, _huy, _nguoiSD, _SOPHIEU, _madt, _dATT, _lanin);
        }
        public override void DeleteBenhAn_DongTien(String _maMay, String _nguoiSD, String _maBA, Int32 _sTT)
        {
            SqlHelper.ExecuteNonQuery(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spBenhAn_DONGTIEN_DELETED", _maMay, _nguoiSD, _maBA, _sTT);
        }
        #endregion

        #region Benh an Xet nghiem
        public override Int32 InsertBenhAn_XN(Int32 _sTT, String _maBA, Int32 _sTTKhoa, String _maDV, String _bSChiDinh, String _maBP, SmartDate _ngayKQ, Byte[] _fileKQ, String _kq, String _makq, String _sID, String _maMay, String _nguoiSD, Byte _loaiKQ, Boolean _diDong, String _maBenhBD, byte _sotieuban, string _sosttbnXN, string _mabenhxn, string _tenbenhxn)
        {
            return System.Convert.ToInt32(SqlHelper.ExecuteScalar(SQLConnectionDataNoiT, DatabaseOwner + ObjectQualifier + "spBENHAN_XN_Create1", _sTT, _maBA, _sTTKhoa, _maDV, _bSChiDinh, _maBP, _ngayKQ.DBValue, _fileKQ, _kq, _makq, _sID, _maMay, _nguoiSD, _loaiKQ, _diDong, _maBenhBD, _sotieuban, _sosttbnXN, _mabenhxn, _tenbenhxn));
        }
        public override void UpdateBenhAn_XN(Int32 _sTT, String _maBA, Int32 _sTTKhoa, String _maDV, String _bSChiDinh, String _maBP, SmartDate _ngayKQ, Byte[] _fileKQ, String _kq, String _makq, String _sID, String _maMay, Boolean _huy, String _nguoiSD, Byte _loaiKQ, Boolean _diDong, String _maBenhBD, byte _sotieuban, string _sosttbnXN, string _mabenhxn, string _tenbenhxn)
        {
            SqlHelper.ExecuteNonQuery(SQLConnectionDataNoiT, DatabaseOwner + ObjectQualifier + "spBENHAN_XN_Update1", _sTT, _maBA, _sTTKhoa, _maDV, _bSChiDinh, _maBP, _ngayKQ.DBValue, _fileKQ, _kq, _makq, _sID, _maMay, _huy, _nguoiSD, _loaiKQ, _diDong, _maBenhBD, _sotieuban, _sosttbnXN, _mabenhxn, _tenbenhxn);
        }
        public override void DeleteBenhAn_XN(String _maMay, String _nguoiSD, Int32 _sTT, String _maBA, Int32 _sTTKhoa)
        {
            SqlHelper.ExecuteNonQuery(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spBENHAN_XN_Deleted", _maMay, _nguoiSD, _sTT, _maBA, _sTTKhoa);
        }
        #endregion

        #region Benh an Xet nghiem Chi tiet
        public override int InsertBenhAn_XN_C(String _maBA, Int32 _sTTKhoa, Int32 _sTT, String _maDV, String _maCS, String _kq, String _makq, String _maMay, String _nguoiSD)
        {
            return System.Convert.ToInt32(SqlHelper.ExecuteScalar(SQLConnectionDataNoiT, DatabaseOwner + ObjectQualifier + "spBENHAN_XN_C_Create1", _maBA, _sTTKhoa, _sTT, _maDV, _maCS, _kq, _makq, _maMay, _nguoiSD));
        }
        public override void UpdateBenhAn_XN_C(String _maBA, Int32 _sTTKhoa, Int32 _sTT, Int32 _sTTCS, String _maDV, String _maCS, String _kq, String _makq, String _maMay, Boolean _huy, String _nguoiSD)
        {
            SqlHelper.ExecuteNonQuery(SQLConnectionDataNoiT, DatabaseOwner + ObjectQualifier + "spBENHAN_XN_C_Update1", _maBA, _sTTKhoa, _sTT, _sTTCS, _maDV, _maCS, _kq, _makq, _maMay, _huy, _nguoiSD);
        }
        public override void DeleteBenhAn_XN_C(String _maMay, String _nguoiSD, String _maBA, Int32 _sTTKhoa, Int32 _sTT, Int32 _sTTCS)
        {
            SqlHelper.ExecuteNonQuery(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spBENHAN_XN_C_Deleted", _maMay, _nguoiSD, _maBA, _sTTKhoa, _sTT, _sTTCS);
        }


        #endregion

        #region Benh an Hoa don
        public override String InsertBenhAn_HoaDon(String _maBA, String _maBN, SmartDate _ngayDK, String _soHD, String _soSoHD, Int32 _sophieu, Decimal _tongThu, Decimal _tongChi, SmartDate _ngayThu, String _maMay, String _nguoiLap, String _lYDOThu, String _nGUOITHU, Byte _lanIn, Byte _loai, String _lYDOChi, Byte _dATT, String _madt, String _makhoa, Decimal _soluong, string _mabs)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(SQLConnectionDataNoiT, DatabaseOwner + ObjectQualifier + "spBenhAn_HoaDon_Create1", _maBA, _maBN, _ngayDK.DBValue, _soHD, _soSoHD, _sophieu, _tongThu, _tongChi, _ngayThu.DBValue, _maMay, _nguoiLap, _lYDOThu, _nGUOITHU, _lanIn, _loai, _lYDOChi, _dATT, _madt, _makhoa, _soluong, _mabs));
        }
        public override void UpdateBenhAn_HoaDon(String _maBA, Int32 _sTT, String _maBN, SmartDate _ngayDK, String _soHD, String _soSoHD, Int32 _sophieu, Decimal _tongThu, Decimal _tongChi, SmartDate _ngayThu, SmartDate _ngayChi, String _maMay, Boolean _huy, String _nguoiSD, String _lYDOThu, String _nGUOITHU, String _nGUOICHI, Byte _lanIn, String _lYDOChi, Byte _dATT, Decimal _soluong, string _mabs)
        {
            SqlHelper.ExecuteNonQuery(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spBenhAn_HoaDon_Update1", _maBA, _sTT, _maBN, _ngayDK.DBValue, _soHD, _soSoHD, _sophieu, _tongThu, _tongChi, _ngayThu.DBValue, _ngayChi.DBValue, _maMay, _huy, _nguoiSD, _lYDOThu, _nGUOITHU, _nGUOICHI, _lanIn, _lYDOChi, _dATT, _soluong, _mabs);
        }
        public override void DeleteBenhAn_HoaDon(String _maMay, String _nguoiSD, String _maBA, Int32 _sTT)
        {
            SqlHelper.ExecuteNonQuery(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spBenhAn_HoaDon_Deleted", _maMay, _nguoiSD, _maBA, _sTT);
        }


        #endregion
        #region Benh an file
        public override int InsertBenhAn_File(String _maBA, String _maBN, int _sttkhoa, int stt, string madv, string duongdan, string duongdanDD, string dangfile, string mamay, string nguoisd, int _loaiPhieuKem)
        {
            return System.Convert.ToInt16(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spBenhAn_File_Create", _maBA, _maBN, _sttkhoa, stt, madv, duongdan, duongdanDD, dangfile, mamay, nguoisd, _loaiPhieuKem));
        }
        public override void UpdateBenhAn_File(String _maBA, int _sttf, String _maBN, int _sttkhoa, int stt, string madv, string duongdan, string duongdanDD, string dangfile, string mamay, bool huy, string nguoisd, int _loaiPhieuKem)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spBenhAn_File_Update", _maBA, _sttf, _maBN, _sttkhoa, stt, madv, duongdan, duongdanDD, dangfile, mamay, huy, nguoisd, _loaiPhieuKem);
        }
        public override void DeleteBenhAn_File(String _maMay, String _nguoiSD, String _maBA, Int32 _sTT)
        {
            SqlHelper.ExecuteNonQuery(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spBenhAn_File_Deleted", _maMay, _nguoiSD, _maBA, _sTT);
        }


        #endregion

        #region Benh an Giuong
        public override String InsertBenhAn_Giuong(String _maBA, Int32 _sTT, Int32 _sTTKhoa, String _maKhoa, String _maGiuong, String _maBN, SmartDate _ngayDK, Decimal _sLYC, Decimal _sLMua, Decimal _dongiaTT, Decimal _donGiaBH, Decimal _giaChenhLech, Decimal _ck, Boolean _tinhtien, Boolean _bHTinhtien, Boolean _tinhNgoai, Byte _dATT, String _nguoiTT, SmartDate _ngayTToan, String _maMay, String _nguoiLap, SmartDate _tuNgay, SmartDate _denNgay, string _madt, Int32 _sTTdt, String _soGiuong, string _soPhong)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(SQLConnectionDataNoiT, DatabaseOwner + ObjectQualifier + "spBenhan_Giuong_Create2", _maBA, _sTT, _sTTKhoa, _maKhoa, _maGiuong, _maBN, _ngayDK.DBValue, _sLYC, _sLMua, _dongiaTT, _donGiaBH, _giaChenhLech, _ck, _tinhtien, _bHTinhtien, _tinhNgoai, _dATT, _nguoiTT, _ngayTToan.DBValue, _maMay, _nguoiLap, _tuNgay.DBValue, _denNgay.DBValue, _madt, _sTTdt, _soGiuong, _soPhong));
        }
        public override void UpdateBenhAn_Giuong(String _maBA, Int32 _sTT, Int32 _sTTKhoa, String _maKhoa, String _maGiuong, String _maBN, SmartDate _ngayDK, Decimal _sLYC, Decimal _sLMua, Decimal _dongiaTT, Decimal _donGiaBH, Decimal _giaChenhLech, Decimal _ck, Boolean _tinhtien, Boolean _bHTinhtien, Boolean _tinhNgoai, Byte _dATT, String _nguoiTT, SmartDate _ngayTToan, String _maMay, Boolean _huy, String _nguoiSD, SmartDate _tuNgay, SmartDate _denNgay, String _soGiuong, string _soPhong)
        {
            SqlHelper.ExecuteNonQuery(SQLConnectionDataNoiT, DatabaseOwner + ObjectQualifier + "spBenhan_Giuong_Update", _maBA, _sTT, _sTTKhoa, _maKhoa, _maGiuong, _maBN, _ngayDK.DBValue, _sLYC, _sLMua, _dongiaTT, _donGiaBH, _giaChenhLech, _ck, _tinhtien, _bHTinhtien, _tinhNgoai, _dATT, _nguoiTT, _ngayTToan.DBValue, _maMay, _huy, _nguoiSD, _tuNgay.DBValue, _denNgay.DBValue, _soGiuong, _soPhong);
        }
        public override void DeleteBenhAn_Giuong(String _maMay, String _nguoiSD, String _maBA, Int32 _sTT, Int32 _sTTKhoa, string _lydohuy)
        {
            SqlHelper.ExecuteNonQuery(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spBenhan_Giuong_Deleted", _maMay, _nguoiSD, _maBA, _sTT, _sTTKhoa, _lydohuy);
        }


        #endregion

        #region Benh an gpb


        public override Int32 InsertBenhAn_GPB(String _maBA, Int32 _sTT, Int32 _sTTKhoa, SmartDate _ngaydk, SmartDate _ngaynhan, SmartDate _ngaycodinh, String _bSKHAM, String _nguoinhan, String _madv, String _laytu, String _Dungdich, String _tomtat, String _quatrinh, String _nhanxet, String _ketqua, String _mabenh, String _tenbenh, String _maMay, String _nguoiSD)
        {
            return System.Convert.ToInt32(SqlHelper.ExecuteScalar(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spBenhAn_GPB_CREATE", _maBA, _sTT, _sTTKhoa, _ngaydk.DBValue, _ngaynhan.DBValue, _ngaycodinh.DBValue, _bSKHAM, _nguoinhan, _madv, _laytu, _Dungdich, _tomtat, _quatrinh, _nhanxet, _ketqua, _mabenh, _tenbenh, _maMay, _nguoiSD));
        }
        public override void UpdateBenhAn_GPB(String _maBA, Int32 _sTT, Int32 _sTTKhoa, SmartDate _ngaydk, SmartDate _ngaynhan, SmartDate _ngaycodinh, String _bSKHAM, String _nguoinhan, String _madv, String _laytu, String _Dungdich, String _tomtat, String _quatrinh, String _nhanxet, String _ketqua, String _mabenh, String _tenbenh, String _maMay, Boolean _huy, String _nguoiSD)
        {
            SqlHelper.ExecuteNonQuery(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spBenhAn_GPB_UPDATE", _maBA, _sTT, _sTTKhoa, _ngaydk.DBValue, _ngaynhan.DBValue, _ngaycodinh.DBValue, _bSKHAM, _nguoinhan, _madv, _laytu, _Dungdich, _tomtat, _quatrinh, _nhanxet, _ketqua, _mabenh, _tenbenh, _maMay, _huy, _nguoiSD);
        }
        public override void DeleteBenhAn_GPB(String _maMay, String _nguoiSD, String _maBA, Int32 _sTT, Int32 _sTTKhoa)
        {
            SqlHelper.ExecuteNonQuery(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spBenhAn_GPB_Deleted", _maMay, _nguoiSD, _maBA, _sTT, _sTTKhoa);
        }
        #endregion

        #region Benh an Thuoc Dong y
        public override Int32 InsertBenhAn_ThuocSD_DY(String _maBA, Int32 _sTT, Int32 _sTTKhoa, String _maBN, SmartDate _ngayDK, SmartDate _tuNgay, SmartDate _denNgay, Decimal _sLThang, Decimal _sLMua, Decimal _ck, String _bSChiDinh, String _lieuDung, String _cachDung, Boolean _tinhtien, Boolean _sac, Byte _dATT, String _nguoiTT, SmartDate _ngayTToan, Boolean _daTra, String _nguoiTra, SmartDate _ngaytra, Decimal _sLTra, Boolean _duyet, Boolean _phat, SmartDate _ngayP, String _nguoiD, String _nguoiP, SmartDate _ngayD, String _maMay, String _nguoiLap, String _maKX, Boolean _thuocBX, Boolean _thuocDX, String _maKhoa, string _madt, Int32 _sTTdt)
        {
            return System.Convert.ToInt32(SqlHelper.ExecuteScalar(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spBenhan_ThuocSD_DY_Create2", _maBA, _sTT, _sTTKhoa, _maBN, _ngayDK.DBValue, _tuNgay.DBValue, _denNgay.DBValue, _sLThang, _sLMua, _ck, _bSChiDinh, _lieuDung, _cachDung, _tinhtien, _sac, _dATT, _nguoiTT, _ngayTToan.DBValue, _daTra, _nguoiTra, _ngaytra.DBValue, _sLTra, _duyet, _phat, _ngayP.DBValue, _nguoiD, _nguoiP, _ngayD.DBValue, _maMay, _nguoiLap, _maKX, _thuocBX, _thuocDX, _maKhoa, _madt, _sTTdt));
        }
        public override void UpdateBenhAn_ThuocSD_DY(String _maBA, Int32 _sTT, Int32 _sTTKhoa, String _maBN, SmartDate _ngayDK, SmartDate _tuNgay, SmartDate _denNgay, Decimal _sLThang, Decimal _sLMua, Decimal _ck, String _bSChiDinh, String _lieuDung, String _cachDung, Boolean _tinhtien, Boolean _sac, Byte _dATT, String _nguoiTT, SmartDate _ngayTToan, Boolean _daTra, String _nguoiTra, SmartDate _ngaytra, Decimal _sLTra, Boolean _duyet, Boolean _phat, SmartDate _ngayP, String _nguoiD, String _nguoiP, SmartDate _ngayD, String _maMay, Boolean _huy, String _nguoiSD, String _maKX, Boolean _thuocBX, Boolean _thuocDX)
        {
            SqlHelper.ExecuteNonQuery(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spBenhan_ThuocSD_DY_Update", _maBA, _sTT, _sTTKhoa, _maBN, _ngayDK.DBValue, _tuNgay.DBValue, _denNgay.DBValue, _sLThang, _sLMua, _ck, _bSChiDinh, _lieuDung, _cachDung, _tinhtien, _sac, _dATT, _nguoiTT, _ngayTToan.DBValue, _daTra, _nguoiTra, _ngaytra.DBValue, _sLTra, _duyet, _phat, _ngayP.DBValue, _nguoiD, _nguoiP, _ngayD.DBValue, _maMay, _huy, _nguoiSD, _maKX, _thuocBX, _thuocDX);
        }
        public override void DeleteBenhAn_ThuocSD_DY(String _maMay, String _nguoiSD, String _maBA, Int32 _sTT, Int32 _sTTKhoa, string lydohuy)
        {
            SqlHelper.ExecuteNonQuery(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spBenhan_ThuocSD_DY_Deleted", _maMay, _nguoiSD, _maBA, _sTT, _sTTKhoa, lydohuy);
        }

        #endregion

        #region Benh an Thuoc Dong y Chi tiet

        public override Int32 InsertBenhAn_ThuocSD_DY_C(String _maBA, Int32 _sTT, Int32 _sTTKhoa, String _mathuoc, Decimal _sLKeDon, Decimal _sLMua, Decimal _dongiaTT, Decimal _donGiaBH, Decimal _giaChenhLech, Decimal _ck, Boolean _tinhtien, Boolean _bHTinhtien, Boolean _tinhNgoai, String _maMay, String _nguoiSD)
        {
            return System.Convert.ToInt32(SqlHelper.ExecuteScalar(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spBenhan_ThuocSD_DYC_Create", _maBA, _sTT, _sTTKhoa, _mathuoc, _sLKeDon, _sLMua, _dongiaTT, _donGiaBH, _giaChenhLech, _ck, _tinhtien, _bHTinhtien, _tinhNgoai, _maMay, _nguoiSD));
        }
        public override void UpdateBenhAn_ThuocSD_DY_C(String _maBA, Int32 _sTT, Int32 _sTTKhoa, Int32 _sTTThuoc, String _mathuoc, Decimal _sLKeDon, Decimal _sLMua, Decimal _dongiaTT, Decimal _donGiaBH, Decimal _giaChenhLech, Decimal _ck, Boolean _tinhtien, Boolean _bHTinhtien, Boolean _tinhNgoai, String _maMay, Boolean _huy, String _nguoiSD)
        {
            SqlHelper.ExecuteNonQuery(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spBenhan_ThuocSD_DYC_Update", _maBA, _sTT, _sTTKhoa, _sTTThuoc, _mathuoc, _sLKeDon, _sLMua, _dongiaTT, _donGiaBH, _giaChenhLech, _ck, _tinhtien, _bHTinhtien, _tinhNgoai, _maMay, _huy, _nguoiSD);
        }
        public override void DeleteBenhAn_ThuocSD_DY_C(String _maMay, String _nguoiSD, String _maBA, Int32 _sTT, Int32 _sTTKhoa, Int32 _sTTThuoc)
        {
            SqlHelper.ExecuteNonQuery(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spBenhan_ThuocSD_DYC_Deleted", _maMay, _nguoiSD, _maBA, _sTT, _sTTKhoa, _sTTThuoc);
        }
        #endregion

        #region Benh an Chan thuong chinh hinh


        public override String InsertBenhAn_CTCH(String _maBA, Int32 _sTTKhoa, SmartDate _ngayKham, String _bSKHAM, String _lyDoKham, String _mach, String _apHuyet, String _nhietDo, String _nhipTho, String _canNang, String _chieuCao, String _toanThan, String _benhngoaiKhoa, String _tuanHoan, String _hoHap, String _tieuHoa, String _thanTNSD, String _thanKinh, String _coXuongKhop, String _taiMuiHong, String _rangHamMat, String _mat, String _khac, String _dieuTri, String _benhSu, String _huongDT, String _mabenh, String _maBenhKem, String _machuyenkhoa, String _maMay, String _nguoiSD)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spBenhAn_CTCH_CREATE", _maBA, _sTTKhoa, _ngayKham.DBValue, _bSKHAM, _lyDoKham, _mach, _apHuyet, _nhietDo, _nhipTho, _canNang, _chieuCao, _toanThan, _benhngoaiKhoa, _tuanHoan, _hoHap, _tieuHoa, _thanTNSD, _thanKinh, _coXuongKhop, _taiMuiHong, _rangHamMat, _mat, _khac, _dieuTri, _benhSu, _huongDT, _mabenh, _maBenhKem, _machuyenkhoa, _maMay, _nguoiSD));
        }
        public override void UpdateBenhAn_CTCH(String _maBA, Int32 _sTT, Int32 _sTTKhoa, SmartDate _ngayKham, String _bSKHAM, String _lyDoKham, String _mach, String _apHuyet, String _nhietDo, String _nhipTho, String _canNang, String _chieuCao, String _toanThan, String _benhngoaiKhoa, String _tuanHoan, String _hoHap, String _tieuHoa, String _thanTNSD, String _thanKinh, String _coXuongKhop, String _taiMuiHong, String _rangHamMat, String _mat, String _khac, String _dieuTri, String _benhSu, String _huongDT, String _mabenh, String _maBenhKem, String _machuyenkhoa, String _maMay, Boolean _huy, String _nguoiSD)
        {
            SqlHelper.ExecuteNonQuery(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spBenhAn_CTCH_UPDATE", _maBA, _sTT, _sTTKhoa, _ngayKham.DBValue, _bSKHAM, _lyDoKham, _mach, _apHuyet, _nhietDo, _nhipTho, _canNang, _chieuCao, _toanThan, _benhngoaiKhoa, _tuanHoan, _hoHap, _tieuHoa, _thanTNSD, _thanKinh, _coXuongKhop, _taiMuiHong, _rangHamMat, _mat, _khac, _dieuTri, _benhSu, _huongDT, _mabenh, _maBenhKem, _machuyenkhoa, _maMay, _huy, _nguoiSD);
        }
        public override void DeleteBenhAn_CTCH(String _maMay, String _nguoiSD, String _maBA, Int32 _sTT, Int32 _sTTKhoa)
        {
            SqlHelper.ExecuteNonQuery(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spBenhAn_CTCH_Deleted", _maMay, _nguoiSD, _maBA, _sTT, _sTTKhoa);
        }
        #endregion

        #region Benh an truyen nhiem


        public override Int32 InsertBenhAn_TruyenNhiem(String _maBA, Int32 _sTTKhoa, SmartDate _ngayKham, String _bSKHAM, String _lyDoKham, String _mach, String _apHuyet, String _nhietDo, String _nhipTho, String _canNang, String _chieuCao, string _TSDichTe, string _TSBenhCapTinh, string _TSNoiSongTruocKhiBenh, SmartDate _TSThoiGianNoiSong, string _TSMoiSinh, String _toanThan, String _tuanHoan, String _hoHap, String _tieuHoa, String _thanTNSD, String _thanKinh, String _coXuongKhop, String _taiMuiHong, String _rangHamMat, String _mat, String _khac, String _dieuTri, String _benhSu, String _huongDT, String _mabenh, String _maBenhKem, String _machuyenkhoa, String _maMay, String _nguoiSD)
        {
            return System.Convert.ToInt32(SqlHelper.ExecuteScalar(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spBenhAn_TruyenNhiem_CREATE", _maBA, _sTTKhoa, _ngayKham.DBValue, _bSKHAM, _lyDoKham, _mach, _apHuyet, _nhietDo, _nhipTho, _canNang, _chieuCao, _TSDichTe, _TSBenhCapTinh, _TSNoiSongTruocKhiBenh, _TSThoiGianNoiSong.DBValue, _TSMoiSinh, _toanThan, _tuanHoan, _hoHap, _tieuHoa, _thanTNSD, _thanKinh, _coXuongKhop, _taiMuiHong, _rangHamMat, _mat, _khac, _dieuTri, _benhSu, _huongDT, _mabenh, _maBenhKem, _machuyenkhoa, _maMay, _nguoiSD));
        }
        public override void UpdateBenhAn_TruyenNhiem(String _maBA, Int32 _sTT, Int32 _sTTKhoa, SmartDate _ngayKham, String _bSKHAM, String _lyDoKham, String _mach, String _apHuyet, String _nhietDo, String _nhipTho, String _canNang, String _chieuCao, string _TSDichTe, string _TSBenhCapTinh, string _TSNoiSongTruocKhiBenh, SmartDate _TSThoiGianNoiSong, string _TSMoiSinh, String _toanThan, String _tuanHoan, String _hoHap, String _tieuHoa, String _thanTNSD, String _thanKinh, String _coXuongKhop, String _taiMuiHong, String _rangHamMat, String _mat, String _khac, String _dieuTri, String _benhSu, String _huongDT, String _mabenh, String _maBenhKem, String _machuyenkhoa, String _maMay, Boolean _huy, String _nguoiSD)
        {
            SqlHelper.ExecuteNonQuery(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spBenhAn_TruyenNhiem_UPDATE", _maBA, _sTT, _sTTKhoa, _ngayKham.DBValue, _bSKHAM, _lyDoKham, _mach, _apHuyet, _nhietDo, _nhipTho, _canNang, _chieuCao, _TSDichTe, _TSBenhCapTinh, _TSNoiSongTruocKhiBenh, _TSThoiGianNoiSong.DBValue, _TSMoiSinh, _toanThan, _tuanHoan, _hoHap, _tieuHoa, _thanTNSD, _thanKinh, _coXuongKhop, _taiMuiHong, _rangHamMat, _mat, _khac, _dieuTri, _benhSu, _huongDT, _mabenh, _maBenhKem, _machuyenkhoa, _maMay, _huy, _nguoiSD);
        }
        public override void DeleteBenhAn_TruyenNhiem(String _maMay, String _nguoiSD, String _maBA, Int32 _sTT, Int32 _sTTKhoa)
        {
            SqlHelper.ExecuteNonQuery(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spBenhAn_TruyenNhiem_Deleted", _maMay, _nguoiSD, _maBA, _sTT, _sTTKhoa);
        }
        #endregion
        #region Benh an Noi


        public override Int32 InsertBenhAn_Noi(String _maBA, Int32 _sTTKhoa, SmartDate _ngayKham, String _bSKHAM, String _lyDoKham, String _mach, String _apHuyet, String _nhietDo, String _nhipTho, String _canNang, String _chieuCao, String _toanThan, String _tuanHoan, String _hoHap, String _tieuHoa, String _thanTNSD, String _thanKinh, String _coXuongKhop, String _taiMuiHong, String _rangHamMat, String _mat, String _khac, String _mota, String _dieuTri, String _benhSu, String _huongDT, String _mabenh, String _maBenhKem, String _machuyenkhoa, String _maMay, String _nguoiSD, string _tenBenh, string _canlamsang, string _tomtatbenhan, string _mabenhkemtheo, string _mabenhphanbiet, string _tenbenhkemtheo, string _tenbenhphanbiet, string _maBenhChinh, string _tenBenhChinh, string _moTaChiTietCoQuanBenhLy)
        {
            return System.Convert.ToInt32(SqlHelper.ExecuteScalar(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spBenhAn_Noi_CREATE", _maBA, _sTTKhoa, _ngayKham.DBValue, _bSKHAM, _lyDoKham, _mach, _apHuyet, _nhietDo, _nhipTho, _canNang, _chieuCao, _toanThan, _tuanHoan, _hoHap, _tieuHoa, _thanTNSD, _thanKinh, _coXuongKhop, _taiMuiHong, _rangHamMat, _mat, _khac, _mota, _dieuTri, _benhSu, _huongDT, _mabenh, _maBenhKem, _machuyenkhoa, _maMay, _nguoiSD, _tenBenh, _canlamsang, _tomtatbenhan, _mabenhkemtheo, _mabenhphanbiet, _tenbenhkemtheo, _tenbenhphanbiet, _maBenhChinh, _tenBenhChinh, _moTaChiTietCoQuanBenhLy));
        }
        public override void UpdateBenhAn_Noi(String _maBA, Int32 _sTT, Int32 _sTTKhoa, SmartDate _ngayKham, String _bSKHAM, String _lyDoKham, String _mach, String _apHuyet, String _nhietDo, String _nhipTho, String _canNang, String _chieuCao, String _toanThan, String _tuanHoan, String _hoHap, String _tieuHoa, String _thanTNSD, String _thanKinh, String _coXuongKhop, String _taiMuiHong, String _rangHamMat, String _mat, String _khac, String _mota, String _dieuTri, String _benhSu, String _huongDT, String _mabenh, String _maBenhKem, String _machuyenkhoa, String _maMay, Boolean _huy, String _nguoiSD, string _tenBenh, string _canlamsang, string _tomtatbenhan, string _mabenhkemtheo, string _mabenhphanbiet, string _tenbenhkemtheo, string _tenbenhphanbiet, string _maBenhChinh, string _tenBenhChinh, string _moTaChiTietCoQuanBenhLy)
        {

            SqlHelper.ExecuteNonQuery(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spBenhAn_Noi_UPDATE", _maBA, _sTT, _sTTKhoa, _ngayKham.DBValue, _bSKHAM, _lyDoKham, _mach, _apHuyet, _nhietDo, _nhipTho, _canNang, _chieuCao, _toanThan, _tuanHoan, _hoHap, _tieuHoa, _thanTNSD, _thanKinh, _coXuongKhop, _taiMuiHong, _rangHamMat, _mat, _khac, _mota, _dieuTri, _benhSu, _huongDT, _mabenh, _maBenhKem, _machuyenkhoa, _maMay, _huy, _nguoiSD, _tenBenh, _canlamsang, _tomtatbenhan, _mabenhkemtheo, _mabenhphanbiet, _tenbenhkemtheo, _tenbenhphanbiet, _maBenhChinh, _tenBenhChinh, _moTaChiTietCoQuanBenhLy);
        }
        public override void DeleteBenhAn_Noi(String _maMay, String _nguoiSD, String _maBA, Int32 _sTT, Int32 _sTTKhoa)
        {
            SqlHelper.ExecuteNonQuery(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spBenhAn_Noi_Deleted", _maMay, _nguoiSD, _maBA, _sTT, _sTTKhoa);
        }
        #endregion
        #region Benh an dy


        public override String InsertBenhAn_DY(String _maBA, Int32 _sTTKhoa, Int32 _sTT, SmartDate _ngayKham, String _bSKHAM, String HinhThai,
         String Than,
         String Sac,
         String Trach,
         String ChatLuoi,
         String Sacluoi,
         String ReuLuoi,
         String KhacVongChan,
         String MotaVongChan,
         String Giongnoi,
         String HoiTho,
         Boolean CoHo,
         String Ho,
         Boolean OAmThanh,
         Boolean NacAmThanh,
         Boolean CoMui,
         String KieuMui,
         Boolean CoChatThai,
         String KieuChatThai,
         String MoTaVanChan,
         Byte BHHanNhiet,
         String MTBieuhien,
         String Thichnghi,
         String Mohoi,
         Boolean BHDauMat,
         String DauDau,
         String DauMat,
         String DauTai,
         String DauMui,
         String DauHong,
         String DauCoVai,
         Boolean BHLung,
         String Lung,
         Boolean BHBungNguc,
         String BungNguc,
         Boolean BHChanTay,
         Boolean BHAn,
         String An,
         Boolean BHUong,
         String Uong,
         Boolean BHDTT,
         String TieuTien,
         String DaiTien,
         Boolean BHNgu,
         String Ngu,
         Boolean BHKN,
         String RLKinhnguyet,
         String ThongKinh,
         String DoiHa,
         Boolean RLKNSinhDuc,
         String RLNam,
         String RLNu,
         Boolean DKXHBenh,
         String MTVaanChan,


         String XucChanda,
         String XucChanmohoi,
         String XucChancoxuongkhop,
         String XucChanbung,
         String MachChan,
         String TongKhanTrai,
         String TongKhanPhai,
         String ViKhanTraiThon,
         String ViKhanPhaiThon,
         String ViKhanTraiQuan,
         String ViKhanPhaiQuan,
         String ViKhanTraiXich,
         String ViKhanPhaiXich,
         String MTThietChan,
         String TomtatTuChan,
         String BienChungLieuTri,
         String BenhDanh,
         String Batcuong,
         String Tangphu,
         String KinhMach,
         String DinhViBenhTheo,
         String Nguyennhan,
               String BatcuongDT,
         String TangphuDT,
         String NguyennhanDT,
         String ChanDoanRaVien,
         String Phuongthuoc,
         String Phuonghuyet,
         String XoaBop,
         String Khac,
         String mabenhRaVien,
         String maBenhDT,
         String maBenhKKB,

         String ChanDoanDT,
         String ChanDoanKKB,
         String CheDoDinhDuong,
         String CheDoChamSoc, String TienLuong, String _maMay, String _nguoiSD, string _pPhapDieuTriYHCT, string _pPhapDieuTriYHHD)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spBenhAn_DY_CREATE", _maBA, _sTTKhoa, _sTT, _ngayKham.DBValue, _bSKHAM, HinhThai,
         Than,
         Sac,
         Trach,
         ChatLuoi,
         Sacluoi,
         ReuLuoi,
         KhacVongChan,
         MotaVongChan,
         Giongnoi,
         HoiTho,
        CoHo,
         Ho,
        OAmThanh,
        NacAmThanh,
        CoMui,
         KieuMui,
        CoChatThai,
         KieuChatThai,
         MoTaVanChan,
         BHHanNhiet,
         MTBieuhien,
         Thichnghi,
         Mohoi,
        BHDauMat,
         DauDau,
         DauMat,
         DauTai,
         DauMui,
         DauHong,
         DauCoVai,
        BHLung,
         Lung,
        BHBungNguc,
         BungNguc,
        BHChanTay,
        BHAn,
         An,
        BHUong,
         Uong,
        BHDTT,
         TieuTien,
         DaiTien,
        BHNgu,
         Ngu,
        BHKN,
         RLKinhnguyet,
         ThongKinh,
         DoiHa,
        RLKNSinhDuc,
         RLNam,
         RLNu,
        DKXHBenh,
         MTVaanChan,


         XucChanda,
         XucChanmohoi,
         XucChancoxuongkhop,
         XucChanbung,
         MachChan,
         TongKhanTrai,
         TongKhanPhai,
         ViKhanTraiThon,
         ViKhanPhaiThon,
         ViKhanTraiQuan,
         ViKhanPhaiQuan,
         ViKhanTraiXich,
         ViKhanPhaiXich,
         MTThietChan,
         TomtatTuChan,
         BienChungLieuTri,
         BenhDanh,
         Batcuong,
         Tangphu,
         KinhMach,
         DinhViBenhTheo,
         Nguyennhan,
             BatcuongDT,
          TangphuDT,
          NguyennhanDT,
         ChanDoanRaVien,
         Phuongthuoc,
         Phuonghuyet,
         XoaBop,
         Khac,
         mabenhRaVien,
         maBenhDT,
         maBenhKKB,

         ChanDoanDT,
         ChanDoanKKB,
         CheDoDinhDuong,
         CheDoChamSoc, TienLuong, _maMay, _nguoiSD, _pPhapDieuTriYHCT, _pPhapDieuTriYHHD));
        }
        public override void UpdateBenhAn_DY(String _maBA, Int32 _sTT, Int32 _sTTKhoa, SmartDate _ngayKham, String _bSKHAM, String HinhThai,
         String Than,
         String Sac,
         String Trach,
         String ChatLuoi,
         String Sacluoi,
         String ReuLuoi,
         String KhacVongChan,
         String MotaVongChan,
         String Giongnoi,
         String HoiTho,
         Boolean CoHo,
         String Ho,
         Boolean OAmThanh,
         Boolean NacAmThanh,
         Boolean CoMui,
         String KieuMui,
         Boolean CoChatThai,
         String KieuChatThai,
         String MoTaVanChan,
         Byte BHHanNhiet,
         String MTBieuhien,
         String Thichnghi,
         String Mohoi,
         Boolean BHDauMat,
         String DauDau,
         String DauMat,
         String DauTai,
         String DauMui,
         String DauHong,
         String DauCoVai,
         Boolean BHLung,
         String Lung,
         Boolean BHBungNguc,
         String BungNguc,
         Boolean BHChanTay,
         Boolean BHAn,
         String An,
         Boolean BHUong,
         String Uong,
         Boolean BHDTT,
         String TieuTien,
         String DaiTien,
         Boolean BHNgu,
         String Ngu,
         Boolean BHKN,
         String RLKinhnguyet,
         String ThongKinh,
         String DoiHa,
         Boolean RLKNSinhDuc,
         String RLNam,
         String RLNu,
         Boolean DKXHBenh,
         String MTVaanChan,


         String XucChanda,
         String XucChanmohoi,
         String XucChancoxuongkhop,
         String XucChanbung,
         String MachChan,
         String TongKhanTrai,
         String TongKhanPhai,
         String ViKhanTraiThon,
         String ViKhanPhaiThon,
         String ViKhanTraiQuan,
         String ViKhanPhaiQuan,
         String ViKhanTraiXich,
         String ViKhanPhaiXich,
         String MTThietChan,
         String TomtatTuChan,
         String BienChungLieuTri,
         String BenhDanh,
         String Batcuong,
         String Tangphu,
         String KinhMach,
         String DinhViBenhTheo,
         String Nguyennhan,
               String BatcuongDT,
         String TangphuDT,
         String NguyennhanDT,
         String ChanDoanRaVien,
       
         String Phuongthuoc,
         String Phuonghuyet,
         String XoaBop,
         String Khac,
         String mabenhRaVien,
         String maBenhDT,
         String maBenhKKB,
       
         String ChanDoanDT,
         String ChanDoanKKB,
         String CheDoDinhDuong,
         String CheDoChamSoc, String TienLuong,
            String _maMay, Boolean _huy, String _nguoiSD, string _pPhapDieuTriYHCT, string _pPhapDieuTriYHHD)
        {
            SqlHelper.ExecuteNonQuery(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spBenhAn_DY_UPDATE", _maBA, _sTT, _sTTKhoa, _ngayKham.DBValue, _bSKHAM, HinhThai,
         Than,
         Sac,
         Trach,
         ChatLuoi,
         Sacluoi,
         ReuLuoi,
         KhacVongChan,
         MotaVongChan,
         Giongnoi,
         HoiTho,
        CoHo,
         Ho,
        OAmThanh,
        NacAmThanh,
        CoMui,
         KieuMui,
        CoChatThai,
         KieuChatThai,
         MoTaVanChan,
         BHHanNhiet,
         MTBieuhien,
         Thichnghi,
         Mohoi,
        BHDauMat,
         DauDau,
         DauMat,
         DauTai,
         DauMui,
         DauHong,
         DauCoVai,
        BHLung,
         Lung,
        BHBungNguc,
         BungNguc,
        BHChanTay,
        BHAn,
         An,
        BHUong,
         Uong,
        BHDTT,
         TieuTien,
         DaiTien,
        BHNgu,
         Ngu,
        BHKN,
         RLKinhnguyet,
         ThongKinh,
         DoiHa,
        RLKNSinhDuc,
         RLNam,
         RLNu,
        DKXHBenh,
         MTVaanChan,


         XucChanda,
         XucChanmohoi,
         XucChancoxuongkhop,
         XucChanbung,
         MachChan,
         TongKhanTrai,
         TongKhanPhai,
         ViKhanTraiThon,
         ViKhanPhaiThon,
         ViKhanTraiQuan,
         ViKhanPhaiQuan,
         ViKhanTraiXich,
         ViKhanPhaiXich,
         MTThietChan,
         TomtatTuChan,
         BienChungLieuTri,
         BenhDanh,
         Batcuong,
         Tangphu,
         KinhMach,
         DinhViBenhTheo,
         Nguyennhan,
             BatcuongDT,
          TangphuDT,
          NguyennhanDT,
         ChanDoanRaVien,
         Phuongthuoc,
         Phuonghuyet,
         XoaBop,
         Khac,
         mabenhRaVien,
         maBenhDT,
         maBenhKKB,

         ChanDoanDT,
         ChanDoanKKB,
         CheDoDinhDuong,
         CheDoChamSoc, TienLuong, _maMay, _huy, _nguoiSD, _pPhapDieuTriYHCT, _pPhapDieuTriYHHD);
        }
        public override void DeleteBenhAn_DY(String _maMay, String _nguoiSD, String _maBA, Int32 _sTT, Int32 _sTTKhoa)
        {
            SqlHelper.ExecuteNonQuery(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spBenhAn_DY_Deleted", _maMay, _nguoiSD, _maBA, _sTT, _sTTKhoa);
        }
        #endregion
        #region Benh an ub



        public override String InsertBenhAn_UB(String _maBA, Int32 _sTTKhoa, SmartDate _ngayKham, String _bSKHAM, String _lyDoKham, String _mach, String _apHuyet, String _nhietDo, String _nhipTho, String _canNang, String _chieuCao, String _toanThan, String _tamthan_thankinh, String _tuanhoan, String _hohap, String _tieuhoa, String _da_moduoida, String _co_xuong_khop, String _tietnieu_sinhduc, String _coQuanKhac, String _tonThuong, String _dieuTri, String _benhSu, String _huongDT, String _mabenh, String _maBenhKem, String _machuyenkhoa, String _maMay, String _nguoiSD)
       // public override String InsertBenhAn_UB(String _maBA, Int32 _sTTKhoa, SmartDate _ngayKham, String _bSKHAM, String _lyDoKham, String _mach, String _apHuyet, String _nhietDo, String _nhipTho, String _canNang, String _chieuCao, String _toanThan, String _tamthan_thankinh, String _tuanHoan, String _hoHap, String _dieuTri, String _benhSu, String _huongDT, String _mabenh, String _maBenhKem, String _machuyenkhoa, String _maMay, String _nguoiSD)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spBenhAn_UB_CREATE", _maBA, _sTTKhoa, _ngayKham.DBValue, _bSKHAM, _lyDoKham, _mach, _apHuyet, _nhietDo, _nhipTho, _canNang, _chieuCao, _toanThan, _tamthan_thankinh, _tuanhoan, _hohap, _tieuhoa, _da_moduoida, _co_xuong_khop, _tietnieu_sinhduc, _coQuanKhac, _tonThuong, _dieuTri, _benhSu, _huongDT, _mabenh, _maBenhKem, _machuyenkhoa, _maMay, _nguoiSD));
        }
        public override void UpdateBenhAn_UB(String _maBA, Int32 _sTT, Int32 _sTTKhoa, SmartDate _ngayKham, String _bSKHAM, String _lyDoKham, String _mach, String _apHuyet, String _nhietDo, String _nhipTho, String _canNang, String _chieuCao, String _toanThan, String _tamthan_thankinh, String _tuanhoan, String _hohap, String _tieuhoa, String _da_moduoida, String _co_xuong_khop, String _tietnieu_sinhduc, String _coQuanKhac, String _tonThuong, String _dieuTri, String _benhSu, String _huongDT, String _mabenh, String _maBenhKem, String _machuyenkhoa, String _maMay, Boolean _huy, String _nguoiSD)
        {
            SqlHelper.ExecuteNonQuery(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spBenhAn_UB_UPDATE", _maBA, _sTT, _sTTKhoa, _ngayKham.DBValue, _bSKHAM, _lyDoKham, _mach, _apHuyet, _nhietDo, _nhipTho, _canNang, _chieuCao, _toanThan, _tamthan_thankinh, _tuanhoan, _hohap, _tieuhoa, _da_moduoida, _co_xuong_khop, _tietnieu_sinhduc, _coQuanKhac, _tonThuong, _dieuTri, _benhSu, _huongDT, _mabenh, _maBenhKem, _machuyenkhoa, _maMay, _huy, _nguoiSD);
        }
        public override void DeleteBenhAn_UB(String _maMay, String _nguoiSD, String _maBA, Int32 _sTT, Int32 _sTTKhoa)
        {
            SqlHelper.ExecuteNonQuery(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spBenhAn_UB_Deleted", _maMay, _nguoiSD, _maBA, _sTT, _sTTKhoa);
        }
        #endregion
        #region Benh an RHM
       

        public override String InsertBenhAn_RHM(String _maBA, Int32 _sTTKhoa, SmartDate _ngayKham, String _bSKHAM, String _lyDoKham, String _mach, String _apHuyet, String _nhietDo, String _nhipTho, String _canNang, String _chieuCao, String _toanThan, String _benhchuyenkhoa, String _tonThuongCanBan, String _coQuanTamThan, String _coQuanTuanHoan, String _coQuanHoHap, String _coQuanTieuHoa, String _coQuanDa, String _coQuanCoXuongKhop, String _coQuanTietNieuSD, String _coQuanKhac, String _dieuTri, String _benhSu, String _huongDT, String _mabenh, String _maBenhKem, String _machuyenkhoa, String _maMay, String _nguoiSD)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spBenhAn_RHM_CREATE", _maBA, _sTTKhoa, _ngayKham.DBValue, _bSKHAM, _lyDoKham, _mach, _apHuyet, _nhietDo, _nhipTho, _canNang, _chieuCao, _toanThan, _benhchuyenkhoa, _tonThuongCanBan, _coQuanTamThan, _coQuanTuanHoan, _coQuanHoHap, _coQuanTieuHoa, _coQuanDa, _coQuanCoXuongKhop, _coQuanTietNieuSD, _coQuanKhac, _dieuTri, _benhSu, _huongDT, _mabenh, _maBenhKem, _machuyenkhoa, _maMay, _nguoiSD));
        }
        public override void UpdateBenhAn_RHM(String _maBA, Int32 _sTT, Int32 _sTTKhoa, SmartDate _ngayKham, String _bSKHAM, String _lyDoKham, String _mach, String _apHuyet, String _nhietDo, String _nhipTho, String _canNang, String _chieuCao, String _toanThan, String _tonThuongCanBan, String _benhchuyenkhoa, String _coQuanTamThan, String _coQuanTuanHoan, String _coQuanHoHap, String _coQuanTieuHoa, String _coQuanDa, String _coQuanCoXuongKhop, String _coQuanTietNieuSD, String _coQuanKhac, String _dieuTri, String _benhSu, String _huongDT, String _mabenh, String _maBenhKem, String _machuyenkhoa, String _maMay, Boolean _huy, String _nguoiSD)
        {
            SqlHelper.ExecuteNonQuery(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spBenhAn_RHM_UPDATE", _maBA, _sTT, _sTTKhoa, _ngayKham.DBValue, _bSKHAM, _lyDoKham, _mach, _apHuyet, _nhietDo, _nhipTho, _canNang, _chieuCao, _toanThan, _benhchuyenkhoa, _tonThuongCanBan, _coQuanTamThan, _coQuanTuanHoan, _coQuanHoHap, _coQuanTieuHoa, _coQuanDa, _coQuanCoXuongKhop, _coQuanTietNieuSD, _coQuanKhac, _dieuTri, _benhSu, _huongDT, _mabenh, _maBenhKem, _machuyenkhoa, _maMay, _huy, _nguoiSD);
        }

        public override String InsertBenhAn_RHM(String _maBA, Int32 _sTTKhoa, SmartDate _ngayKham, String _bSKHAM, String _lyDoKham, String _mach, String _apHuyet, String _nhietDo, String _nhipTho, String _canNang, String _chieuCao, String _toanThan, String _benhngoaiKhoa, String _tuanHoan, String _hoHap, String _dieuTri, String _benhSu, String _huongDT, String _mabenh, String _maBenhKem, String _machuyenkhoa, String _maMay, String _nguoiSD)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spBenhAn_RHM_CREATE", _maBA, _sTTKhoa, _ngayKham.DBValue, _bSKHAM, _lyDoKham, _mach, _apHuyet, _nhietDo, _nhipTho, _canNang, _chieuCao, _toanThan, _benhngoaiKhoa, _tuanHoan, _hoHap, _dieuTri, _benhSu, _huongDT, _mabenh, _maBenhKem, _machuyenkhoa, _maMay, _nguoiSD));
        }
        public override void UpdateBenhAn_RHM(String _maBA, Int32 _sTT, Int32 _sTTKhoa, SmartDate _ngayKham, String _bSKHAM, String _lyDoKham, String _mach, String _apHuyet, String _nhietDo, String _nhipTho, String _canNang, String _chieuCao, String _toanThan, String _benhngoaiKhoa, String _tuanHoan, String _hoHap, String _dieuTri, String _benhSu, String _huongDT, String _mabenh, String _maBenhKem, String _machuyenkhoa, String _maMay, Boolean _huy, String _nguoiSD)
        {
            SqlHelper.ExecuteNonQuery(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spBenhAn_RHM_UPDATE", _maBA, _sTT, _sTTKhoa, _ngayKham.DBValue, _bSKHAM, _lyDoKham, _mach, _apHuyet, _nhietDo, _nhipTho, _canNang, _chieuCao, _toanThan, _benhngoaiKhoa, _tuanHoan, _hoHap, _dieuTri, _benhSu, _huongDT, _mabenh, _maBenhKem, _machuyenkhoa, _maMay, _huy, _nguoiSD);
        }
        public override void DeleteBenhAn_RHM(String _maMay, String _nguoiSD, String _maBA, Int32 _sTT, Int32 _sTTKhoa)
        {
            SqlHelper.ExecuteNonQuery(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spBenhAn_RHM_Deleted", _maMay, _nguoiSD, _maBA, _sTT, _sTTKhoa);
        }
        #endregion
        #region Benh an bong

        public override String InsertBenhAn_Bong(String _maBA, Int32 _sTTKhoa, SmartDate _ngayKham, String _bSKHAM, String _lyDoKham, String _mach, String _apHuyet, String _nhietDo, String _nhipTho, String _canNang, String _chieuCao, String _toanThan, String _coQuanTamThan, String _coQuanTuanHoan, String _coQuanHoHap, String _coQuanTieuHoa, String _coQuanCoXuongKhop, String _coQuanTietNieu, String _coQuanSinhDuc, String _coQuanKhac, String _tonthuong, String _dieuTri, String _benhSu, String _huongDT, String _mabenh, String _maBenhKem, String _machuyenkhoa, String _maMay, String _nguoiSD)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spBenhAn_Bong_CREATE", _maBA, _sTTKhoa, _ngayKham.DBValue, _bSKHAM, _lyDoKham, _mach, _apHuyet, _nhietDo, _nhipTho, _canNang, _chieuCao, _toanThan, _coQuanTamThan, _coQuanTuanHoan, _coQuanHoHap, _coQuanTieuHoa, _coQuanCoXuongKhop, _coQuanTietNieu, _coQuanSinhDuc, _coQuanKhac, _tonthuong, _dieuTri, _benhSu, _huongDT, _mabenh, _maBenhKem, _machuyenkhoa, _maMay, _nguoiSD));
        }
        public override void UpdateBenhAn_Bong(String _maBA, Int32 _sTT, Int32 _sTTKhoa, SmartDate _ngayKham, String _bSKHAM, String _lyDoKham, String _mach, String _apHuyet, String _nhietDo, String _nhipTho, String _canNang, String _chieuCao, String _toanThan, String _coQuanTamThan, String _coQuanTuanHoan, String _coQuanHoHap, String _coQuanTieuHoa, String _coQuanCoXuongKhop, String _coQuanTietNieu, String _coQuanSinhDuc, String _coQuanKhac, String _tonthuong, String _dieuTri, String _benhSu, String _huongDT, String _mabenh, String _maBenhKem, String _machuyenkhoa, String _maMay, Boolean _huy, String _nguoiSD)
        {
            SqlHelper.ExecuteNonQuery(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spBenhAn_Bong_UPDATE", _maBA, _sTT, _sTTKhoa, _ngayKham.DBValue, _bSKHAM, _lyDoKham, _mach, _apHuyet, _nhietDo, _nhipTho, _canNang, _chieuCao, _toanThan, _coQuanTamThan, _coQuanTuanHoan, _coQuanHoHap, _coQuanTieuHoa, _coQuanCoXuongKhop, _coQuanTietNieu, _coQuanSinhDuc, _coQuanKhac, _tonthuong, _dieuTri, _benhSu, _huongDT, _mabenh, _maBenhKem, _machuyenkhoa, _maMay, _huy, _nguoiSD);
        }
        public override void DeleteBenhAn_Bong(String _maMay, String _nguoiSD, String _maBA, Int32 _sTT, Int32 _sTTKhoa)
        {
            SqlHelper.ExecuteNonQuery(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spBenhAn_Bong_Deleted", _maMay, _nguoiSD, _maBA, _sTT, _sTTKhoa);
        }
        #endregion
        #region Benh an bong

        public override Int32 InsertBenhAn_Lao(String _maBA, Int32 _sTTKhoa, SmartDate _ngayKham, String _bSKHAM, String _lyDoKham, String _mach, String _apHuyet, String _nhietDo, String _nhipTho, String _canNang, String _chieuCao, String _toanThan, String _coQuanTuanHoan, String _coQuanHoHap, String _coQuanTieuHoa, String _coQuanTietNieu, String _coquanthankinh, String _coQuanCoXuongKhop, String _coQuantmh, String _coQuanrhm, String _coQuanmat, String _coQuanKhac, String _dieuTri, String _benhSu, String _huongDT, String _mabenh, String _maBenhKem, String _machuyenkhoa, String _maMay, String _nguoiSD)
        {
            return System.Convert.ToInt32(SqlHelper.ExecuteScalar(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spBenhAn_Lao_CREATE", _maBA, _sTTKhoa, _ngayKham.DBValue, _bSKHAM, _lyDoKham, _mach, _apHuyet, _nhietDo, _nhipTho, _canNang, _chieuCao, _toanThan, _coQuanTuanHoan, _coQuanHoHap, _coQuanTieuHoa, _coQuanTietNieu, _coquanthankinh, _coQuanCoXuongKhop, _coQuantmh, _coQuanrhm, _coQuanmat, _coQuanKhac, _dieuTri, _benhSu, _huongDT, _mabenh, _maBenhKem, _machuyenkhoa, _maMay, _nguoiSD));
        }
        public override void UpdateBenhAn_Lao(String _maBA, Int32 _sTT, Int32 _sTTKhoa, SmartDate _ngayKham, String _bSKHAM, String _lyDoKham, String _mach, String _apHuyet, String _nhietDo, String _nhipTho, String _canNang, String _chieuCao, String _toanThan, String _coQuanTuanHoan, String _coQuanHoHap, String _coQuanTieuHoa, String _coQuanTietNieu, String _coquanthankinh, String _coQuanCoXuongKhop, String _coQuantmh, String _coQuanrhm, String _coQuanmat, String _coQuanKhac, String _dieuTri, String _benhSu, String _huongDT, String _mabenh, String _maBenhKem, String _machuyenkhoa, String _maMay, Boolean _huy, String _nguoiSD)
        {
            SqlHelper.ExecuteNonQuery(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spBenhAn_Lao_UPDATE", _maBA, _sTT, _sTTKhoa, _ngayKham.DBValue, _bSKHAM, _lyDoKham, _mach, _apHuyet, _nhietDo, _nhipTho, _canNang, _chieuCao, _toanThan, _coQuanTuanHoan, _coQuanHoHap, _coQuanTieuHoa, _coQuanTietNieu, _coquanthankinh, _coQuanCoXuongKhop, _coQuantmh, _coQuanrhm, _coQuanmat, _coQuanKhac, _dieuTri, _benhSu, _huongDT, _mabenh, _maBenhKem, _machuyenkhoa, _maMay, _huy, _nguoiSD);
        }
        public override void DeleteBenhAn_Lao(String _maMay, String _nguoiSD, String _maBA, Int32 _sTT, Int32 _sTTKhoa)
        {
            SqlHelper.ExecuteNonQuery(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spBenhAn_Lao_Deleted", _maMay, _nguoiSD, _maBA, _sTT, _sTTKhoa);
        }
        #endregion

        #region Benh an Phu Khoa Hue
        public override String InsertBenhAn_PhuKhoaH(String _maBA, Int32 _sTTKhoa, SmartDate _ngayKham, String _bSKHAM, String _lyDoKham, String _mach, String _apHuyet, String _nhietDo, String _nhipTho, String _canNang, String _chieuCao, String _toanThan,
String _toanThanDa,
String _toanThanHach,
String _toanThanVu,
String _cQTuanHoan,
String _cQHoHap,
String _cQTieuHoa,
String _cQThanKinh,
String _cQCoXuongKhop,
String _cQTietNieuSD,
String _coQuanKhac,
String _cKKhamNgoaiDauHieu,
String _cKKhamNgoaiMoiLon,
String _cKKhamNgoaiMoiBe,
String _cKKhamNgoaiAmVat,
String _cKKhamNgoaiAmHo,
String _cKKhamNgoaiMangTrinh,
String _cKKhamNgoaiTangSinhMon,
String _cKKhamTrong,
String _cKKhamTrongAmDao,
String _cKKhamTrongCTC,
String _cKKhamTrongThanTC,
String _cKKhamTrongPhanPhu,
String _cKKhamTrongCacTuiCung, String _benhSu, String _huongDT, String _mabenh, String _maBenhKem, String _machuyenkhoa, String _maMay, String _nguoiSD)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spBenhAn_PhuKhoaH_CREATE", _maBA, _sTTKhoa, _ngayKham.DBValue, _bSKHAM, _lyDoKham, _mach, _apHuyet, _nhietDo, _nhipTho, _canNang, _chieuCao, _toanThan,
 _toanThanDa,		
 _toanThanHach,
 _toanThanVu,
 _cQTuanHoan,
 _cQHoHap,
 _cQTieuHoa,
 _cQThanKinh,
 _cQCoXuongKhop,		
 _cQTietNieuSD,
 _coQuanKhac,
 _cKKhamNgoaiDauHieu,		
 _cKKhamNgoaiMoiLon,
 _cKKhamNgoaiMoiBe,
 _cKKhamNgoaiAmVat,
 _cKKhamNgoaiAmHo,
 _cKKhamNgoaiMangTrinh,
 _cKKhamNgoaiTangSinhMon,
 _cKKhamTrong,
 _cKKhamTrongAmDao,
 _cKKhamTrongCTC,
 _cKKhamTrongThanTC,		
 _cKKhamTrongPhanPhu,		
 _cKKhamTrongCacTuiCung, _benhSu, _huongDT, _mabenh, _maBenhKem, _machuyenkhoa, _maMay, _nguoiSD));
        }
        public override void UpdateBenhAn_PhuKhoaH(String _maBA, Int32 _sTT, Int32 _sTTKhoa, SmartDate _ngayKham, String _bSKHAM, String _lyDoKham, String _mach, String _apHuyet, String _nhietDo, String _nhipTho, String _canNang, String _chieuCao, String _toanThan,
String _toanThanDa,
String _toanThanHach,
String _toanThanVu,
String _cQTuanHoan,
String _cQHoHap,
String _cQTieuHoa,
String _cQThanKinh,
String _cQCoXuongKhop,
String _cQTietNieuSD,
String _coQuanKhac,
String _cKKhamNgoaiDauHieu,
String _cKKhamNgoaiMoiLon,
String _cKKhamNgoaiMoiBe,
String _cKKhamNgoaiAmVat,
String _cKKhamNgoaiAmHo,
String _cKKhamNgoaiMangTrinh,
String _cKKhamNgoaiTangSinhMon,
String _cKKhamTrong,
String _cKKhamTrongAmDao,
String _cKKhamTrongCTC,
String _cKKhamTrongThanTC,
String _cKKhamTrongPhanPhu,
String _cKKhamTrongCacTuiCung, String _benhSu, String _huongDT, String _mabenh, String _maBenhKem, String _machuyenkhoa, String _maMay, Boolean _huy, String _nguoiSD)
        {
            SqlHelper.ExecuteNonQuery(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spBenhAn_PhuKhoaH_UPDATE", _maBA, _sTT, _sTTKhoa, _ngayKham.DBValue, _bSKHAM, _lyDoKham, _mach, _apHuyet, _nhietDo, _nhipTho, _canNang, _chieuCao, _toanThan,
 _toanThanDa,		
 _toanThanHach,
 _toanThanVu,
 _cQTuanHoan,
 _cQHoHap,
 _cQTieuHoa,
 _cQThanKinh,
 _cQCoXuongKhop,		
 _cQTietNieuSD,
 _coQuanKhac,
 _cKKhamNgoaiDauHieu,		
 _cKKhamNgoaiMoiLon,
 _cKKhamNgoaiMoiBe,
 _cKKhamNgoaiAmVat,
 _cKKhamNgoaiAmHo,
 _cKKhamNgoaiMangTrinh,
 _cKKhamNgoaiTangSinhMon,
 _cKKhamTrong,
 _cKKhamTrongAmDao,
 _cKKhamTrongCTC,
 _cKKhamTrongThanTC,		
 _cKKhamTrongPhanPhu,		
 _cKKhamTrongCacTuiCung, _benhSu, _huongDT, _mabenh, _maBenhKem, _machuyenkhoa, _maMay, _huy, _nguoiSD);
        }
        public override void DeleteBenhAn_PhuKhoaH(String _maMay, String _nguoiSD, String _maBA, Int32 _sTT, Int32 _sTTKhoa)
        {
            SqlHelper.ExecuteNonQuery(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spBenhAn_PhuKhoaH_Deleted", _maMay, _nguoiSD, _maBA, _sTT, _sTTKhoa);
        }
        #endregion

        #region Benh an Ngoai Khoa Hue


        public override String InsertBenhAn_NgoaiKhoa(String _maBA, Int32 _sTTKhoa, SmartDate _ngayKham, String _bSKHAM, String _lyDoKham, String _mach, String _apHuyet, String _nhietDo, String _nhipTho, String _canNang, String _chieuCao, String _toanThan, String _benhNgoaiKhoa, String _coQuanTuanHoan, String _coQuanHoHap, String _coQuanTieuHoa, String _coQuanTietNieuSD, String _coQuanTamThan, String _coQuanCoXuongKhop, String _coQuanTMH, String _coQuanRHM, String _coQuanMat, String _coQuanKhac, String _dieuTri, String _benhSu, String _huongDT, String _mabenh, String _maBenhKem, String _machuyenkhoa, String _maMay, String _nguoiSD)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spBenhAn_NgoaiKhoa_CREATE", _maBA, _sTTKhoa, _ngayKham.DBValue, _bSKHAM, _lyDoKham, _mach, _apHuyet, _nhietDo, _nhipTho, _canNang, _chieuCao, _toanThan, _benhNgoaiKhoa, _coQuanTuanHoan, _coQuanHoHap, _coQuanTieuHoa, _coQuanTietNieuSD, _coQuanTamThan, _coQuanCoXuongKhop, _coQuanTMH, _coQuanRHM, _coQuanMat, _coQuanKhac, _dieuTri, _benhSu, _huongDT, _mabenh, _maBenhKem, _machuyenkhoa, _maMay, _nguoiSD));
        }
        public override void UpdateBenhAn_NgoaiKhoa(String _maBA, Int32 _sTT, Int32 _sTTKhoa, SmartDate _ngayKham, String _bSKHAM, String _lyDoKham, String _mach, String _apHuyet, String _nhietDo, String _nhipTho, String _canNang, String _chieuCao, String _toanThan, String _benhNgoaiKhoa, String _coQuanTuanHoan, String _coQuanHoHap, String _coQuanTieuHoa, String _coQuanTietNieuSD, String _coQuanTamThan, String _coQuanCoXuongKhop, String _coQuanTMH, String _coQuanRHM, String _coQuanMat, String _coQuanKhac, String _dieuTri, String _benhSu, String _huongDT, String _mabenh, String _maBenhKem, String _machuyenkhoa, String _maMay, Boolean _huy, String _nguoiSD)
        {
            SqlHelper.ExecuteNonQuery(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spBenhAn_NgoaiKhoa_UPDATE", _maBA, _sTT, _sTTKhoa, _ngayKham.DBValue, _bSKHAM, _lyDoKham, _mach, _apHuyet, _nhietDo, _nhipTho, _canNang, _chieuCao, _toanThan, _benhNgoaiKhoa, _coQuanTuanHoan, _coQuanHoHap, _coQuanTieuHoa, _coQuanTietNieuSD, _coQuanTamThan, _coQuanCoXuongKhop, _coQuanTMH, _coQuanRHM, _coQuanMat, _coQuanKhac, _dieuTri, _benhSu, _huongDT, _mabenh, _maBenhKem, _machuyenkhoa, _maMay, _huy, _nguoiSD);
        }
        public override void DeleteBenhAn_NgoaiKhoa(String _maMay, String _nguoiSD, String _maBA, Int32 _sTT, Int32 _sTTKhoa)
        {
            SqlHelper.ExecuteNonQuery(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spBenhAn_NgoaiKhoa_Deleted", _maMay, _nguoiSD, _maBA, _sTT, _sTTKhoa);
        }
        #endregion

        #region Benh an Nhi Khoa 


        public override String InsertBenhAn_NhiKhoa(String _maBA, Int32 _sTTKhoa, SmartDate _ngayKham, String _bSKHAM, String _lyDoKham, String _mach, String _apHuyet, String _nhietDo, String _nhipTho, String _canNang, String _chieuCao, String _toanThan, String _toanThanChieuCao, String _toanThanVongNguc, String _toanThanVongDau, String _coQuanTuanHoan, String _coQuanHoHap, String _coQuanTieuHoa, String _coQuanTietNieuSD, String _coQuanThanKinh, String _coQuanCoXuongKhop, String _coQuanKhac, String _dieuTri, String _benhSu, String _huongDT, String _mabenh, String _maBenhKem, String _machuyenkhoa, String _maMay, String _nguoiSD)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spBenhAn_NhiKhoa_CREATE", _maBA, _sTTKhoa, _ngayKham.DBValue, _bSKHAM, _lyDoKham, _mach, _apHuyet, _nhietDo, _nhipTho, _canNang, _chieuCao, _toanThan, _toanThanChieuCao, _toanThanVongNguc, _toanThanVongDau, _coQuanTuanHoan, _coQuanHoHap, _coQuanTieuHoa, _coQuanTietNieuSD, _coQuanThanKinh, _coQuanCoXuongKhop, _coQuanKhac, _dieuTri, _benhSu, _huongDT, _mabenh, _maBenhKem, _machuyenkhoa, _maMay, _nguoiSD));
        }
        public override void UpdateBenhAn_NhiKhoa(String _maBA, Int32 _sTT, Int32 _sTTKhoa, SmartDate _ngayKham, String _bSKHAM, String _lyDoKham, String _mach, String _apHuyet, String _nhietDo, String _nhipTho, String _canNang, String _chieuCao, String _toanThan, String _toanThanChieuCao, String _toanThanVongNguc, String _toanThanVongDau, String _coQuanTuanHoan, String _coQuanHoHap, String _coQuanTieuHoa, String _coQuanTietNieuSD, String _coQuanThanKinh, String _coQuanCoXuongKhop, String _coQuanKhac, String _dieuTri, String _benhSu, String _huongDT, String _mabenh, String _maBenhKem, String _machuyenkhoa, String _maMay, Boolean _huy, String _nguoiSD)
        {
            SqlHelper.ExecuteNonQuery(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spBenhAn_NhiKhoa_UPDATE", _maBA, _sTT, _sTTKhoa, _ngayKham.DBValue, _bSKHAM, _lyDoKham, _mach, _apHuyet, _nhietDo, _nhipTho, _canNang, _chieuCao, _toanThan, _toanThanChieuCao, _toanThanVongNguc, _toanThanVongDau, _coQuanTuanHoan, _coQuanHoHap, _coQuanTieuHoa, _coQuanTietNieuSD, _coQuanThanKinh, _coQuanCoXuongKhop, _coQuanKhac, _dieuTri, _benhSu, _huongDT, _mabenh, _maBenhKem, _machuyenkhoa, _maMay, _huy, _nguoiSD);
        }
        public override void DeleteBenhAn_NhiKhoa(String _maMay, String _nguoiSD, String _maBA, Int32 _sTT, Int32 _sTTKhoa)
        {
            SqlHelper.ExecuteNonQuery(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spBenhAn_NhiKhoa_Deleted", _maMay, _nguoiSD, _maBA, _sTT, _sTTKhoa);
        }
        #endregion


       // #region Benh an Tam Than 


       // public override String InsertBenhAn_TamThan(String _maBA, Int32 _sTTKhoa, SmartDate _ngayKham, String _bSKHAM, String _lyDoKham, String _mach, String _apHuyet, String _nhietDo, String _nhipTho, String _canNang, String _chieuCao, String _toanThan, String _cacCoQuan, String _khamThanKinh, String _tRBieuHien, String _tTNangLucKhongGian, String _tTNangLucThoiGian, String _tTNangLucBanThan, String _tTCacHoiChung, String _tTCamXuc, String _tTTriGiac, String _tTTuDuyHinhThuc, String _tTTuDuyNoiDung, String _tTHanhViYThuc, String _tTHanhBanNang, String _tTTriNho, String _tTTriNang, String _tTChuY, String _dieuTri, String _benhSu, String _huongDT, String _mabenh, String _maBenhKem, String _machuyenkhoa, String _maMay, String _nguoiSD)
       //  {
       //     return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spBenhAn_TamThan_CREATE", _maBA, _sTTKhoa, _ngayKham.DBValue, _bSKHAM, _lyDoKham, _mach, _apHuyet, _nhietDo, _nhipTho, _canNang, _chieuCao, _toanThan, _cacCoQuan, _khamThanKinh,  _tRBieuHien,  _tTNangLucKhongGian,  _tTNangLucThoiGian,  _tTNangLucBanThan,  _tTCacHoiChung,  _tTCamXuc,  _tTTriGiac, _tTTuDuyHinhThuc,  _tTTuDuyNoiDung,  _tTHanhViYThuc,  _tTHanhBanNang,  _tTTriNho,  _tTTriNang, _tTChuY, _dieuTri, _benhSu, _huongDT, _mabenh, _maBenhKem, _machuyenkhoa, _maMay, _nguoiSD));
       // }
       // public override void UpdateBenhAn_TamThan(String _maBA, Int32 _sTT, Int32 _sTTKhoa, SmartDate _ngayKham, String _bSKHAM, String _lyDoKham, String _mach, String _apHuyet, String _nhietDo, String _nhipTho, String _canNang, String _chieuCao, String _toanThan, String _cacCoQuan, String _khamThanKinh, String _tRBieuHien, String _tTNangLucKhongGian, String _tTNangLucThoiGian, String _tTNangLucBanThan, String _tTCacHoiChung, String _tTCamXuc, String _tTTriGiac, String _tTTuDuyHinhThuc, String _tTTuDuyNoiDung, String _tTHanhViYThuc, String _tTHanhBanNang, String _tTTriNho, String _tTTriNang, String _tTChuY, String _dieuTri, String _benhSu, String _huongDT, String _mabenh, String _maBenhKem, String _machuyenkhoa, String _maMay, Boolean _huy, String _nguoiSD)
       //{
       //     SqlHelper.ExecuteNonQuery(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spBenhAn_TamThan_UPDATE", _maBA, _sTT, _sTTKhoa, _ngayKham.DBValue, _bSKHAM, _lyDoKham, _mach, _apHuyet, _nhietDo, _nhipTho, _canNang, _chieuCao, _toanThan, _cacCoQuan, _khamThanKinh,  _tRBieuHien,  _tTNangLucKhongGian,  _tTNangLucThoiGian,  _tTNangLucBanThan,  _tTCacHoiChung,  _tTCamXuc,  _tTTriGiac,  _tTTuDuyHinhThuc,  _tTTuDuyNoiDung,  _tTHanhViYThuc,  _tTHanhBanNang,  _tTTriNho,  _tTTriNang,  _tTChuY, _dieuTri, _benhSu, _huongDT, _mabenh, _maBenhKem, _machuyenkhoa, _maMay, _huy, _nguoiSD);
       // }
       // public override void DeleteBenhAn_TamThan(String _maMay, String _nguoiSD, String _maBA, Int32 _sTT, Int32 _sTTKhoa)
       // {
       //     SqlHelper.ExecuteNonQuery(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spBenhAn_TamThan_Deleted", _maMay, _nguoiSD, _maBA, _sTT, _sTTKhoa);
       // }
       // #endregion

        #region Benh an Da Lieu Hue


        public override String InsertBenhAn_DaLieu(String _maBA, Int32 _sTTKhoa, SmartDate _ngayKham, String _bSKHAM, String _lyDoKham, String _mach, String _apHuyet, String _nhietDo, String _nhipTho, String _canNang, String _chieuCao, String _toanThan, String _trieuChungCoNang, String _tonThuongCanBan, String _coQuanTamThan, String _coQuanTuanHoan, String _coQuanHoHap, String _coQuanTieuHoa, String _coQuanDa, String _coQuanCoXuongKhop, String _coQuanTietNieuSD, String _coQuanKhac, String _dieuTri, String _benhSu, String _huongDT, String _mabenh, String _maBenhKem, String _machuyenkhoa, String _maMay, String _nguoiSD)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spBenhAn_DaLieu_CREATE", _maBA, _sTTKhoa, _ngayKham.DBValue, _bSKHAM, _lyDoKham, _mach, _apHuyet, _nhietDo, _nhipTho, _canNang, _chieuCao, _toanThan, _trieuChungCoNang, _tonThuongCanBan, _coQuanTamThan, _coQuanTuanHoan, _coQuanHoHap, _coQuanTieuHoa, _coQuanDa, _coQuanCoXuongKhop, _coQuanTietNieuSD, _coQuanKhac, _dieuTri, _benhSu, _huongDT, _mabenh, _maBenhKem, _machuyenkhoa, _maMay, _nguoiSD));
        }
        public override void UpdateBenhAn_DaLieu(String _maBA, Int32 _sTT, Int32 _sTTKhoa, SmartDate _ngayKham, String _bSKHAM, String _lyDoKham, String _mach, String _apHuyet, String _nhietDo, String _nhipTho, String _canNang, String _chieuCao, String _toanThan, String _trieuChungCoNang, String _tonThuongCanBan, String _coQuanTamThan, String _coQuanTuanHoan, String _coQuanHoHap, String _coQuanTieuHoa, String _coQuanDa, String _coQuanCoXuongKhop, String _coQuanTietNieuSD, String _coQuanKhac, String _dieuTri, String _benhSu, String _huongDT, String _mabenh, String _maBenhKem, String _machuyenkhoa, String _maMay, Boolean _huy, String _nguoiSD)
        {
            SqlHelper.ExecuteNonQuery(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spBenhAn_DaLieu_UPDATE", _maBA, _sTT, _sTTKhoa, _ngayKham.DBValue, _bSKHAM, _lyDoKham, _mach, _apHuyet, _nhietDo, _nhipTho, _canNang, _chieuCao, _toanThan, _trieuChungCoNang, _tonThuongCanBan, _coQuanTamThan, _coQuanTuanHoan, _coQuanHoHap, _coQuanTieuHoa, _coQuanDa, _coQuanCoXuongKhop, _coQuanTietNieuSD, _coQuanKhac, _dieuTri, _benhSu, _huongDT, _mabenh, _maBenhKem, _machuyenkhoa, _maMay, _huy, _nguoiSD);
        }
        public override void DeleteBenhAn_DaLieu(String _maMay, String _nguoiSD, String _maBA, Int32 _sTT, Int32 _sTTKhoa)
        {
            SqlHelper.ExecuteNonQuery(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spBenhAn_DaLieu_Deleted", _maMay, _nguoiSD, _maBA, _sTT, _sTTKhoa);
        }
        #endregion


        #region Benh an Mat Hue


        public override String InsertBenhAn_Mat(String _maBA, Int32 _sTTKhoa, SmartDate _ngayKham, String _bSKHAM, String _lyDoKham, String _mach, String _apHuyet, String _nhietDo, String _nhipTho, String _canNang, String _chieuCao, String _toanThan, String _thiLucVV, String _khongKinhMP, String _khongKinhMT, String _coKinhMP, String _coKinhMT, String _nhanAPMP, String _nhanApMT, String _thiTruongMP, String _thiTruongMT,
String _coQuanKhac,
String _dieutri,
String _benhsu,
String _tomTatBA,
String _mabenh,
String _maBenhKem,
String _phanBiet,
String _tienLuong,
String _huongDT,
String _machuyenkhoa,
String _maMay,
String _nguoiSD,
String _leDaoMP,
String _leDaoMT,
String _miMatMP,
String _miMatMT,
String _ketMacMP,
String _ketMacMT,
String _matHotMP,
String _matHotMT,
String _giaMacMP,
String _giaMacMT,
String _cungMacMP,
String _cungMacMT,
String _tTTienPhongMP,
String _tTTienPhongMT,
String _tTMongMatMP,
String _tTMongMatMT,
String _tTDongTuPXMP,
String _tTDongTuPXMT,
String _tTThuyTinhTheMP,
String _tThuyTinhTheMT,
String _tTThuyTinhDichMP,
String _tThuyTinhDichMT,
String _tTSADongTuMP,
String _tTSADongTuMT,
String _tTNhanCauMP,
String _tTNhanCauMT,
String _tTHocMatMP,
String _tTHocMatMT,
String _tTDayMatMP,
String _tTDayMatMT,
String _khamToanThan,
String _cQNoiTiet,
String _cQTamThan,
String _cQTuanHoan,
String _cQHoHap,
String _cQTieuHoa,
String _cQCXKhop,
String _cQTietNieuSD,
String _cacXNCLS)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spBenhAn_Mat_CREATE", _maBA, _sTTKhoa, _ngayKham.DBValue, _bSKHAM, _lyDoKham, _mach, _apHuyet, _nhietDo, _nhipTho, _canNang, _chieuCao, _toanThan, _thiLucVV, _khongKinhMP, _khongKinhMT, _coKinhMP, _coKinhMT, _nhanAPMP, _nhanApMT, _thiTruongMP, _thiTruongMT,
 _leDaoMP,	
 _leDaoMT,
 _miMatMP,	
 _miMatMT,	
 _ketMacMP,
 _ketMacMT,	
 _matHotMP,
 _matHotMT,
 _giaMacMP,
 _giaMacMT,
 _cungMacMP,
 _cungMacMT,
 _tTTienPhongMP,
 _tTTienPhongMT,
 _tTMongMatMP,		
 _tTMongMatMT,
 _tTDongTuPXMP,
 _tTDongTuPXMT,
 _tTThuyTinhTheMP,
 _tThuyTinhTheMT,
 _tTThuyTinhDichMP,
 _tThuyTinhDichMT,
 _tTSADongTuMP,
 _tTSADongTuMT,
 _tTNhanCauMP,
 _tTNhanCauMT,
 _tTHocMatMP,
 _tTHocMatMT,
 _tTDayMatMP,
 _tTDayMatMT,
 _khamToanThan,
 _cQNoiTiet,
 _cQTamThan,
 _cQTuanHoan,
 _cQHoHap,
 _cQTieuHoa,
 _cQCXKhop,
 _cQTietNieuSD,		
 _coQuanKhac,
 _cacXNCLS,
 _tomTatBA,
 _dieutri ,
 _benhsu ,
 _mabenh,
 _maBenhKem,
 _phanBiet,
 _tienLuong,
  _huongDT, _machuyenkhoa, _maMay, _nguoiSD));
        }
        public override void UpdateBenhAn_Mat(String _maBA, Int32 _sTT, Int32 _sTTKhoa, SmartDate _ngayKham, String _bSKHAM, String _lyDoKham, String _mach, String _apHuyet, String _nhietDo, String _nhipTho, String _canNang, String _chieuCao, String _toanThan, String _thiLucVV, String _khongKinhMP, String _khongKinhMT, String _coKinhMP, String _coKinhMT, String _nhanAPMP, String _nhanApMT, String _thiTruongMP, String _thiTruongMT,
String _leDaoMP,
String _leDaoMT,
String _miMatMP,
String _miMatMT,
String _ketMacMP,
String _ketMacMT,
String _matHotMP,
String _matHotMT,
String _giaMacMP,
String _giaMacMT,
String _cungMacMP,
String _cungMacMT,
String _tTTienPhongMP,
String _tTTienPhongMT,
String _tTMongMatMP,
String _tTMongMatMT,
String _tTDongTuPXMP,
String _tTDongTuPXMT,
String _tTThuyTinhTheMP,
String _tThuyTinhTheMT,
String _tTThuyTinhDichMP,
String _tThuyTinhDichMT,
String _tTSADongTuMP,
String _tTSADongTuMT,
String _tTNhanCauMP,
String _tTNhanCauMT,
String _tTHocMatMP,
String _tTHocMatMT,
String _tTDayMatMP,
String _tTDayMatMT,
String _khamToanThan,
String _cQNoiTiet,
String _cQTamThan,
String _cQTuanHoan,
String _cQHoHap,
String _cQTieuHoa,
String _cQCXKhop,
String _cQTietNieuSD,
String _coQuanKhac,
String _cacXNCLS,
String _tomTatBA,
         
String _benhsu,
string _dieutri,
String _mabenh,
String _maBenhKem,
String _phanBiet,
String _tienLuong,
 String _huongDT, String _machuyenkhoa, String _maMay, Boolean _huy, String _nguoiSD)
        {
            SqlHelper.ExecuteNonQuery(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spBenhAn_Mat_UPDATE",
                _maBA, _sTT, _sTTKhoa, _ngayKham.DBValue, _bSKHAM, _lyDoKham, _mach, _apHuyet, _nhietDo, _nhipTho, _canNang, _chieuCao, _toanThan, _thiLucVV, _khongKinhMP, _khongKinhMT, _coKinhMP, _coKinhMT, _nhanAPMP, _nhanApMT, _thiTruongMP, _thiTruongMT,
 _leDaoMP,
 _leDaoMT,
 _miMatMP,
 _miMatMT,
 _ketMacMP,
 _ketMacMT,
 _matHotMP,
 _matHotMT,
 _giaMacMP,
 _giaMacMT,
 _cungMacMP,
 _cungMacMT,
 _tTTienPhongMP,
 _tTTienPhongMT,
 _tTMongMatMP,
 _tTMongMatMT,
 _tTDongTuPXMP,
 _tTDongTuPXMT,
 _tTThuyTinhTheMP,
 _tThuyTinhTheMT,
 _tTThuyTinhDichMP,
 _tThuyTinhDichMT,
 _tTSADongTuMP,
 _tTSADongTuMT,
 _tTNhanCauMP,
 _tTNhanCauMT,
 _tTHocMatMP,
 _tTHocMatMT,
 _tTDayMatMP,
 _tTDayMatMT,
 _khamToanThan,
 _cQNoiTiet,
 _cQTamThan,
 _cQTuanHoan,
 _cQHoHap,
 _cQTieuHoa,
 _cQCXKhop,
 _cQTietNieuSD,
 _coQuanKhac,
 _cacXNCLS,
 _tomTatBA,
 _dieutri ,
 _benhsu ,
 _mabenh,
 _maBenhKem,
 _phanBiet,
 _tienLuong,
  _huongDT, _machuyenkhoa, _maMay, _huy, _nguoiSD);
        }
        public override void DeleteBenhAn_Mat(String _maMay, String _nguoiSD, String _maBA, Int32 _sTT, Int32 _sTTKhoa)
        {
            SqlHelper.ExecuteNonQuery(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spBenhAn_Mat_Deleted", _maMay, _nguoiSD, _maBA, _sTT, _sTTKhoa);
        }
        #endregion

        #region Benh an Tai Mui Hong Hue


        public override String InsertBenhAn_TMH(String _maBA, Int32 _sTTKhoa, SmartDate _ngayKham, String _bSKHAM, String _lyDoKham, String _mach, String _apHuyet, String _nhietDo, String _nhipTho, String _canNang, String _chieuCao, String _toanThan, String _benhChuyenKhoa, String _coQuanTamThan, String _coQuanTuanHoan, String _coQuanHoHap, String _coQuanTieuHoa, String _coQuanDa, String _coQuanCoXuongKhop, String _coQuanTietNieuSD, String _coQuanKhac, String _tonthuong, String _dieuTri, String _benhSu, String _huongDT, String _mabenh, String _maBenhKem, String _machuyenkhoa, String _maMay, String _nguoiSD)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spBenhAn_TMHH_CREATE", _maBA, _sTTKhoa, _ngayKham.DBValue, _bSKHAM, _lyDoKham, _mach, _apHuyet, _nhietDo, _nhipTho, _canNang, _chieuCao, _toanThan, _benhChuyenKhoa, _coQuanTamThan, _coQuanTuanHoan, _coQuanHoHap, _coQuanTieuHoa, _coQuanDa, _coQuanCoXuongKhop, _coQuanTietNieuSD, _coQuanKhac, _tonthuong, _dieuTri, _benhSu, _huongDT, _mabenh, _maBenhKem, _machuyenkhoa, _maMay, _nguoiSD));
        }
        public override void UpdateBenhAn_TMH(String _maBA, Int32 _sTT, Int32 _sTTKhoa, SmartDate _ngayKham, String _bSKHAM, String _lyDoKham, String _mach, String _apHuyet, String _nhietDo, String _nhipTho, String _canNang, String _chieuCao, String _toanThan, String _benhChuyenKhoa, String _coQuanTamThan, String _coQuanTuanHoan, String _coQuanHoHap, String _coQuanTieuHoa, String _coQuanDa, String _coQuanCoXuongKhop, String _coQuanTietNieuSD, String _coQuanKhac, String _tonthuong, String _dieuTri, String _benhSu, String _huongDT, String _mabenh, String _maBenhKem, String _machuyenkhoa, String _maMay, Boolean _huy, String _nguoiSD)
        {
            SqlHelper.ExecuteNonQuery(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spBenhAn_TMHH_UPDATE", _maBA, _sTT, _sTTKhoa, _ngayKham.DBValue, _bSKHAM, _lyDoKham, _mach, _apHuyet, _nhietDo, _nhipTho, _canNang, _chieuCao, _toanThan, _benhChuyenKhoa, _coQuanTamThan, _coQuanTuanHoan, _coQuanHoHap, _coQuanTieuHoa, _coQuanDa, _coQuanCoXuongKhop, _coQuanTietNieuSD, _coQuanKhac, _tonthuong, _dieuTri, _benhSu, _huongDT, _mabenh, _maBenhKem, _machuyenkhoa, _maMay, _huy, _nguoiSD);
        }
        //public override void DeleteBenhAn_TMH(String _maMay, String _nguoiSD, String _maBA, Int32 _sTT, Int32 _sTTKhoa)
        //{
        //    SqlHelper.ExecuteNonQuery(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spBenhAn_TMHH_Deleted", _maMay, _nguoiSD, _maBA, _sTT, _sTTKhoa);
        //}
        #endregion


        #region Benh an Phuc Hoi Chuc Nang Hue


        public override String InsertBenhAn_PHCN(String _maBA, Int32 _sTTKhoa, SmartDate _ngayKham, String _bSKHAM, String _lyDoKham, String _mach, String _apHuyet, String _nhietDo, String _nhipTho, String _canNang, String _chieuCao, String _toanThan, String _toanThanCacBoPhan,
String _toanThanCacKhuyetTat,
String _cQThanKinhVD,
String _cQThanKinhPX,
String _cQThanKinhSoNao,
String _cQThanKinhCamGiac,
String _cQThanKinhCoTron,
String _cQThanKinhRoiLoanCN,
String _cQThanKinhTiengTim,
String _cQTuanHoanNhipTim,
String _cQTuanHoanTiengTim,
String _cQTuanHoanRoiLoanCN,
String _cQHoHapLongNguc,
String _cQHoHapBenhLy,
String _cQHoHapTheTichKhi,
String _cQHoHapLRoiLoanCN,
String _cQTieuHoaBenhLy,
String _cQTieuHoaRoiLoanCN,
String _cQDa,
String _cQKhopHinhThe,
String _cQKhopTamHoatDong,
String _cQKhopLucVV,
String _cQCoBenhLy,
String _cQCoDuocThu,
String _cQCoRoiLoanCN,
int _cQCoBacThuCo,
String _cQCotSongBenhLy,
String _cQCotSongShober,
String _cQCotSongStibor,
String _cQCotSongRoiLoanCN,
String _cQTietNieuSD,
String _coQuanKhac,
String _moTaTonThuong, String _dieuTri, String _benhSu, String _huongDT, String _mabenh, String _maBenhKem, String _machuyenkhoa, String _maMay, String _nguoiSD)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spBenhAn_PHCN_CREATE", _maBA, _sTTKhoa, _ngayKham.DBValue, _bSKHAM, _lyDoKham, _mach, _apHuyet, _nhietDo, _nhipTho, _canNang, _chieuCao, _toanThan, _toanThanCacBoPhan,
_toanThanCacKhuyetTat,
_cQThanKinhVD,
_cQThanKinhPX,
_cQThanKinhSoNao,
_cQThanKinhCamGiac,
_cQThanKinhCoTron,
_cQThanKinhRoiLoanCN,
_cQThanKinhTiengTim,
_cQTuanHoanNhipTim,
_cQTuanHoanTiengTim,
_cQTuanHoanRoiLoanCN,
_cQHoHapLongNguc,
_cQHoHapBenhLy,
_cQHoHapTheTichKhi,
_cQHoHapLRoiLoanCN,
_cQTieuHoaBenhLy,
_cQTieuHoaRoiLoanCN,
_cQDa,
_cQKhopHinhThe,
_cQKhopTamHoatDong,
_cQKhopLucVV,
_cQCoBenhLy,
_cQCoDuocThu,
_cQCoRoiLoanCN,
_cQCoBacThuCo,
_cQCotSongBenhLy,
_cQCotSongShober,
_cQCotSongStibor,
_cQCotSongRoiLoanCN,
_cQTietNieuSD,
_coQuanKhac,
_moTaTonThuong, _coQuanKhac, _dieuTri, _benhSu, _huongDT, _mabenh, _maBenhKem, _machuyenkhoa, _maMay, _nguoiSD));
        }
        public override void UpdateBenhAn_PHCN(String _maBA, Int32 _sTT, Int32 _sTTKhoa, SmartDate _ngayKham, String _bSKHAM, String _lyDoKham, String _mach, String _apHuyet, String _nhietDo, String _nhipTho, String _canNang, String _chieuCao, String _toanThan, String _toanThanCacBoPhan,
String _toanThanCacKhuyetTat,
String _cQThanKinhVD,
String _cQThanKinhPX,
String _cQThanKinhSoNao,
String _cQThanKinhCamGiac,
String _cQThanKinhCoTron,
String _cQThanKinhRoiLoanCN,
String _cQThanKinhTiengTim,
String _cQTuanHoanNhipTim,
String _cQTuanHoanTiengTim,
String _cQTuanHoanRoiLoanCN,
String _cQHoHapLongNguc,
String _cQHoHapBenhLy,
String _cQHoHapTheTichKhi,
String _cQHoHapLRoiLoanCN,
String _cQTieuHoaBenhLy,
String _cQTieuHoaRoiLoanCN,
String _cQDa,
String _cQKhopHinhThe,
String _cQKhopTamHoatDong,
String _cQKhopLucVV,
String _cQCoBenhLy,
String _cQCoDuocThu,
String _cQCoRoiLoanCN,
int _cQCoBacThuCo,
String _cQCotSongBenhLy,
String _cQCotSongShober,
String _cQCotSongStibor,
String _cQCotSongRoiLoanCN,
String _cQTietNieuSD,
String _coQuanKhac,
String _moTaTonThuong, String _dieuTri, String _benhSu, String _huongDT, String _mabenh, String _maBenhKem, String _machuyenkhoa, String _maMay, Boolean _huy, String _nguoiSD)
        {
            SqlHelper.ExecuteNonQuery(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spBenhAn_PHCN_UPDATE", _maBA, _sTT, _sTTKhoa, _ngayKham.DBValue, _bSKHAM, _lyDoKham, _mach, _apHuyet, _nhietDo, _nhipTho, _canNang, _chieuCao, _toanThan, _toanThanCacBoPhan,
_toanThanCacKhuyetTat,
_cQThanKinhVD,
_cQThanKinhPX,
_cQThanKinhSoNao,
_cQThanKinhCamGiac,
_cQThanKinhCoTron,
_cQThanKinhRoiLoanCN,
_cQThanKinhTiengTim,
_cQTuanHoanNhipTim,
_cQTuanHoanTiengTim,
_cQTuanHoanRoiLoanCN,
_cQHoHapLongNguc,
_cQHoHapBenhLy,
_cQHoHapTheTichKhi,
_cQHoHapLRoiLoanCN,
_cQTieuHoaBenhLy,
_cQTieuHoaRoiLoanCN,
_cQDa,
_cQKhopHinhThe,
_cQKhopTamHoatDong,
_cQKhopLucVV,
_cQCoBenhLy,
_cQCoDuocThu,
_cQCoRoiLoanCN,
_cQCoBacThuCo,
_cQCotSongBenhLy,
_cQCotSongShober,
_cQCotSongStibor,
_cQCotSongRoiLoanCN,
_cQTietNieuSD,
_coQuanKhac,
_moTaTonThuong, _coQuanKhac, _dieuTri, _benhSu, _huongDT, _mabenh, _maBenhKem, _machuyenkhoa, _maMay, _huy, _nguoiSD);
        }
        public override void DeleteBenhAn_PHCN(String _maMay, String _nguoiSD, String _maBA, Int32 _sTT, Int32 _sTTKhoa)
        {
            SqlHelper.ExecuteNonQuery(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spBenhAn_PHCN_Deleted", _maMay, _nguoiSD, _maBA, _sTT, _sTTKhoa);
        }
        #endregion


        #region Benh an YHCT Noi Tru Hue 


        public override String InsertBenhAn_YHCT(String _maBA, Int32 _sTTKhoa, SmartDate _ngayKham, String _bSKHAM, String _lyDoKham, String _mach, String _apHuyet, String _nhietDo, String _nhipTho, String _canNang, String _chieuCao, String _toanThan, String _thamKhamCacCQ, String _vongChan, String _vanChan, String _vVanChan, String _thietChan, String _chanDoanBenhDanh, String _chanDoanBatCuong, String _chanDoanTangPhu, String _chanDoanNguyenNgu, String _phepChua, String _phuongThuoc, String _phuongHuyet, String _xoaBop, String _cheDoAn, String _tienLuong, String _dieuTri, String _benhSu, String _huongDT, String _mabenh, String _maBenhKem, String _machuyenkhoa, String _maMay, String _nguoiSD)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spBenhAn_YHCT_CREATE", _maBA, _sTTKhoa, _ngayKham.DBValue, _bSKHAM, _lyDoKham, _mach, _apHuyet, _nhietDo, _nhipTho, _canNang, _chieuCao, _toanThan, _thamKhamCacCQ, _vongChan, _vanChan, _vVanChan, _thietChan, _chanDoanBenhDanh, _chanDoanBatCuong, _chanDoanTangPhu, _chanDoanNguyenNgu, _phepChua, _phuongThuoc, _phuongHuyet, _xoaBop, _cheDoAn, _tienLuong, _dieuTri, _benhSu, _huongDT, _mabenh, _maBenhKem, _machuyenkhoa, _maMay, _nguoiSD));
        }
        public override void UpdateBenhAn_YHCT(String _maBA, Int32 _sTT, Int32 _sTTKhoa, SmartDate _ngayKham, String _bSKHAM, String _lyDoKham, String _mach, String _apHuyet, String _nhietDo, String _nhipTho, String _canNang, String _chieuCao, String _toanThan, String _thamKhamCacCQ, String _vongChan, String _vanChan, String _vVanChan, String _thietChan, String _chanDoanBenhDanh, String _chanDoanBatCuong, String _chanDoanTangPhu, String _chanDoanNguyenNgu, String _phepChua, String _phuongThuoc, String _phuongHuyet, String _xoaBop, String _cheDoAn, String _tienLuong, String _dieuTri, String _benhSu, String _huongDT, String _mabenh, String _maBenhKem, String _machuyenkhoa, String _maMay, Boolean _huy, String _nguoiSD)
        {
            SqlHelper.ExecuteNonQuery(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spBenhAn_YHCT_UPDATE", _maBA, _sTT, _sTTKhoa, _ngayKham.DBValue, _bSKHAM, _lyDoKham, _mach, _apHuyet, _nhietDo, _nhipTho, _canNang, _chieuCao, _toanThan, _thamKhamCacCQ, _vongChan, _vanChan, _vVanChan, _thietChan, _chanDoanBenhDanh, _chanDoanBatCuong, _chanDoanTangPhu, _chanDoanNguyenNgu, _phepChua, _phuongThuoc, _phuongHuyet, _xoaBop, _cheDoAn, _tienLuong, _dieuTri, _benhSu, _huongDT, _mabenh, _maBenhKem, _machuyenkhoa, _maMay, _huy, _nguoiSD);
        }
        public override void DeleteBenhAn_YHCT(String _maMay, String _nguoiSD, String _maBA, Int32 _sTT, Int32 _sTTKhoa)
        {
            SqlHelper.ExecuteNonQuery(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spBenhAn_YHCT_Deleted", _maMay, _nguoiSD, _maBA, _sTT, _sTTKhoa);
        }
        #endregion

        #region Benh an benh mau


        public override String InsertBenhAn_BenhMau(String _maBA, Int32 _sTTKhoa, SmartDate _ngayKham, String _bSKHAM, String _lyDoKham, String _mach, String _apHuyet, String _nhietDo, String _nhipTho, String _canNang, String _chieuCao, String _Toanthan, String _TTTinhThan, String _TTHinhDang, String _TTDa, String _TTTrieuChungXuatHuyet, String _TTLongTocMong, String _TTTrieuChungPhu, String _TTTuyenGiap, String _CQGan, String _CQLach, String _CQHach, String _CQTamThan, String _CQHoHap, String _CQTieuHoa, String _CQTimMach, String _CQCoXuongKhop, String _CQTietNieu, String _CoQuanKhac, String _dieuTri, String _benhSu, String _huongDT, String _mabenh, String _maBenhKem, String _machuyenkhoa, String _maMay, String _nguoiSD)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spBenhAn_BenhMau_CREATE", _maBA, _sTTKhoa, _ngayKham.DBValue, _bSKHAM, _lyDoKham, _mach, _apHuyet, _nhietDo, _nhipTho, _canNang, _chieuCao,_Toanthan,  _TTTinhThan, _TTHinhDang, _TTDa, _TTTrieuChungXuatHuyet, _TTLongTocMong, _TTTrieuChungPhu, _TTTuyenGiap, _CQGan, _CQLach, _CQHach, _CQTamThan, _CQHoHap, _CQTieuHoa, _CQTimMach, _CQCoXuongKhop, _CQTietNieu, _CoQuanKhac,_dieuTri , _benhSu, _huongDT, _mabenh, _maBenhKem, _machuyenkhoa, _maMay, _nguoiSD));
        }
        public override void UpdateBenhAn_BenhMau(String _maBA, Int32 _sTT, Int32 _sTTKhoa, SmartDate _ngayKham, String _bSKHAM, String _lyDoKham, String _mach, String _apHuyet, String _nhietDo, String _nhipTho, String _canNang, String _chieuCao, String _Toanthan, String _TTTinhThan, String _TTHinhDang, String _TTDa, String _TTTrieuChungXuatHuyet, String _TTLongTocMong, String _TTTrieuChungPhu, String _TTTuyenGiap, String _CQGan, String _CQLach, String _CQHach, String _CQTamThan, String _CQHoHap, String _CQTieuHoa, String _CQTimMach, String _CQCoXuongKhop, String _CQTietNieu, String _CoQuanKhac, String _dieuTri, String _benhSu, String _huongDT, String _mabenh, String _maBenhKem, String _machuyenkhoa, String _maMay, Boolean _huy, String _nguoiSD)
        {
            SqlHelper.ExecuteNonQuery(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spBenhAn_BenhMau_UPDATE", _maBA, _sTT, _sTTKhoa, _ngayKham.DBValue, _bSKHAM, _lyDoKham, _mach, _apHuyet, _nhietDo, _nhipTho, _canNang, _chieuCao,_Toanthan, _TTTinhThan, _TTHinhDang, _TTDa, _TTTrieuChungXuatHuyet, _TTLongTocMong, _TTTrieuChungPhu, _TTTuyenGiap, _CQGan, _CQLach, _CQHach, _CQTamThan, _CQHoHap, _CQTieuHoa, _CQTimMach, _CQCoXuongKhop, _CQTietNieu, _CoQuanKhac, _dieuTri, _benhSu, _huongDT, _mabenh, _maBenhKem, _machuyenkhoa, _maMay, _huy, _nguoiSD);
        }
        public override void DeleteBenhAn_BenhMau(String _maMay, String _nguoiSD, String _maBA, Int32 _sTT, Int32 _sTTKhoa)
        {
            SqlHelper.ExecuteNonQuery(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spBenhAn_BenhMau_Deleted", _maMay, _nguoiSD, _maBA, _sTT, _sTTKhoa);
        }
        #endregion
        #region Benh an tamthan


        public override String InsertBenhAn_TamThan(String _maBA, Int32 _sTTKhoa, SmartDate _ngayKham, String _bSKHAM, String _lyDoKham, String _mach, String _apHuyet, String _nhietDo, String _nhipTho, String _canNang, String _chieuCao, String _toanThan, String _cacCoQuan, String _khamThanKinh, String _tRBieuHien, String _tTNangLucKhongGian, String _tTNangLucThoiGian, String _tTNangLucBanThan, String _tTCacHoiChung, String _tTCamXuc, String _tTTriGiac, String _tTTuDuyHinhThuc, String _tTTuDuyNoiDung, String _tTHanhViYThuc, String _tTHanhBanNang, String _tTTriNho, String _tTTriNang, String _tTChuY, String _dieuTri, String _benhSu, String _huongDT, String _mabenh, String _maBenhKem, String _machuyenkhoa, String _maMay, String _nguoiSD)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spBenhAn_TamThan_CREATE", _maBA, _sTTKhoa, _ngayKham.DBValue, _bSKHAM, _lyDoKham, _mach, _apHuyet, _nhietDo, _nhipTho, _canNang, _chieuCao, _toanThan, _cacCoQuan, _khamThanKinh, _tRBieuHien, _tTNangLucKhongGian, _tTNangLucThoiGian, _tTNangLucBanThan, _tTCacHoiChung, _tTCamXuc, _tTTriGiac, _tTTuDuyHinhThuc, _tTTuDuyNoiDung, _tTHanhViYThuc, _tTHanhBanNang, _tTTriNho, _tTTriNang, _tTChuY, _dieuTri, _benhSu, _huongDT, _mabenh, _maBenhKem, _machuyenkhoa, _maMay, _nguoiSD));
        }
        public override void UpdateBenhAn_TamThan(String _maBA, Int32 _sTT, Int32 _sTTKhoa, SmartDate _ngayKham, String _bSKHAM, String _lyDoKham, String _mach, String _apHuyet, String _nhietDo, String _nhipTho, String _canNang, String _chieuCao, String _toanThan, String _cacCoQuan, String _khamThanKinh, String _tRBieuHien, String _tTNangLucKhongGian, String _tTNangLucThoiGian, String _tTNangLucBanThan, String _tTCacHoiChung, String _tTCamXuc, String _tTTriGiac, String _tTTuDuyHinhThuc, String _tTTuDuyNoiDung, String _tTHanhViYThuc, String _tTHanhBanNang, String _tTTriNho, String _tTTriNang, String _tTChuY, String _dieuTri, String _benhSu, String _huongDT, String _mabenh, String _maBenhKem, String _machuyenkhoa, String _maMay, Boolean _huy, String _nguoiSD)
        {
            SqlHelper.ExecuteNonQuery(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spBenhAn_TamThan_UPDATE", _maBA, _sTT, _sTTKhoa, _ngayKham.DBValue, _bSKHAM, _lyDoKham, _mach, _apHuyet, _nhietDo, _nhipTho, _canNang, _chieuCao, _toanThan, _cacCoQuan, _khamThanKinh, _tRBieuHien, _tTNangLucKhongGian, _tTNangLucThoiGian, _tTNangLucBanThan, _tTCacHoiChung, _tTCamXuc, _tTTriGiac, _tTTuDuyHinhThuc, _tTTuDuyNoiDung, _tTHanhViYThuc, _tTHanhBanNang, _tTTriNho, _tTTriNang, _tTChuY, _dieuTri, _benhSu, _huongDT, _mabenh, _maBenhKem, _machuyenkhoa, _maMay, _huy, _nguoiSD);
        }
        public override void DeleteBenhAn_TamThan(String _maMay, String _nguoiSD, String _maBA, Int32 _sTT, Int32 _sTTKhoa)
        {
            SqlHelper.ExecuteNonQuery(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spBenhAn_TamThan_Deleted", _maMay, _nguoiSD, _maBA, _sTT, _sTTKhoa);
        }
        #endregion


        #region Benh an San
        public override String InsertBenhAn_San(String _maBA, Int32 _sTTKhoa, SmartDate _ngayKham, String _bSKham, String _lyDoKham, String _mach, String _apHuyet, String _nhietDo, String _nhipTho, String _canNang, String _chieuCao, Boolean _phu, String _toanThan, String _toanTrang, String _cao, String _tim, String _gan, String _phoi, String _than, String _benhKhac, Boolean _seoPTCu, String _chieuCaoTC, String _vongBung, String _timThai, Boolean _timThaiRo, String _luongGai, String _baudelocque, String _luongUNgoi, String _hinhDangTC, String _tuThe, String _conCoTC, String _vu, String _luongMao, String _luongMau, String _cutHaVe, String _amHo, String _amDao, String _coTuCung, String _phanPhu, SmartDate _oiVo, String _mauOi, String _ngoi, String _the, String _doLot, String _tangSinhMon, String _tinhTrangOi, String _oivoTuNhien, String _luongNuocOi, String _kieuThe, String _duongKinhNho, String _tomTat, String _dieuTri, String _benhSu, String _huongDT, String _mabenh, String _maBenhKem, String _machuyenkhoa, String _maMay, String _nguoiSD)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spBenhAn_San_CREATE", _maBA, _sTTKhoa, _ngayKham.DBValue, _bSKham, _lyDoKham, _mach, _apHuyet, _nhietDo, _nhipTho, _canNang, _chieuCao, _phu, _toanThan, _toanTrang, _cao, _tim, _gan, _phoi, _than, _benhKhac, _seoPTCu, _chieuCaoTC, _vongBung, _timThai, _timThaiRo, _luongGai, _baudelocque, _luongUNgoi, _hinhDangTC, _tuThe, _conCoTC, _vu, _luongMao, _luongMau, _cutHaVe, _amHo, _amDao, _coTuCung, _phanPhu, _oiVo.DBValue, _mauOi, _ngoi, _the, _doLot, _tangSinhMon, _tinhTrangOi, _oivoTuNhien, _luongNuocOi, _kieuThe, _duongKinhNho, _tomTat, _dieuTri, _benhSu, _huongDT, _mabenh, _maBenhKem, _machuyenkhoa, _maMay, _nguoiSD));
        }
        public override void UpdateBenhAn_San(String _maBA, Int32 _sTT, Int32 _sTTKhoa, SmartDate _ngayKham, String _bSKham, String _lyDoKham, String _mach, String _apHuyet, String _nhietDo, String _nhipTho, String _canNang, String _chieuCao, Boolean _phu, String _toanThan, String _toanTrang, String _cao, String _tim, String _gan, String _phoi, String _than, String _benhKhac, Boolean _seoPTCu, String _chieuCaoTC, String _vongBung, String _timThai, Boolean _timThaiRo, String _luongGai, String _baudelocque, String _luongUNgoi, String _hinhDangTC, String _tuThe, String _conCoTC, String _vu, String _luongMao, String _luongMau, String _cutHaVe, String _amHo, String _amDao, String _coTuCung, String _phanPhu, SmartDate _oiVo, String _mauOi, String _ngoi, String _the, String _doLot, String _tangSinhMon, String _tinhTrangOi, String _oivoTuNhien, String _luongNuocOi, String _kieuThe, String _duongKinhNho, String _tomTat, String _dieuTri, String _benhSu, String _huongDT, String _mabenh, String _maBenhKem, String _machuyenkhoa, String _maMay, Boolean _huy, String _nguoiSD)
        {
            SqlHelper.ExecuteNonQuery(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spBenhAn_San_UPDATE", _maBA, _sTT, _sTTKhoa, _ngayKham.DBValue, _bSKham, _lyDoKham, _mach, _apHuyet, _nhietDo, _nhipTho, _canNang, _chieuCao, _phu, _toanThan, _toanTrang, _cao, _tim, _gan, _phoi, _than, _benhKhac, _seoPTCu, _chieuCaoTC, _vongBung, _timThai, _timThaiRo, _luongGai, _baudelocque, _luongUNgoi, _hinhDangTC, _tuThe, _conCoTC, _vu, _luongMao, _luongMau, _cutHaVe, _amHo, _amDao, _coTuCung, _phanPhu, _oiVo.DBValue, _mauOi, _ngoi, _the, _doLot, _tangSinhMon, _tinhTrangOi, _oivoTuNhien, _luongNuocOi, _kieuThe, _duongKinhNho, _tomTat, _dieuTri, _benhSu, _huongDT, _mabenh, _maBenhKem, _machuyenkhoa, _maMay, _huy, _nguoiSD);
        }
        public override void DeleteBenhAn_San(String _maMay, String _nguoiSD, String _maBA, Int32 _sTT, Int32 _sTTKhoa)
        {
            SqlHelper.ExecuteNonQuery(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spBenhAn_San_Deleted", _maMay, _nguoiSD, _maBA, _sTT, _sTTKhoa);
        }


        #endregion

        #region Benh an TMH


        public override String InsertBenhAn_TMH(String _maBA, Int32 _sTTKhoa, SmartDate _ngayKham, String _bSKHAM, String _lyDoKham, String _mach, String _apHuyet, String _nhietDo, String _nhipTho, String _canNang, String _chieuCao, String _toanThan, String _benhngoaiKhoa, String _tuanHoan, String _hoHap, String _dieuTri, String _benhSu, String _huongDT, String _mabenh, String _maBenhKem, String _machuyenkhoa, String _maMay, String _nguoiSD)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spBenhAn_TMH_CREATE", _maBA, _sTTKhoa, _ngayKham.DBValue, _bSKHAM, _lyDoKham, _mach, _apHuyet, _nhietDo, _nhipTho, _canNang, _chieuCao, _toanThan, _benhngoaiKhoa, _tuanHoan, _hoHap, _dieuTri, _benhSu, _huongDT, _mabenh, _maBenhKem, _machuyenkhoa, _maMay, _nguoiSD));
        }
        public override void UpdateBenhAn_TMH(String _maBA, Int32 _sTT, Int32 _sTTKhoa, SmartDate _ngayKham, String _bSKHAM, String _lyDoKham, String _mach, String _apHuyet, String _nhietDo, String _nhipTho, String _canNang, String _chieuCao, String _toanThan, String _benhngoaiKhoa, String _tuanHoan, String _hoHap, String _dieuTri, String _benhSu, String _huongDT, String _mabenh, String _maBenhKem, String _machuyenkhoa, String _maMay, Boolean _huy, String _nguoiSD)
        {
            SqlHelper.ExecuteNonQuery(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spBenhAn_TMH_UPDATE", _maBA, _sTT, _sTTKhoa, _ngayKham.DBValue, _bSKHAM, _lyDoKham, _mach, _apHuyet, _nhietDo, _nhipTho, _canNang, _chieuCao, _toanThan, _benhngoaiKhoa, _tuanHoan, _hoHap, _dieuTri, _benhSu, _huongDT, _mabenh, _maBenhKem, _machuyenkhoa, _maMay, _huy, _nguoiSD);
        }
        public override void DeleteBenhAn_TMH(String _maMay, String _nguoiSD, String _maBA, Int32 _sTT, Int32 _sTTKhoa)
        {
            SqlHelper.ExecuteNonQuery(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spBenhAn_TMH_Deleted", _maMay, _nguoiSD, _maBA, _sTT, _sTTKhoa);
        }
        #endregion

        #region Benh an VLTL


        public override String InsertBenhAn_VLTL(String _maBA, Int32 _sTTKhoa, SmartDate _ngayKham, String _bSKHAM, String _lyDoKham, String _mach, String _apHuyet, String _nhietDo, String _nhipTho, String _canNang, String _chieuCao, String _thanKinh, String _tuanHoan, String _hoHap, String _tieuHoa, String _daMo, String _khop, String _co, String _cotSong, String _tNieuSDuc, String _cQKhac, String _dieuTri, String _benhSu, String _huongDT, String _mabenh, String _maBenhKem, String _machuyenkhoa, String _maMay, String _nguoiSD)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spBenhAn_VLTL_CREATE", _maBA, _sTTKhoa, _ngayKham.DBValue, _bSKHAM, _lyDoKham, _mach, _apHuyet, _nhietDo, _nhipTho, _canNang, _chieuCao, _thanKinh, _tuanHoan, _hoHap, _tieuHoa, _daMo, _khop, _co, _cotSong, _tNieuSDuc, _cQKhac, _dieuTri, _benhSu, _huongDT, _mabenh, _maBenhKem, _machuyenkhoa, _maMay, _nguoiSD));
        }
        public override void UpdateBenhAn_VLTL(String _maBA, Int32 _sTT, Int32 _sTTKhoa, SmartDate _ngayKham, String _bSKHAM, String _lyDoKham, String _mach, String _apHuyet, String _nhietDo, String _nhipTho, String _canNang, String _chieuCao, String _thanKinh, String _tuanHoan, String _hoHap, String _tieuHoa, String _daMo, String _khop, String _co, String _cotSong, String _tNieuSDuc, String _cQKhac, String _dieuTri, String _benhSu, String _huongDT, String _mabenh, String _maBenhKem, String _machuyenkhoa, String _maMay, Boolean _huy, String _nguoiSD)
        {
            SqlHelper.ExecuteNonQuery(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spBenhAn_VLTL_UPDATE", _maBA, _sTT, _sTTKhoa, _ngayKham.DBValue, _bSKHAM, _lyDoKham, _mach, _apHuyet, _nhietDo, _nhipTho, _canNang, _chieuCao, _thanKinh, _tuanHoan, _hoHap, _tieuHoa, _daMo, _khop, _co, _cotSong, _tNieuSDuc, _cQKhac, _dieuTri, _benhSu, _huongDT, _mabenh, _maBenhKem, _machuyenkhoa, _maMay, _huy, _nguoiSD);
        }
        public override void DeleteBenhAn_VLTL(String _maMay, String _nguoiSD, String _maBA, Int32 _sTT, Int32 _sTTKhoa)
        {
            SqlHelper.ExecuteNonQuery(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spBenhAn_VLTL_Deleted", _maMay, _nguoiSD, _maBA, _sTT, _sTTKhoa);
        }
        #endregion

        //#region Benh an Mat




        //public override String InsertBenhAn_Mat(String _maBA, Int32 _sTTKhoa, SmartDate _ngayKham, String _bSKHAM, String _lyDoKham, String _mach, String _apHuyet, String _nhietDo, String _nhipTho, String _canNang, String _chieuCao, String _toanThan, String _thiLucVV, String _khongKinhMP, String _khongKinhMT, String _coKinhMP, String _coKinhMT, String _nhanAPMP, String _nhanApMT, String _thiTruongMP, String _thiTruongMT, String _moTaBenhLy, String _tonThuong, String _coQuanKhac, String _dieuTri, String _benhSu, String _huongDT, String _mabenh, String _maBenhKem, String _machuyenkhoa, String _maMay, String _nguoiSD)
        //{
        //    return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spBenhAn_Mat_CREATE", _maBA, _sTTKhoa, _ngayKham.DBValue, _bSKHAM, _lyDoKham, _mach, _apHuyet, _nhietDo, _nhipTho, _canNang, _chieuCao, _toanThan, _thiLucVV, _khongKinhMP, _khongKinhMT, _coKinhMP, _coKinhMT, _nhanAPMP, _nhanApMT, _thiTruongMP, _thiTruongMT, _moTaBenhLy, _tonThuong, _coQuanKhac, _dieuTri, _benhSu, _huongDT, _mabenh, _maBenhKem, _machuyenkhoa, _maMay, _nguoiSD));
        //}
        //public override void UpdateBenhAn_Mat(String _maBA, Int32 _sTT, Int32 _sTTKhoa, SmartDate _ngayKham, String _bSKHAM, String _lyDoKham, String _mach, String _apHuyet, String _nhietDo, String _nhipTho, String _canNang, String _chieuCao, String _toanThan, String _thiLucVV, String _khongKinhMP, String _khongKinhMT, String _coKinhMP, String _coKinhMT, String _nhanAPMP, String _nhanApMT, String _thiTruongMP, String _thiTruongMT, String _moTaBenhLy, String _tonThuong, String _coQuanKhac, String _dieuTri, String _benhSu, String _huongDT, String _mabenh, String _maBenhKem, String _machuyenkhoa, String _maMay, Boolean _huy, String _nguoiSD)
        //{
        //    SqlHelper.ExecuteNonQuery(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spBenhAn_Mat_UPDATE", _maBA, _sTT, _sTTKhoa, _ngayKham.DBValue, _bSKHAM, _lyDoKham, _mach, _apHuyet, _nhietDo, _nhipTho, _canNang, _chieuCao, _toanThan, _thiLucVV, _khongKinhMP, _khongKinhMT, _coKinhMP, _coKinhMT, _nhanAPMP, _nhanApMT, _thiTruongMP, _thiTruongMT, _moTaBenhLy, _tonThuong, _coQuanKhac, _dieuTri, _benhSu, _huongDT, _mabenh, _maBenhKem, _machuyenkhoa, _maMay, _huy, _nguoiSD);
        //}
        ////public override void DeleteBenhAn_Mat(String _maMay, String _nguoiSD, String _maBA, Int32 _sTT, Int32 _sTTKhoa)
        ////{
        ////    SqlHelper.ExecuteNonQuery(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spBenhAn_Mat_Deleted", _maMay, _nguoiSD, _maBA, _sTT, _sTTKhoa);
        ////}
        //#endregion

        #region Benh an Tien su San
        public override String InsertBenhNhan_QTSinhTruong(String _maBN, byte _ConThu, byte _ParaSinh, byte _ParaSom, byte _ParaSay, byte _ParaSong, String _CachDe, decimal _CanNangLucSinh, Boolean _DiTatBamSinh, String _CuTheDiTat, String _PTTinhThan, String _PTVanDong, String _BenhLyKhac, Byte _NuoiDuong, Byte _ThangCaiSua, Byte _ChamSoc, Boolean _TiemLao, Boolean _TiemBaiLiet, Boolean _TiemSoi, Boolean _TiemHoGa, Boolean _TiemUonVan, Boolean _TiemBachhau, Boolean _TiemKhac, String _CuTheTiemChung, String _maMay, String _nguoiSD)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spBenhNhan_QTSinhTruong_CREATE", _maBN, _ConThu, _ParaSinh, _ParaSom, _ParaSay, _ParaSong, _CachDe, _CanNangLucSinh, _DiTatBamSinh, _CuTheDiTat, _PTTinhThan, _PTVanDong, _BenhLyKhac, _NuoiDuong, _ThangCaiSua, _ChamSoc, _TiemLao, _TiemBaiLiet, _TiemSoi, _TiemHoGa, _TiemUonVan, _TiemBachhau, _TiemKhac, _CuTheTiemChung, _maMay, _nguoiSD));
        }
        public override void UpdateBenhNhan_QTSinhTruong(String _maBN, byte _ConThu, byte _ParaSinh, byte _ParaSom, byte _ParaSay, byte _ParaSong, String _CachDe, decimal _CanNangLucSinh, Boolean _DiTatBamSinh, String _CuTheDiTat, String _PTTinhThan, String _PTVanDong, String _BenhLyKhac, Byte _NuoiDuong, Byte _ThangCaiSua, Byte _ChamSoc, Boolean _TiemLao, Boolean _TiemBaiLiet, Boolean _TiemSoi, Boolean _TiemHoGa, Boolean _TiemUonVan, Boolean _TiemBachhau, Boolean _TiemKhac, String _CuTheTiemChung, String _maMay, Boolean _huy, String _nguoiSD)
        {
            SqlHelper.ExecuteNonQuery(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spBenhNhan_QTSinhTruong_UPDATE", _maBN, _ConThu, _ParaSinh, _ParaSom, _ParaSay, _ParaSong, _CachDe, _CanNangLucSinh, _DiTatBamSinh, _CuTheDiTat, _PTTinhThan, _PTVanDong, _BenhLyKhac, _NuoiDuong, _ThangCaiSua, _ChamSoc, _TiemLao, _TiemBaiLiet, _TiemSoi, _TiemHoGa, _TiemUonVan, _TiemBachhau, _TiemKhac, _CuTheTiemChung, _maMay, _huy, _nguoiSD);
        }
        public override void DeleteBenhNhan_QTSinhTruong(String _maMay, String _nguoiSD, String _maBN)
        {
            SqlHelper.ExecuteNonQuery(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spBenhNhan_QTSinhTruong_Deleted", _maMay, _nguoiSD, _maBN);
        }


        #endregion
        #region Benh an Tien su San
        public override String InsertBenhNhan_TienSu_San(String _maBN, Boolean _tSGDSinhdoi, Boolean _tSGDDidang, Boolean _tSGDBenhditruyen, Boolean _tSGDDaiduong, Boolean _tSGDCaoHA, String _tSGDKhac, Boolean _tSBTCaoHA, Boolean _tSBTBenhTim, Boolean _tSBTLaoPhoi, Boolean _tSBTHenphequan, Boolean _tSBTBenhthan, Boolean _tSBTBasedow, Boolean _tSBTViemtacTM, Boolean _tSBTDongkinh, Boolean _tSBTMoRuotthua, bool _diungthuoc, String _pTObung, String _tuoiCokinh, String _chukyKinh, String _songayKinh, String _tuoiLaychong, String _benhphukhoa, Boolean _khoiUBT, Boolean _uxoTC, Boolean _didangSD, Boolean _sSD, Boolean _tSM, Boolean _dieuTriCTC, Boolean _catcutCTC, String _phauthuatKhac, String _pARA, String _tSBTKhac, Byte _solancothai, Byte _solansaythai, Byte _solannaothai, Byte _solande, String _cachde, Byte _soconsong, String _maMay, String _nguoiSD, String _cuthe)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spBenhNhan_TienSu_San_CREATE", _maBN, _tSGDSinhdoi, _tSGDDidang, _tSGDBenhditruyen, _tSGDDaiduong, _tSGDCaoHA, _tSGDKhac, _tSBTCaoHA, _tSBTBenhTim, _tSBTLaoPhoi, _tSBTHenphequan, _tSBTBenhthan, _tSBTBasedow, _tSBTViemtacTM, _tSBTDongkinh, _tSBTMoRuotthua, _diungthuoc, _pTObung, _tuoiCokinh, _chukyKinh, _songayKinh, _tuoiLaychong, _benhphukhoa, _khoiUBT, _uxoTC, _didangSD, _sSD, _tSM, _dieuTriCTC, _catcutCTC, _phauthuatKhac, _pARA, _tSBTKhac, _solancothai, _solansaythai, _solannaothai, _solande, _cachde, _soconsong, _maMay, _nguoiSD, _cuthe));
        }
        public override void UpdateBenhNhan_TienSu_San(String _maBN, Boolean _tSGDSinhdoi, Boolean _tSGDDidang, Boolean _tSGDBenhditruyen, Boolean _tSGDDaiduong, Boolean _tSGDCaoHA, String _tSGDKhac, Boolean _tSBTCaoHA, Boolean _tSBTBenhTim, Boolean _tSBTLaoPhoi, Boolean _tSBTHenphequan, Boolean _tSBTBenhthan, Boolean _tSBTBasedow, Boolean _tSBTViemtacTM, Boolean _tSBTDongkinh, Boolean _tSBTMoRuotthua, bool _diungthuoc, String _pTObung, String _tuoiCokinh, String _chukyKinh, String _songayKinh, String _tuoiLaychong, String _benhphukhoa, Boolean _khoiUBT, Boolean _uxoTC, Boolean _didangSD, Boolean _sSD, Boolean _tSM, Boolean _dieuTriCTC, Boolean _catcutCTC, String _phauthuatKhac, String _pARA, String _tSBTKhac, Byte _solancothai, Byte _solansaythai, Byte _solannaothai, Byte _solande, String _cachde, Byte _soconsong, String _maMay, Boolean _huy, String _nguoiSD, String _cuthe)
        {
            SqlHelper.ExecuteNonQuery(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spBenhNhan_TienSu_San_UPDATE", _maBN, _tSGDSinhdoi, _tSGDDidang, _tSGDBenhditruyen, _tSGDDaiduong, _tSGDCaoHA, _tSGDKhac, _tSBTCaoHA, _tSBTBenhTim, _tSBTLaoPhoi, _tSBTHenphequan, _tSBTBenhthan, _tSBTBasedow, _tSBTViemtacTM, _tSBTDongkinh, _tSBTMoRuotthua, _diungthuoc, _pTObung, _tuoiCokinh, _chukyKinh, _songayKinh, _tuoiLaychong, _benhphukhoa, _khoiUBT, _uxoTC, _didangSD, _sSD, _tSM, _dieuTriCTC, _catcutCTC, _phauthuatKhac, _pARA, _tSBTKhac, _solancothai, _solansaythai, _solannaothai, _solande, _cachde, _soconsong, _maMay, _huy, _nguoiSD, _cuthe);
        }
        public override void DeleteBenhNhan_TienSu_San(String _maMay, String _nguoiSD, String _maBN)
        {
            SqlHelper.ExecuteNonQuery(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spBenhNhan_TienSu_San_Deleted", _maMay, _nguoiSD, _maBN);
        }


        #endregion

        #region Benh an Tien su San  Chi tiet
        public override Int32 InsertBenhNhan_TienSu_San_C(String _maBN, String _thoigianThainghen, String _tuoithai, String _dienbienThai, String _cachde, String _tresosinh, String _hauSan, String _khac, String _maMay, String _nguoiSD)
        {
            return System.Convert.ToInt32(SqlHelper.ExecuteScalar(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spBenhNhan_TienSu_San_C_CREATE", _maBN, _thoigianThainghen, _tuoithai, _dienbienThai, _cachde, _tresosinh, _hauSan, _khac, _maMay, _nguoiSD));
        }

        public override void UpdateBenhNhan_TienSu_San_C(String _maBN, Int32 _sTT, String _thoigianThainghen, String _tuoithai, String _dienbienThai, String _cachde, String _tresosinh, String _hauSan, String _khac, String _maMay, Boolean _huy, String _nguoiSD)
        {
            SqlHelper.ExecuteNonQuery(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spBenhNhan_TienSu_San_C_UPDATE", _maBN, _sTT, _thoigianThainghen, _tuoithai, _dienbienThai, _cachde, _tresosinh, _hauSan, _khac, _maMay, _huy, _nguoiSD);
        }
        public override void DeleteBenhNhan_TienSu_San_C(String _maMay, String _nguoiSD, String _maBN, Int32 _sTT)
        {
            SqlHelper.ExecuteNonQuery(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spBenhNhan_TienSu_San_C_Deleted", _maMay, _nguoiSD, _maBN, _sTT);
        }


        #endregion

        #endregion

        #region Duoc
        #region Get List

        public override IDataReader GetPhieuNhap_GetAll(Boolean _qadmin, String _maKho, String _mNCC, DateTime _tuNgay, DateTime _denNgay, String _dKien)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spPHIEUNHAP_GETALL", _qadmin, _maKho, _mNCC, _tuNgay, _denNgay, _dKien));
        }
        public override IDataReader GetPhieuNhap_GetAll(Boolean _qadmin, String _maKho, String _mNCC, DateTime _tuNgay, DateTime _denNgay, String _dKien, String _MADT)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spPHIEUNHAPDT_GETALL", _qadmin, _maKho, _mNCC, _tuNgay, _denNgay, _dKien, _MADT));
        }
        public override IDataReader GetAllPhieuNhap_Get(String _maPhieuNhap, Boolean _qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spPHIEUNHAP_GET", _maPhieuNhap, _qadmin));
        }
        public override IDataReader GetPhieuNhap_C_GetAll(Boolean _qadmin, String _maPhieu)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spPHIEUNHAP_C_GETALL", _qadmin, _maPhieu));
        }
        public override IDataReader GetPhieuNhap_C_Get(String _maPN, decimal STT)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spPHIEUNHAP_C_GET", _maPN, STT));
        }
        public override IDataReader GetPhieuXuat(String _mapx, Boolean _qadmin, byte _loaiphieu, Boolean _daphat)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spPhieuXuat_Get", _mapx, _qadmin, _loaiphieu, _daphat));
        }
        public override IDataReader GetAllPhieuXuatCB(Boolean _qadmin, String _maKho, String _MaDT, Boolean _daPhat, DateTime _tuNgay, DateTime _denNgay, String _dieuKienThem, Boolean _daduyet)
        {
            // return ((IDataReader)SqlHelper.ExecuteReader( ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spPhieuXuat_GetAll", _qadmin, _maKho, _loaiPhieu, _daPhat, _tuNgay, _denNgay, _dieuKienThem,_daduyet ));
            System.Data.SqlClient.SqlCommand cmd = SqlHelper.CreateCommand(SQLConnectionBDNoiT, DatabaseOwner + ObjectQualifier + "spPHIEUXUATCheBien_GETALL");

            cmd.CommandTimeout = 18000;
            cmd.CommandType = System.Data.CommandType.StoredProcedure;
            cmd.Parameters.AddWithValue("qadmin ", _qadmin);
            cmd.Parameters.AddWithValue("maKho ", _maKho);
            cmd.Parameters.AddWithValue("maDT ", _MaDT);
            cmd.Parameters.AddWithValue("daPhat", _daPhat);
            cmd.Parameters.AddWithValue("TuNgay", _tuNgay);
            cmd.Parameters.AddWithValue("denNgay", _denNgay);
            cmd.Parameters.AddWithValue("DK", _dieuKienThem);
            cmd.Parameters.AddWithValue("daduyet", _daduyet);
            IDataReader dt;
            dt = (IDataReader)cmd.ExecuteReader(CommandBehavior.CloseConnection); ;
            cmd.Dispose();
            cmd = null;
            //// if (SQLConnectionBDNoiT.State == System.Data.ConnectionState.Closed)
            //     //SQLConnectionBDNoiT.Close(); SQLConnectionBDNoiT.Dispose();
            // //if (_sqlConnection.State == System.Data.ConnectionState.Closed)
            // {
            //     //_sqlConnection.Close(); _sqlConnection.Dispose();
            //     //_sqlConnection = null;
            // }
            return dt;
        }

        public override IDataReader GetAllPhieuXuat(Boolean _qadmin, String _maKho, Byte _loaiPhieu, Boolean _daPhat, DateTime _tuNgay, DateTime _denNgay, String _dieuKienThem, Boolean _daduyet)
        {
            // return ((IDataReader)SqlHelper.ExecuteReader( ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spPhieuXuat_GetAll", _qadmin, _maKho, _loaiPhieu, _daPhat, _tuNgay, _denNgay, _dieuKienThem,_daduyet ));
            System.Data.SqlClient.SqlCommand cmd = SqlHelper.CreateCommand(SQLConnectionBDNoiT, DatabaseOwner + ObjectQualifier + "spPhieuXuat_GetAll");

            cmd.CommandTimeout = 18000;
            cmd.CommandType = System.Data.CommandType.StoredProcedure;
            cmd.Parameters.AddWithValue("qadmin ", _qadmin);
            cmd.Parameters.AddWithValue("maKho ", _maKho);
            cmd.Parameters.AddWithValue("loai", _loaiPhieu);
            cmd.Parameters.AddWithValue("daPhat", _daPhat);
            cmd.Parameters.AddWithValue("TuNgay", _tuNgay);
            cmd.Parameters.AddWithValue("denNgay", _denNgay);
            cmd.Parameters.AddWithValue("DK", _dieuKienThem);
            cmd.Parameters.AddWithValue("daduyet", _daduyet);
            IDataReader dt;
            dt = (IDataReader)cmd.ExecuteReader(CommandBehavior.CloseConnection); ;
            cmd.Dispose();
            cmd = null;
            //// if (SQLConnectionBDNoiT.State == System.Data.ConnectionState.Closed)
            //     //SQLConnectionBDNoiT.Close(); SQLConnectionBDNoiT.Dispose();
            // //if (_sqlConnection.State == System.Data.ConnectionState.Closed)
            // {
            //     //_sqlConnection.Close(); _sqlConnection.Dispose();
            //     //_sqlConnection = null;
            // }
            return dt;
        }
        public override IDataReader GetAllPhieuXuat(Boolean _qadmin, String _maKho, String _MaDT, Byte _loaiPhieu, Boolean _daPhat, DateTime _tuNgay, DateTime _denNgay, String _dieuKienThem, Boolean _daduyet)
        {
            // return ((IDataReader)SqlHelper.ExecuteReader( ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spPhieuXuat_GetAll", _qadmin, _maKho, _loaiPhieu, _daPhat, _tuNgay, _denNgay, _dieuKienThem,_daduyet ));
            System.Data.SqlClient.SqlCommand cmd = SqlHelper.CreateCommand(SQLConnectionBDNoiT, DatabaseOwner + ObjectQualifier + "spPhieuXuatDT_GetAll");

            cmd.CommandTimeout = 18000;
            cmd.CommandType = System.Data.CommandType.StoredProcedure;
            cmd.Parameters.AddWithValue("qadmin ", _qadmin);
            cmd.Parameters.AddWithValue("maKho ", _maKho);
            cmd.Parameters.AddWithValue("maDT ", _MaDT);
            cmd.Parameters.AddWithValue("loai", _loaiPhieu);
            cmd.Parameters.AddWithValue("daPhat", _daPhat);
            cmd.Parameters.AddWithValue("TuNgay", _tuNgay);
            cmd.Parameters.AddWithValue("denNgay", _denNgay);
            cmd.Parameters.AddWithValue("DK", _dieuKienThem);
            cmd.Parameters.AddWithValue("daduyet", _daduyet);
            IDataReader dt;
            dt = (IDataReader)cmd.ExecuteReader(CommandBehavior.CloseConnection); ;
            cmd.Dispose();
            cmd = null;
            //// if (SQLConnectionBDNoiT.State == System.Data.ConnectionState.Closed)
            //     //SQLConnectionBDNoiT.Close(); SQLConnectionBDNoiT.Dispose();
            // //if (_sqlConnection.State == System.Data.ConnectionState.Closed)
            // {
            //     //_sqlConnection.Close(); _sqlConnection.Dispose();
            //     //_sqlConnection = null;
            // }
            return dt;
        }

        public override IDataReader GetPhieuXuat_C(String _mapx, Byte _orderNumber)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spPhieuXuat_C_Get", _mapx, _orderNumber));
        }

        public override IDataReader GetNhapTra(String _mapx, Boolean _qadmin, byte _loaiphieu, byte _daphat)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spNhapTra_Get", _mapx, _qadmin, _loaiphieu, _daphat));
        }
        public override IDataReader GetAllNhapTra(Boolean _qadmin, String _maKho, Byte _loaiPhieu, Byte _daPhat, DateTime _tuNgay, DateTime _denNgay, String _dieuKienThem)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spNhapTra_GetAll", _qadmin, _maKho, _loaiPhieu, _daPhat, _tuNgay, _denNgay, _dieuKienThem));
        }
        public override IDataReader GetAllNhapTra(Boolean _qadmin, String _maKho, Byte _loaiPhieu, Byte _daPhat, DateTime _tuNgay, DateTime _denNgay, String _dieuKienThem, String _MADT)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spNhapTraDT_GetAll", _qadmin, _maKho, _loaiPhieu, _daPhat, _tuNgay, _denNgay, _dieuKienThem, _MADT));
        }
        public override IDataReader GetNhapTra_C(String _mapx, Byte _orderNumber)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spNhapTra_Get", _mapx, _orderNumber));
        }
        public override IDataReader GetXuatTra(String _maPXT, Boolean _qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spXUATTRA_GET", _maPXT, _qadmin));
        }
        public override IDataReader GetAllXuatTra(Boolean _qadmin, String makho, String maNCC, DateTime tungay, DateTime denngay, String dieukienthem)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spXuatTra_GetAll", _qadmin, makho, maNCC, tungay, denngay, dieukienthem));
        }
        public override IDataReader GetXuatTra_C(String _maPXT, Decimal STT)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spXUATTRA_C_GET", _maPXT, STT));
        }
        public override IDataReader GetAllKiemNhap(String _maPhieu, Boolean _qadmin, Byte loai)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spKIEMNHAP_GETALL", _maPhieu, _qadmin, loai));
        }
        public override IDataReader GetTonDau(String _makho)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spTONDAU_GET", _makho));
        }

        public override IDataReader GetTonDauKhoa(String makhoa)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spTONDAUKhoa_GET", makhoa));
        }

        public override IDataReader GetKiemKe(String _maKK, bool qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spKIEMKE_GET", _maKK, qadmin));
        }
        public override IDataReader GetAllKiemKe(String makho, DateTime tungay, DateTime denngay, String dieukienthem, bool qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spKIEMKe_GETALL", makho, tungay, denngay, dieukienthem, qadmin));
        }
        public override IDataReader GetKiemKe_C(String _maKK, Decimal _sTT)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spKIEMKE_C_GET", _maKK, _sTT));
        }
        public override IDataReader GetKiemKe_HD(String _mAKK, Decimal _sTT)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spKIEMKE_HD_GET", _mAKK, _sTT));
        }
        public override IDataReader GetPhieuDoiThuoc(String _maDThuoc, bool _qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spPhieuDoiThuoc_GET", _maDThuoc, _qadmin));
        }
        public override IDataReader GetAllPhieuDoiThuoc(String makho, String maNCC, DateTime tungay, DateTime denngay, String dieukienthem, bool qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spPhieuDoiThuoc_GETALL", makho, maNCC, tungay, denngay, dieukienthem, qadmin));
        }
        public override IDataReader GetPhieuDoiThuoc_C(String _maDThuoc, Decimal _sTT)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spPhieuDoiThuoc_C_GET", _maDThuoc, _sTT));
        }
        public override IDataReader GetAllTonKhoa_BN(string makhoa, String dk)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spTonkhoa_BN_GetAll", makhoa, dk));
        }
        public override IDataReader GetsTonKhoa_BN(DateTime tuthang, DateTime denthang, string makhoa, String dk)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spTonkhoa_BN_Gets", tuthang, denthang, makhoa, dk));
        }
        public override IDataReader GetAllHCTonKhoa_BN(string makhoa, String dk)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spHCTonKhoa_BN_GetAll", makhoa, dk));
        }
        public override IDataReader GetsHCTonKhoa_BN(DateTime tuthang, DateTime denthang, string makhoa, String dk)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spHCTonKhoa_BN_Gets", tuthang, denthang, makhoa, dk));
        }
        public override IDataReader GetAllVTTonKhoa_BN(string makhoa, String dk)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spVTTonKhoa_BN_GetAll", makhoa, dk));
        }
        public override IDataReader GetAllVTYT_BCThuoc_DMListcb(byte loaiBC)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spVTYT_BCTHUOC_DM", loaiBC));
        }
        public override IDataReader GetsVTTonKhoa_BN(DateTime tuthang, DateTime denthang, string makhoa, String dk)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spVTTonKhoa_BN_Gets", tuthang, denthang, makhoa, dk));
        }
        public override IDataReader GetAllTonKhoa(DateTime thang, string makhoa, String dk)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spTonkhoa_GetAll", thang, makhoa, dk));
        }
        public override IDataReader GetsTonKhoa(DateTime tuthang, DateTime denthang, string makhoa, String dk)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spTonkhoa_Gets", tuthang, denthang, makhoa, dk));
        }
        public override IDataReader GetAllThongBao_Khoa(string makhoa, String dk,Boolean qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spThongBao_Khoa_GetAll", makhoa, dk,qadmin));
        }
        public override IDataReader GetsTonKhoaH(DateTime tuthang, DateTime denthang, string makhoa, String dk)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spTonkhoa_GetHs", tuthang, denthang, makhoa, dk));
        }
        public override IDataReader GetAllHCTonKhoaH(DateTime tuthang, DateTime denthang, string makhoa, String dk)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spHCTONKHOA_GETHS", tuthang, denthang, makhoa, dk));
        }

        public override IDataReader GetAllVTTonKhoaH(DateTime tuthang, DateTime denthang, string makhoa, String dk)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spVTTONKHOA_GETHS", tuthang, denthang, makhoa, dk));
        }
        public override IDataReader GetAllNKTonKhoaH(DateTime tuthang, DateTime denthang, string makhoa, String dk)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spNKTONKHOA_GETHS", tuthang, denthang, makhoa, dk));
        }

        public override IDataReader GetPhieuDTNhap(String _maDuTru, bool qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spPhieuDTNhap_GET", _maDuTru, qadmin));
        }
        public override IDataReader GetAllPhieuDTNhap(Boolean _qadmin, String _maKho, DateTime _tuNgay, DateTime _denNgay, String _dKien)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spPhieuDTNhap_GETALL", _qadmin, _maKho, _tuNgay, _denNgay, _dKien));
        }
        public override IDataReader GetPhieuDTNhap_C(String _maDuTru, Decimal _sTT)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spPhieuDTNhap_C_GET", _maDuTru, _sTT));
        }

        public override void DeleteTonKhoa(String _MaKhoa, String _Mathuoc, String _NguoiSD, SmartDate _Thang)
        {
            SqlHelper.ExecuteNonQuery(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spTonkhoa_delete", _Thang.DBValue, _MaKhoa, _Mathuoc, _NguoiSD);
        }



        #endregion

        #region Find List
        //PhieuNhap
        public override IDataReader FindPhieuNhap(string _DK, Boolean _qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spPhieuNhap_Finds", _DK, _qadmin));
        }
        public override IDataReader FindPhieuDoiThuoc(bool qadmin, string dk)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spPhieuDoiThuoc_FINDS", qadmin, dk));
        }
        #endregion

        #region PhieuNhap
        // public abstract String InsertPhieuNhap(string _maNCC, String _soHD, String _soCT, SmartDate _ngayPNhap, String _maKho, decimal _chietKhau, Boolean _thanhToan, SmartDate _ngayTToan, SmartDate _ngayNhapTT, String _NVNhap, decimal _Tong, String _ghiChu, Boolean _huy, String _nguoiSD, string _maMay, String _nguoiGiao);
        public override String InsertPhieuNhap(string _maNCC, String _soHD, String _soCT, SmartDate _ngayPNhap, String _maKho, decimal _chietKhau, Boolean _thanhToan, SmartDate _ngayTToan, SmartDate _ngayNhapTT, String _NVNhap, decimal _Tong, String _ghiChu, Boolean _huy, String _nguoiSD, string _maMay, String _nguoiGiao, String _manguon, String _mahinhthuc, string _sohdon, SmartDate _ngayhdon)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spPHIEUNHAP_CREATE", _maNCC, _soHD, _soCT, _ngayPNhap.DBValue, _maKho, _chietKhau, _thanhToan, _ngayTToan.DBValue, _ngayNhapTT.DBValue, _NVNhap, _Tong, _ghiChu, _huy, _nguoiSD, _maMay, _nguoiGiao, _manguon, _mahinhthuc, _sohdon, _ngayhdon.DBValue));
        }
        public override String InsertPhieuNhap(string _maNCC, String _soHD, String _soCT, SmartDate _ngayPNhap, String _maKho, decimal _chietKhau, Boolean _thanhToan, SmartDate _ngayTToan, SmartDate _ngayNhapTT, String _NVNhap, decimal _Tong, String _ghiChu, Boolean _huy, String _nguoiSD, string _maMay, String _nguoiGiao, String _manguon, String _mahinhthuc, string _sohdon, SmartDate _ngayhdon, String _MADT)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spPHIEUNHAPDT_CREATE", _maNCC, _soHD, _soCT, _ngayPNhap.DBValue, _maKho, _chietKhau, _thanhToan, _ngayTToan.DBValue, _ngayNhapTT.DBValue, _NVNhap, _Tong, _ghiChu, _huy, _nguoiSD, _maMay, _nguoiGiao, _manguon, _mahinhthuc, _sohdon, _ngayhdon.DBValue, _MADT));
        }
        public override void UpdatePhieuNhap(String _maPN, string _maNCC, String _soHD, String _soCT, SmartDate _ngayPNhap, String _maKho, decimal _chietKhau, Boolean _thanhToan, SmartDate _ngayTToan, SmartDate _ngayNhapTT, String _NVNhap, decimal _Tong, String _ghiChu, Boolean _huy, String _nguoiSD, SmartDate _ngaySD1, String _nguoiSD1, String _nguoiGiao, String _manguon, String _mahinhthuc, string _sohdon, SmartDate _ngayhdon)
        {
            System.Data.SqlClient.SqlDataReader dr;
            dr = SqlHelper.ExecuteReader(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spPHIEUNHAP_UPDATE", _maPN, _maNCC, _soHD, _soCT, _ngayPNhap.DBValue, _maKho, _chietKhau, _thanhToan, _ngayTToan.DBValue, _ngayNhapTT.DBValue, _NVNhap, _Tong, _ghiChu, _huy, _nguoiSD, _ngaySD1.DBValue, _nguoiSD1, _nguoiGiao, _manguon, _mahinhthuc, _sohdon, _ngayhdon.DBValue);
            dr.Close();
            dr = null;
        }
        public override void UpdatePhieuNhap(String _maPN, string _maNCC, String _soHD, String _soCT, SmartDate _ngayPNhap, String _maKho, decimal _chietKhau, Boolean _thanhToan, SmartDate _ngayTToan, SmartDate _ngayNhapTT, String _NVNhap, decimal _Tong, String _ghiChu, Boolean _huy, String _nguoiSD, SmartDate _ngaySD1, String _nguoiSD1, String _nguoiGiao, String _manguon, String _mahinhthuc, string _sohdon, SmartDate _ngayhdon, String _MADT)
        {
            System.Data.SqlClient.SqlDataReader dr;
            dr = SqlHelper.ExecuteReader(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spPHIEUNHAPDT_UPDATE", _maPN, _maNCC, _soHD, _soCT, _ngayPNhap.DBValue, _maKho, _chietKhau, _thanhToan, _ngayTToan.DBValue, _ngayNhapTT.DBValue, _NVNhap, _Tong, _ghiChu, _huy, _nguoiSD, _ngaySD1.DBValue, _nguoiSD1, _nguoiGiao, _manguon, _mahinhthuc, _sohdon, _ngayhdon.DBValue, _MADT);
            dr.Close();
            dr = null;
        }
        public override void DeletePhieuNhap(String _maPN, SmartDate _ngaySD, string _maMay, String _nguoiSD)
        {
            SqlHelper.ExecuteNonQuery(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spPHIEUNHAP_DELETED", _maPN, _ngaySD.DBValue, _maMay, _nguoiSD);
        }
        #endregion

        #region PhieuNhap chi tiet

        public override String InsertPhieuNhap_C(String _maPN, String _maThuoc, decimal _soluong, SmartDate _hanSD, decimal _donGia, decimal _chietKhau, String _soLo, Boolean _huy, String _ghiChu, string _maMay, String _nguoiSD)
        {

            System.Data.SqlClient.SqlDataReader dr;
            dr = SqlHelper.ExecuteReader(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spPHIEUNHAP_C_CREATE", _maPN, _maThuoc, _soluong, _hanSD.DBValue, _donGia, _chietKhau, _soLo, _huy, _ghiChu, _maMay, _nguoiSD);
            dr.Close();
            dr = null;
            return "";
        }
        public override void UpdatePhieuNhap_C(String _maPN, decimal _sTT, String _maThuoc, decimal _soluong, SmartDate _hanSD, decimal _donGia, decimal _chietKhau, decimal _thanhtien, String _soLo, Boolean _huy, String _ghiChu, SmartDate _ngaySD, string _maMay, String _nguoiSD)
        {

            SqlHelper.ExecuteNonQuery(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spPHIEUNHAP_C_UPDATE1", _maPN, _sTT, _maThuoc, _soluong, _hanSD.DBValue, _donGia, _chietKhau,  _thanhtien, _soLo, _huy, _ghiChu, _ngaySD.DBValue, _maMay, _nguoiSD);
        }
        public override String InsertPhieuNhap_C(String _maPN, String _maThuoc, decimal _soluong, SmartDate _hanSD, decimal _donGia, decimal _chietKhau, decimal _thanhtien, String _soLo, Boolean _huy, String _ghiChu, string _maMay, String _nguoiSD)
        {

            System.Data.SqlClient.SqlDataReader dr;
            dr = SqlHelper.ExecuteReader(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spPHIEUNHAP_C_CREATE1", _maPN, _maThuoc, _soluong, _hanSD.DBValue, _donGia, _chietKhau, _thanhtien, _soLo, _huy, _ghiChu, _maMay, _nguoiSD);
            dr.Close();
            dr = null;
            return "";
        }
        public override void UpdatePhieuNhap_C(String _maPN, decimal _sTT, String _maThuoc, decimal _soluong, SmartDate _hanSD, decimal _donGia, decimal _chietKhau, String _soLo, Boolean _huy, String _ghiChu, SmartDate _ngaySD, string _maMay, String _nguoiSD)
        {

            SqlHelper.ExecuteNonQuery(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spPHIEUNHAP_C_UPDATE", _maPN, _sTT, _maThuoc, _soluong, _hanSD.DBValue, _donGia, _chietKhau, _soLo, _huy, _ghiChu, _ngaySD.DBValue, _maMay, _nguoiSD);
        }
        public override void DeletePhieuNhap_C(String _maPN, decimal _sTT, String _nguoiSD, String _maMay)
        {
            SqlHelper.ExecuteNonQuery(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spPHIEUNHAP_C_DELETED", _maPN, _sTT, _nguoiSD, _maMay);
        }
        #endregion

        #region PhieuXuat
        public override String InsertPhieuXuat(String _noiXuat, SmartDate _ngayXuat, SmartDate _ngayXuatTT, String _noiNhap, Byte _loaiPhieu, String _soCT, String _nvXuat, String _nvNhan, String _ghiChu, Boolean _huy, String _nguoiLap, Boolean _khoaYC, string _maMay, Boolean _daPhat, Boolean _daDuyet, String _doiTuong)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spPHIEUXUAT_CREATE", _noiXuat, _ngayXuat.DBValue, _ngayXuatTT.DBValue, _noiNhap, _loaiPhieu, _soCT, _nvXuat, _nvNhan, _ghiChu, _huy, _nguoiLap, _khoaYC, _maMay, _daPhat, _daDuyet, _doiTuong));
        }
        public override String InsertPhieuXuat(String _noiXuat, SmartDate _ngayXuat, SmartDate _ngayXuatTT, String _noiNhap, Byte _loaiPhieu, String _soCT, String _nvXuat, String _nvNhan, String _ghiChu, Boolean _huy, String _nguoiLap, Boolean _khoaYC, string _maMay, Boolean _daPhat, Boolean _daDuyet, String _doiTuong, Boolean _Khongsua, Decimal _slthang, Decimal _SLDon)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spPHIEUXUATDT_CREATE", _noiXuat, _ngayXuat.DBValue, _ngayXuatTT.DBValue, _noiNhap, _loaiPhieu, _soCT, _nvXuat, _nvNhan, _ghiChu, _huy, _nguoiLap, _khoaYC, _maMay, _daPhat, _daDuyet, _doiTuong, _Khongsua, _slthang, _SLDon));
        }

        public override void UpdatePhieuXuat(String _maPX, String _noiXuat, SmartDate _ngayXuat, SmartDate _ngayXuatTT, String _noiNhap, Byte _loaiPhieu, String _soCT, String _nvXuat, String _nvNhan, String _ghiChu, Boolean _huy, string _maMay, String _nguoiSD, Boolean _daPhat, Boolean _daDuyet, String _doiTuong)
        {
            SqlHelper.ExecuteNonQuery(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spPHIEUXUAT_UPDATE", _maPX, _noiXuat, _ngayXuat.DBValue, _ngayXuatTT.DBValue, _noiNhap, _loaiPhieu, _soCT, _nvXuat, _nvNhan, _ghiChu, _huy, _maMay, _nguoiSD, _daPhat, _daDuyet, _doiTuong);
        }
        public override void UpdatePhieuXuat(String _maPX, String _noiXuat, SmartDate _ngayXuat, SmartDate _ngayXuatTT, String _noiNhap, Byte _loaiPhieu, String _soCT, String _nvXuat, String _nvNhan, String _ghiChu, Boolean _huy, string _maMay, String _nguoiSD, Boolean _daPhat, Boolean _daDuyet, String _doiTuong, String _MADT, Decimal _slthang)
        {
            SqlHelper.ExecuteNonQuery(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spPHIEUXUATDT_UPDATE", _maPX, _noiXuat, _ngayXuat.DBValue, _ngayXuatTT.DBValue, _noiNhap, _loaiPhieu, _soCT, _nvXuat, _nvNhan, _ghiChu, _huy, _maMay, _nguoiSD, _daPhat, _daDuyet, _doiTuong, _MADT, _slthang);
        }
        public override void DeletePhieuXuat(String _maPX, string _maMay, String _nguoiSD)
        {
            SqlHelper.ExecuteNonQuery(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spPHIEUXUAT_DELETED", _maPX, _maMay, _nguoiSD);
        }

        #region Phieu Xuat chi tiet

        public override String InsertPhieuXuat_C(String _maPX, String _maThuoc, Decimal _soLuong, SmartDate _hanSD, String _soLo, Decimal _donGia, Decimal _soLuongYC, Decimal _giaBan, String _ghiChu, String _nguoiSD, string _maMay)
        {
            System.Data.SqlClient.SqlDataReader dr;
            dr = SqlHelper.ExecuteReader(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spPHIEUXUAT_C_CREATE", _maPX, _maThuoc, _soLuong, _hanSD.DBValue, _soLo, _donGia, _soLuongYC, _giaBan, _ghiChu, _nguoiSD, _maMay);
            dr.Close();
            dr = null;
            return "";
        }
        public override void UpdatePhieuXuat_C(String _maPX, Decimal _sTT, String _maThuoc, Decimal _soLuong, SmartDate _hanSD, String _soLo, Decimal _donGia, Decimal _soLuongYC, Decimal _giaBan, Boolean _huy, String _ghiChu, String _nguoiSD, string _maMay)
        {
            SqlHelper.ExecuteNonQuery(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spPHIEUXUAT_C_UPDATE", _maPX, _sTT, _maThuoc, _soLuong, _hanSD.DBValue, _soLo, _donGia, _soLuongYC, _giaBan, _huy, _ghiChu, _nguoiSD, _maMay);
        }
        public override void DeletePhieuXuat_C(String _maPX, Decimal _sTT, String _nguoiSD, string _maMay)
        {
            SqlHelper.ExecuteNonQuery(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spPHIEUXUAT_C_DELETED", _maPX, _sTT, _nguoiSD, _maMay);
        }

        #endregion

        #region NhapSoche

        public override String InsertNhapSoChe(String _noiXuat, SmartDate _ngayXuatTT, String _noiNhap, SmartDate _NgaynhapTT, Byte _loaiPhieu, String _soCT, String _nvXuat, String _nvNhan, String _ghiChu, Boolean _huy, String _nguoiLap, string _maMay, String _doiTuong, Boolean _Khongsua, String _MaXSC)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spPHIEUNHAPSC_CREATE", _noiXuat, _ngayXuatTT.DBValue, _NgaynhapTT.DBValue, _noiNhap, _loaiPhieu, _soCT, _nvXuat, _nvNhan, _ghiChu, _huy, _nguoiLap, _maMay, _doiTuong, _Khongsua, _MaXSC));
        }
        public override void UpdateNhapSoChe(String _maSC, String _noiXuat, SmartDate _Ngaynhap, SmartDate _NgaynhapTT, String _noiNhap, Byte _loaiPhieu, String _soCT, String _nvXuat, String _nvNhan, String _ghiChu, Boolean _huy, string _maMay, String _nguoiSD, String _MaDT, String _MaXSC)
        {
            SqlHelper.ExecuteNonQuery(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spPHIEUNHAPSC_UPDATE", _maSC, _noiXuat, _Ngaynhap.DBValue, _NgaynhapTT.DBValue, _noiNhap, _loaiPhieu, _soCT, _nvXuat, _nvNhan, _ghiChu, _huy, _maMay, _nguoiSD, _MaDT, _MaXSC);
        }
        public override void DeleteNhapSoChe(String _maSC, string _maMay, String _nguoiSD)
        {
            SqlHelper.ExecuteNonQuery(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spPHIEUNHAPSC_DELETED", _maSC, _maMay, _nguoiSD);
        }
        public override void DeleteNhapSoChe(String _maSC, string _mapx)
        {
            SqlHelper.ExecuteNonQuery(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spPHIEUNHAPSC_XOA", _maSC);
        }
        public override IDataReader GetNhapSoChe(String _maSC, Boolean _qadmin, byte _loaiphieu, Boolean _daphat)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spPHIEUNHAPSC_Get", _maSC, _qadmin, _loaiphieu, _daphat));
        }
        public override IDataReader GetAllNhapSoChe(Boolean _qadmin, String _maKho, String _MaDT, Byte _loaiPhieu, Boolean _daPhat, DateTime _tuNgay, DateTime _denNgay, String _dieuKienThem, Boolean _daduyet)
        {
            // return ((IDataReader)SqlHelper.ExecuteReader( ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spPhieuXuat_GetAll", _qadmin, _maKho, _loaiPhieu, _daPhat, _tuNgay, _denNgay, _dieuKienThem,_daduyet ));
            System.Data.SqlClient.SqlCommand cmd = SqlHelper.CreateCommand(SQLConnectionBDNoiT, DatabaseOwner + ObjectQualifier + "spPHIEUNHAPSC_GETALL");

            cmd.CommandTimeout = 18000;
            cmd.CommandType = System.Data.CommandType.StoredProcedure;
            cmd.Parameters.AddWithValue("qadmin ", _qadmin);
            cmd.Parameters.AddWithValue("maKho ", _maKho);
            cmd.Parameters.AddWithValue("maDT ", _MaDT);
            cmd.Parameters.AddWithValue("loai", _loaiPhieu);
            cmd.Parameters.AddWithValue("daPhat", _daPhat);
            cmd.Parameters.AddWithValue("TuNgay", _tuNgay);
            cmd.Parameters.AddWithValue("denNgay", _denNgay);
            cmd.Parameters.AddWithValue("DK", _dieuKienThem);
            cmd.Parameters.AddWithValue("daduyet", _daduyet);
            IDataReader dt;
            dt = (IDataReader)cmd.ExecuteReader(CommandBehavior.CloseConnection); ;
            cmd.Dispose();
            cmd = null;
            //// if (SQLConnectionBDNoiT.State == System.Data.ConnectionState.Closed)
            //     //SQLConnectionBDNoiT.Close(); SQLConnectionBDNoiT.Dispose();
            // //if (_sqlConnection.State == System.Data.ConnectionState.Closed)
            // {
            //     //_sqlConnection.Close(); _sqlConnection.Dispose();
            //     //_sqlConnection = null;
            // }
            return dt;
        }
        ////public override IDataReader GetNhapSoChe_C(String _maSC, Byte _orderNumber)
        //{
        //    return ((IDataReader)SqlHelper.ExecuteReader( ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spPhieuSoChe_C_Get", _maSC, _orderNumber));
        //}
        #region NhapSoChe chi tiet


        public override String InsertNhapSoChe_C(String _maSC, String _maThuoc, Decimal _soLuongS, Decimal _soLuongC, SmartDate _hanSD, String _soLo, Decimal _donGiaS, Decimal _donGiaC, String _ghiChu, String _nguoiSD, String _maMay)
        {
            System.Data.SqlClient.SqlDataReader dr;
            dr = SqlHelper.ExecuteReader(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spPHIEUNHAPSC_C_CREATE", _maSC, _maThuoc, _soLuongS, _soLuongC, _hanSD.DBValue, _soLo, _donGiaS, _donGiaC, _ghiChu, _nguoiSD, _maMay);
            dr.Close();
            dr = null;
            return "";
        }
        public override void UpdateNhapSoChe_C(String _maSC, Decimal _sTT, String _maThuoc, Decimal _soLuongC, SmartDate _hanSD, String _soLo, Decimal _donGiaC, Boolean _huy, String _ghiChu, String _nguoiSD, string _maMay)
        {
            SqlHelper.ExecuteNonQuery(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spPHIEUNHAPSC_C_UPDATE", _maSC, _sTT, _maThuoc, _soLuongC, _hanSD.DBValue, _soLo, _donGiaC, _huy, _ghiChu, _nguoiSD, _maMay);
        }
        public override void DeleteNhapSoChe_C(String _maSC, Decimal _sTT, String _nguoiSD, string _maMay)
        {
            SqlHelper.ExecuteNonQuery(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spPHIEUNHAPSC_C_DELETED", _maSC, _sTT, _nguoiSD, _maMay);
        }
       
           public override DataSet crPhieuNhapSC_C_GetAll(Boolean _qadmin, String _maPN)
        {

            DataSet ds = new DataSet("crPhieunHAPSC_C_GetAll");
            string[] s = { "crPhieuXuat_C_GetAll" };
            SqlHelper.FillDataset(SQLConnectionDataNoiT, DatabaseOwner + ObjectQualifier + "spPHIEUNHAPSC_C_GETALL", ds, s, _qadmin, _maPN);
            //  ds.WriteXmlSchema("crPhieunHAPSC_C_GetAll.xsd");

            //System.Data.SqlClient.SqlCommand cmd = SqlHelper.CreateCommand( SQLConnectionBDNoiT, DatabaseOwner + ObjectQualifier + "spPHIEUNHAPSC_C_GETALL");

            //cmd.CommandTimeout = 18000;
            //cmd.CommandType = System.Data.CommandType.StoredProcedure;
            //cmd.Parameters.AddWithValue("QADMIN", _qadmin);
            //cmd.Parameters.AddWithValue("maPN", _maPN);

            //System.Data.SqlClient.SqlDataAdapter sqlad = new System.Data.SqlClient.SqlDataAdapter(cmd);

            //sqlad.Fill(ds);
            //if (ds.Tables.Count > 0)
            //    ds.Tables[0].TableName = "crPhieuXuat_C_GetAll";
            //sqlad = null;
            //cmd = null;
            return ds;

        }

        #endregion
        #endregion

        #region PhieuSoChe
        public override String InsertPhieuSoChe(String _noiXuat, SmartDate _ngayXuatTT, String _noiNhap, SmartDate _ngayNhapTT, Byte _loaiPhieu, String _soCT, String _nvXuat, String _nvNhan, String _ghiChu, Boolean _huy, String _nguoiLap, Boolean _khoaYC, string _maMay, Boolean _daPhat, Boolean _daDuyet, String _doiTuong, Boolean _Khongsua, Decimal _TienPX, String _maPHC, Decimal _TienHC, String _maPPL, Decimal _TienPL, String _maPBB, Decimal _TienBB, Decimal _TongTien, Decimal _TienCong, Decimal _DienNuoc, Decimal _TienKhac, Decimal _Khoanthem)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spPhieuSoChe_CREATE", _noiXuat, _ngayXuatTT.DBValue, _noiNhap, _ngayNhapTT.DBValue, _loaiPhieu, _soCT, _nvXuat, _nvNhan, _ghiChu, _huy, _nguoiLap, _khoaYC, _maMay, _daPhat, _daDuyet, _doiTuong, _Khongsua, _TienPX, _maPHC, _TienHC, _maPPL, _TienPL, _maPBB, _TienBB, _TongTien, _TienCong, _DienNuoc, _TienKhac, _Khoanthem));
        }
        public override void UpdatePhieuSoChe(String _maSC, String _noiXuat, SmartDate _ngayXuatTT, String _noiNhap, SmartDate _ngayNhapTT, Byte _loaiPhieu, String _soCT, String _nvXuat, String _nvNhan, String _ghiChu, Boolean _huy, string _maMay, String _nguoiSD, Boolean _daPhat, Boolean _daDuyet, String _MaDT, Decimal _TienPX, String _maPHC, Decimal _TienHC, String _maPPL, Decimal _TienPL, String _maPBB, Decimal _TienBB, Decimal _TongTien, Decimal _TienCong, Decimal _DienNuoc, Decimal _TienKhac, Decimal _Khoanthem)
        {
            SqlHelper.ExecuteNonQuery(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spPhieuSoChe_UPDATE", _maSC, _noiXuat, _ngayXuatTT.DBValue, _noiNhap, _ngayNhapTT.DBValue, _loaiPhieu, _soCT, _nvXuat, _nvNhan, _ghiChu, _huy, _maMay, _nguoiSD, _daPhat, _daDuyet, _MaDT, _TienPX, _maPHC, _TienHC, _maPPL, _TienPL, _maPBB, _TienBB, _TongTien, _TienCong, _DienNuoc, _TienKhac, _Khoanthem);
        }
        public override void DeletePhieuSoChe(String _maSC, string _maMay, String _nguoiSD)
        {
            SqlHelper.ExecuteNonQuery(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spPhieuSoChe_DELETED", _maSC, _maMay, _nguoiSD);
        }
        public override IDataReader GetPhieuSoche(String _maSC, Boolean _qadmin, byte _loaiphieu, Boolean _daphat)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spPhieuSoChe_Get", _maSC, _qadmin, _loaiphieu, _daphat));
        }

        public override IDataReader GetAllPhieuSoche(Boolean _qadmin, String _maKho, String _MaDT, Byte _loaiPhieu, Boolean _daphat, DateTime _tuNgay, DateTime _denNgay, String _dieuKienThem, Boolean _daduyet)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spPhieuSoChe_GETALL", _qadmin, _maKho, _MaDT, _loaiPhieu, true, _tuNgay, _denNgay, _dieuKienThem, true));
            // System.Data.SqlClient.SqlCommand cmd = SqlHelper.CreateCommand(SQLConnectionBDNoiT, DatabaseOwner + ObjectQualifier + "spPhieuSoChe_GETALL");

            // cmd.CommandTimeout = 18000;
            // cmd.CommandType = System.Data.CommandType.StoredProcedure;
            // cmd.Parameters.AddWithValue("qadmin ", _qadmin);
            // cmd.Parameters.AddWithValue("maKho ", _maKho);
            // cmd.Parameters.AddWithValue("maDT ", _MaDT);
            // cmd.Parameters.AddWithValue("loai", _loaiPhieu);
            //  cmd.Parameters.AddWithValue("TuNgay", _tuNgay);
            // cmd.Parameters.AddWithValue("denNgay", _denNgay);
            // cmd.Parameters.AddWithValue("DK", _dieuKienThem);
            // cmd.Parameters.AddWithValue("daduyet", true);
            // cmd.Parameters.AddWithValue("daPhat", true);
            //  IDataReader dt;
            // dt = (IDataReader)cmd.ExecuteReader(CommandBehavior.CloseConnection);;
            // cmd.Dispose();
            // cmd = null;
            ////// if (SQLConnectionBDNoiT.State == System.Data.ConnectionState.Closed)
            ////     //SQLConnectionBDNoiT.Close(); SQLConnectionBDNoiT.Dispose();
            //// //if (_sqlConnection.State == System.Data.ConnectionState.Closed)
            //// {
            ////     //_sqlConnection.Close(); _sqlConnection.Dispose();
            ////     //_sqlConnection = null;
            //// }
            // return dt;
        }
        public override IDataReader GetAllPhieuSoche_Gia(String _maKho, String _MaDT, Byte _loaiPhieu, DateTime _tuNgay, DateTime _denNgay, String _dieuKienThem)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spPhieuSoChe_C_GETs", false, _maKho, _MaDT, _loaiPhieu, _tuNgay, _denNgay, _dieuKienThem));
            // System.Data.SqlClient.SqlCommand cmd = SqlHelper.CreateCommand(SQLConnectionBDNoiT, DatabaseOwner + ObjectQualifier + "spPhieuSoChe_C_GETs");

            // cmd.CommandTimeout = 18000;
            // cmd.CommandType = System.Data.CommandType.StoredProcedure;
            // cmd.Parameters.AddWithValue("qadmin ", false);

            // cmd.Parameters.AddWithValue("maKho ", _maKho);
            // cmd.Parameters.AddWithValue("maDT ", _MaDT);
            // cmd.Parameters.AddWithValue("loai", _loaiPhieu);
            // cmd.Parameters.AddWithValue("TuNgay", _tuNgay);
            // cmd.Parameters.AddWithValue("denNgay", _denNgay);
            // cmd.Parameters.AddWithValue("DK", _dieuKienThem);
            //  IDataReader dt;
            // dt = (IDataReader)cmd.ExecuteReader(CommandBehavior.CloseConnection);;
            // cmd.Dispose();
            // cmd = null;
            ////// if (SQLConnectionBDNoiT.State == System.Data.ConnectionState.Closed)
            ////     //SQLConnectionBDNoiT.Close(); SQLConnectionBDNoiT.Dispose();
            //// //if (_sqlConnection.State == System.Data.ConnectionState.Closed)
            //// {
            ////     //_sqlConnection.Close(); _sqlConnection.Dispose();
            ////     //_sqlConnection = null;
            //// }
            // return dt;
        }
        public override IDataReader GetPhieuSoche_C(String _maSC, Byte _orderNumber)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spPhieuSoChe_C_Get", _maSC, _orderNumber));
        }

        #region PhieuSoChe chi tiet

        public override String InsertPhieuSoChe_C(String _maSC, String _maThuocS, Decimal _soLuongS, String _maThuocC, Decimal _soLuongC, SmartDate _hanSD, String _soLo, Decimal _donGia, Decimal _soLuongYC, Decimal _giaBan, String _ghiChu, String _nguoiSD, string _maMay, Boolean _Phanloai)
        {
            System.Data.SqlClient.SqlDataReader dr;
            dr = SqlHelper.ExecuteReader(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spPhieuSoChe_C_CREATE", _maSC, _maThuocS, _soLuongS, _maThuocC, _soLuongC, _hanSD.DBValue, _soLo, _donGia, _soLuongYC, _giaBan, _ghiChu, _nguoiSD, _maMay, _Phanloai);
            dr.Close();
            dr = null;
            return "";
        }
        public override void UpdatePhieuSoche_C(String _maSC, Decimal _sTT, String _maThuocS, Decimal _soLuongS, String _maThuocC, Decimal _soLuongC, SmartDate _hanSD, String _soLo, SmartDate _hanSDC, String _soLoC, Decimal _donGia, Decimal _soLuongYC, Decimal _giaBan, Boolean _huy, String _ghiChu, String _nguoiSD, string _maMay, Boolean _Phanloai)
        {
            SqlHelper.ExecuteNonQuery(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spPhieuSoChe_C_UPDATE", _maSC, _sTT, _maThuocS, _soLuongS, _maThuocC, _soLuongC, _hanSD.DBValue, _soLo, _hanSDC.DBValue, _soLoC, _donGia, _soLuongYC, _giaBan, _huy, _ghiChu, _nguoiSD, _maMay, _Phanloai);
        }
        public override void DeletePhieuSoche_C(String _maSC, Decimal _sTT, String _nguoiSD, string _maMay)
        {
            SqlHelper.ExecuteNonQuery(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spPhieuSoChe_C_DELETED", _maSC, _sTT, _nguoiSD, _maMay);
        }
        public override DataSet crPhieuSoChe_C_GetAll(Boolean _qadmin, String _maSC)
        {
            DataSet ds = new DataSet("crPhieuXuat_C_GetAll");
            //string[] s ={ "crPhieuXuat_C_GetAll" };
            //SqlHelper.FillDataset( ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spPhieuSoChe_C_GETALL", ds, s, _qadmin, _maPX);
            //ds.WriteXmlSchema("crPhieuXuat_C_GetAll.xsd");

            System.Data.SqlClient.SqlCommand cmd = SqlHelper.CreateCommand(SQLConnectionDataNoiT, DatabaseOwner + ObjectQualifier + "spPhieuSoChe_C_GETALL");

            cmd.CommandTimeout = 18000;
            cmd.CommandType = System.Data.CommandType.StoredProcedure;
            cmd.Parameters.AddWithValue("QADMIN", _qadmin);
            cmd.Parameters.AddWithValue("maPX", _maSC);

            System.Data.SqlClient.SqlDataAdapter sqlad = new System.Data.SqlClient.SqlDataAdapter(cmd);

            sqlad.Fill(ds);
            if (ds.Tables.Count > 0)
                ds.Tables[0].TableName = "crPhieuXuat_C_GetAll";
            sqlad.Dispose(); cmd.Dispose(); sqlad = null;
            cmd = null;
            //// if (SQLConnectionBDNoiT.State == System.Data.ConnectionState.Closed)
            //     //SQLConnectionBDNoiT.Close(); SQLConnectionBDNoiT.Dispose();
            // //if (_sqlConnection.State == System.Data.ConnectionState.Closed)
            // {
            //     //_sqlConnection.Close(); _sqlConnection.Dispose();
            //     //_sqlConnection = null;
            // }
            return ds;

        }

        public override DataSet crBCPhieuSoChe(String _maKho, String _MaDT, Byte _loaiPhieu, DateTime _tuNgay, DateTime _denNgay, String _dieuKienThem)
        {
            DataSet ds = new DataSet("crPhieuXuat_C_GetAll");
            //string[] s ={ "crPhieuXuat_C_GetAll" };
            //SqlHelper.FillDataset( ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spPhieuSoChe_C_GETALL", ds, s, _qadmin, _maPX);
            //ds.WriteXmlSchema("crPhieuXuat_C_GetAll.xsd");

            System.Data.SqlClient.SqlCommand cmd = SqlHelper.CreateCommand(SQLConnectionDataNoiT, DatabaseOwner + ObjectQualifier + "spPhieuSoChe_C_GETs");

            cmd.CommandTimeout = 18000;
            cmd.CommandType = System.Data.CommandType.StoredProcedure;
            cmd.Parameters.AddWithValue("qadmin ", false);
            cmd.Parameters.AddWithValue("maKho ", _maKho);
            cmd.Parameters.AddWithValue("maDT ", _MaDT);
            cmd.Parameters.AddWithValue("loai", _loaiPhieu);
            cmd.Parameters.AddWithValue("TuNgay", _tuNgay);
            cmd.Parameters.AddWithValue("denNgay", _denNgay);
            cmd.Parameters.AddWithValue("DK", _dieuKienThem);

            System.Data.SqlClient.SqlDataAdapter sqlad = new System.Data.SqlClient.SqlDataAdapter(cmd);

            sqlad.Fill(ds);
            if (ds.Tables.Count > 0)
                ds.Tables[0].TableName = "crPhieuXuat_C_GetAll";
            sqlad.Dispose(); cmd.Dispose(); sqlad = null;
            cmd = null;
            //// if (SQLConnectionBDNoiT.State == System.Data.ConnectionState.Closed)
            //     //SQLConnectionBDNoiT.Close(); SQLConnectionBDNoiT.Dispose();
            // //if (_sqlConnection.State == System.Data.ConnectionState.Closed)
            // {
            //     //_sqlConnection.Close(); _sqlConnection.Dispose();
            //     //_sqlConnection = null;
            // }
            return ds;
          
        }

        #endregion
        #endregion
        #region PhieuCheBien
        public override String InsertPhieuCheBien(String _noiXuat, SmartDate _ngayXuat, SmartDate _ngayXuatTT, String _noiNhap, SmartDate _ngayNhapTT, String _soCT, String _nvXuat, String _nvNhan, String _mathuoc, Decimal _soLuong, Decimal _donGia, String _soLo, SmartDate _handung, Decimal _TIENPX, String _maPHC, Decimal _TIENHC, String _maPPL, Decimal _TIENPL, String _maPBB, Decimal _TIENBB, String _ghiChu, Decimal _TONGTIEN, Decimal _Cong, Decimal _Gas, Decimal _Mucdau, Decimal _Khoanthem, String _MaDT, Boolean _daPhat, Boolean _daDuyet, byte _loaiphieu, String _sNguoiSD, String _maMay)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spPhieuCheBien_CREATE", _noiXuat, _ngayXuat.DBValue, _ngayXuatTT.DBValue, _noiNhap, _ngayNhapTT.DBValue, _soCT, _nvXuat, _nvNhan, _mathuoc, _soLuong, _donGia, _soLo, _handung.DBValue, _TIENPX, _maPHC, _TIENHC, _maPPL, _TIENPL, _maPBB, _TIENBB, _ghiChu, _TONGTIEN, _Cong, _Gas, _Mucdau, _Khoanthem, _MaDT, _daPhat, _daDuyet, _loaiphieu, _sNguoiSD, _maMay));
        }
        public override void UpdatePhieuCheBien(String _MABC, String _noiXuat, SmartDate _ngayXuat, SmartDate _ngayXuatTT, String _noiNhap, SmartDate _ngayNhapTT, String _soCT, String _nvXuat, String _nvNhan, String _mathuoc, Decimal _soLuong, Decimal _donGia, decimal _giaban, String _soLo, SmartDate _handung, Decimal _TIENPX, String _maPHC, Decimal _TIENHC, String _maPPL, Decimal _TIENPL, String _maPBB, Decimal _TIENBB, String _ghiChu, String _sNguoiSD, Decimal _TONGTIEN, Decimal _Cong, Decimal _Gas, Decimal _Mucdau, Decimal _Khoanthem, String _MaDT, Boolean _daPhat, Boolean _daDuyet, byte _loaiphieu, Boolean _huy, String _maMay)
        {
            SqlHelper.ExecuteNonQuery(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spPhieuCheBien_UPDATE", _MABC, _noiXuat, _ngayXuat.DBValue, _ngayXuatTT.DBValue, _noiNhap, _ngayNhapTT.DBValue, _soCT, _nvXuat, _nvNhan, _mathuoc, _soLuong, _donGia, _giaban, _soLo, _handung.DBValue, _TIENPX, _maPHC, _TIENHC, _maPPL, _TIENPL, _maPBB, _TIENBB, _ghiChu, _sNguoiSD, _TONGTIEN, _Cong, _Gas, _Mucdau, _Khoanthem, _MaDT, _daPhat, _daDuyet, _loaiphieu, _huy, _maMay);
        }

        public override void DeletePhieuCheBien(String _MABC, String _maMay, String _nguoiSD)
        {
            SqlHelper.ExecuteNonQuery(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spPhieuCheBien_DELETED", _MABC, _maMay, _nguoiSD);
        }
        public override IDataReader GetAllPhieuCheBien(Boolean _qadmin, String _maKho, String _MaDT, DateTime _tuNgay, DateTime _denNgay, String _dieuKienThem, byte _loaiphieu, Boolean _daphat, Boolean _daduyet)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spPHIEUCheBien_GETALL", _qadmin, _maKho, _MaDT, _tuNgay, _denNgay, _dieuKienThem, _loaiphieu, _daphat, _daduyet));
        }
        public override IDataReader GetPhieuCheBien(String _maBC, Boolean _qadmin, byte _loaiphieu, Boolean _daphat)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spPHIEUCheBien_GET", _maBC, _qadmin, _loaiphieu, _daphat));
        }
        #endregion
        #region PhieuCheBien chi tiet

        public override String InsertPhieuCheBien_C(String _maCB, String _maThuoc, Decimal _soLuong, string _solo, SmartDate _handung, Decimal _donGia, Decimal _soLuongYC, Decimal _giaBan, String _ghiChu, String _nguoiSD, string _maMay)
        {
            System.Data.SqlClient.SqlDataReader dr;

            dr = SqlHelper.ExecuteReader(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spPhieuCheBien_C_CREATE", _maCB, _maThuoc, _soLuong,_solo,_handung.DBValue , _donGia, _soLuongYC, _giaBan, _ghiChu, _nguoiSD, _maMay);
            dr.Close();
            dr = null;
            return "";
        }
        public override void UpdatePhieuCheBien_C(String _maCB, Decimal _sTT, String _maThuoc, Decimal _soLuong,string _solo, SmartDate _handung,  Decimal _donGia, Decimal _soLuongYC, Decimal _giaBan, Boolean _huy, String _ghiChu, String _nguoiSD, string _maMay)
        {
            SqlHelper.ExecuteNonQuery(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spPhieuCheBien_C_UPDATE", _maCB, _sTT, _maThuoc, _soLuong,_solo,_handung.DBValue ,  _donGia, _soLuongYC, _giaBan, _huy, _ghiChu, _nguoiSD, _maMay);
        }
        public override String InsertPhieuCheBien_C(String _maCB, String _maThuoc, Decimal _soLuong, Decimal _donGia, Decimal _soLuongYC, Decimal _giaBan, String _ghiChu, String _nguoiSD, string _maMay)
        {
            System.Data.SqlClient.SqlDataReader dr;

            dr = SqlHelper.ExecuteReader(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spPhieuCheBien_C_CREATE", _maCB, _maThuoc, _soLuong, _donGia, _soLuongYC, _giaBan, _ghiChu, _nguoiSD, _maMay);
            dr.Close();
            dr = null;
            return "";
        }
        public override void UpdatePhieuCheBien_C(String _maCB, Decimal _sTT, String _maThuoc, Decimal _soLuong,  Decimal _donGia, Decimal _soLuongYC, Decimal _giaBan, Boolean _huy, String _ghiChu, String _nguoiSD, string _maMay)
        {
            SqlHelper.ExecuteNonQuery(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spPhieuCheBien_C_UPDATE", _maCB, _sTT, _maThuoc, _soLuong,  _donGia, _soLuongYC, _giaBan, _huy, _ghiChu, _nguoiSD, _maMay);
        }
      
        public override void DeletePhieuCheBien_C(String _maCB, Decimal _sTT, String _nguoiSD, string _maMay)
        {
            SqlHelper.ExecuteNonQuery(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spPhieuCheBien_C_DELETED", _maCB, _sTT, _nguoiSD, _maMay);
        }
        public override DataSet crPhieuCheBien_C_GetAll(Boolean _qadmin, String _maBC)
        {
            DataSet ds = new DataSet("crPhieuXuat_C_GetAll");
            //string[] s ={ "crPhieuXuat_C_GetAll" };
            //SqlHelper.FillDataset( ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spPhieuCheBien_C_GETALL", ds, s, _qadmin, _maPX);
            //ds.WriteXmlCBhema("crPhieuXuat_C_GetAll.xsd");

            System.Data.SqlClient.SqlCommand cmd = SqlHelper.CreateCommand(SQLConnectionDataNoiT, DatabaseOwner + ObjectQualifier + "spPhieuCheBien_C_GETALL");

            cmd.CommandTimeout = 18000;
            cmd.CommandType = System.Data.CommandType.StoredProcedure;
            cmd.Parameters.AddWithValue("QADMIN", _qadmin);
            cmd.Parameters.AddWithValue("maBC", _maBC);

            System.Data.SqlClient.SqlDataAdapter sqlad = new System.Data.SqlClient.SqlDataAdapter(cmd);

            sqlad.Fill(ds);
            if (ds.Tables.Count > 0)
                ds.Tables[0].TableName = "crPhieuXuat_C_GetAll";
            sqlad.Dispose(); cmd.Dispose(); sqlad = null;
            cmd = null;
            //// if (SQLConnectionBDNoiT.State == System.Data.ConnectionState.Closed)
            //     //SQLConnectionBDNoiT.Close(); SQLConnectionBDNoiT.Dispose();
            // //if (_sqlConnection.State == System.Data.ConnectionState.Closed)
            // {
            //     //_sqlConnection.Close(); _sqlConnection.Dispose();
            //     //_sqlConnection = null;
            // }
            return ds;

        }
        public override DataSet crPhieuCheBien_GetAll(Boolean _qadmin, String _maKho, String _MaDT, DateTime _tuNgay, DateTime _denNgay, String _dieuKienThem, byte _loaiphieu, Boolean _daphat, Boolean _daduyet)
        {
            DataSet ds = new DataSet("crPhieuXuat_C_GetAll");
            //string[] s ={ "crPhieuXuat_C_GetAll" };
            //SqlHelper.FillDataset( ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spPhieuCheBien_C_GETALL", ds, s, _qadmin, _maPX);
            //ds.WriteXmlCBhema("crPhieuXuat_C_GetAll.xsd");

            System.Data.SqlClient.SqlCommand cmd = SqlHelper.CreateCommand(SQLConnectionDataNoiT, DatabaseOwner + ObjectQualifier + "spPhieuCheBien_GETALL");
            cmd.CommandTimeout = 18000;
            cmd.CommandType = System.Data.CommandType.StoredProcedure;
            cmd.Parameters.AddWithValue("QADMIN", _qadmin);
            cmd.Parameters.AddWithValue("makho", _maKho);

            cmd.Parameters.AddWithValue("MaDT", _MaDT);
            cmd.Parameters.AddWithValue("tuNgay", _tuNgay);
            cmd.Parameters.AddWithValue("denNgay", _denNgay);
            cmd.Parameters.AddWithValue("DK", _dieuKienThem);
            cmd.Parameters.AddWithValue("loai", _loaiphieu);
            cmd.Parameters.AddWithValue("daphat", _daphat);
            cmd.Parameters.AddWithValue("daduyet", _daduyet);
            System.Data.SqlClient.SqlDataAdapter sqlad = new System.Data.SqlClient.SqlDataAdapter(cmd);

            sqlad.Fill(ds);
            if (ds.Tables.Count > 0)
                ds.Tables[0].TableName = "crPhieuXuat_C_GetAll";
            sqlad.Dispose(); cmd.Dispose(); sqlad = null;
            cmd = null;
            // if (SQLConnectionBDNoiT.State == System.Data.ConnectionState.Closed)
            //SQLConnectionBDNoiT.Close(); SQLConnectionBDNoiT.Dispose();
            //if (_sqlConnection.State == System.Data.ConnectionState.Closed)
            {
                //_sqlConnection.Close(); _sqlConnection.Dispose();
                //_sqlConnection = null;
            }
            return ds;

        }
        public override DataSet crPhieuCheBien_C_GetAll(Boolean _qadmin, String _maKho, String _MaDT, DateTime _tuNgay, DateTime _denNgay, String _dieuKienThem, byte _loaiphieu, Boolean _daphat, Boolean _daduyet)
        {
            DataSet ds = new DataSet("crPhieuXuat_C_GetAll");
            //string[] s ={ "crPhieuXuat_C_GetAll" };
            //SqlHelper.FillDataset( ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spPhieuCheBien_C_GETALL", ds, s, _qadmin, _maPX);
            //ds.WriteXmlCBhema("crPhieuXuat_C_GetAll.xsd");

            System.Data.SqlClient.SqlCommand cmd = SqlHelper.CreateCommand(SQLConnectionDataNoiT, DatabaseOwner + ObjectQualifier + "spPhieuCheBien_C_GETS");
            cmd.CommandTimeout = 18000;
            cmd.CommandType = System.Data.CommandType.StoredProcedure;
            cmd.Parameters.AddWithValue("QADMIN", _qadmin);
            cmd.Parameters.AddWithValue("makho", _maKho);
            cmd.Parameters.AddWithValue("MaDT", _MaDT);
            cmd.Parameters.AddWithValue("tuNgay", _tuNgay);
            cmd.Parameters.AddWithValue("denNgay", _denNgay);
            cmd.Parameters.AddWithValue("DK", _dieuKienThem);
            cmd.Parameters.AddWithValue("loai", _loaiphieu);
            cmd.Parameters.AddWithValue("daphat", _daphat);
            cmd.Parameters.AddWithValue("daduyet", _daduyet);
            System.Data.SqlClient.SqlDataAdapter sqlad = new System.Data.SqlClient.SqlDataAdapter(cmd);

            sqlad.Fill(ds);
            if (ds.Tables.Count > 0)
                ds.Tables[0].TableName = "crPhieuXuat_C_GetAll";
            if (ds.Tables.Count > 0)
                ds.Tables[1].TableName = "crPhieuXuat_GetAll";
            sqlad.Dispose(); cmd.Dispose(); sqlad = null;
            cmd = null;
            //// if (SQLConnectionBDNoiT.State == System.Data.ConnectionState.Closed)
            //     //SQLConnectionBDNoiT.Close(); SQLConnectionBDNoiT.Dispose();
            // //if (_sqlConnection.State == System.Data.ConnectionState.Closed)
            // {
            //     //_sqlConnection.Close(); _sqlConnection.Dispose();
            //     //_sqlConnection = null;
            // }
            return ds;

        }

        #endregion


        #region PhieuKiemNghiem
        //public abstract String InsertPhieuKiemNghiem(SmartDate _NgayYCKN, SmartDate _ngayKN, SmartDate _ngaytraKN, String _noiNhap, SmartDate _ngayNhap, String _soCT, String _nvKN, String _nvgiao, String _nvlay, String _nvtra, String _nvnhan, string _mathuoc, String _soLo, SmartDate _handung, String _KetQua, String _ghichu, String _sNguoiSD, String _MaDT, Boolean _KQ, String _maMay);
        //public abstract void UpdatePhieuKiemNghiem(String _MAKN, SmartDate _NgayYCKN, SmartDate _ngayKN, SmartDate _ngaytraKN, String _noiNhap, SmartDate _ngayNhap, String _soCT, String _nvKN, String _nvgiao, String _nvlay, String _nvtra, String _nvnhan, string _mathuoc, String _soLo, SmartDate _handung, String _KetQua, String _ghichu, String _sNguoiSD, String _MaDT, Boolean _KQ, Boolean _huy, String _maMay);

        public override String InsertPhieuKiemNghiem(String _YeuCauKN, SmartDate _NgayU, String _DangMau, String _DangKN, string _mancc, string _solt, SmartDate _Ngaynhap, SmartDate _NgayYCKN, SmartDate _ngayKN, SmartDate _ngaytraKN, String _noiNhap, SmartDate _ngayNhap, String _soCT, String _nvKN, String _nvgiao, String _nvlay, String _nvtra, String _nvnhan, string _mathuoc, decimal _soluong, String _soLo, SmartDate _handung, SmartDate _ngaysx, String _KetQua, String _ghichu, String _sNguoiSD, String _MaDT, Boolean _KQ, String _maMay)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spPhieuKiemNghiem_CREATE", _YeuCauKN, _NgayU.DBValue, _DangMau, _DangKN, _mancc, _solt, _ngayNhap.DBValue, _NgayYCKN.DBValue, _ngayKN.DBValue, _ngaytraKN.DBValue, _noiNhap, _ngayNhap.DBValue, _soCT, _nvKN, _nvgiao, _nvlay, _nvtra, _nvnhan, _mathuoc, _soluong, _soLo, _handung.DBValue, _ngaysx.DBValue, _KetQua, _ghichu, _MaDT, _KQ, _sNguoiSD, _maMay));
        }
        public override void UpdatePhieuKiemNghiem(String _MABC, String _YeuCauKN, SmartDate _NgayU, String _DangMau, String _DangKN, string _mancc, string _solt, SmartDate _Ngaynhap, SmartDate _NgayYCKN, SmartDate _ngayKN, SmartDate _ngaytraKN, String _noiNhap, SmartDate _ngayGiao, String _soCT, String _nvKN, String _nvgiao, String _nvlay, String _nvtra, String _nvnhan, string _mathuoc, decimal _soluong, String _soLo, SmartDate _handung, SmartDate _ngaysx, String _KetQua, String _ghichu, String _sNguoiSD, String _MaDT, Boolean _KQ, Boolean _huy, String _maMay)
        {
            SqlHelper.ExecuteNonQuery(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spPhieuKiemNghiem_UPDATE", _MABC, _YeuCauKN, _NgayU.DBValue, _DangMau, _DangKN, _mancc, _solt, _Ngaynhap.DBValue, _NgayYCKN.DBValue, _ngayKN.DBValue, _ngaytraKN.DBValue, _noiNhap, _ngayGiao.DBValue, _soCT, _nvKN, _nvgiao, _nvlay, _nvtra, _nvnhan, _mathuoc, _soluong, _soLo, _handung.DBValue, _ngaysx.DBValue, _KetQua, _ghichu, _sNguoiSD, _MaDT, _KQ, _huy, _maMay);
        }

        public override void DeletePhieuKiemNghiem(String _MABC, String _maMay, String _nguoiSD)
        {
            SqlHelper.ExecuteNonQuery(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spPhieuKiemNghiem_DELETED", _MABC, _maMay, _nguoiSD);
        }
        public override IDataReader GetAllPhieuKiemNghiem(Boolean _qadmin, String _MaDT, DateTime _tuNgay, DateTime _denNgay, String _dieuKienThem, byte _loaiphieu)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spPHIEUKiemNghiem_GETALL", _qadmin, _MaDT, _tuNgay, _denNgay, _dieuKienThem, _loaiphieu));
        }
        public override IDataReader GetPhieuKiemNghiem(String _maBC, Boolean _qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spPHIEUKiemNghiem_GET", _maBC, _qadmin));
        }
        #endregion
        #region PhieuKiemNghiem chi tiet

        public override String InsertPhieuKiemNghiem_C(String _maKN, String _maDG, String _maCS, String _MaKQ, String _KQ, decimal _dongiatt, String _ghiChu, String _nguoiTH, String _nguoiSD, string _maMay)
        {
            System.Data.SqlClient.SqlDataReader dr;

            dr = SqlHelper.ExecuteReader(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spPhieuKiemNghiem_C_CREATE", _maKN, _maDG, _maCS, _MaKQ, _KQ, _dongiatt, _ghiChu, _nguoiTH, _nguoiSD, _maMay);
            dr.Close();
            dr = null;
            return "";
        }
        public override void UpdatePhieuKiemNghiem_C(String _maKN, Decimal _sTT, String _maDG, String _maCS, String _MaKQ, String _KQ, decimal _dongiatt, String _ghiChu, String _nguoiTH, Boolean _huy, String _nguoiSD, string _maMay)
        {
            SqlHelper.ExecuteNonQuery(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spPhieuKiemNghiem_C_UPDATE", _maKN, _sTT, _maDG, _maCS, _MaKQ, _KQ, _dongiatt, _ghiChu, _nguoiTH, _huy, _nguoiSD, _maMay);
        }
        public override void DeletePhieuKiemNghiem_C(String _maKN, Decimal _sTT, String _nguoiSD, string _maMay)
        {
            SqlHelper.ExecuteNonQuery(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spPhieuKiemNghiem_C_DELETED", _maKN, _sTT, _nguoiSD, _maMay);
        }
        public override DataSet crPhieuKiemNghiem_C_GetAll(Boolean _qadmin, String _maKN)
        {
            DataSet ds = new DataSet("crPhieuXuat_C_GetAll");
            //string[] s ={ "crPhieuXuat_C_GetAll" };
            //SqlHelper.FillDataset( ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spPhieuKiemNghiem_C_GETALL", ds, s, _qadmin, _maPX);
            //ds.WriteXmlCBhema("crPhieuXuat_C_GetAll.xsd");

            System.Data.SqlClient.SqlCommand cmd = SqlHelper.CreateCommand(SQLConnectionDataNoiT, DatabaseOwner + ObjectQualifier + "spPhieuKiemNghiem_C_GETALL");

            cmd.CommandTimeout = 18000;
            cmd.CommandType = System.Data.CommandType.StoredProcedure;
            cmd.Parameters.AddWithValue("QADMIN", _qadmin);
            cmd.Parameters.AddWithValue("maKN", _maKN);

            System.Data.SqlClient.SqlDataAdapter sqlad = new System.Data.SqlClient.SqlDataAdapter(cmd);

            sqlad.Fill(ds);
            if (ds.Tables.Count > 0)
                ds.Tables[0].TableName = "crPhieuXuat_C_GetAll";
            sqlad.Dispose(); cmd.Dispose(); sqlad = null;
            cmd = null;
            //// if (SQLConnectionBDNoiT.State == System.Data.ConnectionState.Closed)
            //     //SQLConnectionBDNoiT.Close(); SQLConnectionBDNoiT.Dispose();
            // //if (_sqlConnection.State == System.Data.ConnectionState.Closed)
            // {
            //     //_sqlConnection.Close(); _sqlConnection.Dispose();
            //     //_sqlConnection = null;
            // }
            return ds;

        }
        public override DataSet crPhieuKiemNghiem_C_GetAll(Boolean _qadmin, String _MaDT, DateTime _tuNgay, DateTime _denNgay, String _dieuKienThem, byte _loaiphieu)
        {
            DataSet ds = new DataSet("crDuoc_BCNhapThuoc");
            //string[] s ={ "crPhieuXuat_C_GetAll" };
            //SqlHelper.FillDataset( ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spPhieuKiemNghiem_C_GETALL", ds, s, _qadmin, _maPX);
            //ds.WriteXmlCBhema("crPhieuXuat_C_GetAll.xsd");

            System.Data.SqlClient.SqlCommand cmd = SqlHelper.CreateCommand(SQLConnectionDataNoiT, DatabaseOwner + ObjectQualifier + "spPhieuKiemNghiem_C_GETs");

            cmd.CommandTimeout = 18000;
            cmd.CommandType = System.Data.CommandType.StoredProcedure;
            cmd.Parameters.AddWithValue("QADMIN", _qadmin);
            cmd.Parameters.AddWithValue("MaDT", _MaDT);
            cmd.Parameters.AddWithValue("tuNgay", _tuNgay);
            cmd.Parameters.AddWithValue("denNgay", _denNgay);
            cmd.Parameters.AddWithValue("DK", _dieuKienThem);
            cmd.Parameters.AddWithValue("loaiphieu", _loaiphieu);


            System.Data.SqlClient.SqlDataAdapter sqlad = new System.Data.SqlClient.SqlDataAdapter(cmd);

            sqlad.Fill(ds);
            if (ds.Tables.Count > 0)
                ds.Tables[0].TableName = "crDuoc_BCNhapThuoc";
            sqlad.Dispose(); cmd.Dispose(); sqlad = null;
            cmd = null;
            //// if (SQLConnectionBDNoiT.State == System.Data.ConnectionState.Closed)
            //     //SQLConnectionBDNoiT.Close(); SQLConnectionBDNoiT.Dispose();
            // //if (_sqlConnection.State == System.Data.ConnectionState.Closed)
            // {
            //     //_sqlConnection.Close(); _sqlConnection.Dispose();
            //     //_sqlConnection = null;
            // }
            return ds;

        }
        public override DataSet crPhieuKiemNghiem_GetAll(Boolean _qadmin, String _MaDT, DateTime _tuNgay, DateTime _denNgay, String _dieuKienThem, byte _loaiphieu)
        {
            DataSet ds = new DataSet("CRDUOC_BCNhapThuoc");
            // string[] s ={ "crPhieuXuat_C_GetAll" };
            //SqlHelper.FillDataset( ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spPhieuKiemNghiem_C_GETALL", ds, s, _qadmin, _maPX);
            //ds.WriteXmlCBhema("crPhieuXuat_C_GetAll.xsd");

            System.Data.SqlClient.SqlCommand cmd = SqlHelper.CreateCommand(SQLConnectionDataNoiT, DatabaseOwner + ObjectQualifier + "spPhieuKiemNghiem_GETAll");

            cmd.CommandTimeout = 18000;
            cmd.CommandType = System.Data.CommandType.StoredProcedure;
            cmd.Parameters.AddWithValue("QADMIN", _qadmin);
            cmd.Parameters.AddWithValue("MaDT", _MaDT);
            cmd.Parameters.AddWithValue("tuNgay", _tuNgay);
            cmd.Parameters.AddWithValue("denNgay", _denNgay);
            cmd.Parameters.AddWithValue("DK", _dieuKienThem);
            cmd.Parameters.AddWithValue("loaiphieu", _loaiphieu);


            System.Data.SqlClient.SqlDataAdapter sqlad = new System.Data.SqlClient.SqlDataAdapter(cmd);

            sqlad.Fill(ds);
            if (ds.Tables.Count > 0)
                ds.Tables[0].TableName = "CRDUOC_BCNhapThuoc";
            sqlad.Dispose(); cmd.Dispose(); sqlad = null;
            cmd = null;
            //  ds.WriteXmlSchema("crBCKiemNghiem.xsd");
            //// if (SQLConnectionBDNoiT.State == System.Data.ConnectionState.Closed)
            //     //SQLConnectionBDNoiT.Close(); SQLConnectionBDNoiT.Dispose();
            // //if (_sqlConnection.State == System.Data.ConnectionState.Closed)
            // {
            //     //_sqlConnection.Close(); _sqlConnection.Dispose();
            //     //_sqlConnection = null;
            // }
            return ds;

        }
        public override DataSet crBCKetQuaGiamSatDoaM(DateTime _tuNgay, DateTime _denNgay, String _dieuKien)
        {
            DataSet ds = new DataSet("crDuoc_BCNhapThuoc");
            // string[] s ={ "crPhieuXuat_C_GetAll" };
            //SqlHelper.FillDataset( ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spPhieuKiemNghiem_C_GETALL", ds, s, _qadmin, _maPX);
            //ds.WriteXmlCBhema("crPhieuXuat_C_GetAll.xsd");

            System.Data.SqlClient.SqlCommand cmd = SqlHelper.CreateCommand(SQLConnectionDataNoiT, DatabaseOwner + ObjectQualifier + "spDuoc_BCKetquaGSDoam");

            cmd.CommandTimeout = 18000;
            cmd.CommandType = System.Data.CommandType.StoredProcedure;
            cmd.Parameters.AddWithValue("tuNgay", _tuNgay);
            cmd.Parameters.AddWithValue("denNgay", _denNgay);
            cmd.Parameters.AddWithValue("DK", _dieuKien);
            System.Data.SqlClient.SqlDataAdapter sqlad = new System.Data.SqlClient.SqlDataAdapter(cmd);

            sqlad.Fill(ds);
            if (ds.Tables.Count > 0)
                ds.Tables[0].TableName = "crDuoc_BCNhapThuoc";
            sqlad.Dispose(); cmd.Dispose(); sqlad = null;
            cmd = null;
            //  ds.WriteXmlSchema("crBCKetQuaGiamSatDoaM.xsd");
            //// if (SQLConnectionBDNoiT.State == System.Data.ConnectionState.Closed)
            //     //SQLConnectionBDNoiT.Close(); SQLConnectionBDNoiT.Dispose();
            // //if (_sqlConnection.State == System.Data.ConnectionState.Closed)
            // {
            //     //_sqlConnection.Close(); _sqlConnection.Dispose();
            //     //_sqlConnection = null;
            // }
            return ds;

        }

        #endregion
        #region PhieuKiemNghiem vshk
        public override IDataReader GetAllPhieuKiemNghiem_VSHK(String _maBC, Boolean _qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spPHIEUKiemNghiem_VSHK_GETAll", _maBC, _qadmin));
        }
        public override String InsertPhieuKiemNghiem_VSHK(String _maKN, SmartDate _ngayKQ, String _Dia, String _VK101, String _VK102, String _VK103, String _VK104, String _VK105, String _VKN101, String _VKN102, String _VKN103, String _ghiChu, String _nguoiSD, string _maMay)
        {
            System.Data.SqlClient.SqlDataReader dr;

            dr = SqlHelper.ExecuteReader(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spPhieuKiemNghiem_VSHK_CREATE", _maKN, _ngayKQ.DBValue, _Dia, _VK101, _VK102, _VK103, _VK104, _VK105, _VKN101, _VKN102, _VKN103, _ghiChu, _nguoiSD, _maMay);
            dr.Close();
            dr = null;
            return "";
        }
        public override void UpdatePhieuKiemNghiem_VSHK(String _maKN, Decimal _sTT, SmartDate _ngayKQ, String _Dia, String _VK101, String _VK102, String _VK103, String _VK104, String _VK105, String _VKN101, String _VKN102, String _VKN103, String _ghiChu, Boolean _huy, String _nguoiSD, string _maMay)
        {
            SqlHelper.ExecuteNonQuery(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spPhieuKiemNghiem_VSHK_UPDATE", _maKN, _sTT, _ngayKQ.DBValue, _Dia, _VK101, _VK102, _VK103, _VK104, _VK105, _VKN101, _VKN102, _VKN103, _ghiChu, _huy, _nguoiSD, _maMay);
        }
        public override void DeletePhieuKiemNghiem_VSHK(String _maKN, Decimal _sTT, String _nguoiSD, string _maMay)
        {
            SqlHelper.ExecuteNonQuery(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spPhieuKiemNghiem_VSHK_DELETED", _maKN, _sTT, _nguoiSD, _maMay);
        }
        public override DataSet crPhieuKiemNghiem_VSHK_GetAll(Boolean _qadmin, String _maKN)
        {
            DataSet ds = new DataSet("crPhieuXuat_C_GetAll");
            //string[] s ={ "crPhieuXuat_C_GetAll" };
            //SqlHelper.FillDataset( ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spPhieuKiemNghiem_C_GETALL", ds, s, _qadmin, _maPX);
            //ds.WriteXmlCBhema("crPhieuXuat_C_GetAll.xsd");

            System.Data.SqlClient.SqlCommand cmd = SqlHelper.CreateCommand(SQLConnectionDataNoiT, DatabaseOwner + ObjectQualifier + "spPhieuKiemNghiem_VSHK_GETALL");

            cmd.CommandTimeout = 18000;
            cmd.CommandType = System.Data.CommandType.StoredProcedure;
            cmd.Parameters.AddWithValue("QADMIN", _qadmin);
            cmd.Parameters.AddWithValue("maKN", _maKN);

            System.Data.SqlClient.SqlDataAdapter sqlad = new System.Data.SqlClient.SqlDataAdapter(cmd);

            sqlad.Fill(ds);
            if (ds.Tables.Count > 0)
                ds.Tables[0].TableName = "crPhieuXuat_C_GetAll";
            sqlad.Dispose(); cmd.Dispose(); sqlad = null;
            cmd = null;
            //  ds.WriteXmlSchema("c:\\tem\\crBCKiemNghiem_VS.xsd");
            // ds.WriteXml("c:\\tem\\crBCKiemNghiem_VS1.xsd");
            //// if (SQLConnectionBDNoiT.State == System.Data.ConnectionState.Closed)
            ////SQLConnectionBDNoiT.Close(); SQLConnectionBDNoiT.Dispose();
            //if (_sqlConnection.State == System.Data.ConnectionState.Closed)
            //{
            //    //_sqlConnection.Close(); _sqlConnection.Dispose();
            //    //_sqlConnection = null;
            //}
            //  ds.WriteXmlSchema("crPhieuXuat_C_GetAll.xsd");
            return ds;

        }

        #endregion
        #region PhieuKiemNghiem mt
        public override IDataReader GetAllPhieuKiemNghiem_MT(String _maBC, String _maCS, Boolean _qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spPHIEUKiemNghiem_MT_GETAll", _maBC, _maCS, _qadmin));
        }
        public override String InsertPhieuKiemNghiem_MT(String _maKN, String _MaMT, String _KQ1, String _KQ2, String _ghiChu, String _nguoiSD, string _maMay)
        {
            System.Data.SqlClient.SqlDataReader dr;

            dr = SqlHelper.ExecuteReader(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spPhieuKiemNghiem_MT_CREATE", _maKN, _MaMT, _KQ1, _KQ2, _ghiChu, _nguoiSD, _maMay);
            dr.Close();
            dr = null;
            return "";
        }
        public override void UpdatePhieuKiemNghiem_MT(String _maKN, Decimal _sTT, String _MaMT, String _KQ1, String _KQ2, String _ghiChu, Boolean _huy, String _nguoiSD, string _maMay)
        {
            SqlHelper.ExecuteNonQuery(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spPhieuKiemNghiem_MT_UPDATE", _maKN, _sTT, _MaMT, _KQ1, _KQ2, _ghiChu, _huy, _nguoiSD, _maMay);
        }
        public override void DeletePhieuKiemNghiem_MT(String _maKN, Decimal _sTT, String _nguoiSD, string _maMay)
        {
            SqlHelper.ExecuteNonQuery(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spPhieuKiemNghiem_MT_DELETED", _maKN, _sTT, _nguoiSD, _maMay);
        }
        public override DataSet crPhieuKiemNghiem_MT_GetAll(Boolean _qadmin, String _maKN, String _maCS)
        {
            DataSet ds = new DataSet("crPhieuXuat_C_GetAll");
            //string[] s ={ "crPhieuXuat_C_GetAll" };
            //SqlHelper.FillDataset( ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spPhieuKiemNghiem_C_GETALL", ds, s, _qadmin, _maPX);
            //ds.WriteXmlCBhema("crPhieuXuat_C_GetAll.xsd");

            System.Data.SqlClient.SqlCommand cmd = SqlHelper.CreateCommand(SQLConnectionDataNoiT, DatabaseOwner + ObjectQualifier + "spPhieuKiemNghiem_MT_GETALL");

            cmd.CommandTimeout = 18000;
            cmd.CommandType = System.Data.CommandType.StoredProcedure;
            cmd.Parameters.AddWithValue("maKN", _maKN);
            cmd.Parameters.AddWithValue("maCS", _maCS);
            cmd.Parameters.AddWithValue("QADMIN", _qadmin);

            System.Data.SqlClient.SqlDataAdapter sqlad = new System.Data.SqlClient.SqlDataAdapter(cmd);

            sqlad.Fill(ds);
            if (ds.Tables.Count > 0)
                ds.Tables[0].TableName = "crPhieuXuat_C_GetAll";
            sqlad.Dispose(); cmd.Dispose(); sqlad = null;
            cmd = null;
            //// if (SQLConnectionBDNoiT.State == System.Data.ConnectionState.Closed)
            ////SQLConnectionBDNoiT.Close(); SQLConnectionBDNoiT.Dispose();
            //if (_sqlConnection.State == System.Data.ConnectionState.Closed)
            //{
            //    //_sqlConnection.Close(); _sqlConnection.Dispose();
            //    //_sqlConnection = null;
            //}
            return ds;

        }

        #endregion

        #region DuocThongBao
        // public abstract String InsertThongBao(string _maNCC, String _soHD, String _soCT, SmartDate _ngayPNhap, String _maKho, decimal _chietKhau, Boolean _thanhToan, SmartDate _ngayTToan, SmartDate _ngayNhapTT, String _NVNhap, decimal _Tong, String _ghiChu, Boolean _huy, String _nguoiSD, string _maMay, String _nguoiGiao);
        public override String InsertThongBao(String _makho, String _thongbao, SmartDate _tuNgay, SmartDate _denngay, String _nguoiLap, string _conhan, string _hethan)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spThongBao_Create", _makho, _thongbao, _tuNgay.DBValue, _denngay.DBValue, _nguoiLap, _conhan, _hethan));
        }
        public override void UpdateThongBao(String _makho, String _STT, String _thongbao, SmartDate _tuNgay, SmartDate _denngay, String _nguoiSD, string _conhan, string _hethan)
        {
            SqlHelper.ExecuteNonQuery(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spThongBao_Update", _makho, _STT, _thongbao, _tuNgay.DBValue, _denngay.DBValue, _nguoiSD, _conhan, _hethan);
        }
        public override void DeleteThongBao(String _sTT, String _nguoiSD)
        {
            SqlHelper.ExecuteNonQuery(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spThongBao_Deleted", _sTT, _nguoiSD);
        }


        public override IDataReader GetThongBao_GetAll(Boolean _qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spThongBao_GetAll", _qadmin));
        }
        public override IDataReader GetThongBao_Get(String _STT)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spThongBao_Get", _STT));
        }

        #endregion


        #endregion

        #region HCPhieuCheBien
        public override String InsertHCPhieuCheBien(String _noiXuat, SmartDate _ngayXuat, SmartDate _ngayXuatTT, String _noiNhap, SmartDate _ngayNhapTT, String _soCT, String _nvXuat, String _nvNhan, String _mathuoc, Decimal _soLuong, Decimal _donGia, String _soLo, SmartDate _handung, Decimal _TIENPX, String _maPHC, Decimal _TIENHC, String _maPPL, Decimal _TIENPL, String _maPBB, Decimal _TIENBB, String _ghiChu, Decimal _TONGTIEN, Decimal _Cong, Decimal _Gas, Decimal _Mucdau, Decimal _Khoanthem, String _MaDT, Boolean _daPhat, Boolean _daDuyet, byte _loaiphieu, String _sNguoiSD, String _maMay)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spHCPhieuCheBien_CREATE", _noiXuat, _ngayXuat.DBValue, _ngayXuatTT.DBValue, _noiNhap, _ngayNhapTT.DBValue, _soCT, _nvXuat, _nvNhan, _mathuoc, _soLuong, _donGia, _soLo, _handung.DBValue, _TIENPX, _maPHC, _TIENHC, _maPPL, _TIENPL, _maPBB, _TIENBB, _ghiChu, _TONGTIEN, _Cong, _Gas, _Mucdau, _Khoanthem, _MaDT, _daPhat, _daDuyet, _loaiphieu, _sNguoiSD, _maMay));
        }
        public override void UpdateHCPhieuCheBien(String _MABC, String _noiXuat, SmartDate _ngayXuat, SmartDate _ngayXuatTT, String _noiNhap, SmartDate _ngayNhapTT, String _soCT, String _nvXuat, String _nvNhan, String _mathuoc, Decimal _soLuong, Decimal _donGia, decimal _giaban, String _soLo, SmartDate _handung, Decimal _TIENPX, String _maPHC, Decimal _TIENHC, String _maPPL, Decimal _TIENPL, String _maPBB, Decimal _TIENBB, String _ghiChu, String _sNguoiSD, Decimal _TONGTIEN, Decimal _Cong, Decimal _Gas, Decimal _Mucdau, Decimal _Khoanthem, String _MaDT, Boolean _daPhat, Boolean _daDuyet, byte _loaiphieu, Boolean _huy, String _maMay)
        {
            SqlHelper.ExecuteNonQuery(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spHCPhieuCheBien_UPDATE", _MABC, _noiXuat, _ngayXuat.DBValue, _ngayXuatTT.DBValue, _noiNhap, _ngayNhapTT.DBValue, _soCT, _nvXuat, _nvNhan, _mathuoc, _soLuong, _donGia, _giaban, _soLo, _handung.DBValue, _TIENPX, _maPHC, _TIENHC, _maPPL, _TIENPL, _maPBB, _TIENBB, _ghiChu, _sNguoiSD, _TONGTIEN, _Cong, _Gas, _Mucdau, _Khoanthem, _MaDT, _daPhat, _daDuyet, _loaiphieu, _huy, _maMay);
        }

        public override void DeleteHCPhieuCheBien(String _MABC, String _maMay, String _nguoiSD)
        {
            SqlHelper.ExecuteNonQuery(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spHCPhieuCheBien_DELETED", _MABC, _maMay, _nguoiSD);
        }
        public override IDataReader GetAllHCPhieuCheBien(Boolean _qadmin, String _maKho, String _MaDT, DateTime _tuNgay, DateTime _denNgay, String _dieuKienThem, byte _loaiphieu, Boolean _daphat, Boolean _daduyet)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spHCPhieuCheBien_GETALL", _qadmin, _maKho, _MaDT, _tuNgay, _denNgay, _dieuKienThem, _loaiphieu, _daphat, _daduyet));
        }
        public override IDataReader GetHCPhieuCheBien(String _maBC, Boolean _qadmin, byte _loaiphieu, Boolean _daphat)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spHCPhieuCheBien_GET", _maBC, _qadmin, _loaiphieu, _daphat));
        }
        #endregion
        #region HCPhieuCheBien chi tiet

        public override String InsertHCPhieuCheBien_C(String _maCB, String _maThuoc, Decimal _soLuong, Decimal _donGia, Decimal _soLuongYC, Decimal _giaBan, String _ghiChu, String _nguoiSD, string _maMay)
        {
            System.Data.SqlClient.SqlDataReader dr;

            dr = SqlHelper.ExecuteReader(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spHCPhieuCheBien_C_CREATE", _maCB, _maThuoc, _soLuong, _donGia, _soLuongYC, _giaBan, _ghiChu, _nguoiSD, _maMay);
            dr.Close();
            dr = null;
            return "";
        }
        public override void UpdateHCPhieuCheBien_C(String _maCB, Decimal _sTT, String _maThuoc, Decimal _soLuong, Decimal _donGia, Decimal _soLuongYC, Decimal _giaBan, Boolean _huy, String _ghiChu, String _nguoiSD, string _maMay)
        {
            SqlHelper.ExecuteNonQuery(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spHCPhieuCheBien_C_UPDATE", _maCB, _sTT, _maThuoc, _soLuong, _donGia, _soLuongYC, _giaBan, _huy, _ghiChu, _nguoiSD, _maMay);
        }
        public override void DeleteHCPhieuCheBien_C(String _maCB, Decimal _sTT, String _nguoiSD, string _maMay)
        {
            SqlHelper.ExecuteNonQuery(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spHCPhieuCheBien_C_DELETED", _maCB, _sTT, _nguoiSD, _maMay);
        }
        public override DataSet crHCPhieuCheBien_C_GetAll(Boolean _qadmin, String _maBC)
        {
            DataSet ds = new DataSet("crPhieuXuat_C_GetAll");
            //string[] s ={ "crPhieuXuat_C_GetAll" };
            //SqlHelper.FillDataset( ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spHCPhieuCheBien_C_GETALL", ds, s, _qadmin, _maPX);
            //ds.WriteXmlCBhema("crPhieuXuat_C_GetAll.xsd");

            System.Data.SqlClient.SqlCommand cmd = SqlHelper.CreateCommand(SQLConnectionDataNoiT, DatabaseOwner + ObjectQualifier + "spHCPhieuCheBien_C_GETALL");

            cmd.CommandTimeout = 18000;
            cmd.CommandType = System.Data.CommandType.StoredProcedure;
            cmd.Parameters.AddWithValue("QADMIN", _qadmin);
            cmd.Parameters.AddWithValue("maBC", _maBC);

            System.Data.SqlClient.SqlDataAdapter sqlad = new System.Data.SqlClient.SqlDataAdapter(cmd);

            sqlad.Fill(ds);
            if (ds.Tables.Count > 0)
                ds.Tables[0].TableName = "crPhieuXuat_C_GetAll";
            sqlad.Dispose(); cmd.Dispose(); sqlad = null;
            cmd = null;
            //// if (SQLConnectionBDNoiT.State == System.Data.ConnectionState.Closed)
            //     //SQLConnectionBDNoiT.Close(); SQLConnectionBDNoiT.Dispose();
            // //if (_sqlConnection.State == System.Data.ConnectionState.Closed)
            // {
            //     //_sqlConnection.Close(); _sqlConnection.Dispose();
            //     //_sqlConnection = null;
            // }
            return ds;

        }
        public override DataSet crHCPhieuCheBien_GetAll(Boolean _qadmin, String _maKho, String _MaDT, DateTime _tuNgay, DateTime _denNgay, String _dieuKienThem, byte _loaiphieu, Boolean _daphat, Boolean _daduyet)
        {
            DataSet ds = new DataSet("crPhieuXuat_C_GetAll");
            //string[] s ={ "crPhieuXuat_C_GetAll" };
            //SqlHelper.FillDataset( ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spHCPhieuCheBien_C_GETALL", ds, s, _qadmin, _maPX);
            //ds.WriteXmlCBhema("crPhieuXuat_C_GetAll.xsd");

            System.Data.SqlClient.SqlCommand cmd = SqlHelper.CreateCommand(SQLConnectionDataNoiT, DatabaseOwner + ObjectQualifier + "spHCPhieuCheBien_GETALL");
            cmd.CommandTimeout = 18000;
            cmd.CommandType = System.Data.CommandType.StoredProcedure;
            cmd.Parameters.AddWithValue("QADMIN", _qadmin);
            cmd.Parameters.AddWithValue("makho", _maKho);

            cmd.Parameters.AddWithValue("MaDT", _MaDT);
            cmd.Parameters.AddWithValue("tuNgay", _tuNgay);
            cmd.Parameters.AddWithValue("denNgay", _denNgay);
            cmd.Parameters.AddWithValue("DK", _dieuKienThem);
            cmd.Parameters.AddWithValue("loai", _loaiphieu);
            cmd.Parameters.AddWithValue("daphat", _daphat);
            cmd.Parameters.AddWithValue("daduyet", _daduyet);
            System.Data.SqlClient.SqlDataAdapter sqlad = new System.Data.SqlClient.SqlDataAdapter(cmd);

            sqlad.Fill(ds);
            if (ds.Tables.Count > 0)
                ds.Tables[0].TableName = "crPhieuXuat_C_GetAll";
            sqlad.Dispose(); cmd.Dispose(); sqlad = null;
            cmd = null;
            // if (SQLConnectionBDNoiT.State == System.Data.ConnectionState.Closed)
            //SQLConnectionBDNoiT.Close(); SQLConnectionBDNoiT.Dispose();
            //if (_sqlConnection.State == System.Data.ConnectionState.Closed)
            {
                //_sqlConnection.Close(); _sqlConnection.Dispose();
                //_sqlConnection = null;
            }
            return ds;

        }
        public override DataSet crHCPhieuCheBien_C_GetAll(Boolean _qadmin, String _maKho, String _MaDT, DateTime _tuNgay, DateTime _denNgay, String _dieuKienThem, byte _loaiphieu, Boolean _daphat, Boolean _daduyet)
        {
            DataSet ds = new DataSet("crPhieuXuat_C_GetAll");
            //string[] s ={ "crPhieuXuat_C_GetAll" };
            //SqlHelper.FillDataset( ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spHCPhieuCheBien_C_GETALL", ds, s, _qadmin, _maPX);
            //ds.WriteXmlCBhema("crPhieuXuat_C_GetAll.xsd");

            System.Data.SqlClient.SqlCommand cmd = SqlHelper.CreateCommand(SQLConnectionDataNoiT, DatabaseOwner + ObjectQualifier + "spHCPhieuCheBien_C_GETS");
            cmd.CommandTimeout = 18000;
            cmd.CommandType = System.Data.CommandType.StoredProcedure;
            cmd.Parameters.AddWithValue("QADMIN", _qadmin);
            cmd.Parameters.AddWithValue("makho", _maKho);
            cmd.Parameters.AddWithValue("MaDT", _MaDT);
            cmd.Parameters.AddWithValue("tuNgay", _tuNgay);
            cmd.Parameters.AddWithValue("denNgay", _denNgay);
            cmd.Parameters.AddWithValue("DK", _dieuKienThem);
            cmd.Parameters.AddWithValue("loai", _loaiphieu);
            cmd.Parameters.AddWithValue("daphat", _daphat);
            cmd.Parameters.AddWithValue("daduyet", _daduyet);
            System.Data.SqlClient.SqlDataAdapter sqlad = new System.Data.SqlClient.SqlDataAdapter(cmd);

            sqlad.Fill(ds);
            if (ds.Tables.Count > 0)
                ds.Tables[0].TableName = "crPhieuXuat_C_GetAll";
            if (ds.Tables.Count > 0)
                ds.Tables[1].TableName = "crPhieuXuat_GetAll";
            sqlad.Dispose(); cmd.Dispose(); sqlad = null;
            cmd = null;
            //// if (SQLConnectionBDNoiT.State == System.Data.ConnectionState.Closed)
            //     //SQLConnectionBDNoiT.Close(); SQLConnectionBDNoiT.Dispose();
            // //if (_sqlConnection.State == System.Data.ConnectionState.Closed)
            // {
            //     //_sqlConnection.Close(); _sqlConnection.Dispose();
            //     //_sqlConnection = null;
            // }
            return ds;

        }

        #endregion

        #region HCThongBao
        // public abstract String InsertHCThongBao(string _maNCC, String _soHD, String _soCT, SmartDate _ngayPNhap, String _maKho, decimal _chietKhau, Boolean _thanhToan, SmartDate _ngayTToan, SmartDate _ngayNhapTT, String _NVNhap, decimal _Tong, String _ghiChu, Boolean _huy, String _nguoiSD, string _maMay, String _nguoiGiao);
        public override String InsertHCThongBao(String _makho, String _HCThongBao, SmartDate _tuNgay, SmartDate _denngay, String _nguoiLap)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spHCThongBao_Create", _makho, _HCThongBao, _tuNgay.DBValue, _denngay.DBValue, _nguoiLap));
        }
        public override void UpdateHCThongBao(String _makho, String _STT, String _HCThongBao, SmartDate _tuNgay, SmartDate _denngay, String _nguoiSD)
        {
            SqlHelper.ExecuteNonQuery(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spHCThongBao_Update", _makho, _STT, _HCThongBao, _tuNgay.DBValue, _denngay.DBValue, _nguoiSD);
        }
        public override void DeleteHCThongBao(String _sTT, String _nguoiSD)
        {
            SqlHelper.ExecuteNonQuery(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spHCThongBao_Deleted", _sTT, _nguoiSD);
        }


        public override IDataReader GetHCThongBao_GetAll(Boolean _qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spHCThongBao_GetAll", _qadmin));
        }
        public override IDataReader GetHCThongBao_Get(String _STT)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spHCThongBao_Get", _STT));
        }

        #endregion
        #region VTThongBao
        // public abstract String InsertVTThongBao(string _maNCC, String _soHD, String _soCT, SmartDate _ngayPNhap, String _maKho, decimal _chietKhau, Boolean _thanhToan, SmartDate _ngayTToan, SmartDate _ngayNhapTT, String _NVNhap, decimal _Tong, String _ghiChu, Boolean _huy, String _nguoiSD, string _maMay, String _nguoiGiao);
        public override String InsertVTThongBao(String _makho, String _VTThongBao, SmartDate _tuNgay, SmartDate _denngay, String _nguoiLap)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spVTThongBao_Create", _makho, _VTThongBao, _tuNgay.DBValue, _denngay.DBValue, _nguoiLap));
        }
        public override void UpdateVTThongBao(String _makho, String _STT, String _VTThongBao, SmartDate _tuNgay, SmartDate _denngay, String _nguoiSD)
        {
            SqlHelper.ExecuteNonQuery(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spVTThongBao_Update", _makho, _STT, _VTThongBao, _tuNgay.DBValue, _denngay.DBValue, _nguoiSD);
        }
        public override void DeleteVTThongBao(String _sTT, String _nguoiSD)
        {
            SqlHelper.ExecuteNonQuery(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spVTThongBao_Deleted", _sTT, _nguoiSD);
        }


        public override IDataReader GetVTThongBao_GetAll(Boolean _qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spVTThongBao_GetAll", _qadmin));
        }
        public override IDataReader GetVTThongBao_Get(String _STT)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spVTThongBao_Get", _STT));
        }

        #endregion

        #region Nhap Tra


        public override String InsertNhapTra(String _noiNhap, SmartDate _ngayNhap, SmartDate _ngayNhapTT, String _noiXuat, Byte _loaiPhieu, String _soCT, String _nvXuat, String _nvNhan, String _ghiChu, String _nguoiLap, Boolean _bnTra, string _maMay, Byte _daPhat, Boolean _DADUYET)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spNhapTra_CREATE", _noiNhap, _ngayNhap.DBValue, _ngayNhapTT.DBValue, _noiXuat, _loaiPhieu, _soCT, _nvXuat, _nvNhan, _ghiChu, _nguoiLap, _bnTra, _maMay, _daPhat, _DADUYET));
        }
        public override String InsertNhapTra(String _noiNhap, SmartDate _ngayNhap, SmartDate _ngayNhapTT, String _noiXuat, Byte _loaiPhieu, String _soCT, String _nvXuat, String _nvNhan, String _ghiChu, String _nguoiLap, Boolean _bnTra, string _maMay, Byte _daPhat, Boolean _DADUYET, Boolean _Khongsua, String _MADT, Decimal _SLThang)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spNhapTraDT_CREATE1", _noiNhap, _ngayNhap.DBValue, _ngayNhapTT.DBValue, _noiXuat, _loaiPhieu, _soCT, _nvXuat, _nvNhan, _ghiChu, _nguoiLap, _bnTra, _maMay, _daPhat, _DADUYET, _Khongsua, _MADT, _SLThang));
        }
        public override void UpdateNhapTra(String _maPX, String _noiXuat, SmartDate _ngayNhap, SmartDate _ngayNhapTT, String _noiNhap, Byte _loaiPhieu, String _soCT, String _nvXuat, String _nvNhan, String _ghiChu, Boolean _huy, string _maMay, String _nguoiSD, Byte _daPhat, Boolean _bnTra, Boolean _DADUYET)
        {
            SqlHelper.ExecuteNonQuery(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spNhapTra_UPDATE", _maPX, _noiXuat, _ngayNhap.DBValue, _ngayNhapTT.DBValue, _noiNhap, _loaiPhieu, _soCT, _nvXuat, _nvNhan, _ghiChu, _huy, _maMay, _nguoiSD, _daPhat, _bnTra, _DADUYET);
        }
        public override void DeleteNhapTra(String _maPX, string _maMay, String _nguoiSD)
        {
            SqlHelper.ExecuteNonQuery(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spNhapTra_DELETED", _maPX, _maMay, _nguoiSD);
        }
        #endregion

        #region Nhap tra chi tiet
        //InsertNhapTra_C(String _MaPNT, String _maThuoc, Decimal _soLuong, SmartDate _hanSD,  Decimal _donGia,String _soLo,  Boolean Huy, String _ghiChu,String _maMay, String _nguoiSD);
        public override String InsertNhapTra_C(String _maPX, String _maThuoc, Decimal _soLuong, SmartDate _hanSD, Decimal _donGia, String _soLo, Boolean _Huy, String _ghiChu, string _maMay, String _nguoiSD, Decimal _soLuongYC, Decimal _giaban)
        {
            System.Data.SqlClient.SqlDataReader dr;
            dr = SqlHelper.ExecuteReader(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spNhapTra_C_CREATE1", _maPX, _maThuoc, _soLuong, _hanSD.DBValue, _donGia, _soLo, _Huy, _ghiChu, _maMay, _nguoiSD, _soLuongYC, _giaban);
            dr.Close();
            dr = null;
            return "";
        }
        public override void UpdateNhapTra_C(String _maPX, Decimal _sTT, String _maThuoc, Decimal _soLuong, SmartDate _hanSD, String _soLo, Decimal _donGia, Decimal _soLuongYC, Decimal _giaBan, Boolean _huy, String _ghiChu, String _nguoiSD, string _maMay)
        {

            SqlHelper.ExecuteNonQuery(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spNhapTra_C_UPDATE", _maPX, _sTT, _maThuoc, _soLuong, _hanSD.DBValue, _soLo, _donGia, _soLuongYC, _giaBan, _huy, _ghiChu, _nguoiSD, _maMay);
        }
        public override void DeleteNhapTra_C(String _maPX, Decimal _sTT, String _nguoiSD, string _maMay)
        {
            SqlHelper.ExecuteNonQuery(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spNhapTra_C_DELETED", _maPX, _sTT, _nguoiSD, _maMay);
        }

        #endregion

        #region Kiem Nhap
        public override String InsertKiemNhap(String _maPhieu, String _maNV, String _maCD, Byte _loai, String _ghichu, string _maMay, String _nguoiSD, Byte _vaiTro)
        {//_maPhieu, _maNV, _maCD, _loai,_huy, _ghichu, _maMay, _nguoiSD, _vaitro
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spKIEMNHAP_CREATE", _maPhieu, _maNV, _maCD, _loai, _ghichu, _maMay, _nguoiSD, _vaiTro));
        }
        public override void UpdateKiemNhap(String _maPhieu, Byte _sTT, String _maNV, String _maCD, Byte _loai, Boolean _huy, String _ghichu, string _maMay, String _nguoiSD, Byte _vaiTro)
        {
            SqlHelper.ExecuteNonQuery(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spKIEMNHAP_UPDATE", _maPhieu, _sTT, _maNV, _maCD, _loai, _huy, _ghichu, _maMay, _nguoiSD, _vaiTro);
        }
        public override void DeleteKiemNhap(String _maMay, String _nguoiSD, String _maPhieu, Byte _sTT)
        {
            SqlHelper.ExecuteNonQuery(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spKIEMNHAP_DELETED", _maMay, _nguoiSD, _maPhieu, _sTT);
        }


        #endregion

        #region Xuat Tra
        public override String InsertXuatTra(string _maNCC, string _soCT, SmartDate _ngayXT, string _makho, Boolean _thanhtoan, SmartDate _ngayTToan, SmartDate _ngayXuatTT, Decimal _tong, string _ghichu, string _maMay, string _nguoiLap, SmartDate _ngayLap, string _nVXuat, string _nVNhan, Decimal _vAT, string _sohdon, SmartDate _ngayhdon)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spXUATTRA_CREATE", _maNCC, _soCT, _ngayXT.DBValue, _makho, _thanhtoan, _ngayTToan.DBValue, _ngayXuatTT.DBValue, _tong, _ghichu, _maMay, _nguoiLap, _ngayLap.DBValue, _nVXuat, _nVNhan, _vAT, _sohdon, _ngayhdon.DBValue));
        }
        public override void UpdateXuatTra(String _maPXT, String _maNCC, String _soCT, SmartDate _ngayXT, String _makho, Boolean _thanhtoan, SmartDate _ngayTToan, SmartDate _ngayXuatTT, Decimal _tong, String _ghichu, Boolean _huy, String _nguoiSD, string _maMay, String _nVXuat, String _nVNhan, Decimal _vAT, string _sohdon, SmartDate _ngayhdon)
        {
            SqlHelper.ExecuteNonQuery(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spXUATTRA_UPDATE", _maPXT, _maNCC, _soCT, _ngayXT.DBValue, _makho, _thanhtoan, _ngayTToan.DBValue, _ngayXuatTT.DBValue, _tong, _ghichu, _huy, _nguoiSD, _maMay, _nVXuat, _nVNhan, _vAT, _sohdon, _ngayhdon.DBValue);
        }
        public override void DeleteXuatTra(String _maMay, String _nguoiSD, String _maPXT)
        {
            SqlHelper.ExecuteNonQuery(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spXUATTRA_DELETED", _maMay, _nguoiSD, _maPXT);
        }
        #endregion

        #region Xuat tra chi tiet
        public override String InsertXuatTra_C(String _mathuoc, Decimal _soluong, SmartDate _hanSD, Decimal _donGia, String _soLo, String _ghichu, String _nguoiSD, string _maMay, String _maPXT, Decimal _vAT)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spXUATTRA_C_CREATE", _mathuoc, _soluong, _hanSD.DBValue, _donGia, _soLo, _ghichu, _nguoiSD, _maMay, _maPXT, _vAT));
        }
        public override void UpdateXuatTra_C(Decimal _sTT, String _mathuoc, Decimal _soluong, SmartDate _hanSD, Decimal _donGia, String _soLo, Boolean _huy, String _ghichu, String _nguoiSD, string _maMay, String _maPXT, Decimal _vAT)
        {
            SqlHelper.ExecuteNonQuery(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spXUATTRA_C_UPDATE", _sTT, _mathuoc, _soluong, _hanSD.DBValue, _donGia, _soLo, _huy, _ghichu, _nguoiSD, _maMay, _maPXT, _vAT);
        }
        public override void DeleteXuatTra_C(String _maMay, String _nguoiSD, String _maPXT, Decimal _sTT)
        {
            SqlHelper.ExecuteNonQuery(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spXUATTRA_C_DELETED", _maMay, _nguoiSD, _maPXT, _sTT);
        }

        #endregion

        #region Ton dau Kho

        public override String InsertTonDau(SmartDate _ngayTon, String _makho, String _nguoiSD, string _maMay)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spTonDau_CREATE", _ngayTon.DBValue, _makho, _nguoiSD, _maMay));
        }
        public override void UpdateTonDau(SmartDate _ngayTon, String _makho, String _nguoiSD, string _maMay)
        {
            SqlHelper.ExecuteNonQuery(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spTonDau_UPDATE", _ngayTon.DBValue, _makho, _nguoiSD, _maMay);
        }

        #endregion

        #region Ton dau Khoa

        public override String InsertTonDauKhoa(SmartDate _ngayTon, String _makhoa, String _nguoiSD, string _maMay)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spTonDauKhoa_CREATE", _ngayTon.DBValue, _makhoa, _nguoiSD, _maMay));
        }
        public override void UpdateTonDauKhoa(SmartDate _ngayTon, String _makhoa, String _nguoiSD, string _maMay)
        {
            SqlHelper.ExecuteNonQuery(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spTonDauKhoa_UPDATE", _ngayTon.DBValue, _makhoa, _nguoiSD, _maMay);
        }

        #endregion

        #region Kiem Ke
        public override String InsertKiemKe(SmartDate _ngayKK, String _makho, String _nguoiKK, String _nguoiLap, String _ghiChu, Boolean _xuly, string _maMay)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spKiemKe_Create", _ngayKK.DBValue, _makho, _nguoiKK, _nguoiLap, _ghiChu, _xuly, _maMay));
        }
        public override void UpdateKiemKe(String _maKK, SmartDate _ngayKK, String _makho, String _nguoiKK, String _ghiChu, Boolean _xuly, string _maMay, String _nguoiSD, Boolean _huy)
        {
            SqlHelper.ExecuteNonQuery(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spKiemKe_Update", _maKK, _ngayKK.DBValue, _makho, _nguoiKK, _ghiChu, _xuly, _maMay, _nguoiSD, _huy);
        }
        public override void DeleteKiemKe(String _maMay, String _nguoiSD, String _maKK)
        {
            SqlHelper.ExecuteNonQuery(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spKIEMKE_DELETED", _maMay, _nguoiSD, _maKK);
        }
        public override String InsertKiemKe(SmartDate _ngayKK, String _makho, String _nguoiKK, String _nguoiLap, String _ghiChu, Boolean _xuly, string _maMay, string _MADT)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spKiemKeDT_Create", _ngayKK.DBValue, _makho, _nguoiKK, _nguoiLap, _ghiChu, _xuly, _maMay, _MADT));
        }
        public override void UpdateKiemKe(String _maKK, SmartDate _ngayKK, String _makho, String _nguoiKK, String _ghiChu, Boolean _xuly, string _maMay, String _nguoiSD, Boolean _huy, string _MADT)
        {
            SqlHelper.ExecuteNonQuery(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spKiemKeDT_Update", _maKK, _ngayKK.DBValue, _makho, _nguoiKK, _ghiChu, _xuly, _maMay, _nguoiSD, _huy, _MADT);
        }

        #endregion

        #region Kiem Ke chi tiet
        public override String InsertKiemKe_C(String _maKK, String _maThuoc, Decimal _soLuong, Decimal _dongia, Decimal _sLDC, String _ghiChu, Decimal _sLton, String _nguoiSD, string _maMay)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spKIEMKE_C_CREATE", _maKK, _maThuoc, _soLuong, _dongia, _sLDC, _ghiChu, _sLton, _nguoiSD, _maMay));
        }
        public override void UpdateKiemKe_C(String _maKK, Decimal _sTT, String _maThuoc, Decimal _soLuong, Decimal _dongia, Decimal _sLDC, String _ghiChu, Decimal _sLton, Boolean _huy, String _nguoiSD, string _maMay)
        {
            SqlHelper.ExecuteNonQuery(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spKIEMKE_C_UPDATE", _maKK, _sTT, _maThuoc, _soLuong, _dongia, _sLDC, _ghiChu, _sLton, _huy, _nguoiSD, _maMay);
        }
        public override void DeleteKiemKe_C(String _maMay, String _nguoiSD, String _maKK, Decimal _sTT)
        {
            SqlHelper.ExecuteNonQuery(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spKIEMKE_C_DELETED", _maMay, _nguoiSD, _maKK, _sTT);
        }

        #endregion

        #region Kiem Ke chi tiet Han dung
        public override String InsertKiemKe_HD(String _mAKK, String _maThuoc, SmartDate _hANDUNG, String _solo, Decimal _sOLUONG, Decimal _sLTon, Decimal _sLDC, String _ghichu, String _nguoiSD, string _maMay, Decimal _donGia)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spKIEMKE_HD_CREATE", _mAKK, _maThuoc, _hANDUNG.DBValue, _solo, _sOLUONG, _sLTon, _sLDC, _ghichu, _nguoiSD, _maMay, _donGia));
        }
        public override void UpdateKiemKe_HD(String _mAKK, Decimal _sTT, String _maThuoc, SmartDate _hANDUNG, String _solo, Decimal _sOLUONG, Decimal _sLTon, Decimal _sLDC, String _ghichu, Boolean _huy, String _nguoiSD, string _maMay, Decimal _donGia)
        {
            SqlHelper.ExecuteNonQuery(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spKIEMKE_HD_UPDATE", _mAKK, _sTT, _maThuoc, _hANDUNG.DBValue, _solo, _sOLUONG, _sLTon, _sLDC, _ghichu, _huy, _nguoiSD, _maMay, _donGia);
        }
        public override void DeleteKiemKe_HD(String _maMay, String _nguoiSD, String _maKK, Decimal _sTT)
        {
            SqlHelper.ExecuteNonQuery(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spKIEMKE_HD_DELETED", _maMay, _nguoiSD, _maKK, _sTT);
        }
        #endregion

        #region Phieu Doi Thuoc
        public override String InsertPhieuDoiThuoc(String _maNCC, String _soCT, SmartDate _ngayDThuoc, String _makho, String _ghichu, String _nguoiLap, string _maMay)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spPhieuDoiThuoc_CREATE", _maNCC, _soCT, _ngayDThuoc.DBValue, _makho, _ghichu, _nguoiLap, _maMay));
        }
        public override void UpdatePhieuDoiThuoc(String _maDThuoc, String _maNCC, String _soCT, SmartDate _ngayDThuoc, String _makho, String _ghichu, Boolean _huy, String _nguoiSD, string _maMay)
        {
            SqlHelper.ExecuteNonQuery(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spPhieuDoiThuoc_UPDATE", _maDThuoc, _maNCC, _soCT, _ngayDThuoc.DBValue, _makho, _ghichu, _huy, _nguoiSD, _maMay);
        }
        public override void DeletePhieuDoiThuoc(String _maMay, String _nguoiSD, String _maDThuoc)
        {
            SqlHelper.ExecuteNonQuery(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spPhieuDoiThuoc_DELETED", _maMay, _nguoiSD, _maDThuoc);
        }


        #endregion

        #region Phieu Doi Thuoc Chi tiet
        public override String InsertPhieuDoiThuoc_C(String _maDThuoc, String _mathuoc, Decimal _soluong, SmartDate _hanSD, SmartDate _hanSDCu, Decimal _donGia, String _soLo, String _soLoCu, String _ghichu, String _nguoiSD, string _maMay)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spPhieuDoiThuoc_C_CREATE", _maDThuoc, _mathuoc, _soluong, _hanSD.DBValue, _hanSDCu.DBValue, _donGia, _soLo, _soLoCu, _ghichu, _nguoiSD, _maMay));
        }
        public override void UpdatePhieuDoiThuoc_C(String _maDThuoc, Decimal _sTT, String _mathuoc, Decimal _soluong, SmartDate _hanSD, SmartDate _hanSDCu, Decimal _donGia, String _soLo, String _soLoCu, Boolean _huy, String _ghichu, String _nguoiSD, string _maMay)
        {
            SqlHelper.ExecuteNonQuery(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spPhieuDoiThuoc_C_UPDATE", _maDThuoc, _sTT, _mathuoc, _soluong, _hanSD.DBValue, _hanSDCu.DBValue, _donGia, _soLo, _soLoCu, _huy, _ghichu, _nguoiSD, _maMay);
        }
        public override void DeletePhieuDoiThuoc_C(String _maMay, String _nguoiSD, String _maDThuoc, Decimal _sTT)
        {
            SqlHelper.ExecuteNonQuery(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spPhieuDoiThuoc_C_DELETED", _maMay, _nguoiSD, _maDThuoc, _sTT);
        }
        #endregion

        #region Ton Khoa

        public override void InsertTonKhoa(String _makhoa, String _mathuoc, SmartDate _thang, Decimal _soDK, Decimal _sLN, Decimal _sLX, Decimal _sLNT, Decimal _sLXT, Decimal _sLDC, Decimal _tonCK, Decimal _giaNhap, String _nguoiSD, string _maMay)
        {
            //return System.Convert.ToString(SqlHelper.ExecuteScalar( ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spTonKhoa_CREATE", _makhoa, _mathuoc, _thang.DBValue, _soDK, _sLN, _sLX, _sLNT, _sLXT, _sLDC, _tonCK, _giaNhap, _nguoiSD, _maMay));
            System.Data.SqlClient.SqlDataReader dr;
            dr = SqlHelper.ExecuteReader(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spTonKhoa_CREATE", _makhoa, _mathuoc, _thang.DBValue, _soDK, _sLN, _sLX, _sLNT, _sLXT, _sLDC, _tonCK, _giaNhap, _nguoiSD, _maMay);
            dr.Close();

        }
        public override void UpdateTonKhoa(String _makhoa, String _mathuoc, SmartDate _thang, Decimal _soDK, Decimal _sLN, Decimal _sLX, Decimal _sLNT, Decimal _sLXT, Decimal _sLDC, Decimal _tonCK, Decimal _giaNhap, String _nguoiSD, string _maMay, Boolean _huy)
        {
            //SqlHelper.ExecuteNonQuery( ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spTonKhoa_UPDATE", _makhoa, _mathuoc, _thang.DBValue, _soDK, _sLN, _sLX, _sLNT, _sLXT, _sLDC, _tonCK, _giaNhap, _nguoiSD, _maMay);
            System.Data.SqlClient.SqlDataReader dr;
            dr = SqlHelper.ExecuteReader(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spTonKhoa_UPDATE", _makhoa, _mathuoc, _thang.DBValue, _soDK, _sLN, _sLX, _sLNT, _sLXT, _sLDC, _tonCK, _giaNhap, _nguoiSD, _maMay, _huy);
            dr.Close();
        }
        public override void DeleteTonKhoa(String _makhoa, String _mathuoc, SmartDate _thang, String _nguoiSD, string _maMay)
        {
            SqlHelper.ExecuteNonQuery(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spTonKhoa_Deleted", _makhoa, _mathuoc, _thang.DBValue, _nguoiSD, _maMay);
        }
        #endregion

        #region thong bao khoa

        public override void InsertThongBao_Khoa(String _makhoa, String _mathuoc, SmartDate _thang, string _noidung, string ghichu, String _nguoiSD, string _maMay)
        {
            //return System.Convert.ToString(SqlHelper.ExecuteScalar( ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spThongBao_Khoa_CREATE", _makhoa, _mathuoc, _thang.DBValue, _soDK, _sLN, _sLX, _sLNT, _sLXT, _sLDC, _tonCK, _giaNhap, _nguoiSD, _maMay));
            System.Data.SqlClient.SqlDataReader dr;
            dr = SqlHelper.ExecuteReader(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spThongBao_Khoa_CREATE", _makhoa, _mathuoc, _thang.DBValue,_noidung ,ghichu, _nguoiSD, _maMay);
            dr.Close();

        }
        public override void UpdateThongBao_Khoa(String _makhoa, decimal _stt, String _mathuoc, SmartDate _thang, string _noidung, string ghichu, String _nguoiSD, string _maMay, Boolean _huy)
        {
            //SqlHelper.ExecuteNonQuery( ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spThongBao_Khoa_UPDATE", _makhoa, _mathuoc, _thang.DBValue, _soDK, _sLN, _sLX, _sLNT, _sLXT, _sLDC, _tonCK, _giaNhap, _nguoiSD, _maMay);
            System.Data.SqlClient.SqlDataReader dr;
            dr = SqlHelper.ExecuteReader(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spThongBao_Khoa_UPDATE", _makhoa,_stt, _mathuoc, _thang.DBValue,_noidung ,ghichu , _nguoiSD, _maMay, _huy);
            dr.Close();
        }
        public override void DeleteThongBao_Khoa(String _makhoa, decimal _stt, String _nguoiSD, string _maMay)
        {
            SqlHelper.ExecuteNonQuery(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spThongBao_Khoa_Deleted", _makhoa,_stt, _nguoiSD, _maMay);
        }
        #endregion
        #region Ton Khoa BN

        public override void InsertTonKhoa_BN(String _makhoa, String _mathuoc, SmartDate _ngayyclinh, SmartDate _ngayphat, Decimal _tonCK, String _nguoiSD, string _maMay, String _mapx)
        {
            //return System.Convert.ToString(SqlHelper.ExecuteScalar( ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spTonKhoa_BN_CREATE", _makhoa, _mathuoc, _ngayyclinh.DBValue, _ngayphat.DBValue, _tonCK, _nguoiSD, _maMay));
            System.Data.SqlClient.SqlDataReader dr;
            dr = SqlHelper.ExecuteReader(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spTonKhoa_BN_CREATE", _makhoa, _mathuoc, _ngayyclinh.DBValue, _ngayphat.DBValue, _tonCK, _nguoiSD, _maMay, _mapx);
            dr.Close();
        }
        public override void UpdateTonKhoa_BN(String _makhoa, String _mathuoc, SmartDate _ngayyclinh, SmartDate _ngayphat, Decimal _tonCK, String _mapx, String _nguoiSD, string _maMay)
        {
            //SqlHelper.ExecuteNonQuery( ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spTonKhoa_BN_UPDATE", _makhoa, _mathuoc, _ngayyclinh.DBValue, _ngayphat.DBValue,  _tonCK, _mapx, _nguoiSD, _maMay);
            System.Data.SqlClient.SqlDataReader dr;
            dr = SqlHelper.ExecuteReader(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spTonKhoa_BN_UPDATE", _makhoa, _mathuoc, _ngayyclinh.DBValue, _ngayphat.DBValue, _tonCK, _mapx, _nguoiSD, _maMay);
            dr.Close();
        }
        #endregion
        #region HC Ton Khoa BN

        public override String InsertHCTonKhoa_BN(String _makhoa, String _maHC, SmartDate _ngayyclinh, SmartDate _ngayphat, Decimal _tonCK, String _nguoiSD, string _maMay)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spHCTonKhoa_BN_CREATE", _makhoa, _maHC, _ngayyclinh.DBValue, _ngayphat.DBValue, _tonCK, _nguoiSD, _maMay));
        }
        public override void UpdateHCTonKhoa_BN(String _makhoa, String _maHC, SmartDate _ngayyclinh, SmartDate _ngayphat, Decimal _tonCK, String _mapx, String _nguoiSD, string _maMay)
        {
            SqlHelper.ExecuteNonQuery(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spHCTonKhoa_BN_UPDATE", _makhoa, _maHC, _ngayyclinh.DBValue, _ngayphat.DBValue, _tonCK, _mapx, _nguoiSD, _maMay);
        }
        #endregion
        #region VT Ton Khoa BN

        public override String InsertVTTonKhoa_BN(String _makhoa, String _maVT, SmartDate _ngayyclinh, SmartDate _ngayphat, Decimal _tonCK, String _nguoiSD, string _maMay)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spVTTonKhoa_BN_CREATE", _makhoa, _maVT, _ngayyclinh.DBValue, _ngayphat.DBValue, _tonCK, _nguoiSD, _maMay));
        }
        public override void UpdateVTTonKhoa_BN(String _makhoa, String _maVT, SmartDate _ngayyclinh, SmartDate _ngayphat, Decimal _tonCK, String _mapx, String _nguoiSD, string _maMay)
        {
            SqlHelper.ExecuteNonQuery(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spVTTonKhoa_BN_UPDATE", _makhoa, _maVT, _ngayyclinh.DBValue, _ngayphat.DBValue, _tonCK, _mapx, _nguoiSD, _maMay);
        }
        #endregion

        #region Phieu Du tru Nhap
        public override String InsertPhieuDTNhap(String _soCT, SmartDate _ngayPhieu, String _makho, String _nguoiDuTru, Decimal _tong, String _ghichu, String _nguoiLap, string _maMay, string _maNCC)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spPhieuDTNhap_CREATE", _soCT, _ngayPhieu.DBValue, _makho, _nguoiDuTru, _tong, _ghichu, _nguoiLap, _maMay, _maNCC));
        }
        public override void UpdatePhieuDTNhap(String _maDuTru, String _soCT, SmartDate _ngayPhieu, String _makho, String _nguoiDuTru, Decimal _tong, String _ghichu, Boolean _huy, String _nguoiSD, string _maMay, string _maNCC)
        {
            SqlHelper.ExecuteNonQuery(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spPhieuDTNhap_update", _maDuTru, _soCT, _ngayPhieu.DBValue, _makho, _nguoiDuTru, _tong, _ghichu, _huy, _nguoiSD, _maMay, _maNCC);
        }
        public override void DeletePhieuDTNhap(String _maMay, String _nguoiSD, String _maDuTru)
        {
            SqlHelper.ExecuteNonQuery(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spPhieuDTNhap_DELETED", _maMay, _nguoiSD, _maDuTru);
        }

        #endregion

        #region Phieu Du tru Nhap chi tiet
        public override String InsertPhieuDTNhap_C(String _maDuTru, String _mathuoc, Decimal _soluong, Decimal _donGia, String _ghichu, String _nguoiSD, string _maMay)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spPhieuDTNhap_C_CREATE", _maDuTru, _mathuoc, _soluong, _donGia, _ghichu, _nguoiSD, _maMay));
        }
        public override void UpdatePhieuDTNhap_C(String _maDuTru, Decimal _sTT, String _mathuoc, Decimal _soluong, Decimal _donGia, Boolean _huy, String _ghichu, String _nguoiSD, string _maMay)
        {
            SqlHelper.ExecuteNonQuery(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spPhieuDTNhap_C_UPDATE", _maDuTru, _sTT, _mathuoc, _soluong, _donGia, _huy, _ghichu, _nguoiSD, _maMay);
        }
        public override void DeletePhieuDTNhap_C(String _maMay, String _nguoiSD, String _maDuTru, Decimal _sTT)
        {
            SqlHelper.ExecuteNonQuery(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spPhieuDTNhap_C_DELETED", _maMay, _nguoiSD, _maDuTru, _sTT);
        }
        #endregion
        public override void Khambenh_ThuocSD_DYC_UpdateDUYETDCSL(String Makhoa, String MaSoKham, int STT, int STTThuoc, Decimal SLMua, String NguoiSD)
        {
            System.Data.SqlClient.SqlDataReader dr;
            dr = SqlHelper.ExecuteReader(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spKHAMBENH_ThuocSD_DYC_UpdateDUYETDCSL", Makhoa, MaSoKham, STT, STTThuoc, SLMua, NguoiSD);
            dr.Close();
            dr = null;
        }
        public override void BENHAN_ThuocSD_DYC_UpdateDUYETDCSL(String MaBA, Int32 STTKHOA, int STT, int STTThuoc, Decimal SLMua, String NguoiSD)
        {
            System.Data.SqlClient.SqlDataReader dr;
            dr = SqlHelper.ExecuteReader(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spBENHAN_ThuocSD_DYC_UpdateDUYETDCSL", MaBA, STTKHOA, STT, STTThuoc, SLMua, NguoiSD);
            dr.Close();
            dr = null;
        }

        public override void Khambenh_ThuocSD_DP_UpdateDUYETDCSL(String Makhoa, String MaSoKham, int STT, int STTThuoc, Decimal SLMua, String NguoiSD)
        {
            System.Data.SqlClient.SqlDataReader dr;
            dr = SqlHelper.ExecuteReader(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spKHAMBENH_ThuocSD_DYC_UpdateDUYETDCSL", Makhoa, MaSoKham, STT, STTThuoc, SLMua, NguoiSD);
            dr.Close();
            dr = null;
        }
        public override void Khambenh_ThuocSD_DP_Update(String MaSoKham, int STT, Boolean Duyet, Boolean Phat, DateTime NgayP, String NguoiD, String NguoiP, DateTime NgayD, String MaMay, string makx, String MAPX, Decimal SLMua)
        {
            System.Data.SqlClient.SqlDataReader dr;
            dr = SqlHelper.ExecuteReader(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spKhamBenh_ThuocSD_Duyet_Update", MaSoKham, STT, Duyet, Phat, NgayP, NguoiD, NguoiP, NgayD, MaMay, makx, MAPX, SLMua);
            dr.Close();
            dr = null;

        }
        public override void Khambenh_ThuocSD_DP_Update(String MaSoKham, int STT, Boolean Duyet, Boolean Phat, DateTime NgayP, String NguoiD, String NguoiP, DateTime NgayD, String MaMay, string makx, String MAPX)
        {
            System.Data.SqlClient.SqlDataReader dr;
            dr = SqlHelper.ExecuteReader(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spKhamBenh_ThuocSD_DP_Update", MaSoKham, STT, Duyet, Phat, NgayP, NguoiD, NguoiP, NgayD, MaMay, makx, MAPX);
            dr.Close();
            dr = null;
        }

        public override DataSet BCDonThuocDY_DT(string _MAKHOA, DateTime _NGAYDK, string _DK, Boolean _qadmin)
        {
            DataSet ds = new DataSet("CRDonThuocDY_RPT");
            //string[] s = { "CRDonThuocDY_RPT" };                 
            //SqlHelper.FillDataset( ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spBenhan_ThuocSD_DY_GETSDT", ds, s, _MAKHOA, _NGAYDK, _DK, _qadmin);
            //// //// ds.WriteXmlSchema("CRPhieuLinh_DY.xsd");
            System.Data.SqlClient.SqlCommand cmd = SqlHelper.CreateCommand(SQLConnectionDataNoiT, DatabaseOwner + ObjectQualifier + "Benhan_ThuocSD_DY_PHIEULINH");

            cmd.CommandTimeout = 18000;
            cmd.CommandType = System.Data.CommandType.StoredProcedure;
            cmd.Parameters.AddWithValue("MAKHOA", _MAKHOA);
            cmd.Parameters.AddWithValue("NGAYDK", _NGAYDK);
            cmd.Parameters.AddWithValue("DK", _DK);
            cmd.Parameters.AddWithValue("QADMIN", _qadmin);
            System.Data.SqlClient.SqlDataAdapter sqlad = new System.Data.SqlClient.SqlDataAdapter(cmd);

            sqlad.Fill(ds);
            if (ds.Tables.Count > 0)
                ds.Tables[0].TableName = "CRDonThuocDY_RPT";
            sqlad.Dispose(); cmd.Dispose(); sqlad = null;
            cmd = null;
            //// if (SQLConnectionBDNoiT.State == System.Data.ConnectionState.Closed)
            //     //SQLConnectionBDNoiT.Close(); SQLConnectionBDNoiT.Dispose();
            // //if (_sqlConnection.State == System.Data.ConnectionState.Closed)
            // {
            //     //_sqlConnection.Close(); _sqlConnection.Dispose();
            //     //_sqlConnection = null;
            // }
            return ds;

        }

        public override DataSet CRDuocPhieuLinh_DT(DateTime _TUNGAYYC, DateTime _DENNGAYYC, Boolean _Duyet, Boolean _Phat, string _MaDT, string _MaKho, string _MAKHOA, Boolean _DADUNG, string _dk)
        {
            DataSet ds = new DataSet("CRPhieuLinh_RPTa");
            //string[] s = { "CRPhieuLinh_RPTa" };
            //SqlHelper.FillDataset(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "Benhan_ThuocSD_PHIEULINH", ds, s, _TUNGAYYC, _DENNGAYYC, _Duyet, _Phat, _MaDT, _MaKho, _MAKHOA, _DADUNG, _dk);
            //ds.WriteXmlSchema("CRPhieuLinh_RPTa.xsd");

            System.Data.SqlClient.SqlCommand cmd = SqlHelper.CreateCommand(SQLConnectionDataNoiT, DatabaseOwner + ObjectQualifier + "Benhan_ThuocSD_PHIEULINH");
            cmd.CommandTimeout = 18000;
            cmd.CommandType = System.Data.CommandType.StoredProcedure;
            cmd.Parameters.AddWithValue("TuNgay", _TUNGAYYC);
            cmd.Parameters.AddWithValue("DenNgay", _DENNGAYYC);
            cmd.Parameters.AddWithValue("Duyet", _Duyet);
            cmd.Parameters.AddWithValue("Phat", _Phat);
            cmd.Parameters.AddWithValue("MaDT", _MaDT);
            cmd.Parameters.AddWithValue("MaKho", _MaKho);
            cmd.Parameters.AddWithValue("MAKHOA", _MAKHOA);
            cmd.Parameters.AddWithValue("DADUNG", _DADUNG);
            cmd.Parameters.AddWithValue("dk", _dk);

            System.Data.SqlClient.SqlDataAdapter sqlad = new System.Data.SqlClient.SqlDataAdapter(cmd);

            sqlad.Fill(ds);
            if (ds.Tables.Count > 0)
                ds.Tables[0].TableName = "CRPhieuLinh_RPTa";
            sqlad.Dispose(); cmd.Dispose(); sqlad = null;
            cmd = null;
            //// if (SQLConnectionBDNoiT.State == System.Data.ConnectionState.Closed)
            //     //SQLConnectionBDNoiT.Close(); SQLConnectionBDNoiT.Dispose();
            // //if (_sqlConnection.State == System.Data.ConnectionState.Closed)
            // {
            //     //_sqlConnection.Close(); _sqlConnection.Dispose();
            //     //_sqlConnection = null;
            // }
            return ds;

        }
        public override void KhamBenh_ThuocSD_DY_DP_Update(String MaBA, int STT, Boolean Duyet, Boolean Phat, DateTime NgayP, String NguoiD, String NguoiP, DateTime NgayD, String MaMay, string makx, String MAPX)
        {
            SqlHelper.ExecuteReader(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spKhamBenh_ThuocSD_DY_DP_Update", MaBA, STT, Duyet, Phat, NgayP, NguoiD, NguoiP, NgayD, MaMay, makx, MAPX);
        }
        public override void BenhAn_ThuocSD_DY_DP_Update(String MaBA, int STT, int STTkhoa, Boolean Duyet, Boolean Phat, DateTime NgayP, String NguoiD, String NguoiP, DateTime NgayD, String MaMay, string makx, String MAPX)
        {
            SqlHelper.ExecuteReader(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spBenhAn_ThuocSD_DY_DP_Update", MaBA, STT, STTkhoa, Duyet, Phat, NgayP, NguoiD, NguoiP, NgayD, MaMay, makx, MAPX);
        }
        public override void BenhAn_Nhaptra_DP_Update(String MaBA, int STT, int STTkhoa, Boolean Duyet, String NguoiD, DateTime NgayD, string MAPNT)
        {
            System.Data.SqlClient.SqlDataReader dr;
            dr = SqlHelper.ExecuteReader(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spBenhAn_ThuocTra_DP_Update", MaBA, STT, STTkhoa, Duyet, NguoiD, NgayD, MAPNT);
            dr.Close();
            dr = null;
        }
        public override void BenhAn_ThuocSD_DP_Update(String MaBA, int STT, int STTkhoa, Boolean Duyet, Boolean Phat, DateTime NgayP, String NguoiD, String NguoiP, DateTime NgayD, String MaMay, string makx, String MAPX)
        {
            System.Data.SqlClient.SqlDataReader dr;
            dr = SqlHelper.ExecuteReader(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spBenhAn_ThuocSD_DP_Update", MaBA, STT, STTkhoa, Duyet, Phat, NgayP, NguoiD, NguoiP, NgayD, MaMay, makx, MAPX);
            dr.Close();
            dr = null;
        }
        public override void BenhAn_ThuocSD_DP_Update(String MaBA, int STT, int STTkhoa, Boolean Duyet, Boolean Phat, DateTime NgayP, String NguoiD, String NguoiP, DateTime NgayD, String MaMay, string makx, String MAPX, Decimal SLMua)
        {
            System.Data.SqlClient.SqlDataReader dr;
            dr = SqlHelper.ExecuteReader(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spBenhAn_ThuocSD_Duyet_Update", MaBA, STT, STTkhoa, Duyet, Phat, NgayP, NguoiD, NguoiP, NgayD, MaMay, makx, MAPX, SLMua);
            dr.Close();
            dr = null;
        }
        public override void SOCHANCONG_INSERT(DateTime _TUNGAYYC, DateTime _DENNGAYYC, String _makhoa, byte _loai, String _dK)
        {

            SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spNGOAITRU_ThongkeBN", _TUNGAYYC, _DENNGAYYC, _makhoa, _loai, _dK);

        }
        public override void Thuoc_TinhTon(DateTime ngayyclinh, String MaKho, String MADT)
        {

            //System.Data.SqlClient.SqlTransaction tran = ConnectionStringNoiT.BeginTransaction();


            //SqlHelper.ExecuteReader(tran, DatabaseOwner + ObjectQualifier + "sp_TinhTon", ngayyclinh, MaKho);
            //tran.Commit();  
            // SqlHelper.ExecuteReader(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "sp_TinhTon", ngayyclinh, MaKho, MADT);
            // , ngayyclinh.ToShortDateString() , MaKho
            System.Data.SqlClient.SqlCommand cmd = SqlHelper.CreateCommand(SQLConnectionBDNoiT, DatabaseOwner + ObjectQualifier + "sp_TinhTonDT");
            cmd.CommandType = System.Data.CommandType.StoredProcedure;


            cmd.Parameters.AddWithValue("thang", ngayyclinh);
            cmd.Parameters.AddWithValue("makho", MaKho);
            cmd.Parameters.AddWithValue("maDT", MADT);


            cmd.CommandTimeout = 18000;
            cmd.ExecuteNonQuery();
            cmd.Dispose();
            cmd = null;
            //// if (SQLConnectionBDNoiT.State == System.Data.ConnectionState.Closed)
            //     //SQLConnectionBDNoiT.Close(); SQLConnectionBDNoiT.Dispose();
            // //if (_sqlConnection.State == System.Data.ConnectionState.Closed)
            // {
            //     //_sqlConnection.Close(); _sqlConnection.Dispose();
            //     //_sqlConnection = null;
            // }
        }

        public override void Thuoc_TinhTon(DateTime ngayyclinh, String MaKho)
        {

            //System.Data.SqlClient.SqlTransaction tran = SQLConnectionBDNoiT.BeginTransaction();


            //SqlHelper.ExecuteReader(tran, DatabaseOwner + ObjectQualifier + "sp_TinhTon", ngayyclinh, MaKho);
            //tran.Commit();  
            // SqlHelper .ExecuteReader( ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "sp_TinhTon", ngayyclinh, MaKho );
            // , ngayyclinh.ToShortDateString() , MaKho
            System.Data.SqlClient.SqlCommand cmd = SqlHelper.CreateCommand(SQLConnectionBDNoiT, DatabaseOwner + ObjectQualifier + "sp_TinhTon");
            cmd.CommandType = System.Data.CommandType.StoredProcedure;


            cmd.Parameters.AddWithValue("thang", ngayyclinh);

            cmd.Parameters.AddWithValue("makho", MaKho);



            cmd.CommandTimeout = 18000;
            cmd.ExecuteNonQuery();
            cmd.Dispose();
            cmd = null;
            ////// if (SQLConnectionBDNoiT.State == System.Data.ConnectionState.Closed)
            ////     //SQLConnectionBDNoiT.Close(); SQLConnectionBDNoiT.Dispose();
            // if (_sqlConnection.State == System.Data.ConnectionState.Open)
            // {
            //     //_sqlConnection.Close(); _sqlConnection.Dispose();
            //     //_sqlConnection = null;
            //     CloseDB();
            // }
        }
		public override void TBVT_TinhTon(DateTime ngayyclinh, String MaKho)
		{
			//  SqlHelper.ExecuteReader( ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "sp_VTTinhTon", ngayyclinh, MaKho);
			System.Data.SqlClient.SqlCommand cmd = SqlHelper.CreateCommand(SQLConnectionBD, DatabaseOwner + ObjectQualifier + "SP_TBVTTINHTON");
			cmd.CommandType = System.Data.CommandType.StoredProcedure;


			cmd.Parameters.AddWithValue("thang", ngayyclinh);

			cmd.Parameters.AddWithValue("makho", MaKho);
			cmd.CommandTimeout = 18000;
			cmd.ExecuteNonQuery();
			cmd.Dispose();
			cmd = null;
			
		}
        public override void VT_TinhTon(DateTime ngayyclinh, String MaKho)
        {
            //  SqlHelper.ExecuteReader( ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "sp_VTTinhTon", ngayyclinh, MaKho);
            System.Data.SqlClient.SqlCommand cmd = SqlHelper.CreateCommand(SQLConnectionBDNoiT, DatabaseOwner + ObjectQualifier + "sp_VTTinhTon");
            cmd.CommandType = System.Data.CommandType.StoredProcedure;


            cmd.Parameters.AddWithValue("thang", ngayyclinh);

            cmd.Parameters.AddWithValue("makho", MaKho);
            cmd.CommandTimeout = 18000;
            cmd.ExecuteNonQuery();
            cmd.Dispose();
            cmd = null;
           
        }
        public override void NK_TinhTon(DateTime ngayyclinh, String MaKho)
        {
            // SqlHelper.ExecuteReader( ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "sp_VTTinhTon", ngayyclinh, MaKho);
            System.Data.SqlClient.SqlCommand cmd = SqlHelper.CreateCommand(SQLConnectionBD, DatabaseOwner + ObjectQualifier + "sp_NKTinhTon");
            cmd.CommandType = System.Data.CommandType.StoredProcedure;


            cmd.Parameters.AddWithValue("thang", ngayyclinh);

            cmd.Parameters.AddWithValue("makho", MaKho);
            cmd.CommandTimeout = 18000;
            cmd.ExecuteNonQuery();
            cmd.Dispose();
            cmd = null;
           
        }
        public override void Mau_TinhTon(DateTime ngayyclinh, String MaKho)
        {
            // SqlHelper.ExecuteReader( ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "sp_MauTinhTon", ngayyclinh, MaKho);
            System.Data.SqlClient.SqlCommand cmd = SqlHelper.CreateCommand(SQLConnectionBDNoiT, DatabaseOwner + ObjectQualifier + "sp_MauTinhTon");
            cmd.CommandType = System.Data.CommandType.StoredProcedure;


            cmd.Parameters.AddWithValue("thang", ngayyclinh);

            cmd.Parameters.AddWithValue("makho", MaKho);
            cmd.CommandTimeout = 18000;
            cmd.ExecuteNonQuery();
            cmd.Dispose();
            cmd = null;
            //// if (SQLConnectionBDNoiT.State == System.Data.ConnectionState.Closed)
            //     //SQLConnectionBDNoiT.Close(); SQLConnectionBDNoiT.Dispose();
            // if (_sqlConnection.State == System.Data.ConnectionState.Open)
            // {
            //     //_sqlConnection.Close(); _sqlConnection.Dispose();
            //     //_sqlConnection = null;
            //     CloseDB();
            // }
        }
        public override void HC_TinhTon(DateTime ngayyclinh, String MaKho)
        {
            //SqlHelper.ExecuteReader( ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "sp_HCTinhTon", ngayyclinh, MaKho);
            System.Data.SqlClient.SqlCommand cmd = SqlHelper.CreateCommand(SQLConnectionBDNoiT, DatabaseOwner + ObjectQualifier + "sp_HCTinhTon");
            cmd.CommandType = System.Data.CommandType.StoredProcedure;


            cmd.Parameters.AddWithValue("thang", ngayyclinh);

            cmd.Parameters.AddWithValue("makho", MaKho);

            cmd.CommandTimeout = 18000;
            cmd.ExecuteNonQuery();
            cmd.Dispose();
            cmd = null;
            //// if (SQLConnectionBDNoiT.State == System.Data.ConnectionState.Closed)
            //     //SQLConnectionBDNoiT.Close(); SQLConnectionBDNoiT.Dispose();
            // if (_sqlConnection.State == System.Data.ConnectionState.Open)
            // {
            //     //_sqlConnection.Close(); _sqlConnection.Dispose();
            //     //_sqlConnection = null;
            //     CloseDB();
            // }
        }
        public override void TBYT_TinhTon(DateTime ngayyclinh, String MaKho)
        {
            // SqlHelper.ExecuteReader( ConnectionString, DatabaseOwner + ObjectQualifier + "sp_MauTinhTon", ngayyclinh, MaKho);
            System.Data.SqlClient.SqlCommand cmd = SqlHelper.CreateCommand(SQLConnectionBD, DatabaseOwner + ObjectQualifier + "SP_TBTINHTON");
            cmd.CommandType = System.Data.CommandType.StoredProcedure;


            cmd.Parameters.AddWithValue("thang", ngayyclinh);

            cmd.Parameters.AddWithValue("makho", MaKho);
            cmd.CommandTimeout = 18000;
            cmd.ExecuteNonQuery();
            cmd.Dispose();
            cmd = null;
            //// if (SQLConnectionBD.State == System.Data.ConnectionState.Closed)
            //     //SQLConnectionBD.Close(); SQLConnectionBD.Dispose();
            // if (_sqlConnection.State == System.Data.ConnectionState.Open)
            // {
            //     //_sqlConnection.Close(); _sqlConnection.Dispose();
            //     //_sqlConnection = null;
            //     CloseDB();
            // }
        }
        public override void TBYT_TinhTonKhoa(DateTime ngayyclinh, String MaKho)
        {
            // SqlHelper.ExecuteReader( ConnectionString, DatabaseOwner + ObjectQualifier + "sp_MauTinhTon", ngayyclinh, MaKho);
            System.Data.SqlClient.SqlCommand cmd = SqlHelper.CreateCommand(SQLConnectionBD, DatabaseOwner + ObjectQualifier + "SP_TBTINHTONKHOA");
            cmd.CommandType = System.Data.CommandType.StoredProcedure;


            cmd.Parameters.AddWithValue("thang", ngayyclinh);

            cmd.Parameters.AddWithValue("MaKho", MaKho);
            cmd.CommandTimeout = 18000;
            cmd.ExecuteNonQuery();
            cmd.Dispose();
            cmd = null;
            //// if (SQLConnectionBD.State == System.Data.ConnectionState.Closed)
            //     //SQLConnectionBD.Close(); SQLConnectionBD.Dispose();
            // if (_sqlConnection.State == System.Data.ConnectionState.Open)
            // {
            //     //_sqlConnection.Close(); _sqlConnection.Dispose();
            //     //_sqlConnection = null;
            //     CloseDB();
            // }
        }
        #endregion

        #region HoaDon
        #region Get List

        public override IDataReader GetHDPhieuNhap_GetAll(Boolean _qadmin, String _maKho, String _mNCC, DateTime _tuNgay, DateTime _denNgay, String _dKien)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spHDPhieuNhap_GETALL", _qadmin, _maKho, _mNCC, _tuNgay, _denNgay, _dKien));
        }
        public override IDataReader GetHDPhieuNhap_GetAll(Boolean _qadmin, String _maKho, String _mNCC, DateTime _tuNgay, DateTime _denNgay, String _dKien, String _MADT)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spHDPhieuNhapDT_GETALL", _qadmin, _maKho, _mNCC, _tuNgay, _denNgay, _dKien, _MADT));
        }
        public override IDataReader GetAllHDPhieuNhap_Get(String _maHDPhieuNhap, Boolean _qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spHDPhieuNhap_GET", _maHDPhieuNhap, _qadmin));
        }
        public override IDataReader GetHDPhieuNhap_C_GetAll(Boolean _qadmin, String _maPhieu)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spHDPhieuNhap_C_GETALL", _qadmin, _maPhieu));
        }
        public override IDataReader GetHDPhieuNhap_C_Get(String _maPN, decimal STT)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spHDPhieuNhap_C_GET", _maPN, STT));
        }
        public override IDataReader GetHDPhieuXuat(String _mapx, Boolean _qadmin, byte _loaiphieu, Boolean _daphat)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spHDPhieuXuat_Get", _mapx, _qadmin, _loaiphieu, _daphat));
        }
     
        public override IDataReader GetAllHDPhieuXuat(Boolean _qadmin, String _maKho, Byte _loaiPhieu, Boolean _daPhat, DateTime _tuNgay, DateTime _denNgay, String _dieuKienThem, Boolean _daduyet)
        {
            // return ((IDataReader)SqlHelper.ExecuteReader( ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spHDPhieuXuat_GetAll", _qadmin, _maKho, _loaiPhieu, _daPhat, _tuNgay, _denNgay, _dieuKienThem,_daduyet ));
            System.Data.SqlClient.SqlCommand cmd = SqlHelper.CreateCommand(SQLConnectionBDNoiT, DatabaseOwner + ObjectQualifier + "spHDPhieuXuat_GetAll");

            cmd.CommandTimeout = 18000;
            cmd.CommandType = System.Data.CommandType.StoredProcedure;
            cmd.Parameters.AddWithValue("qadmin ", _qadmin);
            cmd.Parameters.AddWithValue("maKho ", _maKho);
            cmd.Parameters.AddWithValue("loai", _loaiPhieu);
            cmd.Parameters.AddWithValue("daPhat", _daPhat);
            cmd.Parameters.AddWithValue("TuNgay", _tuNgay);
            cmd.Parameters.AddWithValue("denNgay", _denNgay);
            cmd.Parameters.AddWithValue("DK", _dieuKienThem);
            cmd.Parameters.AddWithValue("daduyet", _daduyet);
            IDataReader dt;
            dt = (IDataReader)cmd.ExecuteReader(CommandBehavior.CloseConnection); ;
            cmd.Dispose();
            cmd = null;
            //// if (SQLConnectionBDNoiT.State == System.Data.ConnectionState.Closed)
            //     //SQLConnectionBDNoiT.Close(); SQLConnectionBDNoiT.Dispose();
            // //if (_sqlConnection.State == System.Data.ConnectionState.Closed)
            // {
            //     //_sqlConnection.Close(); _sqlConnection.Dispose();
            //     //_sqlConnection = null;
            // }
            return dt;
        }
        public override IDataReader GetAllHDPhieuXuat(Boolean _qadmin, String _maKho, String _MaDT, Byte _loaiPhieu, Boolean _daPhat, DateTime _tuNgay, DateTime _denNgay, String _dieuKienThem, Boolean _daduyet)
        {
            // return ((IDataReader)SqlHelper.ExecuteReader( ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spHDPhieuXuat_GetAll", _qadmin, _maKho, _loaiPhieu, _daPhat, _tuNgay, _denNgay, _dieuKienThem,_daduyet ));
            System.Data.SqlClient.SqlCommand cmd = SqlHelper.CreateCommand(SQLConnectionBDNoiT, DatabaseOwner + ObjectQualifier + "spHDPhieuXuatDT_GetAll");

            cmd.CommandTimeout = 18000;
            cmd.CommandType = System.Data.CommandType.StoredProcedure;
            cmd.Parameters.AddWithValue("qadmin ", _qadmin);
            cmd.Parameters.AddWithValue("maKho ", _maKho);
            cmd.Parameters.AddWithValue("maDT ", _MaDT);
            cmd.Parameters.AddWithValue("loai", _loaiPhieu);
            cmd.Parameters.AddWithValue("daPhat", _daPhat);
            cmd.Parameters.AddWithValue("TuNgay", _tuNgay);
            cmd.Parameters.AddWithValue("denNgay", _denNgay);
            cmd.Parameters.AddWithValue("DK", _dieuKienThem);
            cmd.Parameters.AddWithValue("daduyet", _daduyet);
            IDataReader dt;
            dt = (IDataReader)cmd.ExecuteReader(CommandBehavior.CloseConnection); ;
            cmd.Dispose();
            cmd = null;
            //// if (SQLConnectionBDNoiT.State == System.Data.ConnectionState.Closed)
            //     //SQLConnectionBDNoiT.Close(); SQLConnectionBDNoiT.Dispose();
            // //if (_sqlConnection.State == System.Data.ConnectionState.Closed)
            // {
            //     //_sqlConnection.Close(); _sqlConnection.Dispose();
            //     //_sqlConnection = null;
            // }
            return dt;
        }

        public override IDataReader GetHDPhieuXuat_C(String _mapx, Byte _orderNumber)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spHDPhieuXuat_C_Get", _mapx, _orderNumber));
        }

        public override IDataReader GetHDNhapTra(String _mapx, Boolean _qadmin, byte _loaiphieu, byte _daphat)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spHDNhapTra_Get", _mapx, _qadmin, _loaiphieu, _daphat));
        }
        public override IDataReader GetAllHDNhapTra(Boolean _qadmin, String _maKho, Byte _loaiPhieu, Byte _daPhat, DateTime _tuNgay, DateTime _denNgay, String _dieuKienThem)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spHDNhapTra_GetAll", _qadmin, _maKho, _loaiPhieu, _daPhat, _tuNgay, _denNgay, _dieuKienThem));
        }
        public override IDataReader GetAllHDNhapTra(Boolean _qadmin, String _maKho, Byte _loaiPhieu, Byte _daPhat, DateTime _tuNgay, DateTime _denNgay, String _dieuKienThem, String _MADT)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spHDNhapTraDT_GetAll", _qadmin, _maKho, _loaiPhieu, _daPhat, _tuNgay, _denNgay, _dieuKienThem, _MADT));
        }
        public override IDataReader GetHDNhapTra_C(String _mapx, Byte _orderNumber)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spHDNhapTra_Get", _mapx, _orderNumber));
        }
       
        public override IDataReader GetAllHDKiemNhap(String _maPhieu, Boolean _qadmin, Byte loai)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spHDKiemNhap_GETALL", _maPhieu, _qadmin, loai));
        }
       

        public override IDataReader GetHDKiemKe(String _maKK, bool qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spHDKiemKe_GET", _maKK, qadmin));
        }
        public override IDataReader GetAllHDKiemKe(String makho, DateTime tungay, DateTime denngay, String dieukienthem, bool qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spHDKiemKe_GETALL", makho, tungay, denngay, dieukienthem, qadmin));
        }
        
        public override IDataReader GetHDKiemKe_HD(String _mAKK, Decimal _sTT)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spHDKiemKe_HD_GET", _mAKK, _sTT));
        }



        public override IDataReader GetHoaDon_TonKho(String maKho, DateTime ngayyclinh, String maThuoc)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spHoaDon_TON_GETKHO", maKho, ngayyclinh, maThuoc));
        }
        public override IDataReader GetAllHoaDon_TonKho(String maKho, DateTime Thang, String DK)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spHoaDon_TON_GETSKHO", maKho, Thang, DK));
        }

  
        #endregion

        #region Find List
        //HDPhieuNhap
        public override IDataReader FindHDPhieuNhap(string _DK, Boolean _qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spHDPhieuNhap_Finds", _DK, _qadmin));
        }
       
        #endregion

        #region HDPhieuNhap
        // public abstract String InsertHDPhieuNhap(string _maNCC, String _soHD, String _soCT, SmartDate _ngayPNhap, String _maKho, decimal _chietKhau, Boolean _thanhToan, SmartDate _ngayTToan, SmartDate _ngayNhapTT, String _NVNhap, decimal _Tong, String _ghiChu, Boolean _huy, String _nguoiSD, string _maMay, String _nguoiGiao);
        public override String InsertHDPhieuNhap(string _maNCC, String _soHD, String _soCT, SmartDate _ngayPNhap, String _maKho, decimal _chietKhau, Boolean _thanhToan, SmartDate _ngayTToan, SmartDate _ngayNhapTT, String _NVNhap, decimal _Tong, String _ghiChu, Boolean _huy, String _nguoiSD, string _maMay, String _nguoiGiao, String _manguon, String _mahinhthuc, string _sohdon, SmartDate _ngayhdon)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spHDPhieuNhap_CREATE", _maNCC, _soHD, _soCT, _ngayPNhap.DBValue, _maKho, _chietKhau, _thanhToan, _ngayTToan.DBValue, _ngayNhapTT.DBValue, _NVNhap, _Tong, _ghiChu, _huy, _nguoiSD, _maMay, _nguoiGiao, _manguon, _mahinhthuc, _sohdon, _ngayhdon.DBValue));
        }
      
        public override void UpdateHDPhieuNhap(String _maPN, string _maNCC, String _soHD, String _soCT, SmartDate _ngayPNhap, String _maKho, decimal _chietKhau, Boolean _thanhToan, SmartDate _ngayTToan, SmartDate _ngayNhapTT, String _NVNhap, decimal _Tong, String _ghiChu, Boolean _huy, String _nguoiSD, SmartDate _ngaySD1, String _nguoiSD1, String _nguoiGiao, String _manguon, String _mahinhthuc, string _sohdon, SmartDate _ngayhdon)
        {
            System.Data.SqlClient.SqlDataReader dr;
            dr = SqlHelper.ExecuteReader(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spHDPhieuNhap_UPDATE", _maPN, _maNCC, _soHD, _soCT, _ngayPNhap.DBValue, _maKho, _chietKhau, _thanhToan, _ngayTToan.DBValue, _ngayNhapTT.DBValue, _NVNhap, _Tong, _ghiChu, _huy, _nguoiSD, _ngaySD1.DBValue, _nguoiSD1, _nguoiGiao, _manguon, _mahinhthuc, _sohdon, _ngayhdon.DBValue);
            dr.Close();
            dr = null;
        }
       
        public override void DeleteHDPhieuNhap(String _maPN, SmartDate _ngaySD, string _maMay, String _nguoiSD)
        {
            SqlHelper.ExecuteNonQuery(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spHDPhieuNhap_DELETED", _maPN, _ngaySD.DBValue, _maMay, _nguoiSD);
        }
        #endregion

        #region HDPhieuNhap chi tiet

        public override String InsertHDPhieuNhap_C(String _maPN, String _kyhieumau,string _kyhieu, string _tuso,string _denso, decimal _soluong, decimal _donGia, decimal _chietKhau,  Boolean _huy, String _ghiChu, string _maMay, String _nguoiSD)
        {

            System.Data.SqlClient.SqlDataReader dr;
            dr = SqlHelper.ExecuteReader(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spHDPhieuNhap_C_CREATE", _maPN, _kyhieumau,_kyhieu,  _tuso,_denso ,_soluong, _donGia, _chietKhau,  _huy, _ghiChu, _maMay, _nguoiSD);
            dr.Close();
            dr = null;
            return "";
        }
        public override void UpdateHDPhieuNhap_C(String _maPN, decimal _sTT, String _kyhieumau, string _kyhieu, string _tuso, string _denso,  decimal _soluong, decimal _donGia, decimal _chietKhau, Boolean _huy, String _ghiChu, SmartDate _ngaySD, string _maMay, String _nguoiSD)
        {

            SqlHelper.ExecuteNonQuery(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spHDPhieuNhap_C_UPDATE", _maPN, _sTT, _kyhieumau,_kyhieu,  _tuso,_denso ,_soluong, _donGia, _chietKhau, _huy, _ghiChu, _ngaySD.DBValue, _maMay, _nguoiSD);
        }
       
        public override void DeleteHDPhieuNhap_C(String _maPN, decimal _sTT, String _nguoiSD, String _maMay)
        {
            SqlHelper.ExecuteNonQuery(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spHDPhieuNhap_C_DELETED", _maPN, _sTT, _nguoiSD, _maMay);
        }
        #endregion

        #region HDPhieuXuat
        public override String InsertHDPhieuXuat(String _noiXuat, SmartDate _ngayXuat, SmartDate _ngayXuatTT, String _noiNhap, Byte _loaiPhieu, String _soCT, String _nvXuat, String _nvNhan, String _ghiChu, Boolean _huy, String _nguoiLap, Boolean _khoaYC, string _maMay, Boolean _daPhat, Boolean _daDuyet, String _doiTuong)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spHDPhieuXuat_CREATE", _noiXuat, _ngayXuat.DBValue, _ngayXuatTT.DBValue, _noiNhap, _loaiPhieu, _soCT, _nvXuat, _nvNhan, _ghiChu, _huy, _nguoiLap, _khoaYC, _maMay, _daPhat, _daDuyet, _doiTuong));
        }
        

        public override void UpdateHDPhieuXuat(String _maPX, String _noiXuat, SmartDate _ngayXuat, SmartDate _ngayXuatTT, String _noiNhap, Byte _loaiPhieu, String _soCT, String _nvXuat, String _nvNhan, String _ghiChu, Boolean _huy, string _maMay, String _nguoiSD, Boolean _daPhat, Boolean _daDuyet, String _doiTuong)
        {
            SqlHelper.ExecuteNonQuery(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spHDPhieuXuat_UPDATE", _maPX, _noiXuat, _ngayXuat.DBValue, _ngayXuatTT.DBValue, _noiNhap, _loaiPhieu, _soCT, _nvXuat, _nvNhan, _ghiChu, _huy, _maMay, _nguoiSD, _daPhat, _daDuyet, _doiTuong);
        }
       
        public override void DeleteHDPhieuXuat(String _maPX, string _maMay, String _nguoiSD)
        {
            SqlHelper.ExecuteNonQuery(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spHDPhieuXuat_DELETED", _maPX, _maMay, _nguoiSD);
        }

        #region Phieu Xuat chi tiet

        public override String InsertHDPhieuXuat_C(String _maPX, String _kyhieumau,string _kyhieu, Decimal _soLuong, string _tuso, String _denso, Decimal _donGia, Decimal _soLuongYC, Decimal _giaBan, String _ghiChu, String _nguoiSD, string _maMay)
        {
            System.Data.SqlClient.SqlDataReader dr;
            dr = SqlHelper.ExecuteReader(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spHDPhieuXuat_C_CREATE", _maPX, _kyhieumau,_kyhieu, _soLuong, _tuso,  _denso, _donGia, _soLuongYC, _giaBan, _ghiChu, _nguoiSD, _maMay);
            dr.Close();
            dr = null;
            return "";
        }
        public override void UpdateHDPhieuXuat_C(String _maPX, Decimal _sTT, String _kyhieumau, string _kyhieu, Decimal _soLuong, string _tuso, String _denso, Decimal _donGia, Decimal _soLuongYC, Decimal _giaBan, Boolean _huy, String _ghiChu, String _nguoiSD, string _maMay)
        {
            SqlHelper.ExecuteNonQuery(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spHDPhieuXuat_C_UPDATE", _maPX, _sTT, _kyhieumau,_kyhieu, _soLuong, _tuso,  _denso, _donGia, _soLuongYC, _giaBan, _huy, _ghiChu, _nguoiSD, _maMay);
        }
        public override void DeleteHDPhieuXuat_C(String _maPX, Decimal _sTT, String _nguoiSD, string _maMay)
        {
            SqlHelper.ExecuteNonQuery(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spHDPhieuXuat_C_DELETED", _maPX, _sTT, _nguoiSD, _maMay);
        }

        #endregion

      


        #endregion
  

        #region Nhap Tra


        public override String InsertHDNhapTra(String _noiNhap, SmartDate _ngayNhap, SmartDate _ngayNhapTT, String _noiXuat, Byte _loaiPhieu, String _soCT, String _nvXuat, String _nvNhan, String _ghiChu, String _nguoiLap, Boolean _bnTra, string _maMay, Byte _daPhat, Boolean _DADUYET)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spHDNhapTra_CREATE", _noiNhap, _ngayNhap.DBValue, _ngayNhapTT.DBValue, _noiXuat, _loaiPhieu, _soCT, _nvXuat, _nvNhan, _ghiChu, _nguoiLap, _bnTra, _maMay, _daPhat, _DADUYET));
        }
        
        public override void UpdateHDNhapTra(String _maPX, String _noiXuat, SmartDate _ngayNhap, SmartDate _ngayNhapTT, String _noiNhap, Byte _loaiPhieu, String _soCT, String _nvXuat, String _nvNhan, String _ghiChu, Boolean _huy, string _maMay, String _nguoiSD, Byte _daPhat, Boolean _bnTra, Boolean _DADUYET)
        {
            SqlHelper.ExecuteNonQuery(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spHDNhapTra_UPDATE", _maPX, _noiXuat, _ngayNhap.DBValue, _ngayNhapTT.DBValue, _noiNhap, _loaiPhieu, _soCT, _nvXuat, _nvNhan, _ghiChu, _huy, _maMay, _nguoiSD, _daPhat, _bnTra, _DADUYET);
        }
        public override void DeleteHDNhapTra(String _maPX, string _maMay, String _nguoiSD)
        {
            SqlHelper.ExecuteNonQuery(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spHDNhapTra_DELETED", _maPX, _maMay, _nguoiSD);
        }
        #endregion

        #region Nhap tra chi tiet
        //InsertHDNhapTra_C(String _MaPNT, String _kyhieumau,string _kyhieu, Decimal _soLuong, SmartDate _hanSD,  Decimal _donGia,String _soLo,  Boolean Huy, String _ghiChu,String _maMay, String _nguoiSD);
        public override String InsertHDNhapTra_C(String _maPX, String _kyhieumau,string _kyhieu, Decimal _soLuong, string _tuso, Decimal _donGia, string _denso,Boolean _Huy, String _ghiChu, string _maMay, String _nguoiSD, Decimal _soLuongYC)
        {
            System.Data.SqlClient.SqlDataReader dr;
            dr = SqlHelper.ExecuteReader(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spHDNhapTra_C_CREATE", _maPX, _kyhieumau,_kyhieu, _soLuong,_tuso, _donGia, _denso ,_Huy, _ghiChu, _maMay, _nguoiSD, _soLuongYC);
            dr.Close();
            dr = null;
            return "";
        }
        public override void UpdateHDNhapTra_C(String _maPX, Decimal _sTT, String _kyhieumau, string _kyhieu, Decimal _soLuong, string _tuso, String _denso, Decimal _donGia, Decimal _soLuongYC, Boolean _huy, String _ghiChu, String _nguoiSD, string _maMay)
        {

            SqlHelper.ExecuteNonQuery(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spHDNhapTra_C_UPDATE", _maPX, _sTT, _kyhieumau,_kyhieu, _soLuong, _tuso,  _denso, _donGia, _soLuongYC, _huy, _ghiChu, _nguoiSD, _maMay);
        }
        public override void DeleteHDNhapTra_C(String _maPX, Decimal _sTT, String _nguoiSD, string _maMay)
        {
            SqlHelper.ExecuteNonQuery(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spHDNhapTra_C_DELETED", _maPX, _sTT, _nguoiSD, _maMay);
        }

        #endregion

        #region Kiem Nhap
        public override String InsertHDKiemNhap(String _maPhieu, String _maNV, String _maCD, Byte _loai, String _ghichu, string _maMay, String _nguoiSD, Byte _vaiTro)
        {//_maPhieu, _maNV, _maCD, _loai,_huy, _ghichu, _maMay, _nguoiSD, _vaitro
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spHDKiemNhap_CREATE", _maPhieu, _maNV, _maCD, _loai, _ghichu, _maMay, _nguoiSD, _vaiTro));
        }
        public override void UpdateHDKiemNhap(String _maPhieu, Byte _sTT, String _maNV, String _maCD, Byte _loai, Boolean _huy, String _ghichu, string _maMay, String _nguoiSD, Byte _vaiTro)
        {
            SqlHelper.ExecuteNonQuery(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spHDKiemNhap_UPDATE", _maPhieu, _sTT, _maNV, _maCD, _loai, _huy, _ghichu, _maMay, _nguoiSD, _vaiTro);
        }
        public override void DeleteHDKiemNhap(String _maMay, String _nguoiSD, String _maPhieu, Byte _sTT)
        {
            SqlHelper.ExecuteNonQuery(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spHDKiemNhap_DELETED", _maMay, _nguoiSD, _maPhieu, _sTT);
        }


        #endregion
        #region Kiem Ke
        public override String InsertHDKiemKe(SmartDate _ngayKK, String _makho, String _nguoiKK, String _nguoiLap, String _ghiChu, Boolean _xuly, string _maMay)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spHDKiemKe_Create", _ngayKK.DBValue, _makho, _nguoiKK, _nguoiLap, _ghiChu, _xuly, _maMay));
        }
        public override void UpdateHDKiemKe(String _maKK, SmartDate _ngayKK, String _makho, String _nguoiKK, String _ghiChu, Boolean _xuly, string _maMay, String _nguoiSD, Boolean _huy)
        {
            SqlHelper.ExecuteNonQuery(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spHDKiemKe_Update", _maKK, _ngayKK.DBValue, _makho, _nguoiKK, _ghiChu, _xuly, _maMay, _nguoiSD, _huy);
        }
        public override void DeleteHDKiemKe(String _maMay, String _nguoiSD, String _maKK)
        {
            SqlHelper.ExecuteNonQuery(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spHDKiemKe_DELETED", _maMay, _nguoiSD, _maKK);
        }
        

        #endregion

      

        #region Kiem Ke chi tiet Han dung
        public override String InsertHDKiemKe_HD(String _mAKK, String _kyhieumau, string _kyhieu, string _tuso, String _denso, Decimal _sOLUONG, Decimal _sLTon, Decimal _sLDC, String _ghichu, String _nguoiSD, string _maMay, Decimal _donGia)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spHDKiemKe_HD_CREATE", _mAKK, _kyhieumau,_kyhieu, _tuso ,_denso , _sOLUONG, _sLTon, _sLDC, _ghichu, _nguoiSD, _maMay, _donGia));
        }
        public override void UpdateHDKiemKe_HD(String _mAKK, Decimal _sTT, String _kyhieumau,string _kyhieu,  string _tuso, String _denso,  Decimal _sOLUONG, Decimal _sLTon, Decimal _sLDC, String _ghichu, Boolean _huy, String _nguoiSD, string _maMay, Decimal _donGia)
        {
            SqlHelper.ExecuteNonQuery(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spHDKiemKe_HD_UPDATE", _mAKK, _sTT, _kyhieumau, _kyhieu, _tuso, _denso, _sOLUONG, _sLTon, _sLDC, _ghichu, _huy, _nguoiSD, _maMay, _donGia);
        }
        public override void DeleteHDKiemKe_HD(String _maMay, String _nguoiSD, String _maKK, Decimal _sTT)
        {
            SqlHelper.ExecuteNonQuery(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spHDKiemKe_HD_DELETED", _maMay, _nguoiSD, _maKK, _sTT);
        }
        #endregion

       
        

        public override void HD_TinhTon(DateTime ngayyclinh, String MaKho)
        {

            //System.Data.SqlClient.SqlTransaction tran = SQLConnectionBDNoiT.BeginTransaction();


            //SqlHelper.ExecuteReader(tran, DatabaseOwner + ObjectQualifier + "sp_TinhTon", ngayyclinh, MaKho);
            //tran.Commit();  
            // SqlHelper .ExecuteReader( ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "sp_TinhTon", ngayyclinh, MaKho );
            // , ngayyclinh.ToShortDateString() , MaKho
            System.Data.SqlClient.SqlCommand cmd = SqlHelper.CreateCommand(SQLConnectionBDNoiT, DatabaseOwner + ObjectQualifier + "sp_HDTinhTon");
            cmd.CommandType = System.Data.CommandType.StoredProcedure;


            cmd.Parameters.AddWithValue("thang", ngayyclinh);

            cmd.Parameters.AddWithValue("makho", MaKho);



            cmd.CommandTimeout = 18000;
            cmd.ExecuteNonQuery();
            cmd.Dispose();
            cmd = null;
            ////// if (SQLConnectionBDNoiT.State == System.Data.ConnectionState.Closed)
            ////     //SQLConnectionBDNoiT.Close(); SQLConnectionBDNoiT.Dispose();
            // if (_sqlConnection.State == System.Data.ConnectionState.Open)
            // {
            //     //_sqlConnection.Close(); _sqlConnection.Dispose();
            //     //_sqlConnection = null;
            //     CloseDB();
            // }
        }

        #region reports hoa don
        public override DataSet RptGetBCXuatHoaDon(string ACCOUNT, DateTime _TUNGAYYC, DateTime _DENNGAYYC, int LOAIPHIEU, string MAKHO, string MANHOM, string MACHUNGLOAI, string MAPL, string _DK)
        {
            DataSet ds = new DataSet();
            string[] s = { "CRBCXuatthuoc_RPT" };
            SqlHelper.FillDataset(SQLConnectionDataNoiT, DatabaseOwner + ObjectQualifier + "spHoaDon_BCXUATTHUOC ", ds, s, ACCOUNT, _TUNGAYYC, _DENNGAYYC, LOAIPHIEU, MAKHO, MANHOM, MACHUNGLOAI, MAPL, _DK);
            //// // // //// ds.WriteXmlSchema("CRBCXuatthuoc_RPT.xsd");
            // System.Data.SqlClient.SqlCommand cmd = SqlHelper.CreateCommand(SQLConnectionData, DatabaseOwner + ObjectQualifier + "spDUOC_BCXUATTHUOC");

            // cmd.CommandTimeout = 18000;
            // cmd.CommandType = System.Data.CommandType.StoredProcedure;
            // cmd.Parameters.AddWithValue("ACCOUNT", ACCOUNT);
            // cmd.Parameters.AddWithValue("TUNGAY", _TUNGAYYC);
            // cmd.Parameters.AddWithValue("DENNGAY", _DENNGAYYC);
            // cmd.Parameters.AddWithValue("LOAIPHIEU", LOAIPHIEU);
            // cmd.Parameters.AddWithValue("MAKHO", MAKHO);
            // cmd.Parameters.AddWithValue("MANHOM", MANHOM);
            // cmd.Parameters.AddWithValue("MACHUNGLOAI", MACHUNGLOAI);
            // cmd.Parameters.AddWithValue("MAPL", MAPL);
            // cmd.Parameters.AddWithValue("DK", _DK);
            // System.Data.SqlClient.SqlDataAdapter sqlad = new System.Data.SqlClient.SqlDataAdapter(cmd);

            // sqlad.Fill(ds);
            // if (ds.Tables.Count > 0)
            //     //string[] s ={ "" };
            //     ds.Tables[0].TableName = "CRBCXuatthuoc_RPT";
            //sqlad.Dispose(); cmd.Dispose(); sqlad = null;
            // cmd = null;
            // if (SQLConnectionBD.State == System.Data.ConnectionState.Closed)
            //SQLConnectionBD.Close(); SQLConnectionBD.Dispose();
            //if (_sqlConnection.State == System.Data.ConnectionState.Closed)
            {
                //_sqlConnection.Close(); _sqlConnection.Dispose();
                //_sqlConnection = null;
            }
            return ds;

        }
     
        public override DataSet RptGetBCXUATHoaDonKhoa(string ACCOUNT, DateTime _TUNGAYYC, DateTime _DENNGAYYC, int LOAIPHIEU, string MAKHO, string MANHOM, string MACHUNGLOAI, string MAPL, string _DK)
        {
            DataSet ds = new DataSet("CRBCXuatthuoc_RPT");
            string[] s = { "CRBCXuatthuoc_RPT" };
            SqlHelper.FillDataset(SQLConnectionDataNoiT, DatabaseOwner + ObjectQualifier + "spHoaDon_BCXUATTHUOC ", ds, s, ACCOUNT, _TUNGAYYC, _DENNGAYYC, LOAIPHIEU, MAKHO, MANHOM, MACHUNGLOAI, MAPL, _DK);
            //// ds.WriteXmlSchema("CRBCXuatthuocKhoa_RPT.xsd");
            //  // ds.WriteXmlSchema("CRBCXuatthuocKhoa_RPT.xsd");
            //System.Data.SqlClient.SqlCommand cmd = SqlHelper.CreateCommand(SQLConnectionDataNoiT, DatabaseOwner + ObjectQualifier + "spDUOC_BCXUATTHUOC");

            //cmd.CommandTimeout = 18000;
            //cmd.CommandType = System.Data.CommandType.StoredProcedure;
            //cmd.Parameters.AddWithValue("ACCOUNT", ACCOUNT);
            //cmd.Parameters.AddWithValue("TUNGAY", _TUNGAYYC);
            //cmd.Parameters.AddWithValue("DENNGAY", _DENNGAYYC);
            //cmd.Parameters.AddWithValue("LOAIPHIEU", LOAIPHIEU);
            //cmd.Parameters.AddWithValue("MAKHO", MAKHO);
            //cmd.Parameters.AddWithValue("MANHOM", MANHOM);
            //cmd.Parameters.AddWithValue("MACHUNGLOAI", MACHUNGLOAI);
            //cmd.Parameters.AddWithValue("MAPL", MAPL);
            //cmd.Parameters.AddWithValue("DK", _DK);
            //System.Data.SqlClient.SqlDataAdapter sqlad = new System.Data.SqlClient.SqlDataAdapter(cmd);

            //sqlad.Fill(ds);
            if (ds.Tables.Count > 0)
                //string[] s ={ "" };
                ds.Tables[0].TableName = "CRBCXuatthuoc_RPT";
            //sqlad.Dispose(); cmd.Dispose(); sqlad = null;
            // cmd = null;
            // if (SQLConnectionBD.State == System.Data.ConnectionState.Closed)
            //SQLConnectionBD.Close(); SQLConnectionBD.Dispose();
            ////if (_sqlConnection.State == System.Data.ConnectionState.Closed)
            //{
            //    //_sqlConnection.Close(); _sqlConnection.Dispose();
            //    //_sqlConnection = null;
            //} 
            return ds;

        }
     
        public override DataSet RptGetBCXUATHoaDonNgay(string ACCOUNT, DateTime _TUNGAYYC, DateTime _DENNGAYYC, int LOAIPHIEU, string MAKHO, string MANHOM, string MACHUNGLOAI, string MAPL, string _DK)
        {
            DataSet ds = new DataSet("CRBCXuatthuoc_RPT");
            string[] s = { "CRBCXuatthuoc_RPT" };
            SqlHelper.FillDataset(SQLConnectionDataNoiT, DatabaseOwner + ObjectQualifier + "spDUOC_BCXUATTHUOC ", ds, s, ACCOUNT, _TUNGAYYC, _DENNGAYYC, LOAIPHIEU, MAKHO, MANHOM, MACHUNGLOAI, MAPL, _DK);
            // //// ds.WriteXmlSchema("CRBCXuatthuocNgay_RPT.xsd");
            // System.Data.SqlClient.SqlCommand cmd = SqlHelper.CreateCommand(SQLConnectionDataNoiT, DatabaseOwner + ObjectQualifier + "spDUOC_BCXUATTHUOC");

            // cmd.CommandTimeout = 18000;
            // cmd.CommandType = System.Data.CommandType.StoredProcedure;
            // cmd.Parameters.AddWithValue("ACCOUNT", ACCOUNT);
            // cmd.Parameters.AddWithValue("TUNGAY", _TUNGAYYC);
            // cmd.Parameters.AddWithValue("DENNGAY", _DENNGAYYC);
            // cmd.Parameters.AddWithValue("LOAIPHIEU", LOAIPHIEU);
            // cmd.Parameters.AddWithValue("MAKHO", MAKHO);
            // cmd.Parameters.AddWithValue("MANHOM", MANHOM);
            // cmd.Parameters.AddWithValue("MACHUNGLOAI", MACHUNGLOAI);
            // cmd.Parameters.AddWithValue("MAPL", MAPL);
            // cmd.Parameters.AddWithValue("DK", _DK);
            // System.Data.SqlClient.SqlDataAdapter sqlad = new System.Data.SqlClient.SqlDataAdapter(cmd);

            // sqlad.Fill(ds);
            // if (ds.Tables.Count > 0)
            //     //string[] s ={ "" };
            //     ds.Tables[0].TableName = "CRBCXuatthuoc_RPT";
            //sqlad.Dispose(); cmd.Dispose(); sqlad = null;
            // cmd = null;
            //// if (SQLConnectionBD.State == System.Data.ConnectionState.Closed)
            //     //SQLConnectionBD.Close(); SQLConnectionBD.Dispose();
            // //if (_sqlConnection.State == System.Data.ConnectionState.Closed)
            // {
            //     //_sqlConnection.Close(); _sqlConnection.Dispose();
            //     //_sqlConnection = null;
            // } 
            return ds;

        }
     
        public override DataSet RptGetBCXUATHoaDon_C(string ACCOUNT, DateTime _TUNGAYYC, DateTime _DENNGAYYC, int LOAIPHIEU, string MAKHO, string MANHOM, string MACHUNGLOAI, string MAPL, string _DK)
        {
            DataSet ds = new DataSet();
            string[] s = { "CRBCXuatthuoc_C_RPT" };
            SqlHelper.FillDataset(SQLConnectionDataNoiT, DatabaseOwner + ObjectQualifier + "spHoaDon_BCXUATTHUOC ", ds, s, ACCOUNT, _TUNGAYYC, _DENNGAYYC, LOAIPHIEU, MAKHO, MANHOM, MACHUNGLOAI, MAPL, _DK);
            // // // //// ds.WriteXmlSchema("CRBCXuatthuoc_C_RPT.xsd");
            return ds;
        }
     
        public override DataSet RptBCNXTHoaDon_C(DateTime _tuNgay, DateTime _denNgay, string _maKho, int _loaiBC, string _maNhom, string _maChungLoai, string _maPL, string _dK)
        {
            DataSet ds = new DataSet("CRBCNXTThuoc_C_RPT");
            string[] s = { "CRBCNXTThuoc_C_RPT" };
            SqlHelper.FillDataset(SQLConnectionDataNoiT, DatabaseOwner + ObjectQualifier + "SPHoaDon_BCNHAPXUATTON", ds, s, _tuNgay, _denNgay, _maKho, _loaiBC, _maNhom, _maChungLoai, _maPL, _dK);
            // // // //// ds.WriteXmlSchema("CRBCXuatthuoc_C_RPT.xsd");
            // System.Data.SqlClient.SqlCommand cmd = SqlHelper.CreateCommand(SQLConnectionDataNoiT, DatabaseOwner + ObjectQualifier + "SPDUOC_BCNHAPXUATTON");

            // cmd.CommandTimeout = 18000;
            // cmd.CommandType = System.Data.CommandType.StoredProcedure;
            // cmd.Parameters.AddWithValue("TUNGAY", _tuNgay);
            // cmd.Parameters.AddWithValue("DENNGAY", _denNgay);
            // cmd.Parameters.AddWithValue("LOAIBC", _loaiBC);
            // cmd.Parameters.AddWithValue("MAKHO", _maKho);
            // cmd.Parameters.AddWithValue("MANHOM", _maNhom);
            // cmd.Parameters.AddWithValue("MACHUNGLOAI", _maChungLoai);
            // cmd.Parameters.AddWithValue("MAPL", _maPL);
            // cmd.Parameters.AddWithValue("DK", _dK);
            // System.Data.SqlClient.SqlDataAdapter sqlad = new System.Data.SqlClient.SqlDataAdapter(cmd);

            // sqlad.Fill(ds);

            // if (ds.Tables.Count > 0)
            //     //string[] s ={ "" };
            //     ds.Tables[0].TableName = "CRBCNXTThuoc_C_RPT";
            // //ds.WriteXmlSchema("CRBCXuatthuoc_C_RPT.xsd");
            //sqlad.Dispose(); cmd.Dispose(); sqlad = null;
            // cmd = null;
            // if (SQLConnectionBD.State == System.Data.ConnectionState.Closed)
            //SQLConnectionBD.Close(); SQLConnectionBD.Dispose();
            //if (_sqlConnection.State == System.Data.ConnectionState.Closed)
            {
                //_sqlConnection.Close(); _sqlConnection.Dispose();
                //_sqlConnection = null;
            }
            return ds;

        }
     
        public override DataSet RptBCNXTHoaDon_ToanBV(DateTime _tuNgay, DateTime _denNgay, string _maKho, int _loaiBC, string _maNhom, string _maChungLoai, string _maPL, string _dK)
        {
            DataSet ds = new DataSet("CRBCNXTThuoc_ToanBV_RPT");
            string[] s = { "CRBCNXTThuoc_ToanBV_RPT" };
            SqlHelper.FillDataset(SQLConnectionDataNoiT, DatabaseOwner + ObjectQualifier + "SPHoaDon_BCNHAPXUATTON ", ds, s, _tuNgay, _denNgay, _maKho, _loaiBC, _maNhom, _maChungLoai, _maPL, _dK);
            // // // //// ds.WriteXmlSchema("CRBCNXTThuoc_ToanBV_RPT.xsd");
            // System.Data.SqlClient.SqlCommand cmd = SqlHelper.CreateCommand(SQLConnectionDataNoiT, DatabaseOwner + ObjectQualifier + "SPDUOC_BCNHAPXUATTON");

            // cmd.CommandTimeout = 18000;
            // cmd.CommandType = System.Data.CommandType.StoredProcedure;
            // cmd.Parameters.AddWithValue("TUNGAY", _tuNgay);
            // cmd.Parameters.AddWithValue("DENNGAY", _denNgay);
            // cmd.Parameters.AddWithValue("MAKHO", _maKho);
            // cmd.Parameters.AddWithValue("LOAIBC", _loaiBC);
            // cmd.Parameters.AddWithValue("MANHOM", _maNhom);
            // cmd.Parameters.AddWithValue("MACHUNGLOAI", _maChungLoai);
            // cmd.Parameters.AddWithValue("MAPL", _maPL);
            // cmd.Parameters.AddWithValue("DK", _dK);
            // System.Data.SqlClient.SqlDataAdapter sqlad = new System.Data.SqlClient.SqlDataAdapter(cmd);

            // sqlad.Fill(ds);
            // if (ds.Tables.Count > 0)
            //     //string[] s ={ "" };
            //     ds.Tables[0].TableName = "CRBCNXTThuoc_ToanBV_RPT";
            //sqlad.Dispose(); cmd.Dispose(); sqlad = null;
            // cmd = null;
            // if (SQLConnectionBD.State == System.Data.ConnectionState.Closed)
            //SQLConnectionBD.Close(); SQLConnectionBD.Dispose();
            //if (_sqlConnection.State == System.Data.ConnectionState.Closed)
            {
                //_sqlConnection.Close(); _sqlConnection.Dispose();
                //_sqlConnection = null;
            }
            return ds;

        }

        public override DataSet RptGetBCNHAPHoaDon(string ACCOUNT, DateTime _TUNGAYYC, DateTime _DENNGAYYC, int LOAIPHIEU, string MAKHO, string MANHOM, string MACHUNGLOAI, string MAPL, string _DK)
        {
            DataSet ds = new DataSet("CRBCNHAPThuoc_RPT");
            string[] s = { "CRBCNHAPThuoc_RPT" };
            SqlHelper.FillDataset(SQLConnectionDataNoiT, DatabaseOwner + ObjectQualifier + "spHoaDon_BCNHAPTHUOC ", ds, s, ACCOUNT, _TUNGAYYC, _DENNGAYYC, LOAIPHIEU, MAKHO, MANHOM, MACHUNGLOAI, MAPL, _DK);
            // ds.WriteXmlSchema("CRBCKiemNHAPThuoc_RPT.xsd");

            // System.Data.SqlClient.SqlCommand cmd = SqlHelper.CreateCommand(SQLConnectionDataNoiT, DatabaseOwner + ObjectQualifier + "spDUOC_BCNHAPTHUOC");

            // cmd.CommandTimeout = 18000;
            // cmd.CommandType = System.Data.CommandType.StoredProcedure;
            // cmd.Parameters.AddWithValue("ACCOUNT", ACCOUNT);
            // cmd.Parameters.AddWithValue("TUNGAY", _TUNGAYYC);
            // cmd.Parameters.AddWithValue("DENNGAY", _DENNGAYYC);
            // cmd.Parameters.AddWithValue("LOAIPHIEU", LOAIPHIEU);
            // cmd.Parameters.AddWithValue("MAKHO", MAKHO);
            // cmd.Parameters.AddWithValue("MANHOM", MANHOM);
            // cmd.Parameters.AddWithValue("MACHUNGLOAI", MACHUNGLOAI);
            // cmd.Parameters.AddWithValue("MAPL", MAPL);
            // cmd.Parameters.AddWithValue("DK", _DK);
            // System.Data.SqlClient.SqlDataAdapter sqlad = new System.Data.SqlClient.SqlDataAdapter(cmd);

            // sqlad.Fill(ds);
            // if (ds.Tables.Count > 0)
            //     //string[] s ={ "" };
            //     ds.Tables[0].TableName = "CRBCNHAPThuoc_RPT";
            //sqlad.Dispose(); cmd.Dispose(); sqlad = null;
            // cmd = null;
            // if (SQLConnectionBD.State == System.Data.ConnectionState.Closed)
            //SQLConnectionBD.Close(); SQLConnectionBD.Dispose();
            //if (_sqlConnection.State == System.Data.ConnectionState.Closed)
            {
                //_sqlConnection.Close(); _sqlConnection.Dispose();
                //_sqlConnection = null;
            }
            return ds;

        }

        public override DataSet RptGetBCNHAPHoaDon_NCC(string ACCOUNT, DateTime _TUNGAYYC, DateTime _DENNGAYYC, int LOAIPHIEU, string MAKHO, string MANHOM, string MACHUNGLOAI, string MAPL, string _DK)
        {
            DataSet ds = new DataSet("CRBCNHAPThuoc_NCC_RPT");
            string[] s = { "CRBCNHAPThuoc_NCC_RPT" };
            SqlHelper.FillDataset(SQLConnectionDataNoiT, DatabaseOwner + ObjectQualifier + "spHoaDon_BCNHAPTHUOC ", ds, s, ACCOUNT, _TUNGAYYC, _DENNGAYYC, LOAIPHIEU, MAKHO, MANHOM, MACHUNGLOAI, MAPL, _DK);
            // // // //// ds.WriteXmlSchema("CRBCNHAPThuoc_NCC_RPT.xsd");
            // System.Data.SqlClient.SqlCommand cmd = SqlHelper.CreateCommand(SQLConnectionDataNoiT, DatabaseOwner + ObjectQualifier + "spDUOC_BCNHAPTHUOC");

            // cmd.CommandTimeout = 18000;
            // cmd.CommandType = System.Data.CommandType.StoredProcedure;
            // cmd.Parameters.AddWithValue("ACCOUNT", ACCOUNT);
            // cmd.Parameters.AddWithValue("TUNGAY", _TUNGAYYC);
            // cmd.Parameters.AddWithValue("DENNGAY", _DENNGAYYC);
            // cmd.Parameters.AddWithValue("LOAIPHIEU", LOAIPHIEU);
            // cmd.Parameters.AddWithValue("MAKHO", MAKHO);
            // cmd.Parameters.AddWithValue("MANHOM", MANHOM);
            // cmd.Parameters.AddWithValue("MACHUNGLOAI", MACHUNGLOAI);
            // cmd.Parameters.AddWithValue("MAPL", MAPL);
            // cmd.Parameters.AddWithValue("DK", _DK);
            // System.Data.SqlClient.SqlDataAdapter sqlad = new System.Data.SqlClient.SqlDataAdapter(cmd);

            // sqlad.Fill(ds);
            // if (ds.Tables.Count > 0)
            //     //string[] s ={ "" };
            //     ds.Tables[0].TableName = "CRBCNHAPThuoc_NCC_RPT";
            //sqlad.Dispose(); cmd.Dispose(); sqlad = null;
            // cmd = null;
            // if (SQLConnectionBD.State == System.Data.ConnectionState.Closed)
            //SQLConnectionBD.Close(); SQLConnectionBD.Dispose();
            //if (_sqlConnection.State == System.Data.ConnectionState.Closed)
            {
                //_sqlConnection.Close(); _sqlConnection.Dispose();
                //_sqlConnection = null;
            }
            return ds;

        }
        public override DataSet RptGetBCBCNHAPTRAHoaDon(string ACCOUNT, DateTime _TUNGAYYC, DateTime _DENNGAYYC, int LOAIPHIEU, string MAKHO, string MANHOM, string MACHUNGLOAI, string MAPL, string _DK)
        {
            DataSet ds = new DataSet("CRBCNHAPTRATHUOC_RPT");
            string[] s = { "CRBCNHAPTRATHUOC_RPT" };
            SqlHelper.FillDataset(SQLConnectionDataNoiT, DatabaseOwner + ObjectQualifier + "spHoaDon_BCNHAPTRATHUOC ", ds, s, ACCOUNT, _TUNGAYYC, _DENNGAYYC, LOAIPHIEU, MAKHO, MANHOM, MACHUNGLOAI, MAPL, _DK);
            // // // //// ds.WriteXmlSchema("CRBCNHAPTRATHUOC_RPT.xsd");
            // System.Data.SqlClient.SqlCommand cmd = SqlHelper.CreateCommand(SQLConnectionDataNoiT, DatabaseOwner + ObjectQualifier + "spDUOC_BCNHAPTRATHUOC");

            // cmd.CommandTimeout = 18000;
            // cmd.CommandType = System.Data.CommandType.StoredProcedure;
            // cmd.Parameters.AddWithValue("ACCOUNT", ACCOUNT);
            // cmd.Parameters.AddWithValue("TUNGAY", _TUNGAYYC);
            // cmd.Parameters.AddWithValue("DENNGAY", _DENNGAYYC);
            // cmd.Parameters.AddWithValue("LOAIPHIEU", LOAIPHIEU);
            // cmd.Parameters.AddWithValue("MAKHO", MAKHO);
            // cmd.Parameters.AddWithValue("MANHOM", MANHOM);
            // cmd.Parameters.AddWithValue("MACHUNGLOAI", MACHUNGLOAI);
            // cmd.Parameters.AddWithValue("MAPL", MAPL);
            // cmd.Parameters.AddWithValue("DK", _DK);
            // System.Data.SqlClient.SqlDataAdapter sqlad = new System.Data.SqlClient.SqlDataAdapter(cmd);

            // sqlad.Fill(ds);
            // if (ds.Tables.Count > 0)
            //     //string[] s ={ "" };
            //     ds.Tables[0].TableName = "CRBCNHAPTRATHUOC_RPT";
            //sqlad.Dispose(); cmd.Dispose(); sqlad = null;
            // cmd = null;
            //// if (SQLConnectionBD.State == System.Data.ConnectionState.Closed)
            //     //SQLConnectionBD.Close(); SQLConnectionBD.Dispose();
            // //if (_sqlConnection.State == System.Data.ConnectionState.Closed)
            // {
            //     //_sqlConnection.Close(); _sqlConnection.Dispose();
            //     //_sqlConnection = null;
            // } 
            return ds;

        }
         
       
        public override DataSet crHDPhieuNhap_C_GetAll(Boolean _qadmin, String _maPN)
        {
            //string[] s ={ "" };
            DataSet ds = new DataSet("crPhieuNhap_C_GetAll");
            string[] s = { "crPhieuNhap_C_GetAll" };
            SqlHelper.FillDataset(SQLConnectionDataNoiT, DatabaseOwner + ObjectQualifier + "spHDPhieuNhap_C_GETALL", ds, s, _qadmin, _maPN);
            //// ds.WriteXmlSchema("crPhieuNhap_C_GetAll.xsd");
            // System.Data.SqlClient.SqlCommand cmd = SqlHelper.CreateCommand(SQLConnectionDataNoiT, DatabaseOwner + ObjectQualifier + "spPhieuNhap_C_GETALL");

            // cmd.CommandTimeout = 18000;
            // cmd.CommandType = System.Data.CommandType.StoredProcedure;
            // cmd.Parameters.AddWithValue("QADMIN", _qadmin);
            // cmd.Parameters.AddWithValue("maPN", _maPN);

            // System.Data.SqlClient.SqlDataAdapter sqlad = new System.Data.SqlClient.SqlDataAdapter(cmd);

            // sqlad.Fill(ds);
            // if (ds.Tables.Count > 0)
            //     //string[] s ={ "" };
            //     ds.Tables[0].TableName = "crPhieuNhap_C_GetAll";
            //sqlad.Dispose(); cmd.Dispose(); sqlad = null;
            // cmd = null;
            // if (SQLConnectionBD.State == System.Data.ConnectionState.Closed)
            //SQLConnectionBD.Close(); SQLConnectionBD.Dispose();
            //if (_sqlConnection.State == System.Data.ConnectionState.Closed)
            {
                //_sqlConnection.Close(); _sqlConnection.Dispose();
                //_sqlConnection = null;
            }
            return ds;

        }
      
        public override DataSet crHDPhieuXuat_C_GetAll(Boolean _qadmin, String _maPX)
        {
            DataSet ds = new DataSet("crPhieuXuat_C_GetAll");
            string[] s = { "crPhieuXuat_C_GetAll" };
            SqlHelper.FillDataset(SQLConnectionDataNoiT, DatabaseOwner + ObjectQualifier + "spHDPHIEUXUAT_C_GETALL", ds, s, _qadmin, _maPX);
            // // // //// ds.WriteXmlSchema("crPhieuXuat_C_GetAll.xsd");
            // System.Data.SqlClient.SqlCommand cmd = SqlHelper.CreateCommand(SQLConnectionDataNoiT, DatabaseOwner + ObjectQualifier + "spPHIEUXUAT_C_GETALL");

            // cmd.CommandTimeout = 18000;
            // cmd.CommandType = System.Data.CommandType.StoredProcedure;
            // cmd.Parameters.AddWithValue("QADMIN", _qadmin);
            // cmd.Parameters.AddWithValue("maPX", _maPX);

            // System.Data.SqlClient.SqlDataAdapter sqlad = new System.Data.SqlClient.SqlDataAdapter(cmd);

            // sqlad.Fill(ds);
            // if (ds.Tables.Count > 0)
            //     ds.Tables[0].TableName = "crPhieuXuat_C_GetAll";
            //sqlad.Dispose(); cmd.Dispose(); sqlad = null;
            // cmd = null;
            // if (SQLConnectionBD.State == System.Data.ConnectionState.Closed)
            //SQLConnectionBD.Close(); SQLConnectionBD.Dispose();
            //if (_sqlConnection.State == System.Data.ConnectionState.Closed)
            {
                //_sqlConnection.Close(); _sqlConnection.Dispose();
                //_sqlConnection = null;
            }
            return ds;

        }
        public override DataSet crHDKiemKe(String _maKK, Boolean _qadmin)
        {
            DataSet ds = new DataSet("crKiemKe");
            string[] s = { "crKiemKe" };
            SqlHelper.FillDataset(SQLConnectionDataNoiT, DatabaseOwner + ObjectQualifier + "spHDKIEMKE_HD_GETALL", ds, s, _maKK, _qadmin);
            // // // //// ds.WriteXmlSchema("crKiemKe.xsd");
            // System.Data.SqlClient.SqlCommand cmd = SqlHelper.CreateCommand(SQLConnectionDataNoiT, DatabaseOwner + ObjectQualifier + "spKIEMKE_HD_GETALL");

            // cmd.CommandTimeout = 18000;
            // cmd.CommandType = System.Data.CommandType.StoredProcedure;
            // cmd.Parameters.AddWithValue("QADMIN", _qadmin);
            // cmd.Parameters.AddWithValue("MaKK", _maKK);

            // System.Data.SqlClient.SqlDataAdapter sqlad = new System.Data.SqlClient.SqlDataAdapter(cmd);

            // sqlad.Fill(ds);
            // if (ds.Tables.Count > 0)
            //     ds.Tables[0].TableName = "crKiemKe";
            //sqlad.Dispose(); cmd.Dispose(); sqlad = null;
            // cmd = null;
            // if (SQLConnectionBD.State == System.Data.ConnectionState.Closed)
            //SQLConnectionBD.Close(); SQLConnectionBD.Dispose();
            //if (_sqlConnection.State == System.Data.ConnectionState.Closed)
            {
                //_sqlConnection.Close(); _sqlConnection.Dispose();
                //_sqlConnection = null;
            }
            return ds;

        }
        public override DataSet crHDKiemKe_HoiDong(String _maPhieu, Boolean _qadmin, Byte _loai)
        {
            DataSet ds = new DataSet();
            string[] s = { "crKiemKe_HoiDong" };
            SqlHelper.FillDataset(SQLConnectionDataNoiT, DatabaseOwner + ObjectQualifier + "spHDKIEMNHAP_GETALL", ds, s, _maPhieu, _qadmin, _loai);
            // // // //// ds.WriteXmlSchema("crKiemKe_HoiDong.xsd");
            // System.Data.SqlClient.SqlCommand cmd = SqlHelper.CreateCommand(SQLConnectionDataNoiT, DatabaseOwner + ObjectQualifier + "spKIEMNHAP_GETALL");

            // cmd.CommandTimeout = 18000;
            // cmd.CommandType = System.Data.CommandType.StoredProcedure;
            // cmd.Parameters.AddWithValue("MaPhieu", _maPhieu);
            // cmd.Parameters.AddWithValue("QADMIN", _qadmin);
            // cmd.Parameters.AddWithValue("LOAI", _loai);

            // System.Data.SqlClient.SqlDataAdapter sqlad = new System.Data.SqlClient.SqlDataAdapter(cmd);

            // sqlad.Fill(ds);
            // if (ds.Tables.Count > 0)
            //     ds.Tables[0].TableName = "crKiemKe_HoiDong";
            //sqlad.Dispose(); cmd.Dispose(); sqlad = null;
            // cmd = null;
            // if (SQLConnectionBD.State == System.Data.ConnectionState.Closed)
            //SQLConnectionBD.Close(); SQLConnectionBD.Dispose();
            //if (_sqlConnection.State == System.Data.ConnectionState.Closed)
            {
                //_sqlConnection.Close(); _sqlConnection.Dispose();
                //_sqlConnection = null;
            }
            return ds;

        }
       public override DataSet crHDPhieuNhapTra_C_GetAll(Boolean _qadmin, String _maPNT)
        {
            DataSet ds = new DataSet("crPhieuNhapTra_C_GetAll");
            string[] s = { "crPhieuNhapTra_C_GetAll" };
            SqlHelper.FillDataset(SQLConnectionDataNoiT, DatabaseOwner + ObjectQualifier + "spHDNHAPTRA_C_GETALL", ds, s, _qadmin, _maPNT);
            // // // //// ds.WriteXmlSchema("crPhieuNhapTra_C_GetAll.xsd");
            // System.Data.SqlClient.SqlCommand cmd = SqlHelper.CreateCommand(SQLConnectionDataNoiT, DatabaseOwner + ObjectQualifier + "spNHAPTRA_C_GETALL");

            // cmd.CommandTimeout = 18000;
            // cmd.CommandType = System.Data.CommandType.StoredProcedure;
            // cmd.Parameters.AddWithValue("QADMIN", _qadmin);
            // cmd.Parameters.AddWithValue("MAPNT", _maPNT);

            // System.Data.SqlClient.SqlDataAdapter sqlad = new System.Data.SqlClient.SqlDataAdapter(cmd);

            // sqlad.Fill(ds);
            // if (ds.Tables.Count > 0)
            //     ds.Tables[0].TableName = "crPhieuNhapTra_C_GetAll";
            //sqlad.Dispose(); cmd.Dispose(); sqlad = null;
            // cmd = null;
            // if (SQLConnectionBD.State == System.Data.ConnectionState.Closed)
            //SQLConnectionBD.Close(); SQLConnectionBD.Dispose();
            //if (_sqlConnection.State == System.Data.ConnectionState.Closed)
            {
                //_sqlConnection.Close(); _sqlConnection.Dispose();
                //_sqlConnection = null;
            }
            //ds.WriteXmlSchema("c://tem//crPhieuNhapTra_C_BN.xsd");
            return ds;

        }
      
       
      
           public override DataSet crHoaDon_TheKho(String _maKho, String _maThuoc, DateTime _tuNgay, DateTime _denNgay)
        {
            DataSet ds = new DataSet("crDuoc_TheKho");
            string[] s = { "crDuoc_TheKho" };
            SqlHelper.FillDataset(SQLConnectionDataNoiT, DatabaseOwner + ObjectQualifier + "crHoaDon_THEKHO", ds, s, _maKho, _maThuoc, _tuNgay, _denNgay);
            // //// ds.WriteXmlSchema("crDuoc_TheKho.xsd");
            // System.Data.SqlClient.SqlCommand cmd = SqlHelper.CreateCommand(SQLConnectionBD, DatabaseOwner + ObjectQualifier + "SPDUOC_THEKHO");

            // cmd.CommandTimeout = 18000;
            // cmd.CommandType = System.Data.CommandType.StoredProcedure;
            // cmd.Parameters.AddWithValue("MAKHO", _maKho);
            // cmd.Parameters.AddWithValue("MATHUOC", _maThuoc);
            // cmd.Parameters.AddWithValue("TUNGAY", _tuNgay);
            // cmd.Parameters.AddWithValue("DENNGAY", _denNgay);

            // System.Data.SqlClient.SqlDataAdapter sqlad = new System.Data.SqlClient.SqlDataAdapter(cmd);

            // sqlad.Fill(ds);
            // if (ds.Tables.Count > 0)
            //     ds.Tables[0].TableName = "crDuoc_TheKho";
            //sqlad.Dispose(); cmd.Dispose(); sqlad = null;
            // cmd = null;
            // if (SQLConnectionBD.State == System.Data.ConnectionState.Closed)
            //SQLConnectionBD.Close(); SQLConnectionBD.Dispose();
            //if (_sqlConnection.State == System.Data.ConnectionState.Closed)
            {
                //_sqlConnection.Close(); _sqlConnection.Dispose();
                //_sqlConnection = null;
            }
            return ds;

        }
     

       
         #endregion

        #endregion

        #region Reports
        #region VienPhi
        public override DataSet RptGetGiaDMCNK(string _madt, bool qadmin)
        {
            DataSet ds = new DataSet();
            string[] s = { "DMVTYT_GIA_RPT" };
            SqlHelper.FillDataset(SQLConnectionData, DatabaseOwner + ObjectQualifier + "spDMCNK_GIA_RPT", ds, s, _madt, qadmin);
            // // // //// ds.WriteXmlSchema("DMHoachat_GIA_RPT.xsd");
            return ds;
        }
        public override DataSet RptGetGiaDMHoachat(string _madt, string dk)
        {
            DataSet ds = new DataSet();
            string[] s = { "DMHoachat_GIA_RPT" };
            SqlHelper.FillDataset(SQLConnectionData, DatabaseOwner + ObjectQualifier + "spDMHoachat_GIA_RPT", ds, s, _madt, dk);
            // // // //// ds.WriteXmlSchema("DMHoachat_GIA_RPT.xsd");
            return ds;
        }
        public override DataSet CRBCTamThu_RPT(String MaBA, string dk, bool qadmin)
        {
            DataSet ds = new DataSet();
            //string[] s = { "CRBCTamThu_RPT" };
            // SqlHelper.FillDataset( ConnectionString, DatabaseOwner + ObjectQualifier + "spBenhAn_DongTien_GETAll", ds, s, MaBA, dk, qadmin);
            //// ds.WriteXmlSchema("CRBCTamThu_RPT");
            //return ds;
            System.Data.SqlClient.SqlCommand cmd = SqlHelper.CreateCommand(SQLConnectionDataNoiT, DatabaseOwner + ObjectQualifier + "spBenhAn_DongTien_GETAll");

            cmd.CommandTimeout = 18000;
            cmd.CommandType = System.Data.CommandType.StoredProcedure;
            cmd.Parameters.AddWithValue("MaBA", MaBA);
            cmd.Parameters.AddWithValue("dk", dk);

            cmd.Parameters.AddWithValue("qadmin", qadmin);
            System.Data.SqlClient.SqlDataAdapter sqlad = new System.Data.SqlClient.SqlDataAdapter(cmd);

            sqlad.Fill(ds);
            if (ds.Tables.Count > 0)
                //  string[] s ={ "" };
                ds.Tables[0].TableName = "CRBCTamThu_RPT";
            sqlad.Dispose(); cmd.Dispose(); sqlad = null;
            cmd = null;
            //// if (SQLConnectionBD.State == System.Data.ConnectionState.Closed)
            //     //SQLConnectionBD.Close(); SQLConnectionBD.Dispose();
            // //if (_sqlConnection.State == System.Data.ConnectionState.Closed)
            // {
            //     //_sqlConnection.Close(); _sqlConnection.Dispose();
            //     //_sqlConnection = null;
            // } 
            return ds;
        }
        public override DataSet crHCPhieuDoiThuoc_C_GetAll(Boolean _qadmin, String _maDThuoc)
        {
            DataSet ds = new DataSet();
            string[] s = { "crPhieuDoiThuoc_C_GetAll" };
            SqlHelper.FillDataset(SQLConnectionDataNoiT, DatabaseOwner + ObjectQualifier + "spHCPhieuDoiThuoc_C_GETALL", ds, s, _qadmin, _maDThuoc);
            // // // //// ds.WriteXmlSchema("crPhieuDoiThuoc_C_GetAll.xsd");
            return ds;
        }
        public override DataSet CRDMChePhamMau_GIA_GETALL(String _maDT, Boolean _qadmin)
        {
            DataSet ds = new DataSet();
            string[] s = { "CRDMChePhamMau_GIA_GETALL" };
            SqlHelper.FillDataset(SQLConnectionData, DatabaseOwner + ObjectQualifier + "spDMChePhamMau_GIA_GETALL", ds, s, _maDT, _qadmin, "");
            // // // //// ds.WriteXmlSchema("CRDMChePhamMau_GIA_GETALL.xsd");
            return ds;
        }
        public override DataSet RptGetGiaDMVTYT(string _madt, string dk)
        {
            DataSet ds = new DataSet();
            string[] s = { "DMVTYT_GIA_RPT" };
            SqlHelper.FillDataset(SQLConnectionData, DatabaseOwner + ObjectQualifier + "spDMVTYT_GIA_RPT", ds, s, _madt, dk);
            // // // //// ds.WriteXmlSchema("DMVTYT_GIA_RPT.xsd");
            return ds;
        }
        public override DataSet RptGetGiaPhauThuat(string _madt, bool qadmin)
        {
            DataSet ds = new DataSet();
            string[] s = { "CrDMPhauThuat_GIA_RPT" };
            SqlHelper.FillDataset(SQLConnectionData, DatabaseOwner + ObjectQualifier + "spDMPhauThuat_GIA_rpt", ds, s, _madt, qadmin);
            // // // //// ds.WriteXmlSchema("PhauThuat_GIA_RPT.xsd");
            return ds;
        }
        public override DataSet RptGetGiuong(string _madt, string _dk, bool qadmin)
        {
            DataSet ds = new DataSet();
            string[] s = { "CRDMGiuong_GIA_RPT.rpt" };
            SqlHelper.FillDataset(SQLConnectionData, DatabaseOwner + ObjectQualifier + "spDMGiuong_GIA_rpt", ds, s, _madt, _dk, qadmin);
            // // // //// ds.WriteXmlSchema("Giuong_GIA_RPT.xsd");
            return ds;
        }
        public override DataSet CrDMThuoc_GIA_RPT(string _madt, bool qadmin, String DK)
        {
            DataSet ds = new DataSet();
            string[] s = { "DMThuoc_GIA_RPT" };
            SqlHelper.FillDataset(SQLConnectionData, DatabaseOwner + ObjectQualifier + "spDMThuoc_GIA_Rpt", ds, s, _madt, qadmin, DK);
            // // // //// ds.WriteXmlSchema("DMThuoc_GIA_RPT.xsd");
            return ds;
        }
        public override DataSet CrDMThuoc_BHXH_RPT(Boolean _qadmin, string _DK, DateTime _TuNgay, DateTime _DenNgay)
        {
            DataSet ds = new DataSet();
            string[] s = { "DMThuoc_BHXH_RPT" };
            SqlHelper.FillDataset(SQLConnectionData, DatabaseOwner + ObjectQualifier + "spDMThuoc_GETS", ds, s, _qadmin, _DK, _TuNgay, _DenNgay);
            // ds.WriteXmlSchema("DMThuoc_BHXH_RPT.xsd");
            return ds;
        }
        public override DataSet CrDMThuoc_GIA_Quay_RPT(string _DK, Boolean _qadmin)
        {
            DataSet ds = new DataSet();
            string[] s = { "DMThuoc_GIA_RPT" };
            SqlHelper.FillDataset(SQLConnectionData, DatabaseOwner + ObjectQualifier + "spDMThuoc_Finds", ds, s, _DK, _qadmin);
            //  // ds.WriteXmlSchema("DMThuoc_GIA_Quay_RPT.xsd");
            return ds;
        }
        public override DataSet CrDMThuoc_GIA_Quay56_RPT(string _DK, Boolean _qadmin)
        {
            DataSet ds = new DataSet();
            string[] s = { "DMThuoc_GIA_RPT" };
            SqlHelper.FillDataset(SQLConnectionData, DatabaseOwner + ObjectQualifier + "spDMThuoc_Finds", ds, s, _DK, _qadmin);
            // // // //// ds.WriteXmlSchema("DMThuoc_GIA_RPT.xsd");
            return ds;
        }

        public override DataSet RptDMDichVu_GIA_RPT(string Madt, string _dk, bool qadmin)
        {
            DataSet ds = new DataSet();
            string[] s = { "DMDichVu_GIA_RPT" };
            SqlHelper.FillDataset(SQLConnectionData, DatabaseOwner + ObjectQualifier + "spDMDichVu_GIA_rpt", ds, s, Madt, _dk, qadmin);
            // // // //// ds.WriteXmlSchema("DMDichVu_GIA_RPT.xsd");
            return ds;
        }
        #endregion
        #region KHTH

        #region danh cho hue
        public override DataSet CrBCBanGiamDoc(string noitt, byte loai)
        {
            // return SqlHelper.ExecuteDataset(ConnectString, "spBC_KHTH_tinhhinhKBtheoDP", tungay, denngay, matinh, noitt, DK);
            DataSet ds = new DataSet();
            System.Data.SqlClient.SqlCommand cmd = SqlHelper.CreateCommand(SQLConnectionBDNoiT, DatabaseOwner + ObjectQualifier + "spBC_KHTH_BGD");

            cmd.CommandTimeout = 18000;
            cmd.CommandType = System.Data.CommandType.StoredProcedure;
            cmd.Parameters.AddWithValue("noitt", noitt );
            cmd.Parameters.AddWithValue("loai", loai);
            System.Data.SqlClient.SqlDataAdapter sqlad = new System.Data.SqlClient.SqlDataAdapter(cmd);

            sqlad.Fill(ds);
            sqlad = null;
            cmd = null;
            return ds;
        }

        public override DataSet CrBCTHBenhNhanNgoaiTruTheoICD10(DateTime tungay, DateTime denngay, String maicd,string noitt, String DK)
        {
            // return SqlHelper.ExecuteDataset(ConnectString, "spBC_KHTH_tinhhinhKBtheoDP", tungay, denngay, matinh, noitt, DK);
            DataSet ds = new DataSet();
            System.Data.SqlClient.SqlCommand cmd = SqlHelper.CreateCommand(SQLConnectionBDNoiT, DatabaseOwner + ObjectQualifier + "spBC_KHTH_tinhhinhkb_theoicd");

            cmd.CommandTimeout = 18000;
            cmd.CommandType = System.Data.CommandType.StoredProcedure;
            cmd.Parameters.AddWithValue("TuNgay", tungay);
            cmd.Parameters.AddWithValue("DenNgay", denngay);
            cmd.Parameters.AddWithValue("noitt", noitt);
            cmd.Parameters.AddWithValue("maicd", maicd);
            cmd.Parameters.AddWithValue("DK", DK);
            System.Data.SqlClient.SqlDataAdapter sqlad = new System.Data.SqlClient.SqlDataAdapter(cmd);

            sqlad.Fill(ds);
            sqlad = null;
            cmd = null;
            return ds;
        }

        public override DataSet CrBCTHKhamBenhTheoDiaPhuong(DateTime tungay, DateTime denngay, String matinh, String noitt, String DK)
        {
            // return SqlHelper.ExecuteDataset(ConnectString, "spBC_KHTH_tinhhinhKBtheoDP", tungay, denngay, matinh, noitt, DK);
            DataSet ds = new DataSet();
            System.Data.SqlClient.SqlCommand cmd = SqlHelper.CreateCommand(SQLConnectionBDNoiT, DatabaseOwner + ObjectQualifier + "spBC_KHTH_tinhhinhKBtheoDP");

            cmd.CommandTimeout = 18000;
            cmd.CommandType = System.Data.CommandType.StoredProcedure;
            cmd.Parameters.AddWithValue("TuNgay", tungay);
            cmd.Parameters.AddWithValue("DenNgay", denngay);
            cmd.Parameters.AddWithValue("matinh", matinh);
            cmd.Parameters.AddWithValue("noitt", noitt);
            cmd.Parameters.AddWithValue("DK", DK);
            System.Data.SqlClient.SqlDataAdapter sqlad = new System.Data.SqlClient.SqlDataAdapter(cmd);

            sqlad.Fill(ds);
            sqlad = null;
            cmd = null;
            return ds;
        }
    
        public override DataSet CRPhanTichTuVong13(DateTime _tuNgay, DateTime _denNgay, string mabenhrv, string tuoi, string _noitt, string dk)
        //public override DataSet CRDSBNNhap(DateTime _tuNgay, DateTime _denNgay, string kqdtri, string dk)
        {
            DataSet ds = new DataSet();
            string[] s = { "CRBCKHTH" };
            //  SqlHelper.FillDataset(SQLConnectionData, DatabaseOwner + ObjectQualifier + "spBC_KHTH_bndieutrivaravien_bc1b", _tuNgay,_denNgay , maicd, matinh, mahuyen, dk);
            System.Data.SqlClient.SqlCommand cmd = SqlHelper.CreateCommand(SQLConnectionBD, DatabaseOwner + ObjectQualifier + "spBC_KHTH_phantichtuvong13");

            cmd.CommandTimeout = 18000;
            cmd.CommandType = System.Data.CommandType.StoredProcedure;
            cmd.Parameters.AddWithValue("tuNgay", _tuNgay);
            cmd.Parameters.AddWithValue("denNgay", _denNgay);
            cmd.Parameters.AddWithValue("mabenhrv", mabenhrv);
            cmd.Parameters.AddWithValue("tuoi", tuoi);
            cmd.Parameters.AddWithValue("noitt", _noitt);
            cmd.Parameters.AddWithValue("DK", dk);

            System.Data.SqlClient.SqlDataAdapter sqlad = new System.Data.SqlClient.SqlDataAdapter(cmd);

            sqlad.Fill(ds);
            if (ds.Tables.Count > 0)

                ds.Tables[0].TableName = "CRDSBNDieuTriVaRaVien_Rpt";


            //ds.WriteXmlSchema("C:\\tem\\CRBCKHTH.xsd");
            return ds;
        }
        public override DataSet CRDSBNVaoVien14(DateTime _tuNgay, DateTime _denNgay, string matinh, string _noitt, string dk)
        {
            DataSet ds = new DataSet();
            string[] s = { "CRBCKHTH" };
            System.Data.SqlClient.SqlCommand cmd = SqlHelper.CreateCommand(SQLConnectionBD, DatabaseOwner + ObjectQualifier + "spBC_KHTH_dsbnvaoviennhieulan14");

            cmd.CommandTimeout = 18000;
            cmd.CommandType = System.Data.CommandType.StoredProcedure;
            cmd.Parameters.AddWithValue("tuNgay", _tuNgay);
            cmd.Parameters.AddWithValue("denNgay", _denNgay);
            cmd.Parameters.AddWithValue("matinh", matinh);
            cmd.Parameters.AddWithValue("noitt", _noitt);
            cmd.Parameters.AddWithValue("DK", dk);

            System.Data.SqlClient.SqlDataAdapter sqlad = new System.Data.SqlClient.SqlDataAdapter(cmd);

            sqlad.Fill(ds);
            if (ds.Tables.Count > 0)

                ds.Tables[0].TableName = "CRDSBNDieuTriVaRaVien_Rpt";


            //ds.WriteXmlSchema("C:\\tem\\CRBCKHTH.xsd");
            return ds;
        }
        public override DataSet CRPhanTichKQDT16(DateTime _tuNgay, DateTime _denNgay, string tuoi, string _noitt, string dk)
        {
            DataSet ds = new DataSet();
            string[] s = { "CRBCKHTH" };
            System.Data.SqlClient.SqlCommand cmd = SqlHelper.CreateCommand(SQLConnectionBD, DatabaseOwner + ObjectQualifier + "spBC_KHTH_ptkqdtcomo16");

            cmd.CommandTimeout = 18000;
            cmd.CommandType = System.Data.CommandType.StoredProcedure;
            cmd.Parameters.AddWithValue("tuNgay", _tuNgay);
            cmd.Parameters.AddWithValue("denNgay", _denNgay);
            cmd.Parameters.AddWithValue("tuoi", tuoi);
            cmd.Parameters.AddWithValue("noitt", _noitt);
            cmd.Parameters.AddWithValue("DK", dk);

            System.Data.SqlClient.SqlDataAdapter sqlad = new System.Data.SqlClient.SqlDataAdapter(cmd);

            sqlad.Fill(ds);
            if (ds.Tables.Count > 0)

                ds.Tables[0].TableName = "CRDSBNDieuTriVaRaVien_Rpt";


            //ds.WriteXmlSchema("C:\\tem\\CRBCKHTH.xsd");
            return ds;
        }
        public override DataSet CRPhanTichKhoa17(DateTime _tuNgay, DateTime _denNgay, string tuoi, string _noitt, string dk)
        {
            DataSet ds = new DataSet();
            string[] s = { "CRBCKHTH" };
            System.Data.SqlClient.SqlCommand cmd = SqlHelper.CreateCommand(SQLConnectionBD, DatabaseOwner + ObjectQualifier + "spBC_KHTH_ptkqdttheokhoa17");

            cmd.CommandTimeout = 18000;
            cmd.CommandType = System.Data.CommandType.StoredProcedure;
            cmd.Parameters.AddWithValue("tuNgay", _tuNgay);
            cmd.Parameters.AddWithValue("denNgay", _denNgay);
            cmd.Parameters.AddWithValue("tuoi", tuoi);
            cmd.Parameters.AddWithValue("noitt", _noitt);
            cmd.Parameters.AddWithValue("DK", dk);

            System.Data.SqlClient.SqlDataAdapter sqlad = new System.Data.SqlClient.SqlDataAdapter(cmd);

            sqlad.Fill(ds);
            if (ds.Tables.Count > 0)

                ds.Tables[0].TableName = "CRDSBNDieuTriVaRaVien_Rpt";


            //ds.WriteXmlSchema("C:\\tem\\CRBCKHTH.xsd");
            return ds;
        }
     
        public override DataSet CRBCPhanTichBenhNhi19(DateTime _tuNgay, DateTime _denNgay, string tuoi, string _noitt, string dk)
        {
            DataSet ds = new DataSet();
            string[] s = { "CRBCKHTH" };
            System.Data.SqlClient.SqlCommand cmd = SqlHelper.CreateCommand(SQLConnectionBD, DatabaseOwner + ObjectQualifier + "spBC_KHTH_ptkqdttheotinh19");

            cmd.CommandTimeout = 18000;
            cmd.CommandType = System.Data.CommandType.StoredProcedure;
            cmd.Parameters.AddWithValue("tuNgay", _tuNgay);
            cmd.Parameters.AddWithValue("denNgay", _denNgay);
            cmd.Parameters.AddWithValue("tuoi", tuoi);
            cmd.Parameters.AddWithValue("noitt", _noitt);
            cmd.Parameters.AddWithValue("DK", dk);

            System.Data.SqlClient.SqlDataAdapter sqlad = new System.Data.SqlClient.SqlDataAdapter(cmd);

            sqlad.Fill(ds);
            if (ds.Tables.Count > 0)

                ds.Tables[0].TableName = "CRDSBNDieuTriVaRaVien_Rpt";


            //ds.WriteXmlSchema("C:\\tem\\CRBCKHTH.xsd");
            return ds;
        }
        public override DataSet CRPHBenhnhiTheoDiaPhuong19(DateTime _tuNgay, DateTime _denNgay, string tuoi, string _noitt, string dk)
        {
            DataSet ds = new DataSet();
            string[] s = { "CRBCKHTH" };
            System.Data.SqlClient.SqlCommand cmd = SqlHelper.CreateCommand(SQLConnectionBD, DatabaseOwner + ObjectQualifier + "spBC_KHTH_ptkqdttheotinh19");

            cmd.CommandTimeout = 18000;
            cmd.CommandType = System.Data.CommandType.StoredProcedure;
            cmd.Parameters.AddWithValue("tuNgay", _tuNgay);
            cmd.Parameters.AddWithValue("denNgay", _denNgay);
            cmd.Parameters.AddWithValue("tuoi", tuoi);
            cmd.Parameters.AddWithValue("noitt", _noitt);
            cmd.Parameters.AddWithValue("DK", dk);

            System.Data.SqlClient.SqlDataAdapter sqlad = new System.Data.SqlClient.SqlDataAdapter(cmd);

            sqlad.Fill(ds);
            if (ds.Tables.Count > 0)

                ds.Tables[0].TableName = "CRDSBNDieuTriVaRaVien_Rpt";


            //ds.WriteXmlSchema("C:\\tem\\CRBCKHTH.xsd");
            return ds;
        }

        public override DataSet CRPHBenhnhiTheoGioThang20(DateTime _tuNgay, DateTime _denNgay, string tuoi, string _noitt, string dk)
        {
            DataSet ds = new DataSet();
            string[] s = { "CRBCKHTH" };
            System.Data.SqlClient.SqlCommand cmd = SqlHelper.CreateCommand(SQLConnectionBD, DatabaseOwner + ObjectQualifier + "spBC_KHTH_ptkqdttheotg20");

            cmd.CommandTimeout = 18000;
            cmd.CommandType = System.Data.CommandType.StoredProcedure;
            cmd.Parameters.AddWithValue("tuNgay", _tuNgay);
            cmd.Parameters.AddWithValue("denNgay", _denNgay);
            cmd.Parameters.AddWithValue("tuoi", tuoi);
            cmd.Parameters.AddWithValue("noitt", _noitt);
            cmd.Parameters.AddWithValue("DK", dk);

            System.Data.SqlClient.SqlDataAdapter sqlad = new System.Data.SqlClient.SqlDataAdapter(cmd);

            sqlad.Fill(ds);
            if (ds.Tables.Count > 0)

                ds.Tables[0].TableName = "CRDSBNDieuTriVaRaVien_Rpt";


            //ds.WriteXmlSchema("C:\\tem\\CRBCKHTH.xsd");
            return ds;
        }
        public override DataSet CRBCDSBenhNhanXuatVien1c(DateTime _tuNgay, DateTime _denNgay, string makhoa, string _noitt, string dk)
        {
            DataSet ds = new DataSet();
            string[] s = { "CRBCKHTH" };
            System.Data.SqlClient.SqlCommand cmd = SqlHelper.CreateCommand(SQLConnectionBD, DatabaseOwner + ObjectQualifier + "spBC_KHTH_bnxuatvien1c");

            cmd.CommandTimeout = 18000;
            cmd.CommandType = System.Data.CommandType.StoredProcedure;
            cmd.Parameters.AddWithValue("tuNgay", _tuNgay);
            cmd.Parameters.AddWithValue("denNgay", _denNgay);
            cmd.Parameters.AddWithValue("makhoa", makhoa);
            cmd.Parameters.AddWithValue("noitt", _noitt);
            cmd.Parameters.AddWithValue("DK", dk);

            System.Data.SqlClient.SqlDataAdapter sqlad = new System.Data.SqlClient.SqlDataAdapter(cmd);

            sqlad.Fill(ds);
            if (ds.Tables.Count > 0)

                ds.Tables[0].TableName = "CRDSBNDieuTriVaRaVien_Rpt";


            //ds.WriteXmlSchema("C:\\tem\\CRBCKHTH.xsd");
            return ds;
        }
        public override DataSet CRDSBNNhapVienTheoDiaPhuong1a(DateTime _tuNgay, DateTime _denNgay, string maicd, string matinh, string mahuyen, string _noitt, string dk)
        {
            DataSet ds = new DataSet();
            string[] s = { "CRBCKHTH" };
            System.Data.SqlClient.SqlCommand cmd = SqlHelper.CreateCommand(SQLConnectionBD, DatabaseOwner + ObjectQualifier + "spBC_KHTH_bnnhapvien_bc1a");

            cmd.CommandTimeout = 18000;
            cmd.CommandType = System.Data.CommandType.StoredProcedure;
            cmd.Parameters.AddWithValue("tuNgay", _tuNgay);
            cmd.Parameters.AddWithValue("denNgay", _denNgay);
            cmd.Parameters.AddWithValue("maicd", maicd);
            cmd.Parameters.AddWithValue("matinh", matinh);
            cmd.Parameters.AddWithValue("mahuyen", mahuyen);
            cmd.Parameters.AddWithValue("noitt", _noitt);
            cmd.Parameters.AddWithValue("DK", dk);

            System.Data.SqlClient.SqlDataAdapter sqlad = new System.Data.SqlClient.SqlDataAdapter(cmd);

            sqlad.Fill(ds);
            if (ds.Tables.Count > 0)

                ds.Tables[0].TableName = "CRDSBNDieuTriVaRaVien_Rpt";


            //ds.WriteXmlSchema("C:\\tem\\CRBCKHTH.xsd");
            return ds;
        }
        public override DataSet CRDSBNDieuTriVaRaVien1b(DateTime _tuNgay, DateTime _denNgay, string maicd, string matinh, string mahuyen, string _noitt, string dk)
        {
            DataSet ds = new DataSet();
            string[] s = { "CRBCKHTH" };
            System.Data.SqlClient.SqlCommand cmd = SqlHelper.CreateCommand(SQLConnectionBD, DatabaseOwner + ObjectQualifier + "spBC_KHTH_bndieutrivaravien_bc1b");

            cmd.CommandTimeout = 18000;
            cmd.CommandType = System.Data.CommandType.StoredProcedure;
            cmd.Parameters.AddWithValue("tuNgay", _tuNgay);
            cmd.Parameters.AddWithValue("denNgay", _denNgay);
            cmd.Parameters.AddWithValue("maicd", maicd);
            cmd.Parameters.AddWithValue("matinh", matinh);
            cmd.Parameters.AddWithValue("mahuyen", mahuyen);
            cmd.Parameters.AddWithValue("noitt", _noitt);
            cmd.Parameters.AddWithValue("DK", dk);

            System.Data.SqlClient.SqlDataAdapter sqlad = new System.Data.SqlClient.SqlDataAdapter(cmd);

            sqlad.Fill(ds);
            if (ds.Tables.Count > 0)

                ds.Tables[0].TableName = "CRDSBNDieuTriVaRaVien_Rpt";


            //ds.WriteXmlSchema("C:\\tem\\CRBCKHTH.xsd");
            return ds;
        }
        public override DataSet CRBCDSBNNhapVienTuVongTaiCC8(DateTime _tuNgay, DateTime _denNgay, string _noitt, string dk)
        {
            DataSet ds = new DataSet();
            string[] s = { "CRBCKHTH" };
            System.Data.SqlClient.SqlCommand cmd = SqlHelper.CreateCommand(SQLConnectionBD, DatabaseOwner + ObjectQualifier + "spBC_KHTH_phantichtuvongcc8");

            cmd.CommandTimeout = 18000;
            cmd.CommandType = System.Data.CommandType.StoredProcedure;
            cmd.Parameters.AddWithValue("tuNgay", _tuNgay);
            cmd.Parameters.AddWithValue("denNgay", _denNgay);

            cmd.Parameters.AddWithValue("noitt", _noitt);
            cmd.Parameters.AddWithValue("DK", dk);

            System.Data.SqlClient.SqlDataAdapter sqlad = new System.Data.SqlClient.SqlDataAdapter(cmd);

            sqlad.Fill(ds);
            if (ds.Tables.Count > 0)

                ds.Tables[0].TableName = "CRDSBNDieuTriVaRaVien_Rpt";


            //ds.WriteXmlSchema("C:\\tem\\CRBCKHTH.xsd");
            return ds;
        }

        public override DataSet CRBCDSBenhNhanRaVienTheoKQDT5(DateTime _tuNgay, DateTime _denNgay, string kqdtri, string _noitt, string dk)
        {
            DataSet ds = new DataSet();
            string[] s = { "CRBCKHTH" };
            System.Data.SqlClient.SqlCommand cmd = SqlHelper.CreateCommand(SQLConnectionBD, DatabaseOwner + ObjectQualifier + "spBC_KHTH_bnravientheokqdt5");

            cmd.CommandTimeout = 18000;
            cmd.CommandType = System.Data.CommandType.StoredProcedure;
            cmd.Parameters.AddWithValue("tuNgay", _tuNgay);
            cmd.Parameters.AddWithValue("denNgay", _denNgay);
            cmd.Parameters.AddWithValue("kqdtri", kqdtri);
            cmd.Parameters.AddWithValue("noitt", _noitt);
            cmd.Parameters.AddWithValue("DK", dk);

            System.Data.SqlClient.SqlDataAdapter sqlad = new System.Data.SqlClient.SqlDataAdapter(cmd);

            sqlad.Fill(ds);
            if (ds.Tables.Count > 0)

                ds.Tables[0].TableName = "CRDSBNDieuTriVaRaVien_Rpt";


            //ds.WriteXmlSchema("C:\\tem\\CRBCKHTH.xsd");
            return ds;
        }
        public override DataSet CRBCTongSoBNXuatVIenTheoKhoa10(DateTime _tuNgay, DateTime _denNgay, string _noitt,string _makhoa, string dk)
        {
            DataSet ds = new DataSet();
            string[] s = { "CRBCKHTH" };
            System.Data.SqlClient.SqlCommand cmd = SqlHelper.CreateCommand(SQLConnectionBD, DatabaseOwner + ObjectQualifier + "spBC_KHTH_bnxuatvientheokhoa10");

            cmd.CommandTimeout = 18000;
            cmd.CommandType = System.Data.CommandType.StoredProcedure;
            cmd.Parameters.AddWithValue("tuNgay", _tuNgay);
            cmd.Parameters.AddWithValue("denNgay", _denNgay);
            cmd.Parameters.AddWithValue("noitt", _noitt);
            cmd.Parameters.AddWithValue("makhoa", _makhoa);
            cmd.Parameters.AddWithValue("DK", dk);

            System.Data.SqlClient.SqlDataAdapter sqlad = new System.Data.SqlClient.SqlDataAdapter(cmd);

            sqlad.Fill(ds);
            if (ds.Tables.Count > 0)

                ds.Tables[0].TableName = "CRDSBNDieuTriVaRaVien_Rpt";


            //ds.WriteXmlSchema("C:\\tem\\CRBCKHTH.xsd");
            return ds;
        }
        public override DataSet CRBCPhanTichBenhTheoICD11(DateTime _tuNgay, DateTime _denNgay, string mabenhrv, byte loaibc, string tuoi, string _noitt, string dk)
        {
            DataSet ds = new DataSet();
            string[] s = { "CRBCKHTH" };
            System.Data.SqlClient.SqlCommand cmd = SqlHelper.CreateCommand(SQLConnectionBD, DatabaseOwner + ObjectQualifier + "spBC_KHTH_phantich12");

            cmd.CommandTimeout = 18000;
            cmd.CommandType = System.Data.CommandType.StoredProcedure;
            cmd.Parameters.AddWithValue("tuNgay", _tuNgay);
            cmd.Parameters.AddWithValue("denNgay", _denNgay);
            cmd.Parameters.AddWithValue("mabenhrv", mabenhrv);
            cmd.Parameters.AddWithValue("noitt", _noitt);
            cmd.Parameters.AddWithValue("loaibc", loaibc);
            cmd.Parameters.AddWithValue("tuoi", tuoi);
            cmd.Parameters.AddWithValue("DK", dk);

            System.Data.SqlClient.SqlDataAdapter sqlad = new System.Data.SqlClient.SqlDataAdapter(cmd);

            sqlad.Fill(ds);
            if (ds.Tables.Count > 0)

                ds.Tables[0].TableName = "CRDSBNDieuTriVaRaVien_Rpt";


            //ds.WriteXmlSchema("C:\\tem\\CRBCKHTH.xsd");
            return ds;
        }
        public override DataSet CRBCPhanTichTHEOiCD13(DateTime _tuNgay, DateTime _denNgay, string mabenhrv, string tuoi, string _noitt, string dk)
        {
            DataSet ds = new DataSet();
            string[] s = { "CRBCKHTH" };
            System.Data.SqlClient.SqlCommand cmd = SqlHelper.CreateCommand(SQLConnectionBD, DatabaseOwner + ObjectQualifier + "spBC_KHTH_phantichtuvong13");

            cmd.CommandTimeout = 18000;
            cmd.CommandType = System.Data.CommandType.StoredProcedure;
            cmd.Parameters.AddWithValue("tuNgay", _tuNgay);
            cmd.Parameters.AddWithValue("denNgay", _denNgay);
            cmd.Parameters.AddWithValue("mabenhrv", mabenhrv);
            cmd.Parameters.AddWithValue("tuoi", tuoi);
            cmd.Parameters.AddWithValue("noitt", _noitt);
            cmd.Parameters.AddWithValue("DK", dk);

            System.Data.SqlClient.SqlDataAdapter sqlad = new System.Data.SqlClient.SqlDataAdapter(cmd);

            sqlad.Fill(ds);
            if (ds.Tables.Count > 0)

                ds.Tables[0].TableName = "CRDSBNDieuTriVaRaVien_Rpt";


            //ds.WriteXmlSchema("C:\\tem\\CRBCKHTH.xsd");
            return ds;
        }
        public override DataSet CRBCDanhSachBNRaVVNhieuLan14(DateTime _tuNgay, DateTime _denNgay, string matinh, string _noitt, string dk)
        {
            DataSet ds = new DataSet();
            string[] s = { "CRBCKHTH" };
            System.Data.SqlClient.SqlCommand cmd = SqlHelper.CreateCommand(SQLConnectionBD, DatabaseOwner + ObjectQualifier + "spBC_KHTH_dsbnvaoviennhieulan14");

            cmd.CommandTimeout = 18000;
            cmd.CommandType = System.Data.CommandType.StoredProcedure;
            cmd.Parameters.AddWithValue("tuNgay", _tuNgay);
            cmd.Parameters.AddWithValue("denNgay", _denNgay);
            cmd.Parameters.AddWithValue("matinh", matinh);
            cmd.Parameters.AddWithValue("noitt", _noitt);
            cmd.Parameters.AddWithValue("DK", dk);

            System.Data.SqlClient.SqlDataAdapter sqlad = new System.Data.SqlClient.SqlDataAdapter(cmd);

            sqlad.Fill(ds);
            if (ds.Tables.Count > 0)

                ds.Tables[0].TableName = "CRDSBNDieuTriVaRaVien_Rpt";


            //ds.WriteXmlSchema("C:\\tem\\CRBCKHTH.xsd");
            return ds;
        }
        public override DataSet CRBCplpttheoBAravien15(DateTime _tuNgay, DateTime _denNgay, string makhoa, string _noitt, string dk)
        {
            DataSet ds = new DataSet();
            string[] s = { "CRBCKHTH" };
            System.Data.SqlClient.SqlCommand cmd = SqlHelper.CreateCommand(SQLConnectionBD, DatabaseOwner + ObjectQualifier + "spBC_KHTH_plpttheoBAravien15");

            cmd.CommandTimeout = 18000;
            cmd.CommandType = System.Data.CommandType.StoredProcedure;
            cmd.Parameters.AddWithValue("tuNgay", _tuNgay);
            cmd.Parameters.AddWithValue("denNgay", _denNgay);
            cmd.Parameters.AddWithValue("makhoa", makhoa);
            cmd.Parameters.AddWithValue("noitt", _noitt);
            cmd.Parameters.AddWithValue("DK", dk);

            System.Data.SqlClient.SqlDataAdapter sqlad = new System.Data.SqlClient.SqlDataAdapter(cmd);

            sqlad.Fill(ds);
            if (ds.Tables.Count > 0)

                ds.Tables[0].TableName = "CRDSBNDieuTriVaRaVien_Rpt";


            //ds.WriteXmlSchema("C:\\tem\\CRBCKHTH.xsd");
            return ds;
        }
        public override DataSet CRBCbnravientheomaICD22(DateTime _tuNgay, DateTime _denNgay, string makhoa, string _noitt, string dk)
        {
            DataSet ds = new DataSet();
            string[] s = { "CRBCKHTH" };
            System.Data.SqlClient.SqlCommand cmd = SqlHelper.CreateCommand(SQLConnectionBD, DatabaseOwner + ObjectQualifier + "spBC_KHTH_bnravientheomaICD22");

            cmd.CommandTimeout = 18000;
            cmd.CommandType = System.Data.CommandType.StoredProcedure;
            cmd.Parameters.AddWithValue("tuNgay", _tuNgay);
            cmd.Parameters.AddWithValue("denNgay", _denNgay);
            cmd.Parameters.AddWithValue("makhoa", makhoa);
            cmd.Parameters.AddWithValue("noitt", _noitt);
            cmd.Parameters.AddWithValue("DK", dk);

            System.Data.SqlClient.SqlDataAdapter sqlad = new System.Data.SqlClient.SqlDataAdapter(cmd);

            sqlad.Fill(ds);
            if (ds.Tables.Count > 0)

                ds.Tables[0].TableName = "CRDSBNDieuTriVaRaVien_Rpt";


            //ds.WriteXmlSchema("C:\\tem\\CRBCKHTH.xsd");
            return ds;
        }
        public override DataSet BC_KHTH_dsbnphauthuat18(DateTime _tuNgay, DateTime _denNgay, string makhoa, string mabs, string kqdt, string gt, string dtbn, string _noitt, string dk)
        {
            DataSet ds = new DataSet();
            string[] s = { "CRBCKHTH" };
            System.Data.SqlClient.SqlCommand cmd = SqlHelper.CreateCommand(SQLConnectionBD, DatabaseOwner + ObjectQualifier + "spBC_KHTH_dsbnphauthuat18");

            cmd.CommandTimeout = 18000;
            cmd.CommandType = System.Data.CommandType.StoredProcedure;
            cmd.Parameters.AddWithValue("tuNgay", _tuNgay);
            cmd.Parameters.AddWithValue("denNgay", _denNgay);
            cmd.Parameters.AddWithValue("makhoa", makhoa);
            cmd.Parameters.AddWithValue("mabs", mabs);
            cmd.Parameters.AddWithValue("kqdt", kqdt);
            cmd.Parameters.AddWithValue("gt", gt);
            cmd.Parameters.AddWithValue("dtbn", dtbn);
            cmd.Parameters.AddWithValue("noitt", _noitt);
            cmd.Parameters.AddWithValue("DK", dk);

            System.Data.SqlClient.SqlDataAdapter sqlad = new System.Data.SqlClient.SqlDataAdapter(cmd);

            sqlad.Fill(ds);
            if (ds.Tables.Count > 0)

                ds.Tables[0].TableName = "CRDSBNDieuTriVaRaVien_Rpt";


            //ds.WriteXmlSchema("C:\\tem\\CRBCKHTH.xsd");
            return ds;
        }
        public override DataSet CRPHBenhnhiTheoGioThang21(DateTime _tuNgay, DateTime _denNgay, string tuoi, string _noitt, string dk)
        {
            DataSet ds = new DataSet();
            string[] s = { "CRBCKHTH" };
            System.Data.SqlClient.SqlCommand cmd = SqlHelper.CreateCommand(SQLConnectionBD, DatabaseOwner + ObjectQualifier + "spBC_KHTH_ptkqdttheogt21");

            cmd.CommandTimeout = 18000;
            cmd.CommandType = System.Data.CommandType.StoredProcedure;
            cmd.Parameters.AddWithValue("tuNgay", _tuNgay);
            cmd.Parameters.AddWithValue("denNgay", _denNgay);
            cmd.Parameters.AddWithValue("tuoi", tuoi);
            cmd.Parameters.AddWithValue("noitt", _noitt);
            cmd.Parameters.AddWithValue("DK", dk);

            System.Data.SqlClient.SqlDataAdapter sqlad = new System.Data.SqlClient.SqlDataAdapter(cmd);

            sqlad.Fill(ds);
            if (ds.Tables.Count > 0)

                ds.Tables[0].TableName = "CRDSBNDieuTriVaRaVien_Rpt";


            //ds.WriteXmlSchema("C:\\tem\\CRBCKHTH.xsd");
            return ds;
        }

        public override DataSet CRTHBenhNhanNhapVienCHuyenKhoa24a(DateTime _tuNgay, DateTime _denNgay, string _noitt, string dk)
        {
            DataSet ds = new DataSet();
            string[] s = { "CRBCKHTH" };
            System.Data.SqlClient.SqlCommand cmd = SqlHelper.CreateCommand(SQLConnectionBD, DatabaseOwner + ObjectQualifier + "spbc_khth_bnnhapvienchuyenkhoa24a");

            cmd.CommandTimeout = 18000;
            cmd.CommandType = System.Data.CommandType.StoredProcedure;
            cmd.Parameters.AddWithValue("tuNgay", _tuNgay);
            cmd.Parameters.AddWithValue("denNgay", _denNgay);
            cmd.Parameters.AddWithValue("noitt", _noitt);
            cmd.Parameters.AddWithValue("DK", dk);

            System.Data.SqlClient.SqlDataAdapter sqlad = new System.Data.SqlClient.SqlDataAdapter(cmd);

            sqlad.Fill(ds);
            if (ds.Tables.Count > 0)

                ds.Tables[0].TableName = "CRDSBNDieuTriVaRaVien_Rpt";


            //ds.WriteXmlSchema("C:\\tem\\CRBCKHTH.xsd");
            return ds;
        }

        public override DataSet CRTHBenhNhanNhapVienCHuyenKhoa24b(DateTime _tuNgay, DateTime _denNgay, string _noitt, string dk)
        {
            DataSet ds = new DataSet();
            string[] s = { "CRBCKHTH" };
            System.Data.SqlClient.SqlCommand cmd = SqlHelper.CreateCommand(SQLConnectionBD, DatabaseOwner + ObjectQualifier + "spbc_khth_bnnhapvienchuyenkhoa24a");

            cmd.CommandTimeout = 18000;
            cmd.CommandType = System.Data.CommandType.StoredProcedure;
            cmd.Parameters.AddWithValue("tuNgay", _tuNgay);
            cmd.Parameters.AddWithValue("denNgay", _denNgay);
            cmd.Parameters.AddWithValue("noitt", _noitt);
            cmd.Parameters.AddWithValue("DK", dk);

            System.Data.SqlClient.SqlDataAdapter sqlad = new System.Data.SqlClient.SqlDataAdapter(cmd);

            sqlad.Fill(ds);
            if (ds.Tables.Count > 0)

                ds.Tables[0].TableName = "CRDSBNDieuTriVaRaVien_Rpt";


            //ds.WriteXmlSchema("C:\\tem\\CRBCKHTH.xsd");
            return ds;
        }
        #endregion
        public override DataSet CrGetBC_THChuyenMon(string _mabc)
        {

            DataSet ds = new DataSet();
            string[] s = { "CRBCTinhHinhHDChuyenMonQuy_RPT" };
            SqlHelper.FillDataset(SQLConnectionData, DatabaseOwner + ObjectQualifier + "GetBC_THChuyenMon ", ds, s, _mabc);
            // ds.WriteXmlSchema("CRBaocaoBN.xsd");

            return ds;
        }
        public override DataSet BC_MacBenh_GetALL(String _maKhoa, DateTime _Thang, String _dk, bool qadmin)
        {

            DataSet ds = new DataSet();
            //string[] s = { "CRBaocaoBN" };
            // SqlHelper.FillDataset( ConnectionString, DatabaseOwner + ObjectQualifier + "spBC_MacBenh_GetALL ", ds, s, _maKhoa, _Thang, _dk, qadmin);
            //ds.WriteXmlSchema("CRBaocaoBN.xsd");


            //string[] s2 ={ "CRInphoithanhtoan_BHNT" };
            //SqlHelper.FillDataset( ConnectionString, DatabaseOwner + ObjectQualifier + "spBC_TKDieuTriDongY_Gets", ds, s2, _maSoKham, _DaTT, _loai, _dK);
            // // // //// ds.WriteXmlSchema("CRInphoihoadonthanhtoan_BHNT_RPT.xsd");
            System.Data.SqlClient.SqlCommand cmd = SqlHelper.CreateCommand(SQLConnectionData, DatabaseOwner + ObjectQualifier + "spBC_MacBenh_GetALL");

            cmd.CommandTimeout = 18000;
            cmd.CommandType = System.Data.CommandType.StoredProcedure;
            cmd.Parameters.AddWithValue("MAKHOA", _maKhoa);
            cmd.Parameters.AddWithValue("thang  ", _Thang);
            cmd.Parameters.AddWithValue("DK", _dk);
            cmd.Parameters.AddWithValue("qadmin", qadmin);
            System.Data.SqlClient.SqlDataAdapter sqlad = new System.Data.SqlClient.SqlDataAdapter(cmd);

            sqlad.Fill(ds);
            if (ds.Tables.Count > 0)
                ds.Tables[0].TableName = "CRBaocaoBN";
            sqlad.Dispose(); cmd.Dispose(); sqlad = null;
            cmd = null;
            //// if (SQLConnectionBD.State == System.Data.ConnectionState.Closed)
            //     //SQLConnectionBD.Close(); SQLConnectionBD.Dispose();
            // //if (_sqlConnection.State == System.Data.ConnectionState.Closed)
            // {
            //     //_sqlConnection.Close(); _sqlConnection.Dispose();
            //     //_sqlConnection = null;
            // }
            return ds;

        }
        public override DataSet crBC_ChuyenMonNgay_GetALL(String _maKhoa, DateTime _TuThang, DateTime _DenThang, String _dk, bool qadmin)
        {

            DataSet ds = new DataSet();
            string[] s = { "BC_ChuyenMonNgay" };
            SqlHelper.FillDataset(SQLConnectionData, DatabaseOwner + ObjectQualifier + "spBC_ChuyenMonNgay_C_GetALL ", ds, s, _maKhoa, _TuThang, _DenThang, _dk, qadmin);
            //ds.WriteXmlSchema("BC_ChuyenMonNgay.xsd");

            return ds;
        }
        public override DataSet CRGetTHChuyenMon(String _maKhoa, DateTime _TuThang, DateTime _DenThang, String _dk, bool qadmin)
        {

            DataSet ds = new DataSet();
            string[] s = { "CRGetTHChuyenMon" };
            SqlHelper.FillDataset(SQLConnectionData, DatabaseOwner + ObjectQualifier + "spBC_ChuyenMonTH_GetAll", ds, s, _maKhoa, _TuThang, _DenThang, _dk, qadmin);
            //ds.WriteXmlSchema("CRGetTHChuyenMon.xsd");          

            return ds;
        }
        public override DataSet CrHDCanLamSang_RPT(String MaBC, String DK, Boolean _qadmin)
        {
            DataSet ds = new DataSet();
            string[] s = { "CrHDCanLamSang_RPT" };
            SqlHelper.FillDataset(SQLConnectionData, DatabaseOwner + ObjectQualifier + "spBC_HDCanLamSang_GETALL", ds, s, MaBC, DK, _qadmin);
            // // // //// ds.WriteXmlSchema("CrHDCanLamSang_RPT.xsd");
            return ds;
        }

        public override DataSet CRHDTaiChinhKT_RPT(String MABC, String DK, Boolean _qadmin)
        {
            DataSet ds = new DataSet();
            string[] s = { "CRHDTaiChinhKT_RPT" };
            SqlHelper.FillDataset(SQLConnectionData, DatabaseOwner + ObjectQualifier + "spBC_HDTaiChinhKhThu_GETALL", ds, s, MABC, DK, _qadmin);
            // // // //// ds.WriteXmlSchema("CRHDTaiChinhKT_RPT.xsd");
            return ds;
        }

        public override DataSet CRHDTaiChinh_RPT(String MABC, String DK, Boolean _qadmin)
        {
            DataSet ds = new DataSet();
            string[] s = { "CRHDTaiChinh_RPT" };
            SqlHelper.FillDataset(SQLConnectionData, DatabaseOwner + ObjectQualifier + "spBC_HDTaiChinh_GETALL", ds, s, MABC, DK, _qadmin);
            // // // //// ds.WriteXmlSchema("CRHDTaiChinh_RPT.xsd");
            return ds;
        }

        public override DataSet CRHDTaiChinhBHA_RPT(String MABC, String DK, Boolean _qadmin)
        {
            DataSet ds = new DataSet();
            string[] s = { "CRHDTaiChinhBHA_RPT" };
            SqlHelper.FillDataset(SQLConnectionData, DatabaseOwner + ObjectQualifier + "spBC_HDTaiChinhBH_GETALL", ds, s, MABC, DK, _qadmin);
            // // // //// ds.WriteXmlSchema("CRHDTaiChinhBHA_RPT.xsd");
            return ds;
        }

        public override DataSet CRHDSucKhoe_RPT(String MABC, String DK, Boolean _qadmin)
        {
            DataSet ds = new DataSet();
            string[] s = { "CRHDSucKhoe_RPT" };
            SqlHelper.FillDataset(SQLConnectionData, DatabaseOwner + ObjectQualifier + "spBC_HDSucKhoe_GETALL", ds, s, MABC, DK, _qadmin);
            //// // //// ds.WriteXmlSchema("CRHDSucKhoe_RPT.xsd");
            return ds;
        }
        public override DataSet crBCBenhAn_PhauThuat_RPT(string maKhoa, DateTime Tungay, DateTime Denngay, string madt, string maloaiba, string dk, bool qadmin, byte loaikq)
        {
            DataSet ds = new DataSet();
            string[] s = { "crBCBenhAn_PhauThuat_RPT" };
            SqlHelper.FillDataset(SQLConnectionData, DatabaseOwner + ObjectQualifier + "spBCBenhAn_PhauThuat_GETALL", ds, s, maKhoa, Tungay, Denngay, madt, maloaiba, dk, qadmin, loaikq);
            return ds;
        }
        public override DataSet crBCDSBenhAn(string maKhoa, DateTime Tungay, DateTime Denngay, string madt, string maloaiba, string dk, byte ravien)
        {
            DataSet ds = new DataSet();
            string[] s = { "crBCDSBenhAn" };
            SqlHelper.FillDataset(SQLConnectionData, DatabaseOwner + ObjectQualifier + "spDSBenhAn_GETALL", ds, s, maKhoa, Tungay, Denngay, madt, maloaiba, dk, ravien);
            //ds.WriteXmlSchema("crBCDSBenhAn.xsd");
            return ds;



        }
        public override DataSet crBCDSBenhAn(string _maDT,
      string _MaBN,
      string _Hoten,
      bool _DungTen,
      string _SoThe,
      string _MaBV,
      DateTime _GiaTriDN,
      string _DiaChi,
      string _DienThoai,
      string _DTDD,
      string _DTCQ,
      string _Mail,
      Byte _Tuoi,
      DateTime _NgaySinh,
      Byte _GT,
      string _BaoTin,
      string _MaQG,
      string _MaTinh,
      string _MaHuyen,
      string _MaNN,
      string _MaBA,
      string _MABENH,
      string _MABAQL,
      string _MaLoaiBA,
      DateTime _TuNgayYC,
      DateTime _DenNgayYC,
      string _DK,
      bool qadmin,
      DateTime _DenNgaysinh,
      bool _YCDANGDK,
      bool _YCNGAYSINH)
        {
            DateTime __GiaTriDN = _GiaTriDN;
            if (_GiaTriDN.ToShortDateString() == "01/01/0001")
            { __GiaTriDN = DateTime.Parse("01/01/1753"); };
            DateTime __DenNgaysinh = _DenNgaysinh;
            if (_DenNgaysinh.ToShortDateString() == "01/01/0001")
            { __DenNgaysinh = DateTime.Parse("01/01/1753"); };
            DateTime __NgaySinh = _NgaySinh;
            if (_NgaySinh.ToShortDateString() == "01/01/0001")
            { __NgaySinh = DateTime.Parse("01/01/1753"); };
            DateTime __TuNgayYC = _TuNgayYC;
            if (_TuNgayYC.ToShortDateString() == "01/01/0001")
            { __TuNgayYC = DateTime.Parse("01/01/1753"); };
            DateTime __DenNgayYC = _DenNgayYC;
            if (_DenNgayYC.ToShortDateString() == "01/01/0001")
            { __DenNgayYC = DateTime.Parse("01/01/1753"); };
            //DataSet ds = new DataSet();
            //string[] s = { "crBCDSBenhAn" };
            //SqlHelper.FillDataset(ConnectionString, DatabaseOwner + ObjectQualifier + "spBENHAN_SEARCH", ds, s, _maDT,
            //   _MaBN,
            //   _Hoten,
            //   _DungTen,
            //   _SoThe,
            //   _MaBV,
            //   __GiaTriDN,
            //   _DiaChi,
            //   _DienThoai,
            //   _DTDD,
            //   _DTCQ,
            //   _Mail,
            //   _Tuoi,
            //   __NgaySinh,
            //   _GT,
            //   _BaoTin,
            //   _MaQG,
            //   _MaTinh,
            //   _MaHuyen,
            //   _MaNN,
            //   _MaBA,
            //   _MABENH,
            //   _MABAQL,
            //   _MaLoaiBA,
            //   __TuNgayYC,
            //   __DenNgayYC,

            //   _DK, qadmin,
            //   __DenNgaysinh,
            //   _YCDANGDK, _YCNGAYSINH);


            ////ds.WriteXmlSchema("crBCDSBenhAn.xsd");
            //return ds;


            DataSet ds = new DataSet("crBCDSBenhAn");

            System.Data.SqlClient.SqlCommand cmd = SqlHelper.CreateCommand(SQLConnectionDataBC, DatabaseOwner + ObjectQualifier + "spBENHAN_SEARCH_rpt");

            cmd.CommandTimeout = 18000;

            cmd.CommandType = System.Data.CommandType.StoredProcedure;
            cmd.Parameters.AddWithValue("maDT", _maDT);
            cmd.Parameters.AddWithValue("MaBN", _MaBN);
            cmd.Parameters.AddWithValue("Hoten", _Hoten);
            cmd.Parameters.AddWithValue("DungTen", _DungTen);
            cmd.Parameters.AddWithValue("SoThe", _SoThe);
            cmd.Parameters.AddWithValue("MaBV", _MaBV);
            cmd.Parameters.AddWithValue("GiaTriDN", __GiaTriDN);
            cmd.Parameters.AddWithValue("DiaChi", _DiaChi);
            cmd.Parameters.AddWithValue("DienThoai", _DienThoai);
            cmd.Parameters.AddWithValue("DTDD", _DTDD);
            cmd.Parameters.AddWithValue("DTCQ", _DTCQ);
            cmd.Parameters.AddWithValue("Mail", _Mail);
            cmd.Parameters.AddWithValue("Tuoi", _Tuoi);
            cmd.Parameters.AddWithValue("BaoTin", _BaoTin);
            cmd.Parameters.AddWithValue("maqg", _MaQG);
            cmd.Parameters.AddWithValue("NgaySinh", __NgaySinh);
            cmd.Parameters.AddWithValue("GT", _GT);
            cmd.Parameters.AddWithValue("MaTinh", _MaTinh);
            cmd.Parameters.AddWithValue("MaHuyen", _MaHuyen);
            cmd.Parameters.AddWithValue("mann", _MaNN);
            cmd.Parameters.AddWithValue("MABENH", _MABENH);
            cmd.Parameters.AddWithValue("MABAQL", _MABAQL);
            cmd.Parameters.AddWithValue("maba", _MaBA);
            cmd.Parameters.AddWithValue("MaLoaiBA", _MaLoaiBA);
            cmd.Parameters.AddWithValue("TuNgayYC", __TuNgayYC);
            cmd.Parameters.AddWithValue("DenNgayYC", __DenNgayYC);
            cmd.Parameters.AddWithValue("dk", _DK);
            cmd.Parameters.AddWithValue("qadmin", qadmin);

            cmd.Parameters.AddWithValue("DenNgaysinh", __DenNgaysinh);
            cmd.Parameters.AddWithValue("YCRAVIEN", _YCDANGDK);
            cmd.Parameters.AddWithValue("YCNGAYSINH", _YCNGAYSINH);
            System.Data.SqlClient.SqlDataAdapter sqlad = new System.Data.SqlClient.SqlDataAdapter(cmd);

            sqlad.Fill(ds);
            if (ds.Tables.Count > 0)
                ds.Tables[0].TableName = "crBCDSBenhAn";
            sqlad.Dispose(); cmd.Dispose(); sqlad = null;
            cmd = null;
            //// if (SQLConnectionBD.State == System.Data.ConnectionState.Closed)
            //     //SQLConnectionBD.Close(); SQLConnectionBD.Dispose();
            // //if (_sqlConnection.State == System.Data.ConnectionState.Closed)
            // {
            //     //_sqlConnection.Close(); _sqlConnection.Dispose();
            //     //_sqlConnection = null;
            // }
            return ds;
        }
        public override DataSet crBCHDChuyenMonBV(string maKhoa, DateTime Tungay, DateTime Denngay, string dk, Boolean Qadmin)
        {
            DataSet ds = new DataSet();
            string[] s = { "crBCHDChuyenMonBV" };
            SqlHelper.FillDataset(SQLConnectionDataBC, DatabaseOwner + ObjectQualifier + "spBenhan_PhauThuat_GETs", ds, s, maKhoa, Tungay, Denngay, dk, Qadmin);
            // // ds.WriteXmlSchema("crBCHDChuyenMonBV.xsd");
            return ds;
        }
        public override DataSet CRBCTinhHinhBN(DateTime Tungay, DateTime Denngay, string MaKhoa, byte Loai, string DK)
        {
            DataSet ds = new DataSet();
            string[] s = { "CRBCTinhHinhBN" };
            SqlHelper.FillDataset(SQLConnectionData, DatabaseOwner + ObjectQualifier + "SPNoiTru_ThongkeBN", ds, s, Tungay, Denngay, MaKhoa, Loai, DK);
            // ds.WriteXmlSchema("CRBCTinhHinhBN.xsd");
            return ds;
        }
        public override DataSet CRHDPhauThuat_RPT(String MABC, String DK, Boolean _qadmin)
        {
            DataSet ds = new DataSet();
            string[] s = { "CRHDPhauThuat_RPT" };
            SqlHelper.FillDataset(SQLConnectionData, DatabaseOwner + ObjectQualifier + "spBC_HDPhauThuat_GETALL", ds, s, MABC, DK, _qadmin);
            //// // //// ds.WriteXmlSchema("CRHDPhauThuat_RPT.xsd");
            return ds;
        }

        public override DataSet CRHDDieuTri_RPT(String MABC, String DK, Boolean _qadmin)
        {
            DataSet ds = new DataSet();
            string[] s = { "CRHDDieuTri_RPT" };
            SqlHelper.FillDataset(SQLConnectionData, DatabaseOwner + ObjectQualifier + "spBC_HDDieuTri_GETALL", ds, s, MABC, DK, _qadmin);
            //// // //// ds.WriteXmlSchema("CRHDDieuTri_RPT.xsd");
            return ds;
        }

        public override DataSet CRHDChiDaoTuyen_RPT(String MABC, String DK, Boolean _qadmin)
        {
            DataSet ds = new DataSet();
            string[] s = { "CRHDChiDaoTuyen_RPT" };
            SqlHelper.FillDataset(SQLConnectionData, DatabaseOwner + ObjectQualifier + "spBC_HDChiDaoTuyenA_GETALL", ds, s, MABC, DK, _qadmin);
            //// // //// ds.WriteXmlSchema("CRHDChiDaoTuyen_RPT.xsd");
            return ds;
        }

        public override DataSet CRHDNghienCuu_RPT(String MABC, String DK, Boolean _qadmin)
        {
            DataSet ds = new DataSet();
            string[] s = { "CRHDNghienCuu_RPT" };
            SqlHelper.FillDataset(SQLConnectionData, DatabaseOwner + ObjectQualifier + "spBC_HDChiDaoTuyenB_GETALL", ds, s, MABC, DK, _qadmin);
            //// // //// ds.WriteXmlSchema("CRHDNghienCuu_RPT.xsd");
            return ds;
        }

        public override DataSet CRDuocBV_RPT(String MABC, String DK, Boolean _qadmin)
        {
            DataSet ds = new DataSet();
            string[] s = { "CRDuocBV_RPT" };
          //  SqlHelper.FillDataset(SQLConnectionData, DatabaseOwner + ObjectQualifier + "spBC_DuocBV_GETALL", ds, s, MABC, DK, _qadmin);
            //// // //// ds.WriteXmlSchema("CRDuocBV_RPT.xsd");
            System.Data.SqlClient.SqlCommand cmd = SqlHelper.CreateCommand(SQLConnectionData, DatabaseOwner + ObjectQualifier + "spBC_DuocBV_GETALL");

            cmd.CommandTimeout = 18000;
            cmd.CommandType = System.Data.CommandType.StoredProcedure;
            cmd.Parameters.AddWithValue("MABC ", MABC);
            cmd.Parameters.AddWithValue("DK", DK);
            cmd.Parameters.AddWithValue("QADMIN", _qadmin);
            System.Data.SqlClient.SqlDataAdapter sqlad = new System.Data.SqlClient.SqlDataAdapter(cmd);

            sqlad.Fill(ds);
            if (ds.Tables.Count > 0)
                ds.Tables[0].TableName = "CRDuocBV_RPT";
            sqlad.Dispose(); cmd.Dispose(); sqlad = null;
            cmd = null;
            return ds;
        }

        public override DataSet CRHDKhamBenh_RPT(String MABC, String DK, Boolean _qadmin)
        {
            //DataSet ds = new DataSet();
           // string[] s = { "CRHDKhamBenh_RPT" };
            //SqlHelper.FillDataset(SQLConnectionData, DatabaseOwner + ObjectQualifier + "spBC_HDKhamBenh_GETALL", ds, s, MABC, DK, _qadmin);
            //// // //// ds.WriteXmlSchema("CRHDKhamBenh_RPT.xsd");

            DataSet ds = new DataSet();
            string[] s = { "CRHDKhamBenh_RPT" };
            //  SqlHelper.FillDataset(SQLConnectionData, DatabaseOwner + ObjectQualifier + "spBC_DuocBV_GETALL", ds, s, MABC, DK, _qadmin);
            //// // //// ds.WriteXmlSchema("CRDuocBV_RPT.xsd");
            System.Data.SqlClient.SqlCommand cmd = SqlHelper.CreateCommand(SQLConnectionData, DatabaseOwner + ObjectQualifier + "spBC_HDKhamBenh_GETALL");

            cmd.CommandTimeout = 18000;
            cmd.CommandType = System.Data.CommandType.StoredProcedure;
            cmd.Parameters.AddWithValue("MABC ", MABC);
            cmd.Parameters.AddWithValue("DK", DK);
            cmd.Parameters.AddWithValue("QADMIN", _qadmin);
            System.Data.SqlClient.SqlDataAdapter sqlad = new System.Data.SqlClient.SqlDataAdapter(cmd);

            sqlad.Fill(ds);
            if (ds.Tables.Count > 0)
                ds.Tables[0].TableName = "CRHDKhamBenh_RPT";
            sqlad.Dispose(); cmd.Dispose(); sqlad = null;
            cmd = null;
            return ds;
           
        }
        public override DataSet CRTrangThietBiYTe(String MABC, String DK, Boolean _qadmin)
        {
            DataSet ds = new DataSet();
            string[] s = { "CRTrangThietBiYTe" };
            SqlHelper.FillDataset(SQLConnectionData, DatabaseOwner + ObjectQualifier + "spBC_TrangThietBiYTe_GETALL", ds, s, MABC, DK, _qadmin);
            //// // //// ds.WriteXmlSchema("CRTrangThietBiYTe.xsd");
            return ds;
        }

        public override DataSet CRTHCanBo_RPT(String MABC, String DK, Boolean _qadmin)
        {
            DataSet ds = new DataSet();
            string[] s = { "CRTHCanBo_RPT" };
            SqlHelper.FillDataset(SQLConnectionData, DatabaseOwner + ObjectQualifier + "spBC_THCanBo_GETALL", ds, s, MABC, DK, _qadmin);
            ////// ds.WriteXmlSchema("CRTHCanBo_RPT.xsd");
            return ds;
        }
        public override DataSet CRTHTuVong_RPT(String MABC, String DK, Boolean _qadmin)
        {
            DataSet ds = new DataSet();
            string[] s = { "CRTHTuVong_RPT" };
            SqlHelper.FillDataset(SQLConnectionData, DatabaseOwner + ObjectQualifier + "spBC_THTuVong_GETALL", ds, s, MABC, DK, _qadmin);
            // //// ds.WriteXmlSchema("CRTHTuVong_RPT.xsd");
            return ds;
        }
        public override DataSet CrHDChuyenMon_RPT(DateTime _tuNgay, DateTime _denNgay, String _maKhoa, byte _loai, String _noitt, String _dk)
        {
            DataSet ds = new DataSet();
            string[] s = { "CRGetTHChuyenMon" };
            System.Data.SqlClient.SqlCommand cmd = SqlHelper.CreateCommand(SQLConnectionData, DatabaseOwner + ObjectQualifier + "SP_ThongkeBN_KHTH");

            cmd.CommandTimeout = 18000;
            cmd.CommandType = System.Data.CommandType.StoredProcedure;
            cmd.Parameters.AddWithValue("Makhoa", _maKhoa);
            cmd.Parameters.AddWithValue("tungay", _tuNgay);
            cmd.Parameters.AddWithValue("denngay", _denNgay);
            cmd.Parameters.AddWithValue("loai", _loai);
            cmd.Parameters.AddWithValue("DK", _dk);
            cmd.Parameters.AddWithValue("noitt", _noitt);
            System.Data.SqlClient.SqlDataAdapter sqlad = new System.Data.SqlClient.SqlDataAdapter(cmd);

            sqlad.Fill(ds);
            if (ds.Tables.Count > 0)
                ds.Tables[0].TableName = "CRGetTHChuyenMon";
            sqlad.Dispose(); cmd.Dispose(); sqlad = null;
            cmd = null;
         
            return ds;
           
        }
        public override DataSet CrBCThoiGianTB_RPT(DateTime _tuNgay, DateTime _denNgay, String _noitt, String _dk)
        {
            DataSet ds = new DataSet();
            string[] s = { "CRBCKHTHQD" };
            System.Data.SqlClient.SqlCommand cmd = SqlHelper.CreateCommand(SQLConnectionData, DatabaseOwner + ObjectQualifier + "SPNGOAITRU_ThongkeBN");

            cmd.CommandTimeout = 18000;
            cmd.CommandType = System.Data.CommandType.StoredProcedure;
            cmd.Parameters.AddWithValue("tungay", _tuNgay);
            cmd.Parameters.AddWithValue("denngay", _denNgay);
            cmd.Parameters.AddWithValue("loai", "20");
            cmd.Parameters.AddWithValue("makhoa", "All");
            cmd.Parameters.AddWithValue("DK", _dk);
          
            System.Data.SqlClient.SqlDataAdapter sqlad = new System.Data.SqlClient.SqlDataAdapter(cmd);

            sqlad.Fill(ds);
            if (ds.Tables.Count > 0)
                ds.Tables[0].TableName = "CRBCKHTHQD";
            sqlad.Dispose(); cmd.Dispose(); sqlad = null;
            cmd = null;

            return ds;

        }
        public override DataSet CrBCMoHinhBT_RPT(DateTime _tuNgay, DateTime _denNgay, String _makhoa,byte _loai, String _dk)
        {
            DataSet ds = new DataSet();
            string[] s = { "CRBCKHTHQD" };
            System.Data.SqlClient.SqlCommand cmd = SqlHelper.CreateCommand(SQLConnectionData, DatabaseOwner + ObjectQualifier + "SPNoiTru_ThongkeBN");

            cmd.CommandTimeout = 18000;
            cmd.CommandType = System.Data.CommandType.StoredProcedure;
            cmd.Parameters.AddWithValue("tungay", _tuNgay);
            cmd.Parameters.AddWithValue("denngay", _denNgay);
            cmd.Parameters.AddWithValue("loai", _loai);
            cmd.Parameters.AddWithValue("makhoa", "All");
            cmd.Parameters.AddWithValue("DK", _dk);

            System.Data.SqlClient.SqlDataAdapter sqlad = new System.Data.SqlClient.SqlDataAdapter(cmd);

            sqlad.Fill(ds);
            if (ds.Tables.Count > 0)
                ds.Tables[0].TableName = "CRBCKHTHQD";
            sqlad.Dispose(); cmd.Dispose(); sqlad = null;
            cmd = null;

            return ds;

        }
        public override DataSet CRTHPhauThuat(String _maKho, DateTime _tuNgay, DateTime _denNgay, String _dk)
        {
            DataSet ds = new DataSet();
            string[] s = { "CRTHPhauThuat" };
            //  SqlHelper.FillDataset( ConnectionString, DatabaseOwner + ObjectQualifier + "SPBC_THPHAUTHUAT", ds, s, _maKho, _tuNgay, _denNgay, _dk);
            //// //// ds.WriteXmlSchema("CRTHPhauThuat.xsd");
            // SqlHelper.FillDataset( ConnectionString, DatabaseOwner + ObjectQualifier + "spBenhan_PhauThuat_TV_GETs", ds, s, _maKho, _tuNgay, _denNgay, _dk);
            // // ds.WriteXmlSchema("CRBKPhauThuat.xsd");
            //  DataSet ds = new DataSet("CRTHPhauThuat");
            //string[] s ={ "RptGetBCDSPhauThuat" };
            //SqlHelper.FillDataset( SQLConnectionBD, DatabaseOwner + ObjectQualifier + "spBenhan_PhauThuat_GETs", ds, s, MaKhoa, _TUNGAY, _DENNGAY, DK, _qadmin);
            ///// ds.WriteXmlSchema("RptGetBCDSPhauThuat.xsd");
            System.Data.SqlClient.SqlCommand cmd = SqlHelper.CreateCommand(SQLConnectionDataBC, DatabaseOwner + ObjectQualifier + "spBenhan_PhauThuat_TV_GETs");

            cmd.CommandTimeout = 18000;
            cmd.CommandType = System.Data.CommandType.StoredProcedure;
            cmd.Parameters.AddWithValue("Makhoa", _maKho);
            cmd.Parameters.AddWithValue("tungay", _tuNgay);
            cmd.Parameters.AddWithValue("denngay", _denNgay);
            cmd.Parameters.AddWithValue("DK", _dk);

            System.Data.SqlClient.SqlDataAdapter sqlad = new System.Data.SqlClient.SqlDataAdapter(cmd);

            sqlad.Fill(ds);
            if (ds.Tables.Count > 0)
                ds.Tables[0].TableName = "CRTHPhauThuat";
            sqlad.Dispose(); cmd.Dispose(); sqlad = null;
            cmd = null;
            // if (SQLConnectionBD.State == System.Data.ConnectionState.Closed)
            //SQLConnectionBD.Close(); SQLConnectionBD.Dispose();
            //if (_sqlConnection.State == System.Data.ConnectionState.Closed)
            {
                //_sqlConnection.Close(); _sqlConnection.Dispose();
                //_sqlConnection = null;
            }
            return ds;
            //return ds;
        }
        public override DataSet CRTHThuThuat(String _maKho, DateTime _tuNgay, DateTime _denNgay, String _dk)
        {
            DataSet ds = new DataSet();
            string[] s = { "CRTHPhauThuat" };
            //SqlHelper.FillDataset(SQLConnectionDataBC, DatabaseOwner + ObjectQualifier + "SPBC_THThuThuat", ds, s, _maKho, _tuNgay, _denNgay, _dk);
            // //// ds.WriteXmlSchema("CRTHThuThuat.xsd");
            System.Data.SqlClient.SqlCommand cmd = SqlHelper.CreateCommand(SQLConnectionDataBC, DatabaseOwner + ObjectQualifier + "SPBC_THThuThuat");

            cmd.CommandTimeout = 18000;
            cmd.CommandType = System.Data.CommandType.StoredProcedure;
            cmd.Parameters.AddWithValue("Makhoa", _maKho);
            cmd.Parameters.AddWithValue("tungay", _tuNgay);
            cmd.Parameters.AddWithValue("denngay", _denNgay);
            cmd.Parameters.AddWithValue("DK", _dk);

            System.Data.SqlClient.SqlDataAdapter sqlad = new System.Data.SqlClient.SqlDataAdapter(cmd);

            sqlad.Fill(ds);
            if (ds.Tables.Count > 0)
                ds.Tables[0].TableName = "CRTHPhauThuat";
            sqlad.Dispose(); cmd.Dispose(); sqlad = null;
            cmd = null;
            return ds;
        }
        public override DataSet CRTHThuThuatPK(String _maKho, DateTime _tuNgay, DateTime _denNgay, String _dk)
        {
            DataSet ds = new DataSet();
            string[] s = { "CRTHPhauThuat" };
           // SqlHelper.FillDataset(SQLConnectionDataBC, DatabaseOwner + ObjectQualifier + "SPBC_THThuThuatPK", ds, s, _maKho, _tuNgay, _denNgay, _dk);
            // //// ds.WriteXmlSchema("CRTHThuThuat.xsd");
            System.Data.SqlClient.SqlCommand cmd = SqlHelper.CreateCommand(SQLConnectionDataBC, DatabaseOwner + ObjectQualifier + "SPBC_THThuThuatPK");

            cmd.CommandTimeout = 18000;
            cmd.CommandType = System.Data.CommandType.StoredProcedure;
            cmd.Parameters.AddWithValue("Makhoa", _maKho);
            cmd.Parameters.AddWithValue("tungay", _tuNgay);
            cmd.Parameters.AddWithValue("denngay", _denNgay);
            cmd.Parameters.AddWithValue("DK", _dk);

            System.Data.SqlClient.SqlDataAdapter sqlad = new System.Data.SqlClient.SqlDataAdapter(cmd);

            sqlad.Fill(ds);
            if (ds.Tables.Count > 0)
                ds.Tables[0].TableName = "CRTHPhauThuat";
            sqlad.Dispose(); cmd.Dispose(); sqlad = null;
            cmd = null;
            return ds;
            return ds;
        }
        public override DataSet CRGetBangKeThuThuat(String _maKhoa, DateTime _tuNgay, DateTime _denNgay, String _dk)
        {
            DataSet ds = new DataSet();
            string[] s = { "CRGetBangKeThuThuat" };
            SqlHelper.FillDataset(SQLConnectionDataBC, DatabaseOwner + ObjectQualifier + "SPBC_DSThuThuat", ds, s, _maKhoa, _tuNgay, _denNgay, _dk);
            ////// ds.WriteXmlSchema("CRGetBangKeThuThuat.xsd");
            return ds;
        }
        public override DataSet CRGetTHSoLieuChuyenMon(DateTime _tuNgay, DateTime _denNgay, String _maKhoa, int _loai, String _dk)
        {
            DataSet ds = new DataSet();
            string[] s = { "CRGetTHSoLieuChuyenMon" };
            SqlHelper.FillDataset(SQLConnectionData, DatabaseOwner + ObjectQualifier + "SPXETNGHIEM_ThongkeBN", ds, s, _tuNgay, _denNgay, _maKhoa, _loai, _dk);
            // //// ds.WriteXmlSchema("CRGetTHSoLieuChuyenMon.xsd");
            return ds;
        }
        public override DataSet CRGetTHSoLieuChuyenMonKhoa(DateTime _tuNgay, DateTime _denNgay, String _maKhoa, int _loai, String _dk)
        {
            DataSet ds = new DataSet();
            string[] s = { "CRGetTHSoLieuChuyenMonKhoa" };
            SqlHelper.FillDataset(SQLConnectionDataBC, DatabaseOwner + ObjectQualifier + "SPNoiTru_ThongkeBN", ds, s, _tuNgay, _denNgay, _maKhoa, _loai, _dk);
            ////// ds.WriteXmlSchema("CRGetTHSoLieuChuyenMonKhoa.xsd");
            return ds;
        }

        public override DataSet GetCRBCTinhHinhHDChuyenMonQuy(DateTime _tuNgay, DateTime _denNgay, byte loaibc, String dk)
        {
            DataSet ds = new DataSet();
            string[] s = { "CRBCTinhHinhHDChuyenMonQuy_RPT" };
            SqlHelper.FillDataset(SQLConnectionData, DatabaseOwner + ObjectQualifier + "spBC_THChuyenMon_Gets", ds, s, _tuNgay, _denNgay, loaibc, dk);
            ds.WriteXmlSchema("CRBCTinhHinhHDChuyenMonQuy_RPT.xsd");
            return ds;
        }
        public override DataSet CRGetPhauThuatTim(String _maKhoa, DateTime _tuNgay, DateTime _denNgay, String _dk, bool qadmin)
        {
            DataSet ds = new DataSet();
            string[] s = { "CRGetPhauThuatTim" };
            SqlHelper.FillDataset(SQLConnectionData, DatabaseOwner + ObjectQualifier + "spBenhan_PhauThuat_GETs", ds, s, _maKhoa, _tuNgay, _denNgay, _dk, qadmin);
            // ds.WriteXmlSchema("CRGetPhauThuatTim.xsd");
            return ds;
        }
        // bao cao cuc 
        public override DataSet CRTKThuDungDT(String _maKhoa, DateTime _tuNgay, DateTime _denNgay, String _dk, bool _qadmin)
        {
            //DataSet ds = new DataSet();
            //string[] s = { "CRBCKHTHQD" };
            //SqlHelper.FillDataset(ConnectionString, DatabaseOwner + ObjectQualifier + "spBC_TKThuDungDieuTri_Gets", ds, s, _maKhoa, _tuNgay, _denNgay, _dk, qadmin);
            //ds.WriteXmlSchema("CRGetPhauThuatTim.xsd");
            //return ds;


            DataSet ds = new DataSet("CRBCKHTHQD");

            //string[] s2 = { "CRInphoithanhtoan_BHNT" };
            //SqlHelper.FillDataset(ConnectionString, DatabaseOwner + ObjectQualifier + "spBC_TKThuDungDieuTri_Gets", ds, s2, _maKhoa, _tuNgay, _denNgay, _dK, _qadmin);
            //// // //// ds.WriteXmlSchema("CRInphoihoadonthanhtoan_BHNT_RPT.xsd");
            System.Data.SqlClient.SqlCommand cmd = SqlHelper.CreateCommand(SQLConnectionData, DatabaseOwner + ObjectQualifier + "spBC_TKThuDungDieuTri_Gets");

            cmd.CommandTimeout = 18000;
            cmd.CommandType = System.Data.CommandType.StoredProcedure;
            cmd.Parameters.AddWithValue("MAKHOA", _maKhoa);
            cmd.Parameters.AddWithValue("tuthang  ", _tuNgay);
            cmd.Parameters.AddWithValue("denthang", _denNgay);
            cmd.Parameters.AddWithValue("DK", _dk);
            cmd.Parameters.AddWithValue("qadmin", _qadmin);
            System.Data.SqlClient.SqlDataAdapter sqlad = new System.Data.SqlClient.SqlDataAdapter(cmd);

            sqlad.Fill(ds);
            if (ds.Tables.Count > 0)
                ds.Tables[0].TableName = "CRBCKHTHQD";
            sqlad.Dispose(); cmd.Dispose(); sqlad = null;
            cmd = null;
            //if (SQLConnectionBD.State == System.Data.ConnectionState.Closed)
            //    SQLConnectionBD.Close(); SQLConnectionBD.Dispose();
            //if (_sqlConnection.State == System.Data.ConnectionState.Closed)
            //{
            //    //_sqlConnection.Close(); _sqlConnection.Dispose();
            //    //_sqlConnection = null;
            //}
            return ds;
        }
        public override DataSet CRTKSUDUNGGIUONG(String _maKhoa, DateTime _tuNgay, DateTime _denNgay, String _dk, bool _qadmin)
        {
            //DataSet ds = new DataSet();
            //string[] s = { "CRBCKHTHQD" };
            //SqlHelper.FillDataset(ConnectionString, DatabaseOwner + ObjectQualifier + "spBC_TKThuDungDieuTri_Gets", ds, s, _maKhoa, _tuNgay, _denNgay, _dk, qadmin);
            //// ds.WriteXmlSchema("CRGetPhauThuatTim.xsd");
            //return ds;


            DataSet ds = new DataSet("CRBCKHTHQD");

            //string[] s2 = { "CRInphoithanhtoan_BHNT" };
            //SqlHelper.FillDataset(ConnectionString, DatabaseOwner + ObjectQualifier + "spBENHAN_GETsBCDICHVU", ds, s2, _maSoKham, _DaTT, _loai, _dK);
            //// // //// ds.WriteXmlSchema("CRInphoihoadonthanhtoan_BHNT_RPT.xsd");
            System.Data.SqlClient.SqlCommand cmd = SqlHelper.CreateCommand(SQLConnectionData, DatabaseOwner + ObjectQualifier + "spBC_TKSuDungGiuong_Gets");

            cmd.CommandTimeout = 18000;
            cmd.CommandType = System.Data.CommandType.StoredProcedure;
            cmd.Parameters.AddWithValue("MAKHOA", _maKhoa);
            cmd.Parameters.AddWithValue("tuthang  ", _tuNgay);
            cmd.Parameters.AddWithValue("denthang", _denNgay);
            cmd.Parameters.AddWithValue("DK", _dk);
            cmd.Parameters.AddWithValue("qadmin", _qadmin);
            System.Data.SqlClient.SqlDataAdapter sqlad = new System.Data.SqlClient.SqlDataAdapter(cmd);

            sqlad.Fill(ds);
            if (ds.Tables.Count > 0)
                ds.Tables[0].TableName = "CRBCKHTHQD";
            sqlad.Dispose(); cmd.Dispose(); sqlad = null;
            cmd = null;
            //if (SQLConnectionBD.State == System.Data.ConnectionState.Closed)
            //    SQLConnectionBD.Close(); SQLConnectionBD.Dispose();
            //if (_sqlConnection.State == System.Data.ConnectionState.Closed)
            //{
            //    _sqlConnection.Close(); _sqlConnection.Dispose();
            //    _sqlConnection = null;
            //}
            return ds;
        }
        public override DataSet CRTKTUVONG(String _maKhoa, DateTime _tuNgay, DateTime _denNgay, String _dK, bool _qadmin)
        {
            //DataSet ds = new DataSet();
            //string[] s = { "CRBCKHTHQD" };
            //SqlHelper.FillDataset( ConnectionString, DatabaseOwner + ObjectQualifier + "spBC_TKHDTuVong_GetS", ds, s, _maKhoa, _tuNgay, _denNgay, _dk, qadmin);
            //// ds.WriteXmlSchema("CRGetPhauThuatTim.xsd");
            //return ds;


            DataSet ds = new DataSet("CRBCKHTHQD");

            //string[] s2 ={ "CRInphoithanhtoan_BHNT" };
            //SqlHelper.FillDataset( ConnectionString, DatabaseOwner + ObjectQualifier + "spBC_TKHDTuVong_GetS", ds, s2, _maSoKham, _DaTT, _loai, _dK);
            // // // //// ds.WriteXmlSchema("CRInphoihoadonthanhtoan_BHNT_RPT.xsd");
            System.Data.SqlClient.SqlCommand cmd = SqlHelper.CreateCommand(SQLConnectionData, DatabaseOwner + ObjectQualifier + "spBC_TKHDTuVong_GetS");

            cmd.CommandTimeout = 18000;
            cmd.CommandType = System.Data.CommandType.StoredProcedure;
            cmd.Parameters.AddWithValue("MAKHOA", _maKhoa);
            cmd.Parameters.AddWithValue("tuthang  ", _tuNgay);
            cmd.Parameters.AddWithValue("denthang", _denNgay);
            cmd.Parameters.AddWithValue("DK", _dK);
            cmd.Parameters.AddWithValue("qadmin", _qadmin);
            System.Data.SqlClient.SqlDataAdapter sqlad = new System.Data.SqlClient.SqlDataAdapter(cmd);

            sqlad.Fill(ds);
            if (ds.Tables.Count > 0)
                ds.Tables[0].TableName = "CRBCKHTHQD";
            sqlad.Dispose(); cmd.Dispose(); sqlad = null;
            cmd = null;
            // if (SQLConnectionBD.State == System.Data.ConnectionState.Closed)
            //SQLConnectionBD.Close(); SQLConnectionBD.Dispose();
            //if (_sqlConnection.State == System.Data.ConnectionState.Closed)
            {
                //_sqlConnection.Close(); _sqlConnection.Dispose();
                //_sqlConnection = null;
            }
            return ds;
        }

        public override DataSet CRTKDONGY(String _maKhoa, DateTime _tuNgay, DateTime _denNgay, String _dK, bool _qadmin)
        {
            //DataSet ds = new DataSet();
            //string[] s = { "CRBCKHTHQD" };
            //SqlHelper.FillDataset( ConnectionString, DatabaseOwner + ObjectQualifier + "spBC_TKDieuTriDongY_Gets", ds, s, _maKhoa, _tuNgay, _denNgay, _dk, qadmin);
            //// ds.WriteXmlSchema("CRGetPhauThuatTim.xsd");
            //return ds;


            DataSet ds = new DataSet("CRBCKHTHQD");

            //string[] s2 ={ "CRInphoithanhtoan_BHNT" };
            //SqlHelper.FillDataset( ConnectionString, DatabaseOwner + ObjectQualifier + "spBC_TKDieuTriDongY_Gets", ds, s2, _maSoKham, _DaTT, _loai, _dK);
            // // // //// ds.WriteXmlSchema("CRInphoihoadonthanhtoan_BHNT_RPT.xsd");
            System.Data.SqlClient.SqlCommand cmd = SqlHelper.CreateCommand(SQLConnectionData, DatabaseOwner + ObjectQualifier + "spBC_TKDieuTriDongY_Gets");

            cmd.CommandTimeout = 18000;
            cmd.CommandType = System.Data.CommandType.StoredProcedure;
            cmd.Parameters.AddWithValue("MAKHOA", _maKhoa);
            cmd.Parameters.AddWithValue("tuthang  ", _tuNgay);
            cmd.Parameters.AddWithValue("denthang", _denNgay);
            cmd.Parameters.AddWithValue("DK", _dK);
            cmd.Parameters.AddWithValue("qadmin", _qadmin);
            System.Data.SqlClient.SqlDataAdapter sqlad = new System.Data.SqlClient.SqlDataAdapter(cmd);

            sqlad.Fill(ds);
            if (ds.Tables.Count > 0)
                ds.Tables[0].TableName = "CRBCKHTHQD";
            sqlad.Dispose(); cmd.Dispose(); sqlad = null;
            cmd = null;
            // if (SQLConnectionBD.State == System.Data.ConnectionState.Closed)
            //SQLConnectionBD.Close(); SQLConnectionBD.Dispose();
            //if (_sqlConnection.State == System.Data.ConnectionState.Closed)
            {
                //_sqlConnection.Close(); _sqlConnection.Dispose();
                //_sqlConnection = null;
            }
            return ds;
        }

        public override DataSet CRTKCAPCUU1A(String _maKhoa, DateTime _tuNgay, DateTime _denNgay, String _dK, bool _qadmin)
        {
            //DataSet ds = new DataSet();
            //string[] s = { "CRBCKHTHQD" };
            //SqlHelper.FillDataset( ConnectionString, DatabaseOwner + ObjectQualifier + "spBC_TKThuDungDieuTri_Gets", ds, s, _maKhoa, _tuNgay, _denNgay, _dk, qadmin);
            //// ds.WriteXmlSchema("CRGetPhauThuatTim.xsd");
            //return ds;


            DataSet ds = new DataSet("CRBCKHTHQD");

            //string[] s2 ={ "CRInphoithanhtoan_BHNT" };
            //SqlHelper.FillDataset( ConnectionString, DatabaseOwner + ObjectQualifier + "spBENHAN_GETsBCDICHVU", ds, s2, _maSoKham, _DaTT, _loai, _dK);
            // // // //// ds.WriteXmlSchema("CRInphoihoadonthanhtoan_BHNT_RPT.xsd");
            System.Data.SqlClient.SqlCommand cmd = SqlHelper.CreateCommand(SQLConnectionData, DatabaseOwner + ObjectQualifier + "spBC_TKCapCuu1a_Gets");

            cmd.CommandTimeout = 18000;
            cmd.CommandType = System.Data.CommandType.StoredProcedure;
            cmd.Parameters.AddWithValue("MAKHOA", _maKhoa);
            cmd.Parameters.AddWithValue("tuthang  ", _tuNgay);
            cmd.Parameters.AddWithValue("denthang", _denNgay);
            cmd.Parameters.AddWithValue("DK", _dK);
            cmd.Parameters.AddWithValue("qadmin", _qadmin);
            System.Data.SqlClient.SqlDataAdapter sqlad = new System.Data.SqlClient.SqlDataAdapter(cmd);

            sqlad.Fill(ds);
            if (ds.Tables.Count > 0)
                ds.Tables[0].TableName = "CRBCKHTHQD";
            sqlad.Dispose(); cmd.Dispose(); sqlad = null;
            cmd = null;
            // if (SQLConnectionBD.State == System.Data.ConnectionState.Closed)
            //SQLConnectionBD.Close(); SQLConnectionBD.Dispose();
            //if (_sqlConnection.State == System.Data.ConnectionState.Closed)
            {
                //_sqlConnection.Close(); _sqlConnection.Dispose();
                //_sqlConnection = null;
            }
            return ds;
        }
        public override DataSet CRTKCAPCUU1B(String _maKhoa, DateTime _tuNgay, DateTime _denNgay, String _dK, bool _qadmin)
        {
            //DataSet ds = new DataSet();
            //string[] s = { "CRBCKHTHQD" };
            //SqlHelper.FillDataset( ConnectionString, DatabaseOwner + ObjectQualifier + "spBC_TKThuDungDieuTri_Gets", ds, s, _maKhoa, _tuNgay, _denNgay, _dk, qadmin);
            //// ds.WriteXmlSchema("CRGetPhauThuatTim.xsd");
            //return ds;


            DataSet ds = new DataSet("CRBCKHTHQD");

            //string[] s2 ={ "CRInphoithanhtoan_BHNT" };
            //SqlHelper.FillDataset( ConnectionString, DatabaseOwner + ObjectQualifier + "spBENHAN_GETsBCDICHVU", ds, s2, _maSoKham, _DaTT, _loai, _dK);
            // // // //// ds.WriteXmlSchema("CRInphoihoadonthanhtoan_BHNT_RPT.xsd");
            System.Data.SqlClient.SqlCommand cmd = SqlHelper.CreateCommand(SQLConnectionData, DatabaseOwner + ObjectQualifier + "spBC_TKCapCuu1B_Gets");

            cmd.CommandTimeout = 18000;
            cmd.CommandType = System.Data.CommandType.StoredProcedure;
            cmd.Parameters.AddWithValue("MAKHOA", _maKhoa);
            cmd.Parameters.AddWithValue("tuthang  ", _tuNgay);
            cmd.Parameters.AddWithValue("denthang", _denNgay);
            cmd.Parameters.AddWithValue("DK", _dK);
            cmd.Parameters.AddWithValue("qadmin", _qadmin);
            System.Data.SqlClient.SqlDataAdapter sqlad = new System.Data.SqlClient.SqlDataAdapter(cmd);

            sqlad.Fill(ds);
            if (ds.Tables.Count > 0)
                ds.Tables[0].TableName = "CRBCKHTHQD";
            sqlad.Dispose(); cmd.Dispose(); sqlad = null;
            cmd = null;
            // if (SQLConnectionBD.State == System.Data.ConnectionState.Closed)
            //SQLConnectionBD.Close(); SQLConnectionBD.Dispose();
            //if (_sqlConnection.State == System.Data.ConnectionState.Closed)
            {
                //_sqlConnection.Close(); _sqlConnection.Dispose();
                //_sqlConnection = null;
            }
            return ds;
        }
        public override DataSet CRTKKHAMBENH(String _maKhoa, DateTime _tuNgay, DateTime _denNgay, String _dK, bool _qadmin)
        {
            //DataSet ds = new DataSet();
            //string[] s = { "CRBCKHTHQD" };
            //SqlHelper.FillDataset( ConnectionString, DatabaseOwner + ObjectQualifier + "spBC_TKKhamBenh_Gets", ds, s, _maKhoa, _tuNgay, _denNgay, _dk, qadmin);
            //// ds.WriteXmlSchema("CRGetPhauThuatTim.xsd");
            //return ds;


            DataSet ds = new DataSet("CRBCKHTHQD");

            //string[] s2 ={ "CRInphoithanhtoan_BHNT" };
            //SqlHelper.FillDataset( ConnectionString, DatabaseOwner + ObjectQualifier + "spBENHAN_GETsBCDICHVU", ds, s2, _maSoKham, _DaTT, _loai, _dK);
            // // // //// ds.WriteXmlSchema("CRInphoihoadonthanhtoan_BHNT_RPT.xsd");
            System.Data.SqlClient.SqlCommand cmd = SqlHelper.CreateCommand(SQLConnectionData, DatabaseOwner + ObjectQualifier + "spBC_TKKhamBenh_Gets");

            cmd.CommandTimeout = 18000;
            cmd.CommandType = System.Data.CommandType.StoredProcedure;
            cmd.Parameters.AddWithValue("MAKHOA", _maKhoa);
            cmd.Parameters.AddWithValue("tuthang  ", _tuNgay);
            cmd.Parameters.AddWithValue("denthang", _denNgay);
            cmd.Parameters.AddWithValue("DK", _dK);
            cmd.Parameters.AddWithValue("qadmin", _qadmin);
            System.Data.SqlClient.SqlDataAdapter sqlad = new System.Data.SqlClient.SqlDataAdapter(cmd);

            sqlad.Fill(ds);
            if (ds.Tables.Count > 0)
                ds.Tables[0].TableName = "CRBCKHTHQD";
            sqlad.Dispose(); cmd.Dispose(); sqlad = null;
            cmd = null;
            // if (SQLConnectionBD.State == System.Data.ConnectionState.Closed)
            //SQLConnectionBD.Close(); SQLConnectionBD.Dispose();
            //if (_sqlConnection.State == System.Data.ConnectionState.Closed)
            {
                //_sqlConnection.Close(); _sqlConnection.Dispose();
                //_sqlConnection = null;
            }
            return ds;
        }
        public override DataSet CRTKTAIBIEN(String _maKhoa, DateTime _tuNgay, DateTime _denNgay, String _dK, bool _qadmin)
        {
            //DataSet ds = new DataSet();
            //string[] s = { "CRBCKHTHQD" };
            //SqlHelper.FillDataset( ConnectionString, DatabaseOwner + ObjectQualifier + "spBC_TKTaiBien_Gets", ds, s, _maKhoa, _tuNgay, _denNgay, _dk, qadmin);
            //// ds.WriteXmlSchema("CRGetPhauThuatTim.xsd");
            //return ds;


            DataSet ds = new DataSet("CRBCKHTHQD");

            //string[] s2 ={ "CRInphoithanhtoan_BHNT" };
            //SqlHelper.FillDataset( ConnectionString, DatabaseOwner + ObjectQualifier + "spBC_TKTaiBien_Gets", ds, s2, _maSoKham, _DaTT, _loai, _dK);
            // // // //// ds.WriteXmlSchema("CRInphoihoadonthanhtoan_BHNT_RPT.xsd");
            System.Data.SqlClient.SqlCommand cmd = SqlHelper.CreateCommand(SQLConnectionData, DatabaseOwner + ObjectQualifier + "spBC_TKTaiBien_Gets");

            cmd.CommandTimeout = 18000;
            cmd.CommandType = System.Data.CommandType.StoredProcedure;
            cmd.Parameters.AddWithValue("MAKHOA", _maKhoa);
            cmd.Parameters.AddWithValue("tuthang  ", _tuNgay);
            cmd.Parameters.AddWithValue("denthang", _denNgay);
            cmd.Parameters.AddWithValue("DK", _dK);
            cmd.Parameters.AddWithValue("qadmin", _qadmin);
            System.Data.SqlClient.SqlDataAdapter sqlad = new System.Data.SqlClient.SqlDataAdapter(cmd);

            sqlad.Fill(ds);
            if (ds.Tables.Count > 0)
                ds.Tables[0].TableName = "CRBCKHTHQD";
            sqlad.Dispose(); cmd.Dispose(); sqlad = null;
            cmd = null;
            // if (SQLConnectionBD.State == System.Data.ConnectionState.Closed)
            //SQLConnectionBD.Close(); SQLConnectionBD.Dispose();
            //if (_sqlConnection.State == System.Data.ConnectionState.Closed)
            {
                //_sqlConnection.Close(); _sqlConnection.Dispose();
                //_sqlConnection = null;
            }
            return ds;
        }
        public override DataSet CRTKDTTHEOLOAIBENH(String _maKhoa, DateTime _tuNgay, DateTime _denNgay, String _dK, bool _qadmin)
        {
            //DataSet ds = new DataSet();
            //string[] s = { "CRBCKHTHQD" };
            //SqlHelper.FillDataset( ConnectionString, DatabaseOwner + ObjectQualifier + "spBC_TKDTTheoLoaiBenh_Gets", ds, s, _maKhoa, _tuNgay, _denNgay, _dk, qadmin);
            //// ds.WriteXmlSchema("CRGetPhauThuatTim.xsd");
            //return ds;


            DataSet ds = new DataSet("CRBCKHTHQD");

            //string[] s2 ={ "CRInphoithanhtoan_BHNT" };
            //SqlHelper.FillDataset( ConnectionString, DatabaseOwner + ObjectQualifier + "spBC_TKDTTheoLoaiBenh_Gets", ds, s2, _maSoKham, _DaTT, _loai, _dK);
            // // // //// ds.WriteXmlSchema("CRInphoihoadonthanhtoan_BHNT_RPT.xsd");
            System.Data.SqlClient.SqlCommand cmd = SqlHelper.CreateCommand(SQLConnectionData, DatabaseOwner + ObjectQualifier + "spBC_TKDTTheoLoaiBenh_Gets");

            cmd.CommandTimeout = 18000;
            cmd.CommandType = System.Data.CommandType.StoredProcedure;
            cmd.Parameters.AddWithValue("MAKHOA", _maKhoa);
            cmd.Parameters.AddWithValue("tuthang  ", _tuNgay);
            cmd.Parameters.AddWithValue("denthang", _denNgay);
            cmd.Parameters.AddWithValue("DK", _dK);
            cmd.Parameters.AddWithValue("qadmin", _qadmin);
            System.Data.SqlClient.SqlDataAdapter sqlad = new System.Data.SqlClient.SqlDataAdapter(cmd);

            sqlad.Fill(ds);
            if (ds.Tables.Count > 0)
                ds.Tables[0].TableName = "CRBCKHTHQD";
            sqlad.Dispose(); cmd.Dispose(); sqlad = null;
            cmd = null;
            // if (SQLConnectionBD.State == System.Data.ConnectionState.Closed)
            //SQLConnectionBD.Close(); SQLConnectionBD.Dispose();
            //if (_sqlConnection.State == System.Data.ConnectionState.Closed)
            {
                //_sqlConnection.Close(); _sqlConnection.Dispose();
                //_sqlConnection = null;
            }
            return ds;
        }
        public override DataSet CRTKDAUMOI(String _maKhoa, DateTime _tuNgay, DateTime _denNgay, String _dK, bool _qadmin)
        {
            //DataSet ds = new DataSet();
            //string[] s = { "CRBCKHTHQD" };
            //SqlHelper.FillDataset( ConnectionString, DatabaseOwner + ObjectQualifier + "spBC_TKKhamBenh_Gets", ds, s, _maKhoa, _tuNgay, _denNgay, _dk, qadmin);
            //// ds.WriteXmlSchema("CRGetPhauThuatTim.xsd");
            //return ds;


            DataSet ds = new DataSet("CRBCKHTHQD");

            //string[] s2 ={ "CRInphoithanhtoan_BHNT" };
            //SqlHelper.FillDataset( ConnectionString, DatabaseOwner + ObjectQualifier + "spBENHAN_GETsBCDICHVU", ds, s2, _maSoKham, _DaTT, _loai, _dK);
            // // // //// ds.WriteXmlSchema("CRInphoihoadonthanhtoan_BHNT_RPT.xsd");
            System.Data.SqlClient.SqlCommand cmd = SqlHelper.CreateCommand(SQLConnectionData, DatabaseOwner + ObjectQualifier + "spBC_TKTheoDauMoiDonVi_Gets");

            cmd.CommandTimeout = 18000;
            cmd.CommandType = System.Data.CommandType.StoredProcedure;
            cmd.Parameters.AddWithValue("MAKHOA", _maKhoa);
            cmd.Parameters.AddWithValue("tuthang  ", _tuNgay);
            cmd.Parameters.AddWithValue("denthang", _denNgay);
            cmd.Parameters.AddWithValue("DK", _dK);
            cmd.Parameters.AddWithValue("qadmin", _qadmin);
            System.Data.SqlClient.SqlDataAdapter sqlad = new System.Data.SqlClient.SqlDataAdapter(cmd);

            sqlad.Fill(ds);
            if (ds.Tables.Count > 0)
                ds.Tables[0].TableName = "CRBCKHTHQD";
            sqlad.Dispose(); cmd.Dispose(); sqlad = null;
            cmd = null;
            // if (SQLConnectionBD.State == System.Data.ConnectionState.Closed)
            //SQLConnectionBD.Close(); SQLConnectionBD.Dispose();
            //if (_sqlConnection.State == System.Data.ConnectionState.Closed)
            {
                //_sqlConnection.Close(); _sqlConnection.Dispose();
                //_sqlConnection = null;
            }
            return ds;
        }
        public override DataSet CRTKPHAUTHUATTT(String _maKhoa, DateTime _tuNgay, DateTime _denNgay, String _dK, bool _qadmin)
        {
            //DataSet ds = new DataSet();
            //string[] s = { "CRBCKHTHQD" };
            //SqlHelper.FillDataset( ConnectionString, DatabaseOwner + ObjectQualifier + "spBC_TKPhauThuatTT_Gets", ds, s, _maKhoa, _tuNgay, _denNgay, _dk, qadmin);
            //// ds.WriteXmlSchema("CRGetPhauThuatTim.xsd");
            //return ds;


            DataSet ds = new DataSet("CRBCKHTHQD");

            //string[] s2 ={ "CRInphoithanhtoan_BHNT" };
            //SqlHelper.FillDataset( ConnectionString, DatabaseOwner + ObjectQualifier + "spBENHAN_GETsBCDICHVU", ds, s2, _maSoKham, _DaTT, _loai, _dK);
            // // // //// ds.WriteXmlSchema("CRInphoihoadonthanhtoan_BHNT_RPT.xsd");
            System.Data.SqlClient.SqlCommand cmd = SqlHelper.CreateCommand(SQLConnectionData, DatabaseOwner + ObjectQualifier + "spBC_TKPhauThuatTT_Gets");

            cmd.CommandTimeout = 18000;
            cmd.CommandType = System.Data.CommandType.StoredProcedure;
            cmd.Parameters.AddWithValue("MAKHOA", _maKhoa);
            cmd.Parameters.AddWithValue("tuthang  ", _tuNgay);
            cmd.Parameters.AddWithValue("denthang", _denNgay);
            cmd.Parameters.AddWithValue("DK", _dK);
            cmd.Parameters.AddWithValue("qadmin", _qadmin);
            System.Data.SqlClient.SqlDataAdapter sqlad = new System.Data.SqlClient.SqlDataAdapter(cmd);

            sqlad.Fill(ds);
            if (ds.Tables.Count > 0)
                ds.Tables[0].TableName = "CRBCKHTHQD";
            sqlad.Dispose(); cmd.Dispose(); sqlad = null;
            cmd = null;
            // if (SQLConnectionBD.State == System.Data.ConnectionState.Closed)
            //SQLConnectionBD.Close(); SQLConnectionBD.Dispose();
            //if (_sqlConnection.State == System.Data.ConnectionState.Closed)
            {
                //_sqlConnection.Close(); _sqlConnection.Dispose();
                //_sqlConnection = null;
            }
            return ds;
        }
        public override DataSet CRTKHDCanLamSang(String _maKhoa, DateTime _tuNgay, DateTime _denNgay, String _dK, string _loai, bool _qadmin)
        {
            //DataSet ds = new DataSet();
            //string[] s = { "CRBCKHTHQD" };
            //SqlHelper.FillDataset( ConnectionString, DatabaseOwner + ObjectQualifier + "spBC_TKThuDungDieuTri_Gets", ds, s, _maKhoa, _tuNgay, _denNgay, _dk, qadmin);
            //// ds.WriteXmlSchema("CRGetPhauThuatTim.xsd");
            //return ds;


            DataSet ds = new DataSet("CRBCKHTHQD");

            //string[] s2 ={ "CRInphoithanhtoan_BHNT" };
            //SqlHelper.FillDataset( ConnectionString, DatabaseOwner + ObjectQualifier + "spBENHAN_GETsBCDICHVU", ds, s2, _maSoKham, _DaTT, _loai, _dK);
            // // // //// ds.WriteXmlSchema("CRInphoihoadonthanhtoan_BHNT_RPT.xsd");
            System.Data.SqlClient.SqlCommand cmd = SqlHelper.CreateCommand(SQLConnectionData, DatabaseOwner + ObjectQualifier + "spBC_TKHDCanLamSangChuanDoanHA_Gets");

            cmd.CommandTimeout = 18000;
            cmd.CommandType = System.Data.CommandType.StoredProcedure;
            cmd.Parameters.AddWithValue("MAKHOA", _maKhoa);
            cmd.Parameters.AddWithValue("tuthang  ", _tuNgay);
            cmd.Parameters.AddWithValue("denthang", _denNgay);
            cmd.Parameters.AddWithValue("DK", _dK);
            cmd.Parameters.AddWithValue("loai", _loai);
            cmd.Parameters.AddWithValue("qadmin", _qadmin);
            System.Data.SqlClient.SqlDataAdapter sqlad = new System.Data.SqlClient.SqlDataAdapter(cmd);

            sqlad.Fill(ds);
            if (ds.Tables.Count > 0)
                ds.Tables[0].TableName = "CRBCKHTHQD";
            sqlad.Dispose(); cmd.Dispose(); sqlad = null;
            cmd = null;
            // if (SQLConnectionBD.State == System.Data.ConnectionState.Closed)
            //SQLConnectionBD.Close(); SQLConnectionBD.Dispose();
            //if (_sqlConnection.State == System.Data.ConnectionState.Closed)
            {
                //_sqlConnection.Close(); _sqlConnection.Dispose();
                //_sqlConnection = null;
            }
            return ds;
        }
        public override DataSet CRTHCAPCUU1(String _maKhoa, DateTime _tuNgay, DateTime _denNgay, String _dK, bool _qadmin)
        {
            //DataSet ds = new DataSet();
            //string[] s = { "CRBCKHTHQD" };
            //SqlHelper.FillDataset( ConnectionString, DatabaseOwner + ObjectQualifier + "spBC_THCAPCUU1_Gets", ds, s, _maKhoa, _tuNgay, _denNgay, _dk, qadmin);
            //// ds.WriteXmlSchema("CRGetPhauThuatTim.xsd");
            //return ds;


            DataSet ds = new DataSet("CRBCKHTHQD");

            //string[] s2 ={ "CRInphoithanhtoan_BHNT" };
            //SqlHelper.FillDataset( ConnectionString, DatabaseOwner + ObjectQualifier + "spBENHAN_GETsBCDICHVU", ds, s2, _maSoKham, _DaTT, _loai, _dK);
            // // // //// ds.WriteXmlSchema("CRInphoihoadonthanhtoan_BHNT_RPT.xsd");
            System.Data.SqlClient.SqlCommand cmd = SqlHelper.CreateCommand(SQLConnectionData, DatabaseOwner + ObjectQualifier + "spBC_THCAPCUU1_Gets");

            cmd.CommandTimeout = 18000;
            cmd.CommandType = System.Data.CommandType.StoredProcedure;
            cmd.Parameters.AddWithValue("MAKHOA", _maKhoa);
            cmd.Parameters.AddWithValue("tuthang  ", _tuNgay);
            cmd.Parameters.AddWithValue("denthang", _denNgay);
            cmd.Parameters.AddWithValue("DK", _dK);
            cmd.Parameters.AddWithValue("qadmin", _qadmin);
            System.Data.SqlClient.SqlDataAdapter sqlad = new System.Data.SqlClient.SqlDataAdapter(cmd);

            sqlad.Fill(ds);
            if (ds.Tables.Count > 0)
                ds.Tables[0].TableName = "CRBCKHTHQD";
            sqlad.Dispose(); cmd.Dispose(); sqlad = null;
            cmd = null;
            // if (SQLConnectionBD.State == System.Data.ConnectionState.Closed)
            //SQLConnectionBD.Close(); SQLConnectionBD.Dispose();
            //if (_sqlConnection.State == System.Data.ConnectionState.Closed)
            {
                //_sqlConnection.Close(); _sqlConnection.Dispose();
                //_sqlConnection = null;
            }
            return ds;
        }
        public override DataSet CRTKDIEUTRICANBO1(String _maKhoa, DateTime _tuNgay, DateTime _denNgay, String _dK, bool _qadmin)
        {
            //DataSet ds = new DataSet();
            //string[] s = { "CRBCKHTHQD" };
            //SqlHelper.FillDataset( ConnectionString, DatabaseOwner + ObjectQualifier + "spBC_TKDIEUTRICANBO1_Gets", ds, s, _maKhoa, _tuNgay, _denNgay, _dk, qadmin);
            //// ds.WriteXmlSchema("CRGetPhauThuatTim.xsd");
            //return ds;


            DataSet ds = new DataSet("CRBCKHTHQD");

            //string[] s2 ={ "CRInphoithanhtoan_BHNT" };
            //SqlHelper.FillDataset( ConnectionString, DatabaseOwner + ObjectQualifier + "spBENHAN_GETsBCDICHVU", ds, s2, _maSoKham, _DaTT, _loai, _dK);
            // // // //// ds.WriteXmlSchema("CRInphoihoadonthanhtoan_BHNT_RPT.xsd");
            System.Data.SqlClient.SqlCommand cmd = SqlHelper.CreateCommand(SQLConnectionData, DatabaseOwner + ObjectQualifier + "spBC_TKDIEUTRICANBO1_Gets");

            cmd.CommandTimeout = 18000;
            cmd.CommandType = System.Data.CommandType.StoredProcedure;
            cmd.Parameters.AddWithValue("MAKHOA", _maKhoa);
            cmd.Parameters.AddWithValue("tuthang  ", _tuNgay);
            cmd.Parameters.AddWithValue("denthang", _denNgay);
            cmd.Parameters.AddWithValue("DK", _dK);
            cmd.Parameters.AddWithValue("qadmin", _qadmin);
            System.Data.SqlClient.SqlDataAdapter sqlad = new System.Data.SqlClient.SqlDataAdapter(cmd);

            sqlad.Fill(ds);
            if (ds.Tables.Count > 0)
                ds.Tables[0].TableName = "CRBCKHTHQD";
            sqlad.Dispose(); cmd.Dispose(); sqlad = null;
            cmd = null;
            // if (SQLConnectionBD.State == System.Data.ConnectionState.Closed)
            //SQLConnectionBD.Close(); SQLConnectionBD.Dispose();
            //if (_sqlConnection.State == System.Data.ConnectionState.Closed)
            {
                //_sqlConnection.Close(); _sqlConnection.Dispose();
                //_sqlConnection = null;
            }
            return ds;
        }
        public override DataSet CRPHANLOAITHEOCAPCHUC(String _maKhoa, DateTime _tuNgay, DateTime _denNgay, String _dK, bool _qadmin)
        {
            //DataSet ds = new DataSet();
            //string[] s = { "CRBCKHTHQD" };
            //SqlHelper.FillDataset( ConnectionString, DatabaseOwner + ObjectQualifier + "spBC_PHANLOAITHEOCAPCHUC_Gets", ds, s, _maKhoa, _tuNgay, _denNgay, _dk, qadmin);
            //// ds.WriteXmlSchema("CRGetPhauThuatTim.xsd");
            //return ds;


            DataSet ds = new DataSet("CRBCKHTHQD");

            //string[] s2 ={ "CRInphoithanhtoan_BHNT" };
            //SqlHelper.FillDataset( ConnectionString, DatabaseOwner + ObjectQualifier + "spBENHAN_GETsBCDICHVU", ds, s2, _maSoKham, _DaTT, _loai, _dK);
            // // // //// ds.WriteXmlSchema("CRInphoihoadonthanhtoan_BHNT_RPT.xsd");
            System.Data.SqlClient.SqlCommand cmd = SqlHelper.CreateCommand(SQLConnectionData, DatabaseOwner + ObjectQualifier + "spBC_PHANLOAITHEOCAPCHUC_Gets");

            cmd.CommandTimeout = 18000;
            cmd.CommandType = System.Data.CommandType.StoredProcedure;
            cmd.Parameters.AddWithValue("MAKHOA", _maKhoa);
            cmd.Parameters.AddWithValue("tuthang  ", _tuNgay);
            cmd.Parameters.AddWithValue("denthang", _denNgay);
            cmd.Parameters.AddWithValue("DK", _dK);
            cmd.Parameters.AddWithValue("qadmin", _qadmin);
            System.Data.SqlClient.SqlDataAdapter sqlad = new System.Data.SqlClient.SqlDataAdapter(cmd);

            sqlad.Fill(ds);
            if (ds.Tables.Count > 0)
                ds.Tables[0].TableName = "CRBCKHTHQD";
            sqlad.Dispose(); cmd.Dispose(); sqlad = null;
            cmd = null;
            // if (SQLConnectionBD.State == System.Data.ConnectionState.Closed)
            //SQLConnectionBD.Close(); SQLConnectionBD.Dispose();
            //if (_sqlConnection.State == System.Data.ConnectionState.Closed)
            {
                //_sqlConnection.Close(); _sqlConnection.Dispose();
                //_sqlConnection = null;
            }
            return ds;
        }
        public override DataSet CRTHONGKEDTTHEOLOAI(String _maKhoa, DateTime _tuNgay, DateTime _denNgay, String _dK, bool _qadmin)
        {
            //DataSet ds = new DataSet();
            //string[] s = { "CRBCKHTHQD" };
            //SqlHelper.FillDataset( ConnectionString, DatabaseOwner + ObjectQualifier + "spBC_THONGKEDTTHEOLOAI_Gets", ds, s, _maKhoa, _tuNgay, _denNgay, _dk, qadmin);
            //// ds.WriteXmlSchema("CRGetPhauThuatTim.xsd");
            //return ds;


            DataSet ds = new DataSet("CRBCKHTHQD");

            //string[] s2 ={ "CRInphoithanhtoan_BHNT" };
            //SqlHelper.FillDataset( ConnectionString, DatabaseOwner + ObjectQualifier + "spBC_THONGKEDTTHEOLOAI_Gets", ds, s2, _maSoKham, _DaTT, _loai, _dK);
            // // // //// ds.WriteXmlSchema("CRInphoihoadonthanhtoan_BHNT_RPT.xsd");
            System.Data.SqlClient.SqlCommand cmd = SqlHelper.CreateCommand(SQLConnectionData, DatabaseOwner + ObjectQualifier + "spBC_THONGKEDTTHEOLOAI_Gets");

            cmd.CommandTimeout = 18000;
            cmd.CommandType = System.Data.CommandType.StoredProcedure;
            cmd.Parameters.AddWithValue("MAKHOA", _maKhoa);
            cmd.Parameters.AddWithValue("tuthang  ", _tuNgay);
            cmd.Parameters.AddWithValue("denthang", _denNgay);
            cmd.Parameters.AddWithValue("DK", _dK);
            cmd.Parameters.AddWithValue("qadmin", _qadmin);
            System.Data.SqlClient.SqlDataAdapter sqlad = new System.Data.SqlClient.SqlDataAdapter(cmd);

            sqlad.Fill(ds);
            if (ds.Tables.Count > 0)
                ds.Tables[0].TableName = "CRBCKHTHQD";
            sqlad.Dispose(); cmd.Dispose(); sqlad = null;
            cmd = null;
            // if (SQLConnectionBD.State == System.Data.ConnectionState.Closed)
            //SQLConnectionBD.Close(); SQLConnectionBD.Dispose();
            //if (_sqlConnection.State == System.Data.ConnectionState.Closed)
            {
                //_sqlConnection.Close(); _sqlConnection.Dispose();
                //_sqlConnection = null;
            }
            return ds;
        }
        public override DataSet CRTKTINHHINHKHAM(String _maKhoa, DateTime _tuNgay, DateTime _denNgay, String _dK, bool _qadmin)
        {
            //DataSet ds = new DataSet();
            //string[] s = { "CRBCKHTHQD" };
            //SqlHelper.FillDataset( ConnectionString, DatabaseOwner + ObjectQualifier + "spBC_TKTINHHINHKHAM_Gets", ds, s, _maKhoa, _tuNgay, _denNgay, _dk, qadmin);
            //// ds.WriteXmlSchema("CRGetPhauThuatTim.xsd");
            //return ds;


            DataSet ds = new DataSet("CRBCKHTHQD");

            //string[] s2 ={ "CRInphoithanhtoan_BHNT" };
            //SqlHelper.FillDataset( ConnectionString, DatabaseOwner + ObjectQualifier + "spBC_TKTINHHINHKHAM_Gets", ds, s2, _maSoKham, _DaTT, _loai, _dK);
            // // // //// ds.WriteXmlSchema("CRInphoihoadonthanhtoan_BHNT_RPT.xsd");
            System.Data.SqlClient.SqlCommand cmd = SqlHelper.CreateCommand(SQLConnectionData, DatabaseOwner + ObjectQualifier + "spBC_TKTINHHINHKHAM_Gets");

            cmd.CommandTimeout = 18000;
            cmd.CommandType = System.Data.CommandType.StoredProcedure;
            cmd.Parameters.AddWithValue("MAKHOA", _maKhoa);
            cmd.Parameters.AddWithValue("tuthang  ", _tuNgay);
            cmd.Parameters.AddWithValue("denthang", _denNgay);
            cmd.Parameters.AddWithValue("DK", _dK);
            cmd.Parameters.AddWithValue("qadmin", _qadmin);
            System.Data.SqlClient.SqlDataAdapter sqlad = new System.Data.SqlClient.SqlDataAdapter(cmd);

            sqlad.Fill(ds);
            if (ds.Tables.Count > 0)
                ds.Tables[0].TableName = "CRBCKHTHQD";
            sqlad.Dispose(); cmd.Dispose(); sqlad = null;
            cmd = null;
            // if (SQLConnectionBD.State == System.Data.ConnectionState.Closed)
            //SQLConnectionBD.Close(); SQLConnectionBD.Dispose();
            //if (_sqlConnection.State == System.Data.ConnectionState.Closed)
            {
                //_sqlConnection.Close(); _sqlConnection.Dispose();
                //_sqlConnection = null;
            }
            return ds;
        }
        public override DataSet CRTONGHOPTUVONG(String _maKhoa, DateTime _tuNgay, DateTime _denNgay, String _dK, bool _qadmin)
        {
            //DataSet ds = new DataSet();
            //string[] s = { "CRBCKHTHQD" };
            //SqlHelper.FillDataset( ConnectionString, DatabaseOwner + ObjectQualifier + "spBC_TongHopTHTuVong_Gets", ds, s, _maKhoa, _tuNgay, _denNgay, _dk, qadmin);
            //// ds.WriteXmlSchema("CRGetPhauThuatTim.xsd");
            //return ds;


            DataSet ds = new DataSet("CRBCKHTHQD");

            //string[] s2 ={ "CRInphoithanhtoan_BHNT" };
            //SqlHelper.FillDataset( ConnectionString, DatabaseOwner + ObjectQualifier + "spBC_TongHopTHTuVong_Gets", ds, s2, _maSoKham, _DaTT, _loai, _dK);
            // // // //// ds.WriteXmlSchema("CRInphoihoadonthanhtoan_BHNT_RPT.xsd");
            System.Data.SqlClient.SqlCommand cmd = SqlHelper.CreateCommand(SQLConnectionData, DatabaseOwner + ObjectQualifier + "spBC_TongHopTHTuVong_Gets");

            cmd.CommandTimeout = 18000;
            cmd.CommandType = System.Data.CommandType.StoredProcedure;
            cmd.Parameters.AddWithValue("MAKHOA", _maKhoa);
            cmd.Parameters.AddWithValue("tuthang", _tuNgay);
            cmd.Parameters.AddWithValue("denthang", _denNgay);
            cmd.Parameters.AddWithValue("DK", _dK);
            cmd.Parameters.AddWithValue("qadmin", _qadmin);
            System.Data.SqlClient.SqlDataAdapter sqlad = new System.Data.SqlClient.SqlDataAdapter(cmd);

            sqlad.Fill(ds);
            if (ds.Tables.Count > 0)
                ds.Tables[0].TableName = "CRBCKHTHQD";
            sqlad.Dispose(); cmd.Dispose(); sqlad = null;
            cmd = null;
            // if (SQLConnectionBD.State == System.Data.ConnectionState.Closed)
            //SQLConnectionBD.Close(); SQLConnectionBD.Dispose();
            //if (_sqlConnection.State == System.Data.ConnectionState.Closed)
            {
                //_sqlConnection.Close(); _sqlConnection.Dispose();
                //_sqlConnection = null;
            }
            return ds;
        }


        public override DataSet CRNoiTru_ThongkeBN(DateTime Tungay, DateTime Denngay, byte loai, String dk, bool qadmin)
        {
            //DataSet ds = new DataSet();
            //string[] s = { "CRBCKHTHQD" };
            //SqlHelper.FillDataset( ConnectionString, DatabaseOwner + ObjectQualifier + "spBC_TongHopTHTuVong_Gets", ds, s, _maKhoa, _tuNgay, _denNgay, _dk, qadmin);
            //// ds.WriteXmlSchema("CRGetPhauThuatTim.xsd");
            //return ds;


            DataSet ds = new DataSet("CRBCKHTHQD");

            //string[] s2 ={ "CRInphoithanhtoan_BHNT" };
            //SqlHelper.FillDataset( ConnectionString, DatabaseOwner + ObjectQualifier + "spBC_TongHopTHTuVong_Gets", ds, s2, _maSoKham, _DaTT, _loai, _dK);
            // // // //// ds.WriteXmlSchema("CRInphoihoadonthanhtoan_BHNT_RPT.xsd");
            System.Data.SqlClient.SqlCommand cmd = SqlHelper.CreateCommand(SQLConnectionData, DatabaseOwner + ObjectQualifier + "SPNoiTru_ThongkeBN_N");

            cmd.CommandTimeout = 18000;
            cmd.CommandType = System.Data.CommandType.StoredProcedure;
            cmd.Parameters.AddWithValue("tungay", Tungay);
            cmd.Parameters.AddWithValue("denngay", Denngay);
            cmd.Parameters.AddWithValue("loai", loai);
            cmd.Parameters.AddWithValue("DK", dk);
            //cmd.Parameters.AddWithValue("qadmin", _qadmin);
            System.Data.SqlClient.SqlDataAdapter sqlad = new System.Data.SqlClient.SqlDataAdapter(cmd);

            sqlad.Fill(ds);
            if (ds.Tables.Count > 0)
                ds.Tables[0].TableName = "CRBCKHTHQD";
            sqlad.Dispose(); cmd.Dispose(); sqlad = null;
            cmd = null;
            // if (SQLConnectionBD.State == System.Data.ConnectionState.Closed)
            //SQLConnectionBD.Close(); SQLConnectionBD.Dispose();
            //if (_sqlConnection.State == System.Data.ConnectionState.Closed)
            {
                //_sqlConnection.Close(); _sqlConnection.Dispose();
                //_sqlConnection = null;
            }
            return ds;
        }

        public override DataSet CRBC_CHUYENMONKHTH_KKB(String MABC)
        {

            DataSet ds = new DataSet("CRBCKHTHQD");
            System.Data.SqlClient.SqlCommand cmd = SqlHelper.CreateCommand(SQLConnectionData, DatabaseOwner + ObjectQualifier + "BC_CHUYENMONKHTH_KKB_GETALL");

            cmd.CommandTimeout = 18000;
            cmd.CommandType = System.Data.CommandType.StoredProcedure;
            cmd.Parameters.AddWithValue("MABC", MABC);
            System.Data.SqlClient.SqlDataAdapter sqlad = new System.Data.SqlClient.SqlDataAdapter(cmd);
            sqlad.Fill(ds);
            if (ds.Tables.Count > 0)
                ds.Tables[0].TableName = "CRBCKHTHQD";
            sqlad.Dispose(); cmd.Dispose(); sqlad = null;
            cmd = null;
            return ds;
        }

        public override DataSet CRBC_CHUYENMONKHTH_CLS(String MABC)
        {
            DataSet ds = new DataSet("CRBCKHTHQD");
            System.Data.SqlClient.SqlCommand cmd = SqlHelper.CreateCommand(SQLConnectionData, DatabaseOwner + ObjectQualifier + "BC_CHUYENMONKHTH_CLS_GETALL");

            cmd.CommandTimeout = 18000;
            cmd.CommandType = System.Data.CommandType.StoredProcedure;
            cmd.Parameters.AddWithValue("MABC", MABC);
            System.Data.SqlClient.SqlDataAdapter sqlad = new System.Data.SqlClient.SqlDataAdapter(cmd);
            sqlad.Fill(ds);
            if (ds.Tables.Count > 0)
                ds.Tables[0].TableName = "CRBCKHTHQD";
            sqlad.Dispose(); cmd.Dispose(); sqlad = null;
            cmd = null;
            return ds;
        }

        public override DataSet CRBC_ChuyenMonKHTH(String MABC)
        {
            DataSet ds = new DataSet("CRBCKHTHQD");
            System.Data.SqlClient.SqlCommand cmd = SqlHelper.CreateCommand(SQLConnectionData, DatabaseOwner + ObjectQualifier + "BC_ChuyenMonKHTH_GETALL");

            cmd.CommandTimeout = 18000;
            cmd.CommandType = System.Data.CommandType.StoredProcedure;
            cmd.Parameters.AddWithValue("MABC", MABC);
            System.Data.SqlClient.SqlDataAdapter sqlad = new System.Data.SqlClient.SqlDataAdapter(cmd);
            sqlad.Fill(ds);
            if (ds.Tables.Count > 0)
                ds.Tables[0].TableName = "CRBCKHTHQD";
            sqlad.Dispose(); cmd.Dispose(); sqlad = null;
            cmd = null;
            //ds.WriteXmlSchema("C:\\tem\\CRBCKHTH.xsd");
            return ds;
        }

        #endregion
        #region Can Lam sang
        //public abstract DataSet CRCanLamSang_RPT(DateTime _tuNgay, DateTime _denNgay, String _maDV, String _maKhoa, String _maNV, String _dK, Byte _loaiBC);
        public override DataSet CRPhieuKQXN_RPT(string _MaBA, int _STTKhoa, String _makhoa, String _DuongDan, DateTime _NgayDK, DateTime _NgayKQ, String _dK)
        {
            DataSet ds = new DataSet();
            string[] s = { "sp_TraLoiKQXN" };
            SqlHelper.FillDataset(SQLConnectionData, DatabaseOwner + ObjectQualifier + "spPhieuKQXN", ds, s, _MaBA, _STTKhoa, _makhoa, _DuongDan, _NgayDK, _NgayKQ, _dK);
            //ds.WriteXmlSchema("CrCanLamSang_RPTBN.xsd");
            return ds;
        }
        public override DataSet CRCanLamSang_RPT(DateTime _tuNgay, DateTime _denNgay, String _maDV, String _maKhoa, String _maNV, String _dK, Byte _loaiBC)
        {
            DataSet ds = new DataSet();
            string[] s = { "CrCanLamSang_RPT" };
            System.Data.SqlClient.SqlCommand cmd = SqlHelper.CreateCommand(SQLConnectionDataBC, DatabaseOwner + ObjectQualifier + "spBC_CLS");

            cmd.CommandTimeout = 18000;
            cmd.CommandType = System.Data.CommandType.StoredProcedure;
            cmd.Parameters.AddWithValue("TuNgay", _tuNgay);
            cmd.Parameters.AddWithValue("DenNgay", _denNgay);
            cmd.Parameters.AddWithValue("maDV", _maDV);
            cmd.Parameters.AddWithValue("maKhoa", _maKhoa);
            cmd.Parameters.AddWithValue("maNV", _maNV);
            cmd.Parameters.AddWithValue("dK", _dK);
            cmd.Parameters.AddWithValue("loaiBC", _loaiBC);
            System.Data.SqlClient.SqlDataAdapter sqlad = new System.Data.SqlClient.SqlDataAdapter(cmd);
            sqlad.Fill(ds);
            if (ds.Tables.Count > 0)
                ds.Tables[0].TableName = "CrCanLamSang_RPT";
            sqlad.Dispose(); cmd.Dispose(); sqlad = null;
            cmd = null;
            return ds;

            //SqlHelper.FillDataset(SQLConnectionData, DatabaseOwner + ObjectQualifier + "spBC_CLS", ds, s, _tuNgay, _denNgay, _maDV, _maKhoa, _maNV, _dK, _loaiBC);
            // // //// ds.WriteXmlSchema("CrCanLamSang_RPTBN.xsd");
            //return ds;
        }
        public override DataSet CRCanLamSangL1_RPT(DateTime _tuNgay, DateTime _denNgay, String _maDV, String _maKhoa, String _maNV, String _dK, Byte _loaiBC)
        {
            //DataSet ds = new DataSet();
            //string[] s = { "CrCanLamSangL1_RPT" };
            //SqlHelper.FillDataset(SQLConnectionData, DatabaseOwner + ObjectQualifier + "spBC_CLS", ds, s, _tuNgay, _denNgay, _maDV, _maKhoa, _maNV, _dK, _loaiBC);
            //// // //// ds.WriteXmlSchema("CrCanLamSangL1_RPT.xsd");
            //return ds;
            DataSet ds = new DataSet();
            string[] s = { "CrCanLamSangL1_RPT" };
            System.Data.SqlClient.SqlCommand cmd = SqlHelper.CreateCommand(SQLConnectionDataBC, DatabaseOwner + ObjectQualifier + "spBC_CLS");

            cmd.CommandTimeout = 18000;
            cmd.CommandType = System.Data.CommandType.StoredProcedure;
            cmd.Parameters.AddWithValue("TuNgay", _tuNgay);
            cmd.Parameters.AddWithValue("DenNgay", _denNgay);
            cmd.Parameters.AddWithValue("maDV", _maDV);
            cmd.Parameters.AddWithValue("maKhoa", _maKhoa);
            cmd.Parameters.AddWithValue("maNV", _maNV);
            cmd.Parameters.AddWithValue("dK", _dK);
            cmd.Parameters.AddWithValue("loaiBC", _loaiBC);
            System.Data.SqlClient.SqlDataAdapter sqlad = new System.Data.SqlClient.SqlDataAdapter(cmd);
            sqlad.Fill(ds);
            if (ds.Tables.Count > 0)
                ds.Tables[0].TableName = "CrCanLamSangL1_RPT";
            sqlad.Dispose(); cmd.Dispose(); sqlad = null;
            cmd = null;
            return ds;
        }
        #endregion

        #region Nhan Su
        public override DataSet CRDSHopDongL1_RPT(String _maKhoa, String _maPL, DateTime _tuNgay, DateTime _denNgay, Byte _loaiBC)
        {
            DataSet ds = new DataSet();
            string[] s = { "CRDSHopDongL1_RPT" };
            SqlHelper.FillDataset(ConnectionString, DatabaseOwner + ObjectQualifier + "BC_DSHOPDONG", ds, s, _maKhoa, _maPL, _tuNgay, _denNgay, _loaiBC);
            //// //// ds.WriteXmlSchema("CRDSHopDongL1_RPT.xsd");
            return ds;
        }
        public override DataSet CRDSHopDongL2_RPT(String _maKhoa, String _maPL, DateTime _tuNgay, DateTime _denNgay, Byte _loaiBC)
        {
            DataSet ds = new DataSet();
            string[] s = { "CRDSHopDongL2_RPT" };
            SqlHelper.FillDataset(ConnectionString, DatabaseOwner + ObjectQualifier + "BC_DSHOPDONG", ds, s, _maKhoa, _maPL, _tuNgay, _denNgay, _loaiBC);
            // // //// ds.WriteXmlSchema("CRDSHopDongL2_RPT.xsd");
            return ds;
        }
        public override DataSet crBCTinhHinhNV_RPT(String _MaKhoa, String _MaPL, DateTime _TuNgay, DateTime _DenNgay)
        {
            DataSet ds = new DataSet();

            string[] s = { "crBCTinhHinhNV_RPT" };
            SqlHelper.FillDataset(ConnectionString, DatabaseOwner + ObjectQualifier + "BC_DSNHANVIEN", ds, s, _MaKhoa, _MaPL, _TuNgay, _DenNgay);
            //// //// ds.WriteXmlSchema("crBCTinhHinhNV_RPT.xsd");
            return ds;

        }
        public override DataSet CRDSBienDongLuong_RPT(String _maKhoa, DateTime _tuNgay, DateTime _denNgay, String _dK)
        {
            DataSet ds = new DataSet();
            string[] s = { "CRDSBienDongLuong_RPT" };
            SqlHelper.FillDataset(ConnectionString, DatabaseOwner + ObjectQualifier + "spBC_BienDongLuongGetAll", ds, s, _maKhoa, _tuNgay, _denNgay, _dK);
            //// //// ds.WriteXmlSchema("CRDSBienDongLuong_RPT.xsd");
            return ds;
        }
        public override DataSet CRTangGiamTK_RPT(String _maKhoa, DateTime _tuNgay, DateTime _denNgay, String _dK)
        {
            DataSet ds = new DataSet();
            string[] s = { "CRTangGiamTK_RPT" };
            SqlHelper.FillDataset(ConnectionString, DatabaseOwner + ObjectQualifier + "spBC_GTThuongKyGetAll", ds, s, _maKhoa, _tuNgay, _denNgay, _dK);
            //// //// ds.WriteXmlSchema("CRTangGiamTK_RPT.xsd");
            return ds;
        }
        public override DataSet CRKhenThuong_RPT(Boolean _QADMIN)
        {
            DataSet ds = new DataSet();
            string[] s = { "KhenThuong_rpt" };
            SqlHelper.FillDataset(ConnectionString, DatabaseOwner + ObjectQualifier + "spNHANVIEN_KhenThuong_GETALL", ds, s, _QADMIN);
            //// //// ds.WriteXmlSchema("CRKhenThuong_RPT.xsd");
            return ds;
        }
        public override DataSet CRKyLuat_RPT(String _maNV, String _dK, Boolean _QADMIN)
        {
            DataSet ds = new DataSet();
            string[] s = { "KyLuat_rpt" };
            SqlHelper.FillDataset(ConnectionString, DatabaseOwner + ObjectQualifier + "spNHANVIEN_KyLuat_FINDS", ds, s, _maNV, _dK, _QADMIN);
            //// //// ds.WriteXmlSchema("CRKyLuat_RPT.xsd");
            return ds;
        }
        public override DataSet CRQTBoiDuong_RPT(String _maNV, String _dK, Boolean _QADMIN)
        {
            DataSet ds = new DataSet();
            string[] s = { "QTboiduong_rpt" };
            SqlHelper.FillDataset(ConnectionString, DatabaseOwner + ObjectQualifier + "spNHANVIEN_QTBoiDuong_FINDS", ds, s, _maNV, _dK, _QADMIN);
            // //// ds.WriteXmlSchema("CRQTBoiDuong_RPT.xsd");
            return ds;
        }
        public override DataSet CRQTCONGTAC_RPT(Boolean _QADMIN)
        {
            DataSet ds = new DataSet();
            string[] s = { "QTCongTac_rpt" };
            SqlHelper.FillDataset(ConnectionString, DatabaseOwner + ObjectQualifier + "spNHANVIEN_QTCONGTAC_GETALL", ds, s, _QADMIN);
            //// //// ds.WriteXmlSchema("CRQTCONGTAC_RPT.xsd");
            return ds;
        }
        public override DataSet CRQTDaoTao_RPT(Boolean _QADMIN)
        {
            DataSet ds = new DataSet();
            string[] s = { "QTdaotao_rpt" };
            SqlHelper.FillDataset(ConnectionString, DatabaseOwner + ObjectQualifier + "spNHANVIEN_QTDaoTao_GETALL", ds, s, _QADMIN);
            //// //// ds.WriteXmlSchema("CRQTDaoTao_RPT.xsd");
            return ds;
        }
        public override DataSet CRQTdongBHXH_RPT(Boolean _QADMIN)
        {
            DataSet ds = new DataSet();
            string[] s = { "QTdongBHXH_rpt" };
            SqlHelper.FillDataset(ConnectionString, DatabaseOwner + ObjectQualifier + "spNHANVIEN_QTdongBHXH_GETALL", ds, s, _QADMIN);
            //// //// ds.WriteXmlSchema("CRQTdongBHXH_RPT.xsd");
            return ds;
        }
        public override DataSet CRQTTangLuong_RPT(Boolean _QADMIN)
        {
            DataSet ds = new DataSet();
            string[] s = { "QTluong_rpt" };
            SqlHelper.FillDataset(ConnectionString, DatabaseOwner + ObjectQualifier + "spNHANVIEN_QTTangLuong_GETALL", ds, s, _QADMIN);
            //// //// ds.WriteXmlSchema("CRQTTangLuong_RPT.xsd");
            return ds;
        }
        public override DataSet CRQHGiaDinh_RPT(String _dK, Boolean _QADMIN)
        {
            DataSet ds = new DataSet();
            string[] s = { "QuanHeGD_rpt" };
            SqlHelper.FillDataset(ConnectionString, DatabaseOwner + ObjectQualifier + "spNHANVIEN_QuanHeGiaDinh_GETALL", ds, s, _dK, _QADMIN);
            //// //// ds.WriteXmlSchema("CRQHGiaDinh_RPT.xsd");
            return ds;
        }
        public override DataSet CRTrinhDoNN_RPT(String _dK, Boolean _QADMIN)
        {
            DataSet ds = new DataSet();
            string[] s = { "TrinhDoNN_rpt" };
            SqlHelper.FillDataset(ConnectionString, DatabaseOwner + ObjectQualifier + "spNHANVIEN_TDNgoaiNgu_GETALL", ds, s, _dK, _QADMIN);
            //// //// ds.WriteXmlSchema("CRTrinhDoNN_RPT.xsd");
            return ds;
        }
        public override DataSet CRHocHam_RPT(Boolean _QADMIN)
        {
            DataSet ds = new DataSet();
            string[] s = { "HocHam_rpt" };
            SqlHelper.FillDataset(ConnectionString, DatabaseOwner + ObjectQualifier + "spNHANVIEN_GetAll", ds, s, _QADMIN);
            //// //// ds.WriteXmlSchema("CRHocHam_RPT.xsd");
            return ds;
        }
        public override DataSet CRDanhHieu_RPT(Boolean _QADMIN)
        {
            DataSet ds = new DataSet();
            string[] s = { "DanhHieu_rpt" };
            SqlHelper.FillDataset(ConnectionString, DatabaseOwner + ObjectQualifier + "spNHANVIEN_GetAll", ds, s, _QADMIN);
            //// //// ds.WriteXmlSchema("CRDanhHieu_RPT.xsd");
            return ds;
        }
        public override DataSet CRNhanVien_RPT(Boolean _QADMIN)
        {
            DataSet ds = new DataSet();
            string[] s = { "CRBCHoSoNV" };
            SqlHelper.FillDataset(ConnectionString, DatabaseOwner + ObjectQualifier + "spNHANVIEN_GetAll", ds, s, _QADMIN);
            //// //// ds.WriteXmlSchema("CRNhanVien_RPT.xsd");
            return ds;
        }
        public override DataSet CRBKThanhToanTT_RPT(DateTime _thang, String _maKhoa, String _dK, Boolean _qAdmin)
        {
            DataSet ds = new DataSet();
            string[] s = { "CRBKThanhToanTT_RPT" };
            SqlHelper.FillDataset(ConnectionString, DatabaseOwner + ObjectQualifier + "spLUONG_TRUC_FINDS", ds, s, _thang, _maKhoa, _dK, _qAdmin);
            ////// ds.WriteXmlSchema("CRBKThanhToanTT_RPT.xsd");
            return ds;
        }
        public override DataSet GetCRDSBoiDuongCaPTTim(String _MAKHOA, DateTime _THANG, String _DK)
        {
            DataSet ds = new DataSet();
            string[] s = { "CRDSBoiDuongCaPTTim" };
            SqlHelper.FillDataset(ConnectionString, DatabaseOwner + ObjectQualifier + "spLUONG_BoiDuongPT_NV_FINDS", ds, s, _MAKHOA, _THANG, _DK);
            ////// ds.WriteXmlSchema("CRDSBoiDuongCaPTTim.xsd");
            return ds;
        }
        public override DataSet GetCRBangKeThanhToanLuongM1(DateTime _THANG, String _MAKHOA, String _DK)
        {
            DataSet ds = new DataSet();
            string[] s = { "CRBangKeThanhToanLuongM1" };
            SqlHelper.FillDataset(ConnectionString, DatabaseOwner + ObjectQualifier + "spLUONG_M1_FINDS", ds, s, _THANG, _MAKHOA, _DK, false);
            ////// ds.WriteXmlSchema("CRBangKeThanhToanLuongM1.xsd");
            return ds;
        }
        public override DataSet GetCRBangKeTienHoiChan(DateTime _THANG, String _MAKHOA, String _DK)
        {
            DataSet ds = new DataSet();
            string[] s = { "CRBangKeTongHopHoiChanNoiNgoaiVien" };
            SqlHelper.FillDataset(ConnectionString, DatabaseOwner + ObjectQualifier + "spLUONG_hoichan_FINDS", ds, s, _THANG, _MAKHOA, _DK, false);
            ////// ds.WriteXmlSchema("CRBangKeThanhToanLuongM1.xsd");
            return ds;
        }
        public override DataSet GetCRTienBoiDuongChupXQ(DateTime _THANG, String _MAKHOA, String _DK)
        {
            DataSet ds = new DataSet();
            string[] s = { "CRTienBoiDuongChupXQ" };
            SqlHelper.FillDataset(ConnectionString, DatabaseOwner + ObjectQualifier + "spLUONG_FINDS", ds, s, _THANG, _MAKHOA, _DK, false);
            // //// ds.WriteXmlSchema("CRTienBoiDuongChupXQ.xsd");
            return ds;
        }
        public override DataSet GetCRDanhSachLinhTienThuongABC(String _MAKHOA, DateTime _THANG, String _DK)
        {
            DataSet ds = new DataSet();
            string[] s = { "CRDanhSachLinhTienThuongABC" };
            SqlHelper.FillDataset(ConnectionString, DatabaseOwner + ObjectQualifier + "spLUONG_FINDS", ds, s, _MAKHOA, _THANG, _DK, false);
            ////// ds.WriteXmlSchema("CRDanhSachLinhTienThuongABC.xsd");
            return ds;
        }
        public override DataSet GetCRDanhSachLinhCongTacPhi(String _MAKHOA, DateTime _THANG, String _DK)
        {
            DataSet ds = new DataSet();
            string[] s = { "CRDanhSachLinhCongTacPhi" };
            SqlHelper.FillDataset(ConnectionString, DatabaseOwner + ObjectQualifier + "spLUONG_FINDS", ds, s, _MAKHOA, _THANG, _DK, false);
            ////// ds.WriteXmlSchema("CRDanhSachLinhCongTacPhi.xsd");
            return ds;
        }
        public override DataSet GetCRBangKeLamDem(String _MAKHOA, DateTime _THANG, String _DK)
        {
            DataSet ds = new DataSet();
            string[] s = { "CRBangKeLamDem" };
            SqlHelper.FillDataset(ConnectionString, DatabaseOwner + ObjectQualifier + "spLUONG_FINDS", ds, s, _MAKHOA, _THANG, _DK, false);
            ////// ds.WriteXmlSchema("CRBangKeLamDem.xsd");
            return ds;
        }
        public override DataSet GetCRTHTienNgoaiGio_RPT(String _MAKHOA, DateTime _THANG, String _DK)
        {
            DataSet ds = new DataSet();
            string[] s = { "CRTHTienNgoaiGio_RPT" };
            SqlHelper.FillDataset(ConnectionString, DatabaseOwner + ObjectQualifier + "spLUONG_FINDS", ds, s, _MAKHOA, _THANG, _DK, false);
            ////// ds.WriteXmlSchema("CRTHTienNgoaiGio_RPT.xsd");
            return ds;
        }
        public override DataSet GetCRPhuCapUuDaiNghe(String _MAKHOA, DateTime _THANG, String _DK)
        {
            DataSet ds = new DataSet();
            string[] s = { "CRPhuCapUuDaiNghe" };
            SqlHelper.FillDataset(ConnectionString, DatabaseOwner + ObjectQualifier + "spLUONG_Nghe_FINDS", ds, s, _THANG, _MAKHOA, _DK, false);
            ////// ds.WriteXmlSchema("CRPhuCapUuDaiNghe.xsd");
            return ds;
        }
        public override DataSet GetCRBangKePhuCapDocHai(DateTime _THANG, String _MAKHOA, String _DK)
        {
            DataSet ds = new DataSet();
            string[] s = { "CRBangKePhuCapDocHai" };
            SqlHelper.FillDataset(ConnectionString, DatabaseOwner + ObjectQualifier + "spLUONG_DocHai_FINDS", ds, s, _THANG, _MAKHOA, _DK);
            ////// ds.WriteXmlSchema("CRBangKePhuCapDocHai.xsd");
            return ds;
        }
        public override DataSet GetCRBangKeLuongM2(DateTime _THANG, String _MAKHOA, String _DK, Boolean _QADMIN)
        {
            DataSet ds = new DataSet();
            string[] s = { "CRBangKeLuongM2" };
            SqlHelper.FillDataset(ConnectionString, DatabaseOwner + ObjectQualifier + "spLUONG_M2_FINDS", ds, s, _THANG, _MAKHOA, _DK, false);
            //// ds.WriteXmlSchema("CRBangKeLuongM2.xsd");
            return ds;
        }
        public override DataSet GetCRDSCanBoVienChucDeNghiNangBacLuong(String _MAKHOA, DateTime _TuNgay, DateTime _DenNgay, String _DK)
        {
            DataSet ds = new DataSet();
            string[] s = { "CRDSCanBoVienChucDeNghiNangBacLuong" };
            SqlHelper.FillDataset(ConnectionString, DatabaseOwner + ObjectQualifier + "spBC_LenLuongGetAll", ds, s, _MAKHOA, _TuNgay, _DenNgay, _DK);
            //// ds.WriteXmlSchema("CRDSCanBoVienChucDeNghiNangBacLuong.xsd");
            return ds;
        }
        public override DataSet GetCRLuong_TTTM(DateTime _THANG, String _MAKHOA, String _VaiTro, String _DK, Boolean qadmin)
        {
            DataSet ds = new DataSet();
            string[] s = { "GetCRLuong_TTTM" };
            SqlHelper.FillDataset(ConnectionString, DatabaseOwner + ObjectQualifier + "spLUONG_TTTM_FINDS", ds, s, _THANG, _MAKHOA, _VaiTro, _DK, qadmin);
            //// ds.WriteXmlSchema("GetCRLuong_TTTM.xsd");
            return ds;
        }
        public override DataSet GetCRLuong_PT(DateTime _THANG, String _MAKHOA, String _VaiTro, String _DK)
        {
            DataSet ds = new DataSet();
            string[] s = { "GetCRLuong_TTTM" };
            SqlHelper.FillDataset(ConnectionString, DatabaseOwner + ObjectQualifier + "spLUONG_PT_FINDS", ds, s, _THANG, _MAKHOA, _VaiTro, _DK, false);
            // //// ds.WriteXmlSchema("GetCRLuong_TTTM.xsd");
            return ds;
        }
        public override DataSet GetCRLuong_TT_NV(DateTime _THANG, String _MAKHOA, String _DK)
        {
            DataSet ds = new DataSet();
            string[] s = { "CRDSLinhTienTTHoiSuc" };
            SqlHelper.FillDataset(ConnectionString, DatabaseOwner + ObjectQualifier + "spLUONG_TT_NV_FINDS", ds, s, _THANG, _MAKHOA, _DK);
            ////// ds.WriteXmlSchema("GetCRLuong_TTTM.xsd");
            return ds;
        }
        public override DataSet CRLuongTH(DateTime _THANG, String _MAKHOA, String _DK, Boolean _QADMIN)
        {
            DataSet ds = new DataSet();
            string[] s = { "CRLuongTH" };
            SqlHelper.FillDataset(ConnectionString, DatabaseOwner + ObjectQualifier + "spLUONG_FINDS", ds, s, _THANG, _MAKHOA, _DK, _QADMIN);
            //// ds.WriteXmlSchema("CRLuongTH.xsd");
            return ds;
        }

        #region ReportLuong

        public override DataSet CRDSLinhTienKBNgoaiGioT7_RPT(String _maKhoa, DateTime _thang, String _dK)
        {
            DataSet ds = new DataSet();
            string[] s = { "CRDSLinhTienKBNgoaiGioT7_RPT" };
            SqlHelper.FillDataset(ConnectionString, DatabaseOwner + ObjectQualifier + "spLUONG_NgoaiGio_NV_FINDS", ds, s, _maKhoa, _thang, _dK);
            ////// ds.WriteXmlSchema("CRDSLinhTienKBNgoaiGioT7_RPT.xsd");
            return ds;
        }

        #endregion

        #endregion

        #region TBYT
       
        public override DataSet CRBienBanSuaChua_RPT(Boolean _qadmin, String _maPX, String DK)
        {
            DataSet ds = new DataSet();
            string[] s = { "CRBienBanSuaChua_RPT" };
            SqlHelper.FillDataset(ConnectionString, DatabaseOwner + ObjectQualifier + "spTBPHIEUXUAT_C_GETALL", ds, s, _qadmin, _maPX, DK);
            //// //// ds.WriteXmlSchema("CRBienBanSuaChua_RPT.xsd");
            return ds;
        }
        public override DataSet CRLichBaoDuong_RPT(DateTime _TuNgay, DateTime _DenNgay, int _LoaiPhieu, string _MaKho, string _MaNhom, string _MaChungLoai, string _Dk)
        {
            DataSet ds = new DataSet();
            string[] s = { "CRLichBaoDuong_RPT" };
            SqlHelper.FillDataset(ConnectionString, DatabaseOwner + ObjectQualifier + "spTB_BCBAODUONG", ds, s, _TuNgay, _DenNgay, _LoaiPhieu, _MaKho, _MaNhom, _MaChungLoai, _Dk);
            // // //// ds.WriteXmlSchema("CRLichBaoDuong_RPT.xsd");
            return ds;
        }
        public override DataSet CRBCNhapThietBi_RPT(DateTime _TuNgay, DateTime _DenNgay, int _LoaiPhieu, string _MaKho, string _MaNhom, string _MaChungLoai, string _Dk)
        {
            DataSet ds = new DataSet();
            string[] s = { "CRBCNhapThietBi_RPT" };
            SqlHelper.FillDataset(ConnectionString, DatabaseOwner + ObjectQualifier + "spTB_BCNHAP", ds, s, _TuNgay, _DenNgay, _LoaiPhieu, _MaKho, _MaNhom, _MaChungLoai, _Dk);
            //// //// ds.WriteXmlSchema("CRBCNhapThietBi_RPT.xsd");
            return ds;
        }
        public override DataSet CRLichBaoDuongTBVT_RPT(DateTime _TuNgay, DateTime _DenNgay, int _LoaiPhieu, string _MaKho, string _MaNhom, string _MaChungLoai, string _Dk)
        {
            DataSet ds = new DataSet();
            string[] s = { "CRLichBaoDuongTBVT_RPT" };
            SqlHelper.FillDataset(ConnectionString, DatabaseOwner + ObjectQualifier + "spTB_BCBAODUONG_VatTu", ds, s, _TuNgay, _DenNgay, _LoaiPhieu, _MaKho, _MaNhom, _MaChungLoai, _Dk);
            // // //// ds.WriteXmlSchema("CRLichBaoDuongTBVT_RPT.xsd");
            return ds;
        }
        public override DataSet CRBBBanGiaoTSTTB_RPT(String _maPN, String DK)
        {
            DataSet ds = new DataSet();
            string[] s = { "CRBBBanGiaoTSTTB_RPT" };
			SqlHelper.FillDataset(ConnectionString, DatabaseOwner + ObjectQualifier + "spTBPHIEUNHAP_C_GETALLBYLINHKIEN", ds, s, _maPN, DK);
            //// //// ds.WriteXmlSchema("CRBBBanGiaoTSTTB_RPT.xsd");
            return ds;
        }
        public override DataSet CRBBBanGiaoTSTTB_RPT_YHCT_San(String _maPN, String DK)
        {
            DataSet ds = new DataSet();
            string[] s = { "CRBBBanGiaoTSTTB_RPT" };
            SqlHelper.FillDataset(ConnectionString, DatabaseOwner + ObjectQualifier + "spTBPHIEUNHAP_C_GETALL", ds, s, _maPN, DK);
            //// //// ds.WriteXmlSchema("CRBBBanGiaoTSTTB_RPT.xsd");
            return ds;
        }
        public override DataSet CRTBPhieuDuTruNhap_RPT(bool _Admin, String _maDuTru, String DK)
        {
            DataSet ds = new DataSet();
            string[] s = { "CRBBBanGiaoTSTTB_RPT" };
            SqlHelper.FillDataset(ConnectionString, DatabaseOwner + ObjectQualifier + "spTBPHIEUDTNHAP_C_GETALL", ds, s, _Admin, _maDuTru, DK);
            //// //// ds.WriteXmlSchema("CRBBBanGiaoTSTTB_RPT.xsd");
            return ds;
        }

        public override DataSet CRTBYTKiemKe_RPT(String _maKK, Boolean _qadmin)
        {
            DataSet ds = new DataSet();
            string[] s = { "CRTBYTKiemKe_RPT" };
            SqlHelper.FillDataset(ConnectionString, DatabaseOwner + ObjectQualifier + "spTBKIEMKE_GET", ds, s, _maKK, _qadmin);
            //// //// ds.WriteXmlSchema("CRTBYTKiemKe_RPT.xsd");
            return ds;
        }
        public override DataSet CRTBYTKiemKe_Khoa_RPT(String _maKK, Boolean _qadmin)
        {
            DataSet ds = new DataSet();
            string[] s = { "CRTBYTKiemKe_RPT" };
            SqlHelper.FillDataset(ConnectionString, DatabaseOwner + ObjectQualifier + "spTBKIEMKE_Khoa_GET", ds, s, _maKK, _qadmin);
            //// //// ds.WriteXmlSchema("CRTBYTKiemKe_RPT.xsd");
            return ds;
        }
        public override DataSet CRTBYTXuatTra_RPT(String _maPhieuXuat, Boolean _qadmin)
        {
            DataSet ds = new DataSet();
            string[] s = { "CRTBYTXuatTra_RPT" };
            SqlHelper.FillDataset(ConnectionString, DatabaseOwner + ObjectQualifier + "spTBXUATTRA_GET", ds, s, _maPhieuXuat, _qadmin);
            //// //// ds.WriteXmlSchema("CRTBYTXuatTra_RPT.xsd");
            return ds;
        }
        public override DataSet CRTBYNhanLai_RPT(Boolean _qadmin, string _maPhieuNT, string _loai, string _daPhat, string _dK)
        {
            DataSet ds = new DataSet();
            string[] s = { "CRTBYNhanLai_RPT" };
            SqlHelper.FillDataset(ConnectionString, DatabaseOwner + ObjectQualifier + "spTBNhapTra_GET", ds, s, _qadmin, _maPhieuNT, _loai, _daPhat, _dK);
            ////ds.WriteXmlSchema("I:\\CRTBYNhanLai_RPT.xsd");
            return ds;
        }
        public override DataSet CRTBTONKHO_RPT(DateTime _Thang, string _MaKho)
        {
            DataSet ds = new DataSet();
            string[] s = { "Table1" };
            SqlHelper.FillDataset(ConnectionString, DatabaseOwner + ObjectQualifier + "SP_TBBCTONKHO", ds, s, _Thang, _MaKho);
            //ds.WriteXmlSchema("Table1.xsd");
            return ds;
        }
        public override DataSet CRTBTONKHOA_RPT(DateTime _Thang, string _MaKhoa)
        {
            DataSet ds = new DataSet();
            string[] s = { "CRTBTONkHOA_RPT" };
            SqlHelper.FillDataset(ConnectionString, DatabaseOwner + ObjectQualifier + "SP_TBBCTONKHOA", ds, s, _Thang, _MaKhoa);
            //  //// ds.WriteXmlSchema("CRTBTONkHOA_RPT.xsd");
            return ds;
        }
        #endregion

        #region Noitru
        public override DataSet RptGetBenhAn_ThuocSD(String _maBA, String DK, Boolean _qadmin)
        {
            DataSet ds = new DataSet();
            string[] s = { "BenhAn_ThuocSD_TruyenDich" };

            SqlHelper.FillDataset(SQLConnectionDataNoiT, DatabaseOwner + ObjectQualifier + "spBenhAn_Thuocsd_GetAll", ds, s, _maBA, DK, _qadmin);
            return ds;
        }
        public override DataSet RptGetAllBenhAn_MienGiam(String _maBA, String DK, Boolean _qadmin)
        {
            DataSet ds = new DataSet();
            string[] s = { "crBCDSBenhAn" };

            SqlHelper.FillDataset(SQLConnectionDataNoiT, DatabaseOwner + ObjectQualifier + "spBenhAn_MienGiam_GetAll", ds, s, _maBA, DK, _qadmin);
            return ds;
        }
        public override DataSet RptGetBenhAn_Chamsoc(String _maBA, String DK, Boolean _qadmin)
        {
            DataSet ds = new DataSet();
            string[] s = { "CRBenhAn_ChamSoc" };

            SqlHelper.FillDataset(SQLConnectionDataNoiT, DatabaseOwner + ObjectQualifier + "spBenhAn_Chamsoc_Find", ds, s, _maBA, DK, _qadmin);
            return ds;
        }
        public override DataSet RptGetBenhAn_ChamsocPT(String _maBA, String DK, Boolean _qadmin)
        {
            DataSet ds = new DataSet();
            string[] s = { "CRBenhAn_ChamSoc" };

            SqlHelper.FillDataset(SQLConnectionDataNoiT, DatabaseOwner + ObjectQualifier + "spBenhAn_ChamsocPT_Find", ds, s, _maBA, DK, _qadmin);
            return ds;
        }

        public override DataSet RptGetBenhAn_TheoDoi(String _maBA, String DK, Boolean _qadmin)
        {
            DataSet ds = new DataSet();
            string[] s = { "CRBenhAn_ChamSoc" };

            SqlHelper.FillDataset(SQLConnectionDataNoiT, DatabaseOwner + ObjectQualifier + "spBenhAn_TheoDoi_Find", ds, s, _maBA, DK, _qadmin);
            return ds;
        }
        public override DataSet RptGetBenhAn_Chamsoc_San(String _maBA, String DK, Boolean _qadmin)
        {
            DataSet ds = new DataSet();
            string[] s = { "CRBenhAn_ChamSoc" };

            SqlHelper.FillDataset(SQLConnectionDataNoiT, DatabaseOwner + ObjectQualifier + "spBenhAn_Chamsoc_San_Find", ds, s, _maBA, DK, _qadmin);
            //ds.WriteXmlSchema("CRBenhAnChamSoc_rpt.xsd");
            //ds.WriteXml("CRBenhAnChamSoc_rpt1.xsd");
            return ds;
        }
        public override DataSet RptGetBenhAn_Chamsoc_SoSinh(String _maBA, String DK, Boolean _qadmin)
        {
            DataSet ds = new DataSet();
            string[] s = { "CRBenhAn_ChamSoc" };

            SqlHelper.FillDataset(SQLConnectionDataNoiT, DatabaseOwner + ObjectQualifier + "spBenhAn_Chamsoc_SoSinh_Find", ds, s, _maBA, DK, _qadmin);
            return ds;
        }
        public override DataSet RptGetBenhAn_Chamsoc_TNT(String _maBA, String DK, Boolean _qadmin)
        {
            DataSet ds = new DataSet();
            string[] s = { "CRBenhAn_ChamSoc" };

            SqlHelper.FillDataset(SQLConnectionDataNoiT, DatabaseOwner + ObjectQualifier + "spBenhAn_Chamsoc_TNT_Find", ds, s, _maBA, DK, _qadmin);
            return ds;
        }
        
        public override DataSet RptGetBenhAn_Chamsoc_DieuTri(String _maBA, String DK, Boolean _qadmin)
        {
            DataSet ds = new DataSet();
            string[] s = { "CRBenhAn_DieuTri" };

            SqlHelper.FillDataset(SQLConnectionDataNoiT, DatabaseOwner + ObjectQualifier + "spBenhAn_DieuTri_Find", ds, s, _maBA, DK, _qadmin);
            return ds;
        }
        public override DataSet RptGetBenhAn_Chamsoc_DieuTri(String _maBA, int sttkhoa,int stt)
        {
            DataSet ds = new DataSet();
            string[] s = { "CRBenhAn_DieuTri" };

            SqlHelper.FillDataset(SQLConnectionDataNoiT, DatabaseOwner + ObjectQualifier + "spBenhAn_DieuTri_Get", ds, s, _maBA, sttkhoa, stt);
            return ds;
        }
        public override DataSet CRGiayRaVien_RPT(String MABC, String DK, Boolean _qadmin)
        {
            DataSet ds = new DataSet("CRGiayRaVien_RPT");
            //string[] s ={ "CRGiayRaVien_RPT" };
            //SqlHelper.FillDataset( ConnectionString, DatabaseOwner + ObjectQualifier + "spBC_DuocBV_GETALL", ds, s, MABC, DK, _qadmin);
            //// // //// ds.WriteXmlSchema("CRGiayRaVien_RPT.xsd");
            System.Data.SqlClient.SqlCommand cmd = SqlHelper.CreateCommand(SQLConnectionData, DatabaseOwner + ObjectQualifier + "spBC_DuocBV_GETALL");

            cmd.CommandTimeout = 18000;
            cmd.CommandType = System.Data.CommandType.StoredProcedure;
            cmd.Parameters.AddWithValue("MABC ", MABC);
            cmd.Parameters.AddWithValue("DK", DK);
            cmd.Parameters.AddWithValue("QADMIN", _qadmin);
            System.Data.SqlClient.SqlDataAdapter sqlad = new System.Data.SqlClient.SqlDataAdapter(cmd);

            sqlad.Fill(ds);
            if (ds.Tables.Count > 0)
                ds.Tables[0].TableName = "CRGiayRaVien_RPT";
            sqlad.Dispose(); cmd.Dispose(); sqlad = null;
            cmd = null;
            // if (SQLConnectionBD.State == System.Data.ConnectionState.Closed)
            //SQLConnectionBD.Close(); SQLConnectionBD.Dispose();
            //if (_sqlConnection.State == System.Data.ConnectionState.Closed)
            {
                //_sqlConnection.Close(); _sqlConnection.Dispose();
                //_sqlConnection = null;
            }
            return ds;

        }
        public override DataSet CRInhoadonthanhtoan_BHNT(DateTime _TUNGAYYC, DateTime _DENNGAYYC, int LOAIPHIEU, string _DK)
        {
            DataSet ds = new DataSet("CRInhoadonthanhtoan_BHNT");
            //string[] s ={ "CRInhoadonthanhtoan_BHNT" };
            //SqlHelper.FillDataset( ConnectionString, DatabaseOwner + ObjectQualifier + "spBenhAn_HoaDon_GETAll", ds, s, _TUNGAYYC, _DENNGAYYC, LOAIPHIEU, _DK);
            ////// ds.WriteXmlSchema("CRInhoadonthanhtoan_BHNT.xsd");
            System.Data.SqlClient.SqlCommand cmd = SqlHelper.CreateCommand(SQLConnectionDataBC, DatabaseOwner + ObjectQualifier + "spBenhAn_HoaDon_GETAll");

            cmd.CommandTimeout = 18000;
            cmd.CommandType = System.Data.CommandType.StoredProcedure;
            cmd.Parameters.AddWithValue("TuNgay", _TUNGAYYC);
            cmd.Parameters.AddWithValue("DenNgay", _DENNGAYYC);
            cmd.Parameters.AddWithValue("loai", LOAIPHIEU);
            cmd.Parameters.AddWithValue("DK", _DK);
            System.Data.SqlClient.SqlDataAdapter sqlad = new System.Data.SqlClient.SqlDataAdapter(cmd);

            sqlad.Fill(ds);
            if (ds.Tables.Count > 0)
                ds.Tables[0].TableName = "CRInhoadonthanhtoan_BHNT";
            sqlad.Dispose(); cmd.Dispose(); sqlad = null;
            cmd = null;
            // if (SQLConnectionBD.State == System.Data.ConnectionState.Closed)
            //SQLConnectionBD.Close(); SQLConnectionBD.Dispose();
            //if (_sqlConnection.State == System.Data.ConnectionState.Closed)
            {
                //_sqlConnection.Close(); _sqlConnection.Dispose();
                //_sqlConnection = null;
            }
            //ds.WriteXmlSchema("CRInhoadonthanhtoan_BHNT.xsd");
            return ds;

        }
        public override DataSet CRTHTinhHinhTuVong_RPT(DateTime _TUNGAYYC, DateTime _DENNGAYYC, string makhoa, byte loaibc)
        {
            DataSet ds = new DataSet();
            string[] s = { "CRTHTuVong_RPT" };
            SqlHelper.FillDataset(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "SP_BCBENHTATTUVONG", ds, s, _TUNGAYYC, _DENNGAYYC, makhoa, loaibc);
           // ds.WriteXmlSchema("CRTHTuVong_RPT.xsd");
            return ds;
        }
        public override DataSet RptGetInphoihoadonthanhtoan_BH(String _maSoKham, Byte _DaTT, byte _loai, String _dK,byte _loaikq)
        {
            DataSet ds = new DataSet("CRInphoithanhtoan_BHNT");

            //string[] s2 = { "CRInphoithanhtoan_BHNT" };
            //SqlHelper.FillDataset(ConnectionString, DatabaseOwner + ObjectQualifier + "spBENHAN_GETsBCDICHVU", ds, s2, _maSoKham, _DaTT, _loai, _dK);
            // // //// ds.WriteXmlSchema("CRInphoihoadonthanhtoan_BHNT_RPT.xsd");
            System.Data.SqlClient.SqlCommand cmd ;
            if (_loaikq ==0)
            cmd = SqlHelper.CreateCommand(SQLConnectionDataNoiT, DatabaseOwner + ObjectQualifier + "spBENHAN_GETsBCDICHVU");
            else
                cmd = SqlHelper.CreateCommand(SQLConnectionDataChuyenBN, DatabaseOwner + ObjectQualifier + "spBENHAN_GETsBCDICHVU");
         
            cmd.CommandTimeout = 18000;
            cmd.CommandType = System.Data.CommandType.StoredProcedure;
            cmd.Parameters.AddWithValue("maba", _maSoKham);
            cmd.Parameters.AddWithValue("DaTT  ", _DaTT);
            cmd.Parameters.AddWithValue("loai", _loai);
            cmd.Parameters.AddWithValue("DK", _dK);
            System.Data.SqlClient.SqlDataAdapter sqlad = new System.Data.SqlClient.SqlDataAdapter(cmd);

            sqlad.Fill(ds);
            if (ds.Tables.Count > 0)
                ds.Tables[0].TableName = "CRInphoithanhtoan_BHNT";
            sqlad.Dispose(); cmd.Dispose(); sqlad = null;
            cmd = null;
            // if (SQLConnectionBD.State == System.Data.ConnectionState.Closed)
            //SQLConnectionBD.Close(); SQLConnectionBD.Dispose();
            //if (_sqlConnection.State == System.Data.ConnectionState.Closed)
            {
                //_sqlConnection.Close(); _sqlConnection.Dispose();
                //_sqlConnection = null;
            }
            return ds;

        }
      
        public override DataSet RptGetInphoihoadonthanhtoan_BH(String _maSoKham, Byte _DaTT, byte _loai, String _dK)
        {
            DataSet ds = new DataSet("CRInphoithanhtoan_BHNT");

            //string[] s2 = { "CRInphoithanhtoan_BHNT" };
            //SqlHelper.FillDataset(ConnectionString, DatabaseOwner + ObjectQualifier + "spBENHAN_GETsBCDICHVU", ds, s2, _maSoKham, _DaTT, _loai, _dK);
            // // //// ds.WriteXmlSchema("CRInphoihoadonthanhtoan_BHNT_RPT.xsd");
            System.Data.SqlClient.SqlCommand cmd = SqlHelper.CreateCommand(SQLConnectionDataNoiT, DatabaseOwner + ObjectQualifier + "spBENHAN_GETsBCDICHVU");

            cmd.CommandTimeout = 18000;
            cmd.CommandType = System.Data.CommandType.StoredProcedure;
            cmd.Parameters.AddWithValue("maba", _maSoKham);
            cmd.Parameters.AddWithValue("DaTT  ", _DaTT);
            cmd.Parameters.AddWithValue("loai", _loai);
            cmd.Parameters.AddWithValue("DK", _dK);
            System.Data.SqlClient.SqlDataAdapter sqlad = new System.Data.SqlClient.SqlDataAdapter(cmd);

            sqlad.Fill(ds);
            if (ds.Tables.Count > 0)
                ds.Tables[0].TableName = "CRInphoithanhtoan_BHNT";
            sqlad.Dispose(); cmd.Dispose(); sqlad = null;
            cmd = null;
            // if (SQLConnectionBD.State == System.Data.ConnectionState.Closed)
            //SQLConnectionBD.Close(); SQLConnectionBD.Dispose();
            //if (_sqlConnection.State == System.Data.ConnectionState.Closed)
            {
                //_sqlConnection.Close(); _sqlConnection.Dispose();
                //_sqlConnection = null;
            }
            return ds;

        }
        public override DataSet RptGetInphoihoadonthanhtoan_BHTH(String _maSoKham, Byte _DaTT, byte _loai, String _dK)
        {
            DataSet ds = new DataSet("CRInphoithanhtoan_BHNT");

            //string[] s2 = { "CRInphoithanhtoan_BHNT" };
            //SqlHelper.FillDataset(ConnectionString, DatabaseOwner + ObjectQualifier + "spBENHAN_GETsBCDICHVUTH", ds, s2, _maSoKham, _DaTT, _loai, _dK);
            //// //// ds.WriteXmlSchema("CRInphoihoadonthanhtoan_BHNT_RPT.xsd");
            System.Data.SqlClient.SqlCommand cmd = SqlHelper.CreateCommand(SQLConnectionDataNoiT, DatabaseOwner + ObjectQualifier + "spBENHAN_GETsBCDICHVUTH");

            cmd.CommandTimeout = 18000;
            cmd.CommandType = System.Data.CommandType.StoredProcedure;
            cmd.Parameters.AddWithValue("maba", _maSoKham);
            cmd.Parameters.AddWithValue("DaTT  ", _DaTT);
            cmd.Parameters.AddWithValue("loai", _loai);
            cmd.Parameters.AddWithValue("DK", _dK);
            System.Data.SqlClient.SqlDataAdapter sqlad = new System.Data.SqlClient.SqlDataAdapter(cmd);

            sqlad.Fill(ds);
            if (ds.Tables.Count > 0)
                ds.Tables[0].TableName = "CRInphoithanhtoan_BHNT";
            sqlad.Dispose(); cmd.Dispose(); sqlad = null;
            cmd = null;
            // if (SQLConnectionBD.State == System.Data.ConnectionState.Closed)
            //SQLConnectionBD.Close(); SQLConnectionBD.Dispose();
            //if (_sqlConnection.State == System.Data.ConnectionState.Closed)
            {
                //_sqlConnection.Close(); _sqlConnection.Dispose();
                //_sqlConnection = null;
            }
            return ds;

        }
        public override DataSet CRPhieuLinh_RPTa(DateTime _TUNGAYYC, DateTime _DENNGAYYC, Boolean _Duyet, Boolean _Phat, string _MaDT, string _MaKho, string _MAKHOA, Boolean _DADUNG, string _dk)
        {
            DataSet ds = new DataSet("CRPhieuLinh_RPTa");
            string[] s = { "CRPhieuLinh_RPTa" };
            // SqlHelper.FillDataset(ConnectionString, DatabaseOwner + ObjectQualifier + "spKhamBenh_ThuocSD_BN_gets", ds, s, _TUNGAYYC, _DENNGAYYC, _Duyet, _Phat, _MaDT, _MaKho, _MAKHOA, _DADUNG, _dk);
            //// //// ds.WriteXmlSchema("CRPhieuLinh_RPTa.xsd");
            System.Data.SqlClient.SqlCommand cmd = SqlHelper.CreateCommand(SQLConnectionDataNoiT, DatabaseOwner + ObjectQualifier + "spKhamBenh_ThuocSD_BN_gets");

            cmd.CommandTimeout = 18000;
            cmd.CommandType = System.Data.CommandType.StoredProcedure;
            cmd.Parameters.AddWithValue("TuNgay", _TUNGAYYC);
            cmd.Parameters.AddWithValue("DenNgay", _DENNGAYYC);
            cmd.Parameters.AddWithValue("Duyet ", _Duyet);
            cmd.Parameters.AddWithValue("Phat ", _Phat);
            cmd.Parameters.AddWithValue("MaDT ", _MaDT);
            cmd.Parameters.AddWithValue("MaKho ", _MaKho);
            cmd.Parameters.AddWithValue("MaKhoa", _MAKHOA);
            cmd.Parameters.AddWithValue("DADUNG ", _DADUNG);
            cmd.Parameters.AddWithValue("dk", _dk);
            System.Data.SqlClient.SqlDataAdapter sqlad = new System.Data.SqlClient.SqlDataAdapter(cmd);

            sqlad.Fill(ds);
            if (ds.Tables.Count > 0)
                ds.Tables[0].TableName = "CRPhieuLinh_RPTa";
          
            return ds;

        }

		public override DataSet CRPhieuChiaThuoc(DateTime _TUNGAYYC, DateTime _DENNGAYYC, Boolean _Duyet, Boolean _Phat, string _MaDT, string _MaKho, string _MAKHOA, Boolean _DADUNG, string _dk)
		{
            DataSet ds = new DataSet("CRBKSDThuocVTTHchoBN_RPT");
			//string[] s = { "CRPhieuChiaThuoc" };
			//SqlHelper.FillDataset(ConnectionString, DatabaseOwner + ObjectQualifier + "spKhambenh_ThuocSD_BN_CHIATHUOC", ds, s, _TUNGAYYC, _DENNGAYYC, _Duyet, _Phat, _MaDT, _MaKho, _MAKHOA, _DADUNG, _dk);
			//ds.WriteXmlSchema("i:\\CRPhieuChiaThuoc.xsd");
            System.Data.SqlClient.SqlCommand cmd = SqlHelper.CreateCommand(SQLConnectionDataNoiT, DatabaseOwner + ObjectQualifier + "spKhambenh_ThuocSD_BN_CHIATHUOC");

			cmd.CommandTimeout = 18000;
			cmd.CommandType = System.Data.CommandType.StoredProcedure;
			cmd.Parameters.AddWithValue("TuNgay", _TUNGAYYC);
			cmd.Parameters.AddWithValue("DenNgay", _DENNGAYYC);
			cmd.Parameters.AddWithValue("Duyet ", _Duyet);
			cmd.Parameters.AddWithValue("Phat ", _Phat);
			cmd.Parameters.AddWithValue("MaDT ", _MaDT);
			cmd.Parameters.AddWithValue("MaKho ", _MaKho);
			cmd.Parameters.AddWithValue("MaKhoa", _MAKHOA);
			cmd.Parameters.AddWithValue("DADUNG ", _DADUNG);
			cmd.Parameters.AddWithValue("dk", _dk);
			System.Data.SqlClient.SqlDataAdapter sqlad = new System.Data.SqlClient.SqlDataAdapter(cmd);

			sqlad.Fill(ds);
			if (ds.Tables.Count > 0)
                ds.Tables[0].TableName = "CRBKSDThuocVTTHchoBN_RPT";
			//sqlad.Dispose(); cmd.Dispose(); sqlad = null;
			// cmd = null;
			// if (SQLConnectionBD.State == System.Data.ConnectionState.Closed)
			//SQLConnectionBD.Close(); SQLConnectionBD.Dispose();
			//if (_sqlConnection.State == System.Data.ConnectionState.Closed)
			{
				//_sqlConnection.Close(); _sqlConnection.Dispose();
				//_sqlConnection = null;
			}
			return ds;

		}

		public override DataSet CRVTPhieuChiaThuoc(DateTime _TUNGAYYC, DateTime _DENNGAYYC, Boolean _Duyet, Boolean _Phat, string _MaDT, string _MaKho, string _MAKHOA, Boolean _DADUNG, string _dk)
		{
			DataSet ds = new DataSet("CRPhieuChiaThuoc");
			//string[] s = { "CRPhieuChiaThuoc" };
			//SqlHelper.FillDataset(ConnectionString, DatabaseOwner + ObjectQualifier + "spKhambenh_VTTH_BN_CHIATHUOC", ds, s, _TUNGAYYC, _DENNGAYYC, _Duyet, _Phat, _MaDT, _MaKho, _MAKHOA, _DADUNG, _dk);
			//ds.WriteXmlSchema("i:\\CRPhieuChiaThuoc.xsd");
            System.Data.SqlClient.SqlCommand cmd = SqlHelper.CreateCommand(SQLConnectionDataNoiT, DatabaseOwner + ObjectQualifier + "spKhambenh_VTTH_BN_CHIATHUOC");

			cmd.CommandTimeout = 18000;
			cmd.CommandType = System.Data.CommandType.StoredProcedure;
			cmd.Parameters.AddWithValue("TuNgay", _TUNGAYYC);
			cmd.Parameters.AddWithValue("DenNgay", _DENNGAYYC);
			cmd.Parameters.AddWithValue("Duyet ", _Duyet);
			cmd.Parameters.AddWithValue("Phat ", _Phat);
			cmd.Parameters.AddWithValue("MaDT ", _MaDT);
			cmd.Parameters.AddWithValue("MaKho ", _MaKho);
			cmd.Parameters.AddWithValue("MaKhoa", _MAKHOA);
			cmd.Parameters.AddWithValue("DADUNG ", _DADUNG);
			cmd.Parameters.AddWithValue("dk", _dk);
			System.Data.SqlClient.SqlDataAdapter sqlad = new System.Data.SqlClient.SqlDataAdapter(cmd);

			sqlad.Fill(ds);
			if (ds.Tables.Count > 0)
				ds.Tables[0].TableName = "CRPhieuLinh_RPTa";
			//sqlad.Dispose(); cmd.Dispose(); sqlad = null;
			// cmd = null;
			// if (SQLConnectionBD.State == System.Data.ConnectionState.Closed)
			//SQLConnectionBD.Close(); SQLConnectionBD.Dispose();
			//if (_sqlConnection.State == System.Data.ConnectionState.Closed)
			{
				//_sqlConnection.Close(); _sqlConnection.Dispose();
				//_sqlConnection = null;
			}
			return ds;

		}

		public override DataSet CRHCPhieuChiaThuoc(DateTime _TUNGAYYC, DateTime _DENNGAYYC, Boolean _Duyet, Boolean _Phat, string _MaDT, string _MaKho, string _MAKHOA, Boolean _DADUNG, string _dk)
		{
			DataSet ds = new DataSet("CRPhieuChiaThuoc");
			//string[] s = { "CRPhieuChiaThuoc" };
			//SqlHelper.FillDataset(ConnectionString, DatabaseOwner + ObjectQualifier + "spKhambenh_HOACHAT_BN_CHIATHUOC", ds, s, _TUNGAYYC, _DENNGAYYC, _Duyet, _Phat, _MaDT, _MaKho, _MAKHOA, _DADUNG, _dk);
			//ds.WriteXmlSchema("i:\\CRPhieuChiaThuoc.xsd");
            System.Data.SqlClient.SqlCommand cmd = SqlHelper.CreateCommand(SQLConnectionDataNoiT, DatabaseOwner + ObjectQualifier + "spKhambenh_HOACHAT_BN_CHIATHUOC");

			cmd.CommandTimeout = 18000;
			cmd.CommandType = System.Data.CommandType.StoredProcedure;
			cmd.Parameters.AddWithValue("TuNgay", _TUNGAYYC);
			cmd.Parameters.AddWithValue("DenNgay", _DENNGAYYC);
			cmd.Parameters.AddWithValue("Duyet ", _Duyet);
			cmd.Parameters.AddWithValue("Phat ", _Phat);
			cmd.Parameters.AddWithValue("MaDT ", _MaDT);
			cmd.Parameters.AddWithValue("MaKho ", _MaKho);
			cmd.Parameters.AddWithValue("MaKhoa", _MAKHOA);
			cmd.Parameters.AddWithValue("DADUNG ", _DADUNG);
			cmd.Parameters.AddWithValue("dk", _dk);
			System.Data.SqlClient.SqlDataAdapter sqlad = new System.Data.SqlClient.SqlDataAdapter(cmd);

			sqlad.Fill(ds);
			if (ds.Tables.Count > 0)
				ds.Tables[0].TableName = "CRPhieuLinh_RPTa";
			//sqlad.Dispose(); cmd.Dispose(); sqlad = null;
			// cmd = null;
			// if (SQLConnectionBD.State == System.Data.ConnectionState.Closed)
			//SQLConnectionBD.Close(); SQLConnectionBD.Dispose();
			//if (_sqlConnection.State == System.Data.ConnectionState.Closed)
			{
				//_sqlConnection.Close(); _sqlConnection.Dispose();
				//_sqlConnection = null;
			}
			return ds;

		}
        public override DataSet RptGetBenhAn_VPRV(DateTime _TUNGAYYC, DateTime _DENNGAYYC, String _maDT, byte _loai, String _dK, Boolean _RAVIEN)
        {

            DataSet ds = new DataSet();
            //string[] s = { "CRBCBenhAn_VP_RPT" };
            //SqlHelper.FillDataset(ConnectionString, DatabaseOwner + ObjectQualifier + "spBCBenhAn_VP", ds, s, _TUNGAYYC, _DENNGAYYC, _maDT, _loai, _dK, _RAVIEN);
            //// // ds.WriteXmlSchema("CRBCBenhAn_VP_RPT.xsd");
            //return ds;

            //DataSet ds = new DataSet("CRBCBenhAn_VP_RPT");
            //// string[] s ={ "CRBCBenhAn_VP_RPT" };
            //// SqlHelper.FillDataset( ConnectionString, DatabaseOwner + ObjectQualifier + "spBCBenhAn_VP", ds, s, _TUNGAYYC, _DENNGAYYC, _maDT, _loai, _dK,_RAVIEN );
            //// // ds.WriteXmlSchema("m_RPT.xsd");
            System.Data.SqlClient.SqlConnection _connectionserver = new System.Data.SqlClient.SqlConnection(_connectionStringBC);
            _connectionserver.Open();
            System.Data.SqlClient.SqlCommand cmd = SqlHelper.CreateCommand(_connectionserver, DatabaseOwner + ObjectQualifier + "spBCBenhAn_VPChuyenBN_XML");

            cmd.CommandTimeout = 18000;
            cmd.CommandType = System.Data.CommandType.StoredProcedure;
            cmd.Parameters.AddWithValue("tungay", _TUNGAYYC);
            cmd.Parameters.AddWithValue("denngay", _DENNGAYYC);
            cmd.Parameters.AddWithValue("madt", _maDT);
            cmd.Parameters.AddWithValue("loaibc", _loai);
            cmd.Parameters.AddWithValue("dk", _dK);
            cmd.Parameters.AddWithValue("ravien", _RAVIEN);
            System.Data.SqlClient.SqlDataAdapter sqlad = new System.Data.SqlClient.SqlDataAdapter(cmd);

            sqlad.Fill(ds);
            if (ds.Tables.Count > 0)
                ds.Tables[0].TableName = "CRBCBenhAn_VP_RPT";
            // SqlHelper.FillDataset(ConnectionString, System.Data.CommandType.StoredProcedure, "spBCBenhAn_VP", ds, s, _TUNGAYYC, _DENNGAYYC, _maDT, _loai, _dK, _RAVIEN);
            // // ds.WriteXmlSchema("CRBCBenhAn_VP_RPT.xsd");
            sqlad.Dispose(); cmd.Dispose(); sqlad = null;
            cmd = null;
            _connectionserver.Close();
            _connectionserver = null;
            // if (SQLConnectionBD.State == System.Data.ConnectionState.Closed)
            //SQLConnectionBD.Close(); SQLConnectionBD.Dispose();
            ////if (_sqlConnection.State == System.Data.ConnectionState.Closed)
            //{
            //    //_sqlConnection.Close(); _sqlConnection.Dispose();
            //    //_sqlConnection = null;
            //}
            return ds;

        }
    
        public override DataSet RptGetBenhAn_VP(DateTime _TUNGAYYC, DateTime _DENNGAYYC, String _maDT, byte _loai, String _dK, Boolean _RAVIEN)
        {

            DataSet ds = new DataSet();
            //string[] s = { "CRBCBenhAn_VP_RPT" };
            //SqlHelper.FillDataset(ConnectionString, DatabaseOwner + ObjectQualifier + "spBCBenhAn_VP", ds, s, _TUNGAYYC, _DENNGAYYC, _maDT, _loai, _dK, _RAVIEN);
            //// // ds.WriteXmlSchema("CRBCBenhAn_VP_RPT.xsd");
            //return ds;

            //DataSet ds = new DataSet("CRBCBenhAn_VP_RPT");
            //// string[] s ={ "CRBCBenhAn_VP_RPT" };
            //// SqlHelper.FillDataset( ConnectionString, DatabaseOwner + ObjectQualifier + "spBCBenhAn_VP", ds, s, _TUNGAYYC, _DENNGAYYC, _maDT, _loai, _dK,_RAVIEN );
            //// // ds.WriteXmlSchema("m_RPT.xsd");
            System.Data.SqlClient.SqlConnection _connectionserver = new System.Data.SqlClient.SqlConnection(_connectionStringBC);
            _connectionserver.Open();
            System.Data.SqlClient.SqlCommand cmd = SqlHelper.CreateCommand(_connectionserver, DatabaseOwner + ObjectQualifier + "spBCBenhAn_VP");

            cmd.CommandTimeout = 18000;
            cmd.CommandType = System.Data.CommandType.StoredProcedure;
            cmd.Parameters.AddWithValue("tungay", _TUNGAYYC);
            cmd.Parameters.AddWithValue("denngay", _DENNGAYYC);
            cmd.Parameters.AddWithValue("madt", _maDT);
            cmd.Parameters.AddWithValue("loaibc", _loai);
            cmd.Parameters.AddWithValue("dk", _dK);
            cmd.Parameters.AddWithValue("ravien", _RAVIEN);
            System.Data.SqlClient.SqlDataAdapter sqlad = new System.Data.SqlClient.SqlDataAdapter(cmd);

            sqlad.Fill(ds);
            if (ds.Tables.Count > 0)
                ds.Tables[0].TableName = "CRBCBenhAn_VP_RPT";
            // SqlHelper.FillDataset(ConnectionString, System.Data.CommandType.StoredProcedure, "spBCBenhAn_VP", ds, s, _TUNGAYYC, _DENNGAYYC, _maDT, _loai, _dK, _RAVIEN);
            // // ds.WriteXmlSchema("CRBCBenhAn_VP_RPT.xsd");
            sqlad.Dispose(); cmd.Dispose(); sqlad = null;
            cmd = null;
            _connectionserver.Close();
            _connectionserver = null;
            // if (SQLConnectionBD.State == System.Data.ConnectionState.Closed)
            //SQLConnectionBD.Close(); SQLConnectionBD.Dispose();
            ////if (_sqlConnection.State == System.Data.ConnectionState.Closed)
            //{
            //    //_sqlConnection.Close(); _sqlConnection.Dispose();
            //    //_sqlConnection = null;
            //}
            return ds;

        }
        public override DataSet RptGetBenhAnCT_VP(DateTime _TUNGAYYC, DateTime _DENNGAYYC, String _maDT, byte _loai, String _dK, Boolean _RAVIEN, String _MAKHOA)
        {
            DataSet ds = new DataSet("BCBENHANCT_VP");
            string[] s = { "BCBENHANCT_VP" };
            // SqlHelper.FillDataset(ConnectionString, DatabaseOwner + ObjectQualifier + "spBCBENHANCT_VP", ds, s, _TUNGAYYC, _DENNGAYYC, _maDT, _loai, _dK, _RAVIEN, _MAKHOA);
            // // ds.WriteXmlSchema("BCBENHANCT_VP.xsd");
            System.Data.SqlClient.SqlConnection _connectionserver = new System.Data.SqlClient.SqlConnection(_connectionStringBC);
            _connectionserver.Open();
            System.Data.SqlClient.SqlCommand cmd = SqlHelper.CreateCommand(_connectionserver, DatabaseOwner + ObjectQualifier + "spBCBENHANCT_VP");

            cmd.CommandTimeout = 18000;
            cmd.CommandType = System.Data.CommandType.StoredProcedure;
            cmd.Parameters.AddWithValue("tungay", _TUNGAYYC);
            cmd.Parameters.AddWithValue("denngay", _DENNGAYYC);
            cmd.Parameters.AddWithValue("madt", _maDT);
            cmd.Parameters.AddWithValue("loaibc", _loai);
            cmd.Parameters.AddWithValue("dk", _dK);
            cmd.Parameters.AddWithValue("ravien", _RAVIEN);
            cmd.Parameters.AddWithValue("MAKHOA", _MAKHOA);
            System.Data.SqlClient.SqlDataAdapter sqlad = new System.Data.SqlClient.SqlDataAdapter(cmd);

            sqlad.Fill(ds);
            if (ds.Tables.Count > 0)
                ds.Tables[0].TableName = "BCBENHANCT_VP";
            _connectionserver.Close();
            _connectionserver = null;
            //sqlad.Dispose(); cmd.Dispose(); sqlad = null;
            //cmd = null;
            // SqlHelper.FillDataset(ConnectionString, System.Data.CommandType.StoredProcedure, "spBCBenhAn_VP", ds, s, _TUNGAYYC, _DENNGAYYC, _maDT, _loai, _dK, _RAVIEN);
            // // ds.WriteXmlSchema("CRBCBenhAn_VP_RPT.xsd");
            //sqlad.Dispose(); cmd.Dispose(); sqlad = null;
            // cmd = null;
            //// if (SQLConnectionBD.State == System.Data.ConnectionState.Closed)
            //     //SQLConnectionBD.Close(); SQLConnectionBD.Dispose();
            // //if (_sqlConnection.State == System.Data.ConnectionState.Closed)
            // {
            //     //_sqlConnection.Close(); _sqlConnection.Dispose();
            //     //_sqlConnection = null;
            // }

            return ds;

        }
        public override DataSet crBCThongKeBN_RPT(DateTime _TuNgay, DateTime _DenNgay, string _Makhoa, int _Loai, string _DK)
        {
            DataSet ds = new DataSet("crBCThongKeBN_RPT");
            //string[] s ={ "crBCThongKeBN_RPT" };
            //SqlHelper.FillDataset( ConnectionString, DatabaseOwner + ObjectQualifier + "SPNoiTru_ThongkeBN", ds, s, _TuNgay, _DenNgay,  _Makhoa,  _Loai,  _DK);
            // // //// ds.WriteXmlSchema("crBCThongKeBN_RPT.xsd");
            System.Data.SqlClient.SqlCommand cmd = SqlHelper.CreateCommand(SQLConnectionDataNoiT, DatabaseOwner + ObjectQualifier + "SPNoiTru_ThongkeBN");

            cmd.CommandTimeout = 18000;
            cmd.CommandType = System.Data.CommandType.StoredProcedure;
            cmd.Parameters.AddWithValue("tungay", _TuNgay);
            cmd.Parameters.AddWithValue("denngay", _DenNgay);
            cmd.Parameters.AddWithValue("MAKHOA", _Makhoa);
            cmd.Parameters.AddWithValue("loai", _Loai);
            cmd.Parameters.AddWithValue("dk", _DK);
            System.Data.SqlClient.SqlDataAdapter sqlad = new System.Data.SqlClient.SqlDataAdapter(cmd);

            sqlad.Fill(ds);
            if (ds.Tables.Count > 0)
                ds.Tables[0].TableName = "crBCThongKeBN_RPT";
            sqlad.Dispose(); cmd.Dispose(); sqlad = null;
            cmd = null;

            // if (SQLConnectionBD.State == System.Data.ConnectionState.Closed)
            //SQLConnectionBD.Close(); SQLConnectionBD.Dispose();
            //if (_sqlConnection.State == System.Data.ConnectionState.Closed)
            {
                //_sqlConnection.Close(); _sqlConnection.Dispose();
                //_sqlConnection = null;
            }
            return ds;

        }
        public override DataSet CrThongtinBNPK(Byte _Loai,
           string _MaBN,
           string _Hoten,
           bool _DungTen,
           string _SoThe,
           string _MaBV,
           DateTime _GiaTriDN,
           string _DiaChi,
           string _DienThoai,
           string _DTDD,
           string _DTCQ,
           string _Mail,
           Byte _Tuoi,
           DateTime _NgaySinh,
           bool _GT,
           string _BaoTin,
           string _MaQG,
           string _MaTinh,
           string _MaHuyen,
           string _MaNN,
           string _MaBANgoaiT,
           string _MABENH,
           string _MAKHOA,
           string _MABS,
           DateTime _TuNgayYC,
           DateTime _DenNgayYC,
           string _DK,
           bool qadmin,
           DateTime _DenNgaysinh,
           bool _YCDANGDK,
           bool _YCNGAYSINH)
        {
            // DateTime __GiaTriDN = _GiaTriDN;
            if ((_GiaTriDN.ToShortDateString() == "01/01/0001") || (DateTime.MinValue == _GiaTriDN.Date))
            { _GiaTriDN = DateTime.Parse("01/01/1753"); };
            //  DateTime __DenNgaysinh = _DenNgaysinh;
            if ((_DenNgaysinh.ToShortDateString() == "01/01/0001") || (DateTime.MinValue == _DenNgaysinh.Date))
            { _DenNgaysinh = DateTime.Parse("01/01/1753"); };
            //  DateTime __NgaySinh = _NgaySinh;
            if ((_NgaySinh.ToShortDateString() == "01/01/0001") || (DateTime.MinValue == _NgaySinh.Date))
            { _NgaySinh = DateTime.Parse("01/01/1753"); };
            //  DateTime __TuNgayYC = _TuNgayYC;
            if ((_TuNgayYC.ToShortDateString() == "01/01/0001") || (DateTime.MinValue == _TuNgayYC.Date))
            { _TuNgayYC = DateTime.Parse("01/01/1753"); };
            //  DateTime __DenNgayYC = _DenNgayYC;
            if ((_DenNgayYC.ToShortDateString() == "01/01/0001") || (DateTime.MinValue == _DenNgayYC.Date))
            { _DenNgayYC = DateTime.Parse("01/01/1753"); };

            //try { 
            //_GiaTriDN = DateTime.Parse(_GiaTriDN.ToString("MM/dd/yyyy"));
            //_NgaySinh = DateTime.Parse(_NgaySinh.ToString("MM/dd/yyyy"));
            //_DenNgaysinh = DateTime.Parse(_DenNgaysinh.ToString("MM/dd/yyyy"));
            //_TuNgayYC = DateTime.Parse(_TuNgayYC.ToString("MM/dd/yyyy"));
            //_DenNgaysinh = DateTime.Parse(_DenNgaysinh.ToString("MM/dd/yyyy"));
            //_GiaTriDN = DateTime.Parse(_GiaTriDN.ToString("dd/MM/yyyy"));
            //_NgaySinh = DateTime.Parse(_NgaySinh.ToString("dd/MM/yyyy"));
            //_DenNgaysinh = DateTime.Parse(_DenNgaysinh.ToString("dd/MM/yyyy"));
            //_TuNgayYC = DateTime.Parse(_TuNgayYC.ToString("dd/MM/yyyy"));
            //_DenNgaysinh = DateTime.Parse(_DenNgaysinh.ToString("dd/MM/yyyy")); 
            DataSet ds = new DataSet();
            string[] s = { "crBCDSBenhAn" };

            SqlHelper.FillDataset(SQLConnectionDataBC, DatabaseOwner + ObjectQualifier + "spTHONGTINBN_FINDS_rpt", ds, s, _Loai,
          _MaBN,
          _Hoten,
          _DungTen,
          _SoThe,
          _MaBV,
          _GiaTriDN,
          _DiaChi,
          _DienThoai,
          _DTDD,
          _DTCQ,
          _Mail,
          _Tuoi,
          _NgaySinh,
          _GT,
          _BaoTin,
          _MaQG,
          _MaTinh,
          _MaHuyen,
          _MaNN,
          _MaBANgoaiT,
          _MABENH,
          _MAKHOA,
          _MABS,
          _TuNgayYC,
          _DenNgayYC,

          _DK, qadmin,
          _DenNgaysinh,
          _YCDANGDK, _YCNGAYSINH);
            //ds.WriteXmlSchema("CRDSBenhAnPK.xsd");
            return ds;

            //}
            //catch (Exception ex)
            //{
            //    //ex.Message ;
            //};


        }
        public override DataSet crBCSoLieuBN_RPT(DateTime _TuNgay, DateTime _DenNgay, string _Makhoa, int _Loai, string _DK)
        {
            // DataSet ds = new DataSet("CRBCSoLieuBN_RPT");
            DataSet ds = new DataSet("CRbctinhhinhbn");
            //string[] s1 ={ "CRBCSoLieuBN_RPT" };
            //SqlHelper.FillDataset( ConnectionString, DatabaseOwner + ObjectQualifier + "SPNoiTru_ThongkeBN", ds, s1, _TuNgay, _DenNgay, _Makhoa, _Loai, _DK);
            // //// ds.WriteXmlSchema("CRBCSoLieuBN_RPT.xsd");
            System.Data.SqlClient.SqlCommand cmd = SqlHelper.CreateCommand(SQLConnectionDataNoiT, DatabaseOwner + ObjectQualifier + "SPNoiTru_ThongkeBN");

            cmd.CommandTimeout = 18000;
            cmd.CommandType = System.Data.CommandType.StoredProcedure;
            cmd.Parameters.AddWithValue("tungay", _TuNgay);
            cmd.Parameters.AddWithValue("denngay", _DenNgay);
            cmd.Parameters.AddWithValue("MAKHOA", _Makhoa);
            cmd.Parameters.AddWithValue("loai", _Loai);
            cmd.Parameters.AddWithValue("dk", _DK);
            System.Data.SqlClient.SqlDataAdapter sqlad = new System.Data.SqlClient.SqlDataAdapter(cmd);

            sqlad.Fill(ds);
            if (ds.Tables.Count > 0)
                ds.Tables[0].TableName = "CRbctinhhinhbn";
            sqlad.Dispose(); cmd.Dispose(); sqlad = null;
            cmd = null;
            // if (SQLConnectionBD.State == System.Data.ConnectionState.Closed)
            //SQLConnectionBD.Close(); SQLConnectionBD.Dispose();
            //if (_sqlConnection.State == System.Data.ConnectionState.Closed)
            {
                //_sqlConnection.Close(); _sqlConnection.Dispose();
                //_sqlConnection = null;
            }
            return ds;

        }
        public override DataSet CRBCSoLongBNRaVaoVien_RPT(DateTime _TuNgay, DateTime _DenNgay, string _Makhoa, int _Loai, string _DK)
        {
            DataSet ds = new DataSet("CRBCSoLongBNRaVaoVien_RPT");


            //string[] s ={ "CRBCSoLongBNRaVaoVien_RPT" };
            //SqlHelper.FillDataset( ConnectionString, DatabaseOwner + ObjectQualifier + "SPNoiTru_ThongkeBN", ds, s, _TuNgay, _DenNgay, _Makhoa, _Loai, _DK);
            //// //// ds.WriteXmlSchema("CRBCSoLongBNRaVaoVien_RPT.xsd");
            System.Data.SqlClient.SqlCommand cmd = SqlHelper.CreateCommand(SQLConnectionDataNoiT, DatabaseOwner + ObjectQualifier + "SPNoiTru_ThongkeBN");

            cmd.CommandTimeout = 18000;
            cmd.CommandType = System.Data.CommandType.StoredProcedure;
            cmd.Parameters.AddWithValue("tungay", _TuNgay);
            cmd.Parameters.AddWithValue("denngay", _DenNgay);
            cmd.Parameters.AddWithValue("MAKHOA", _Makhoa);
            cmd.Parameters.AddWithValue("loai", _Loai);
            cmd.Parameters.AddWithValue("dk", _DK);
            System.Data.SqlClient.SqlDataAdapter sqlad = new System.Data.SqlClient.SqlDataAdapter(cmd);

            sqlad.Fill(ds);
            if (ds.Tables.Count > 0)
                ds.Tables[0].TableName = "CRBCSoLongBNRaVaoVien_RPT";
            sqlad.Dispose(); cmd.Dispose(); sqlad = null;
            cmd = null;
            // if (SQLConnectionBD.State == System.Data.ConnectionState.Closed)
            //SQLConnectionBD.Close(); SQLConnectionBD.Dispose();
            //if (_sqlConnection.State == System.Data.ConnectionState.Closed)
            {
                //_sqlConnection.Close(); _sqlConnection.Dispose();
                //_sqlConnection = null;
            }
            return ds;

        }
        public override DataSet CrBenhAn_DY(String _maBA, Int32 _sTT, Int32 _sTTKhoa)
        {
            DataSet ds = new DataSet("Cr_PhieuKBVV");
            string[] s = { "Cr_PhieuKBVV" };
            SqlHelper.FillDataset(ConnectionStringNoiT, DatabaseOwner + ObjectQualifier + "spBenhAn_DY_GET",ds,s, _maBA, _sTT, _sTTKhoa);
            if (ds.Tables.Count > 0)
                ds.Tables[0].TableName = "Cr_PhieuKBVV";
           
            return ds;
            
        }
        public override DataSet RptDSPhauThuat(String MaKhoa, DateTime _TUNGAY, DateTime _DENNGAY, String DK, Boolean _qadmin)
        {
            DataSet ds = new DataSet("CRTHPhauThuat");
            //string[] s ={ "RptGetBCDSPhauThuat" };
            //SqlHelper.FillDataset( SQLConnectionBD, DatabaseOwner + ObjectQualifier + "spBenhan_PhauThuat_GETs", ds, s, MaKhoa, _TUNGAY, _DENNGAY, DK, _qadmin);
            ///// ds.WriteXmlSchema("RptGetBCDSPhauThuat.xsd");
            System.Data.SqlClient.SqlCommand cmd = SqlHelper.CreateCommand(SQLConnectionDataBC, DatabaseOwner + ObjectQualifier + "spBenhan_PhauThuat_GETs");

            cmd.CommandTimeout = 18000;
            cmd.CommandType = System.Data.CommandType.StoredProcedure;
            cmd.Parameters.AddWithValue("Makhoa", MaKhoa);
            cmd.Parameters.AddWithValue("tungay", _TUNGAY);
            cmd.Parameters.AddWithValue("denngay", _DENNGAY);
            cmd.Parameters.AddWithValue("DK", DK);
            cmd.Parameters.AddWithValue("QADMIN", _qadmin);
            System.Data.SqlClient.SqlDataAdapter sqlad = new System.Data.SqlClient.SqlDataAdapter(cmd);

            sqlad.Fill(ds);
            if (ds.Tables.Count > 0)
                ds.Tables[0].TableName = "CRTHPhauThuat";
            sqlad.Dispose(); cmd.Dispose(); sqlad = null;
            cmd = null;
            // if (SQLConnectionBD.State == System.Data.ConnectionState.Closed)
            //SQLConnectionBD.Close(); SQLConnectionBD.Dispose();
            //if (_sqlConnection.State == System.Data.ConnectionState.Closed)
            {
                //_sqlConnection.Close(); _sqlConnection.Dispose();
                //_sqlConnection = null;
            }
            return ds;

        }
        public override DataSet CRTHCThuThuat(String MaKhoa, DateTime _TUNGAY, DateTime _DENNGAY, String DK)
        {
            DataSet ds = new DataSet("CRTHPhauThuat");
            //string[] s ={ "RptGetBCDSPhauThuat" };
            //SqlHelper.FillDataset( SQLConnectionBD, DatabaseOwner + ObjectQualifier + "spBenhan_PhauThuat_GETs", ds, s, MaKhoa, _TUNGAY, _DENNGAY, DK, _qadmin);
            ///// ds.WriteXmlSchema("RptGetBCDSPhauThuat.xsd");
            System.Data.SqlClient.SqlCommand cmd = SqlHelper.CreateCommand(SQLConnectionDataBC, DatabaseOwner + ObjectQualifier + "spBenhan_CThuThuat_TVGETs");

            cmd.CommandTimeout = 18000;
            cmd.CommandType = System.Data.CommandType.StoredProcedure;
            cmd.Parameters.AddWithValue("Makhoa", MaKhoa);
            cmd.Parameters.AddWithValue("tungay", _TUNGAY);
            cmd.Parameters.AddWithValue("denngay", _DENNGAY);
            cmd.Parameters.AddWithValue("DK", DK);

            System.Data.SqlClient.SqlDataAdapter sqlad = new System.Data.SqlClient.SqlDataAdapter(cmd);

            sqlad.Fill(ds);
            if (ds.Tables.Count > 0)
                ds.Tables[0].TableName = "CRTHPhauThuat";
            sqlad.Dispose(); cmd.Dispose(); sqlad = null;
            cmd = null;
            // if (SQLConnectionBD.State == System.Data.ConnectionState.Closed)
            //SQLConnectionBD.Close(); SQLConnectionBD.Dispose();
            //if (_sqlConnection.State == System.Data.ConnectionState.Closed)
            {
                //_sqlConnection.Close(); _sqlConnection.Dispose();
                //_sqlConnection = null;
            }
            return ds;

        }
        public override DataSet CRTHCThuThuatPK(String MaKhoa, DateTime _TUNGAY, DateTime _DENNGAY, String DK)
        {
            DataSet ds = new DataSet("CRTHPhauThuat");
            //string[] s ={ "RptGetBCDSPhauThuat" };
            //SqlHelper.FillDataset( SQLConnectionBD, DatabaseOwner + ObjectQualifier + "spBenhan_PhauThuat_GETs", ds, s, MaKhoa, _TUNGAY, _DENNGAY, DK, _qadmin);
            ///// ds.WriteXmlSchema("RptGetBCDSPhauThuat.xsd");
            System.Data.SqlClient.SqlCommand cmd = SqlHelper.CreateCommand(SQLConnectionDataBC, DatabaseOwner + ObjectQualifier + "spKhamBenh_CThuThuat_TVGETs");

            cmd.CommandTimeout = 18000;
            cmd.CommandType = System.Data.CommandType.StoredProcedure;
            cmd.Parameters.AddWithValue("Makhoa", MaKhoa);
            cmd.Parameters.AddWithValue("tungay", _TUNGAY);
            cmd.Parameters.AddWithValue("denngay", _DENNGAY);
            cmd.Parameters.AddWithValue("DK", DK);

            System.Data.SqlClient.SqlDataAdapter sqlad = new System.Data.SqlClient.SqlDataAdapter(cmd);

            sqlad.Fill(ds);
            if (ds.Tables.Count > 0)
                ds.Tables[0].TableName = "CRTHPhauThuat";
            sqlad.Dispose(); cmd.Dispose(); sqlad = null;
            cmd = null;
            // if (SQLConnectionBD.State == System.Data.ConnectionState.Closed)
            //SQLConnectionBD.Close(); SQLConnectionBD.Dispose();
            //if (_sqlConnection.State == System.Data.ConnectionState.Closed)
            {
                //_sqlConnection.Close(); _sqlConnection.Dispose();
                //_sqlConnection = null;
            }
            return ds;

        }
        public override DataSet RptDSCThuThuat(String MaKhoa, DateTime _TUNGAY, DateTime _DENNGAY, String DK, Boolean _qadmin)
        {
            DataSet ds = new DataSet("CRTHPhauThuat");
            //string[] s ={ "RptGetBCDSPhauThuat" };
            //SqlHelper.FillDataset( SQLConnectionBD, DatabaseOwner + ObjectQualifier + "spBenhan_PhauThuat_GETs", ds, s, MaKhoa, _TUNGAY, _DENNGAY, DK, _qadmin);
            ///// ds.WriteXmlSchema("RptGetBCDSPhauThuat.xsd");
            System.Data.SqlClient.SqlCommand cmd = SqlHelper.CreateCommand(SQLConnectionDataNoiT, DatabaseOwner + ObjectQualifier + "spBenhan_CThuThuat_GETs");

            cmd.CommandTimeout = 18000;
            cmd.CommandType = System.Data.CommandType.StoredProcedure;
            cmd.Parameters.AddWithValue("Makhoa", MaKhoa);
            cmd.Parameters.AddWithValue("tungay", _TUNGAY);
            cmd.Parameters.AddWithValue("denngay", _DENNGAY);
            cmd.Parameters.AddWithValue("DK", DK);
            cmd.Parameters.AddWithValue("QADMIN", _qadmin);
            System.Data.SqlClient.SqlDataAdapter sqlad = new System.Data.SqlClient.SqlDataAdapter(cmd);

            sqlad.Fill(ds);
            if (ds.Tables.Count > 0)
                ds.Tables[0].TableName = "CRTHPhauThuat";
            sqlad.Dispose(); cmd.Dispose(); sqlad = null;
            cmd = null;
            // if (SQLConnectionBD.State == System.Data.ConnectionState.Closed)
            //SQLConnectionBD.Close(); SQLConnectionBD.Dispose();
            //if (_sqlConnection.State == System.Data.ConnectionState.Closed)
            {
                //_sqlConnection.Close(); _sqlConnection.Dispose();
                //_sqlConnection = null;
            }
            return ds;

        }
        public override DataSet CRTHCDTS(String MaKhoa, DateTime _TUNGAY, DateTime _DENNGAY, String DK, byte loai)
        {
            DataSet ds = new DataSet("CDTS");
            //string[] s ={ "RptGetBCDSPhauThuat" };
            //SqlHelper.FillDataset( SQLConnectionBD, DatabaseOwner + ObjectQualifier + "spBenhan_PhauThuat_GETs", ds, s, MaKhoa, _TUNGAY, _DENNGAY, DK, _qadmin);
            ///// ds.WriteXmlSchema("RptGetBCDSPhauThuat.xsd");
            System.Data.SqlClient.SqlCommand cmd = SqlHelper.CreateCommand(SQLConnectionDataBC, DatabaseOwner + ObjectQualifier + "spBenhan_CDTS_TVGETs");

            cmd.CommandTimeout = 18000;
            cmd.CommandType = System.Data.CommandType.StoredProcedure;
            cmd.Parameters.AddWithValue("Makhoa", MaKhoa);
            cmd.Parameters.AddWithValue("tungay", _TUNGAY);
            cmd.Parameters.AddWithValue("denngay", _DENNGAY);
            cmd.Parameters.AddWithValue("DK", DK);
            cmd.Parameters.AddWithValue("loai", loai);
            System.Data.SqlClient.SqlDataAdapter sqlad = new System.Data.SqlClient.SqlDataAdapter(cmd);

            sqlad.Fill(ds);
            if (ds.Tables.Count > 0)
                ds.Tables[0].TableName = "CDTS";
            sqlad.Dispose(); cmd.Dispose(); sqlad = null;
            cmd = null;
            // if (SQLConnectionBD.State == System.Data.ConnectionState.Closed)
            //SQLConnectionBD.Close(); SQLConnectionBD.Dispose();
            //if (_sqlConnection.State == System.Data.ConnectionState.Closed)
            {
                //_sqlConnection.Close(); _sqlConnection.Dispose();
                //_sqlConnection = null;
            }
            return ds;

        }
    
        public override DataSet CRTHCSTN(String MaKhoa, DateTime _TUNGAY, DateTime _DENNGAY, String DK, byte loai)
        {
            DataSet ds = new DataSet("CRTHPhauThuat");
            //string[] s ={ "RptGetBCDSPhauThuat" };
            //SqlHelper.FillDataset( SQLConnectionBD, DatabaseOwner + ObjectQualifier + "spBenhan_PhauThuat_GETs", ds, s, MaKhoa, _TUNGAY, _DENNGAY, DK, _qadmin);
            ///// ds.WriteXmlSchema("RptGetBCDSPhauThuat.xsd");
            System.Data.SqlClient.SqlCommand cmd = SqlHelper.CreateCommand(SQLConnectionDataBC, DatabaseOwner + ObjectQualifier + "spBenhan_CSTN_TVGETs");

            cmd.CommandTimeout = 18000;
            cmd.CommandType = System.Data.CommandType.StoredProcedure;
            cmd.Parameters.AddWithValue("Makhoa", MaKhoa);
            cmd.Parameters.AddWithValue("tungay", _TUNGAY);
            cmd.Parameters.AddWithValue("denngay", _DENNGAY);
            cmd.Parameters.AddWithValue("DK", DK);
            cmd.Parameters.AddWithValue("loai", loai);
            System.Data.SqlClient.SqlDataAdapter sqlad = new System.Data.SqlClient.SqlDataAdapter(cmd);

            sqlad.Fill(ds);
            if (ds.Tables.Count > 0)
                ds.Tables[0].TableName = "CRTHPhauThuat";
            sqlad.Dispose(); cmd.Dispose(); sqlad = null;
            cmd = null;
            // if (SQLConnectionBD.State == System.Data.ConnectionState.Closed)
            //SQLConnectionBD.Close(); SQLConnectionBD.Dispose();
            //if (_sqlConnection.State == System.Data.ConnectionState.Closed)
            {
                //_sqlConnection.Close(); _sqlConnection.Dispose();
                //_sqlConnection = null;
            }
            return ds;

        }
        public override DataSet CRTHKHGD(String MaKhoa, DateTime _TUNGAY, DateTime _DENNGAY, String DK, byte loai)
        {
            DataSet ds = new DataSet("KHHGD");
            //string[] s ={ "RptGetBCDSPhauThuat" };
            //SqlHelper.FillDataset( SQLConnectionBD, DatabaseOwner + ObjectQualifier + "spBenhan_PhauThuat_GETs", ds, s, MaKhoa, _TUNGAY, _DENNGAY, DK, _qadmin);
            ///// ds.WriteXmlSchema("RptGetBCDSPhauThuat.xsd");
            System.Data.SqlClient.SqlCommand cmd = SqlHelper.CreateCommand(SQLConnectionDataBC, DatabaseOwner + ObjectQualifier + "spBenhan_KHGD_TVGETs");

            cmd.CommandTimeout = 18000;
            cmd.CommandType = System.Data.CommandType.StoredProcedure;
            cmd.Parameters.AddWithValue("Makhoa", MaKhoa);
            cmd.Parameters.AddWithValue("tungay", _TUNGAY);
            cmd.Parameters.AddWithValue("denngay", _DENNGAY);
            cmd.Parameters.AddWithValue("DK", DK);
            cmd.Parameters.AddWithValue("loai", loai);
            System.Data.SqlClient.SqlDataAdapter sqlad = new System.Data.SqlClient.SqlDataAdapter(cmd);

            sqlad.Fill(ds);
            if (ds.Tables.Count > 0)
                ds.Tables[0].TableName = "KHHGD";
            sqlad.Dispose(); cmd.Dispose(); sqlad = null;
            cmd = null;
            // if (SQLConnectionBD.State == System.Data.ConnectionState.Closed)
            //SQLConnectionBD.Close(); SQLConnectionBD.Dispose();
            //if (_sqlConnection.State == System.Data.ConnectionState.Closed)
            {
                //_sqlConnection.Close(); _sqlConnection.Dispose();
                //_sqlConnection = null;
            }
            return ds;

        }
        public override DataSet RptDSCSTN(String MaKhoa, DateTime _TUNGAY, DateTime _DENNGAY, String DK, Boolean _qadmin)
        {
            DataSet ds = new DataSet("CRTHPhauThuat");
            //string[] s ={ "RptGetBCDSPhauThuat" };
            //SqlHelper.FillDataset( SQLConnectionBD, DatabaseOwner + ObjectQualifier + "spBenhan_PhauThuat_GETs", ds, s, MaKhoa, _TUNGAY, _DENNGAY, DK, _qadmin);
            ///// ds.WriteXmlSchema("RptGetBCDSPhauThuat.xsd");
            System.Data.SqlClient.SqlCommand cmd = SqlHelper.CreateCommand(SQLConnectionDataNoiT, DatabaseOwner + ObjectQualifier + "spBenhan_CSTN_GETs");

            cmd.CommandTimeout = 18000;
            cmd.CommandType = System.Data.CommandType.StoredProcedure;
            cmd.Parameters.AddWithValue("Makhoa", MaKhoa);
            cmd.Parameters.AddWithValue("tungay", _TUNGAY);
            cmd.Parameters.AddWithValue("denngay", _DENNGAY);
            cmd.Parameters.AddWithValue("DK", DK);
            cmd.Parameters.AddWithValue("QADMIN", _qadmin);
            System.Data.SqlClient.SqlDataAdapter sqlad = new System.Data.SqlClient.SqlDataAdapter(cmd);

            sqlad.Fill(ds);
            if (ds.Tables.Count > 0)
                ds.Tables[0].TableName = "CRTHPhauThuat";
            sqlad.Dispose(); cmd.Dispose(); sqlad = null;
            cmd = null;
            // if (SQLConnectionBD.State == System.Data.ConnectionState.Closed)
            //SQLConnectionBD.Close(); SQLConnectionBD.Dispose();
            //if (_sqlConnection.State == System.Data.ConnectionState.Closed)
            {
                //_sqlConnection.Close(); _sqlConnection.Dispose();
                //_sqlConnection = null;
            }
            return ds;

        }
        public override DataSet RptGetDSPhauThuat(String MaKhoa, DateTime _TUNGAY, DateTime _DENNGAY, String DK, Boolean _qadmin)
        {
            DataSet ds = new DataSet("RptGetBCDSPhauThuat");
            //string[] s ={ "RptGetBCDSPhauThuat" };
            //SqlHelper.FillDataset( SQLConnectionBD, DatabaseOwner + ObjectQualifier + "spBenhan_PhauThuat_GETs", ds, s, MaKhoa, _TUNGAY, _DENNGAY, DK, _qadmin);
            ///// ds.WriteXmlSchema("RptGetBCDSPhauThuat.xsd");
            System.Data.SqlClient.SqlCommand cmd = SqlHelper.CreateCommand(SQLConnectionDataNoiT, DatabaseOwner + ObjectQualifier + "spBenhan_PhauThuat_GETs");

            cmd.CommandTimeout = 18000;
            cmd.CommandType = System.Data.CommandType.StoredProcedure;
            cmd.Parameters.AddWithValue("Makhoa", MaKhoa);
            cmd.Parameters.AddWithValue("tungay", _TUNGAY);
            cmd.Parameters.AddWithValue("denngay", _DENNGAY);
            cmd.Parameters.AddWithValue("DK", DK);
            cmd.Parameters.AddWithValue("QADMIN", _qadmin);
            System.Data.SqlClient.SqlDataAdapter sqlad = new System.Data.SqlClient.SqlDataAdapter(cmd);

            sqlad.Fill(ds);
            if (ds.Tables.Count > 0)
                ds.Tables[0].TableName = "RptGetBCDSPhauThuat";
            sqlad.Dispose(); cmd.Dispose(); sqlad = null;
            cmd = null;
            // if (SQLConnectionBD.State == System.Data.ConnectionState.Closed)
            //SQLConnectionBD.Close(); SQLConnectionBD.Dispose();
            //if (_sqlConnection.State == System.Data.ConnectionState.Closed)
            {
                //_sqlConnection.Close(); _sqlConnection.Dispose();
                //_sqlConnection = null;
            }
            return ds;

        }
        public override DataSet RptGetInBCNhapThuocNT(DateTime _TUNGAYYC, DateTime _DENNGAYYC, String _maDV, byte _loai, byte _TRA, string _maKhoa, String _dK)
        {
            DataSet ds = new DataSet("DichVu");
            //string[] s ={ "CRInBCNhapThuoc_RPT" };
            //SqlHelper.FillDataset( ConnectionString, DatabaseOwner + ObjectQualifier + "sp_BCVIENPHINOITRU", ds, s, _TUNGAYYC, _DENNGAYYC, _maDV, _loai, _TRA, _maKhoa, _dK);
            //// //// ds.WriteXmlSchema("CRInBCNhapThuocNT.xsd");
            System.Data.SqlClient.SqlConnection _connectionserver = new System.Data.SqlClient.SqlConnection(_connectionStringBC);
            _connectionserver.Open();
            System.Data.SqlClient.SqlCommand cmd = SqlHelper.CreateCommand(_connectionserver, DatabaseOwner + ObjectQualifier + "sp_BCVIENPHINOITRU");

            cmd.CommandTimeout = 18000;
            cmd.CommandType = System.Data.CommandType.StoredProcedure;
            cmd.Parameters.AddWithValue("TUNGAY", _TUNGAYYC);
            cmd.Parameters.AddWithValue("DENNGAY", _DENNGAYYC);
            cmd.Parameters.AddWithValue("MADV", _maDV);
            cmd.Parameters.AddWithValue("LOAI", _loai);
            cmd.Parameters.AddWithValue("RaVien", _TRA);
            cmd.Parameters.AddWithValue("MAKHOA", _maKhoa);
            cmd.Parameters.AddWithValue("DK", _dK);

            System.Data.SqlClient.SqlDataAdapter sqlad = new System.Data.SqlClient.SqlDataAdapter(cmd);

            sqlad.Fill(ds);
            if (ds.Tables.Count > 0)
                ds.Tables[0].TableName = "CRInBCNhapThuoc_RPT";
            sqlad.Dispose(); cmd.Dispose(); sqlad = null;
            cmd = null;
            _connectionserver.Close();
            _connectionserver = null;
            // if (SQLConnectionBD.State == System.Data.ConnectionState.Closed)
            //SQLConnectionBD.Close(); SQLConnectionBD.Dispose();
            //if (_sqlConnection.State == System.Data.ConnectionState.Closed)
            {
                //_sqlConnection.Close(); _sqlConnection.Dispose();
                //_sqlConnection = null;
            }
            //ds.WriteXmlSchema("CRInBCNhapThuocNT.xsd");
            return ds;

        }
        public override DataSet RptGetInBCNhapThuocNT(DateTime _TUNGAYYC, DateTime _DENNGAYYC, String _maDV, byte _loai, byte _TRA, string _maKhoa, String _dK, String _MABN)
        {
            DataSet ds = new DataSet("CRInBCNhapThuoc_RPT");
            //string[] s ={ "CRInBCNhapThuoc_RPT" };
            //SqlHelper.FillDataset( ConnectionString, DatabaseOwner + ObjectQualifier + "sp_BCVIENPHINOITRU", ds, s, _TUNGAYYC, _DENNGAYYC, _maDV, _loai, _TRA, _maKhoa, _dK,  _MABN);
            //// ds.WriteXmlSchema("CRInBCNhapThuocNT.xsd");
            System.Data.SqlClient.SqlCommand cmd = SqlHelper.CreateCommand(SQLConnectionDataBC, DatabaseOwner + ObjectQualifier + "sp_BCVIENPHINOITRU");

            cmd.CommandTimeout = 18000;
            cmd.CommandType = System.Data.CommandType.StoredProcedure;
            cmd.Parameters.AddWithValue("TUNGAY", _TUNGAYYC);
            cmd.Parameters.AddWithValue("DENNGAY", _DENNGAYYC);
            cmd.Parameters.AddWithValue("MADV", _maDV);
            cmd.Parameters.AddWithValue("LOAI", _loai);
            cmd.Parameters.AddWithValue("RaVien", _TRA);
            cmd.Parameters.AddWithValue("MAKHOA", _maKhoa);
            cmd.Parameters.AddWithValue("DK", _dK);
            cmd.Parameters.AddWithValue("MABN", _MABN);
            System.Data.SqlClient.SqlDataAdapter sqlad = new System.Data.SqlClient.SqlDataAdapter(cmd);

            sqlad.Fill(ds);
            if (ds.Tables.Count > 0)
                ds.Tables[0].TableName = "CRInBCNhapThuoc_RPT";
            sqlad.Dispose(); cmd.Dispose(); sqlad = null;
            cmd = null;
            // if (SQLConnectionBD.State == System.Data.ConnectionState.Closed)
            //SQLConnectionBD.Close(); SQLConnectionBD.Dispose();
            //if (_sqlConnection.State == System.Data.ConnectionState.Closed)
            {
                //_sqlConnection.Close(); _sqlConnection.Dispose();
                //_sqlConnection = null;
            }
            // ds.WriteXmlSchema("CRInBCNhapThuocNT.xsd");
            return ds;

        }
        public override DataSet RptGetInBCNhapThuocNTRV(DateTime _TUNGAYYC, DateTime _DENNGAYYC, String _maDV, byte _loai, byte _TRA, string _maKhoa, String _dK)
        {
            DataSet ds = new DataSet("CRInBCNhapThuoc_RPT");
            //string[] s ={ "CRInBCNhapThuoc_RPT" };
            //SqlHelper.FillDataset( ConnectionString, DatabaseOwner + ObjectQualifier + "sp_BCVIENPHINOITRU", ds, s, _TUNGAYYC, _DENNGAYYC, _maDV, _loai, _TRA, _maKhoa, _dK,  _MABN);
            //// ds.WriteXmlSchema("CRInBCNhapThuocNT.xsd");
            System.Data.SqlClient.SqlCommand cmd = SqlHelper.CreateCommand(SQLConnectionDataBC, DatabaseOwner + ObjectQualifier + "sp_BCVIENPHINOITRUCHUYENBN_XML");

            cmd.CommandTimeout = 18000;
            cmd.CommandType = System.Data.CommandType.StoredProcedure;
            cmd.Parameters.AddWithValue("TUNGAY", _TUNGAYYC);
            cmd.Parameters.AddWithValue("DENNGAY", _DENNGAYYC);
            cmd.Parameters.AddWithValue("MADV", _maDV);
            cmd.Parameters.AddWithValue("LOAI", _loai);
            cmd.Parameters.AddWithValue("RaVien", _TRA);
            cmd.Parameters.AddWithValue("MAKHOA", _maKhoa);
            cmd.Parameters.AddWithValue("DK", _dK);
          
            System.Data.SqlClient.SqlDataAdapter sqlad = new System.Data.SqlClient.SqlDataAdapter(cmd);

            sqlad.Fill(ds);
            if (ds.Tables.Count > 0)
                ds.Tables[0].TableName = "CRInBCNhapThuoc_RPT";
            sqlad.Dispose(); cmd.Dispose(); sqlad = null;
            cmd = null;
            // if (SQLConnectionBD.State == System.Data.ConnectionState.Closed)
            //SQLConnectionBD.Close(); SQLConnectionBD.Dispose();
            //if (_sqlConnection.State == System.Data.ConnectionState.Closed)
            {
                //_sqlConnection.Close(); _sqlConnection.Dispose();
                //_sqlConnection = null;
            }
            // ds.WriteXmlSchema("CRInBCNhapThuocNT.xsd");
            return ds;

        }
        public override DataSet RptGetInBCNhapThuocNTRV(DateTime _TUNGAYYC, DateTime _DENNGAYYC, String _maDV, byte _loai, byte _TRA, string _maKhoa, String _dK, String _MABN)
        {
            DataSet ds = new DataSet("CRInBCNhapThuoc_RPT");
            //string[] s ={ "CRInBCNhapThuoc_RPT" };
            //SqlHelper.FillDataset( ConnectionString, DatabaseOwner + ObjectQualifier + "sp_BCVIENPHINOITRU", ds, s, _TUNGAYYC, _DENNGAYYC, _maDV, _loai, _TRA, _maKhoa, _dK,  _MABN);
            //// ds.WriteXmlSchema("CRInBCNhapThuocNT.xsd");
            System.Data.SqlClient.SqlCommand cmd = SqlHelper.CreateCommand(SQLConnectionDataBC, DatabaseOwner + ObjectQualifier + "sp_BCVIENPHINOITRUCHUYENBN_XML");

            cmd.CommandTimeout = 18000;
            cmd.CommandType = System.Data.CommandType.StoredProcedure;
            cmd.Parameters.AddWithValue("TUNGAY", _TUNGAYYC);
            cmd.Parameters.AddWithValue("DENNGAY", _DENNGAYYC);
            cmd.Parameters.AddWithValue("MADV", _maDV);
            cmd.Parameters.AddWithValue("LOAI", _loai);
            cmd.Parameters.AddWithValue("RaVien", _TRA);
            cmd.Parameters.AddWithValue("MAKHOA", _maKhoa);
            cmd.Parameters.AddWithValue("DK", _dK);
            cmd.Parameters.AddWithValue("MABN", _MABN);
            System.Data.SqlClient.SqlDataAdapter sqlad = new System.Data.SqlClient.SqlDataAdapter(cmd);

            sqlad.Fill(ds);
            if (ds.Tables.Count > 0)
                ds.Tables[0].TableName = "CRInBCNhapThuoc_RPT";
            sqlad.Dispose(); cmd.Dispose(); sqlad = null;
            cmd = null;
            // if (SQLConnectionBD.State == System.Data.ConnectionState.Closed)
            //SQLConnectionBD.Close(); SQLConnectionBD.Dispose();
            //if (_sqlConnection.State == System.Data.ConnectionState.Closed)
            {
                //_sqlConnection.Close(); _sqlConnection.Dispose();
                //_sqlConnection = null;
            }
            // ds.WriteXmlSchema("CRInBCNhapThuocNT.xsd");
            return ds;

        }
     
        public override DataSet CRHĐChuyenMon1_RPT(DateTime _TuNgay, DateTime _DenNgay, string _DK, Boolean _qadmin)
        {
            DataSet ds = new DataSet();
            string[] s = { "CRHĐChuyenMon1_RPT" };
            SqlHelper.FillDataset(ConnectionString, DatabaseOwner + ObjectQualifier + "spBC_KQHOATDONGCM_GETALL", ds, s, _TuNgay, _DenNgay, _DK, _qadmin);
            ////// ds.WriteXmlSchema("CRHÐChuyenMon1_RPT.xsd");
            return ds;
        }

        public override DataSet CRBKSDThuocVTTHchoBN_RPT(DateTime _TuNgay, DateTime _DenNgay, string _maKhoa, string _DK, byte _loai)
        {

            DataSet ds = new DataSet("CRBKSDThuocVTTHchoBN_RPT");
            //string[] s ={ "CRBKSDThuocVTTHchoBN_RPT" };
            //SqlHelper.FillDataset( ConnectionString, DatabaseOwner + ObjectQualifier + "sp_BANGKEVIENPHI", ds, s, _TuNgay,_DenNgay, _maKhoa, _DK);
            //// ds.WriteXml("CRBKSDThuocVTTHchoBN_RPT");
            System.Data.SqlClient.SqlCommand cmd = SqlHelper.CreateCommand(SQLConnectionDataNoiT, DatabaseOwner + ObjectQualifier + "sp_BANGKEVIENPHI");

            cmd.CommandTimeout = 18000;
            cmd.CommandType = System.Data.CommandType.StoredProcedure;
            cmd.Parameters.AddWithValue("TuNgay", _TuNgay);
            cmd.Parameters.AddWithValue("denNGAY", _DenNgay);
            cmd.Parameters.AddWithValue("MaKhoA", _maKhoa);
            cmd.Parameters.AddWithValue("dk", _DK);
            cmd.Parameters.AddWithValue("loai", _loai);
            System.Data.SqlClient.SqlDataAdapter sqlad = new System.Data.SqlClient.SqlDataAdapter(cmd);

            sqlad.Fill(ds);
            if (ds.Tables.Count > 0)
                ds.Tables[0].TableName = "CRBKSDThuocVTTHchoBN_RPT";
            sqlad.Dispose(); cmd.Dispose(); sqlad = null;
            cmd = null;
            // if (SQLConnectionBD.State == System.Data.ConnectionState.Closed)
            //SQLConnectionBD.Close(); SQLConnectionBD.Dispose();
            //if (_sqlConnection.State == System.Data.ConnectionState.Closed)
            {
                //_sqlConnection.Close(); _sqlConnection.Dispose();
                //_sqlConnection = null;
            }
            // ds.WriteXml("CRBKSDThuocVTTHchoBN_RPTTM");
            return ds;

        }
        #endregion

        public override DataSet CRBCDSBenhAnHN(DateTime _TuNgay, DateTime _DenNgay, string _Makhoa, int _Loai, string _DK)
        {

            DataSet ds = new DataSet("CRBCDSBenhAnHangNgay1");
            // string[] s ={ "CRBCDSBenhAnHangNgay1" };
            // SqlHelper.FillDataset(ConnectionString, DatabaseOwner + ObjectQualifier + "sp_BANGKEVIENPHI", ds, s, _TuNgay, _DenNgay, _Makhoa, _Loai, _DK);
            //// ds.WriteXmlSchema("CRBCDSBenhAnHangNgay1.xsd");
            System.Data.SqlClient.SqlCommand cmd = SqlHelper.CreateCommand(SQLConnectionDataNoiT, DatabaseOwner + ObjectQualifier + "sp_BANGKEVIENPHI");

            cmd.CommandTimeout = 18000;
            cmd.CommandType = System.Data.CommandType.StoredProcedure;
            cmd.Parameters.AddWithValue("TuNgay", _TuNgay);
            cmd.Parameters.AddWithValue("denNGAY", _DenNgay);
            cmd.Parameters.AddWithValue("LoaiBC", _Loai);
            cmd.Parameters.AddWithValue("MaKhoA", _Makhoa);
            cmd.Parameters.AddWithValue("dk", _DK);
            System.Data.SqlClient.SqlDataAdapter sqlad = new System.Data.SqlClient.SqlDataAdapter(cmd);

            sqlad.Fill(ds);
            if (ds.Tables.Count > 0)
                ds.Tables[0].TableName = "CRBCDSBenhAnHangNgay1";
            sqlad.Dispose(); cmd.Dispose(); sqlad = null;
            cmd = null;
            // if (SQLConnectionBD.State == System.Data.ConnectionState.Closed)
            //SQLConnectionBD.Close(); SQLConnectionBD.Dispose();
            //if (_sqlConnection.State == System.Data.ConnectionState.Closed)
            {
                //_sqlConnection.Close(); _sqlConnection.Dispose();
                //_sqlConnection = null;
            }
            return ds;

        }
        public override DataSet crBenhAn_HoiChan(string _MaHC, Boolean _qadmin)
        {

            DataSet ds = new DataSet("CrBenhAnHoiChuan");
            //string[] s ={ "CrBenhAnHoiChuan" };
            //SqlHelper.FillDataset( ConnectionString, DatabaseOwner + ObjectQualifier + "spHOICHAN_GET", ds, s, _MaHC, _qadmin);
            //// ds.WriteXmlSchema("CrBenhAnHoiChuan.xsd");
            System.Data.SqlClient.SqlCommand cmd = SqlHelper.CreateCommand(SQLConnectionDataNoiT, DatabaseOwner + ObjectQualifier + "spHOICHAN_GET");

            cmd.CommandTimeout = 18000;
            cmd.CommandType = System.Data.CommandType.StoredProcedure;
            cmd.Parameters.AddWithValue("MaHC", _MaHC);
            cmd.Parameters.AddWithValue("QADMIN", _qadmin);

            System.Data.SqlClient.SqlDataAdapter sqlad = new System.Data.SqlClient.SqlDataAdapter(cmd);

            sqlad.Fill(ds);
            if (ds.Tables.Count > 0)
                ds.Tables[0].TableName = "CrBenhAnHoiChuan";
            sqlad.Dispose(); cmd.Dispose(); sqlad = null;
            cmd = null;
            //// if (SQLConnectionBD.State == System.Data.ConnectionState.Closed)
            //     //SQLConnectionBD.Close(); SQLConnectionBD.Dispose();
            // //if (_sqlConnection.State == System.Data.ConnectionState.Closed)
            // {
            //     //_sqlConnection.Close(); _sqlConnection.Dispose();
            //     //_sqlConnection = null;
            // }
            return ds;

        }
        #endregion
        #region Duoc
        public override DataSet RptGetINPHIEULINHTHUOC(bool qadmin, string _mapx)
        {
            DataSet ds = new DataSet(" 0");
            //string[] s = { "CRPHIEULINHTHUOC_RPT" };
            //SqlHelper.FillDataset( ConnectionString, DatabaseOwner + ObjectQualifier + "spPHIEUXUAT_C_GETALL", ds, s, qadmin, _mapx);
            //// // // //// ds.WriteXmlSchema("PHIEULINHTHUOCRPT.xsd");
            System.Data.SqlClient.SqlCommand cmd = SqlHelper.CreateCommand(SQLConnectionDataNoiT, DatabaseOwner + ObjectQualifier + "spPHIEUXUAT_C_GETALL");

            cmd.CommandTimeout = 18000;
            cmd.CommandType = System.Data.CommandType.StoredProcedure;
            cmd.Parameters.AddWithValue("MAPX", _mapx);
            cmd.Parameters.AddWithValue("QADMIN", qadmin);

            System.Data.SqlClient.SqlDataAdapter sqlad = new System.Data.SqlClient.SqlDataAdapter(cmd);

            sqlad.Fill(ds);
            if (ds.Tables.Count > 0)
                ds.Tables[0].TableName = "CRPHIEULINHTHUOC_RPT";
            sqlad.Dispose(); cmd.Dispose(); sqlad = null;
            cmd = null;
            // if (SQLConnectionBD.State == System.Data.ConnectionState.Closed)
            //SQLConnectionBD.Close(); SQLConnectionBD.Dispose();
            //if (_sqlConnection.State == System.Data.ConnectionState.Closed)
            {
                //_sqlConnection.Close(); _sqlConnection.Dispose();
                //_sqlConnection = null;
            }
            return ds;

        }
        public override DataSet RptGetINPHIEUHUY(bool qadmin, string _mapx)
        {
            DataSet ds = new DataSet("CRPHIEUHUYTHUOC_RPT");
            //string[] s = { "CRPHIEUHUYTHUOC_RPT" };
            //SqlHelper.FillDataset( ConnectionString, DatabaseOwner + ObjectQualifier + "spPHIEUXUAT_C_GETALL", ds, s, qadmin, _mapx);
            // // // //// ds.WriteXmlSchema("PHIEUHUYRPT.xsd");
            System.Data.SqlClient.SqlCommand cmd = SqlHelper.CreateCommand(SQLConnectionDataNoiT, DatabaseOwner + ObjectQualifier + "spPHIEUXUAT_C_GETALL");

            cmd.CommandTimeout = 18000;
            cmd.CommandType = System.Data.CommandType.StoredProcedure;

            cmd.Parameters.AddWithValue("QADMIN", qadmin);
            cmd.Parameters.AddWithValue("MAPX", _mapx);

            System.Data.SqlClient.SqlDataAdapter sqlad = new System.Data.SqlClient.SqlDataAdapter(cmd);

            sqlad.Fill(ds);
            if (ds.Tables.Count > 0)
                //string[] s ={ "" };
                ds.Tables[0].TableName = "CRPHIEUHUYTHUOC_RPT";
            sqlad.Dispose(); cmd.Dispose(); sqlad = null;
            cmd = null;
            // if (SQLConnectionBD.State == System.Data.ConnectionState.Closed)
            //SQLConnectionBD.Close(); SQLConnectionBD.Dispose();
            //if (_sqlConnection.State == System.Data.ConnectionState.Closed)
            {
                //_sqlConnection.Close(); _sqlConnection.Dispose();
                //_sqlConnection = null;
            }
            return ds;

        }
        public override DataSet RptGetPhieuHuyThuoc_HoidongHuy(string _maphieu, bool qadmin, byte loai)
        {
            DataSet ds = new DataSet();
            //string[] s = { "SCRPhieuHuyThuoc_HoidongHuy_RPT" };
            //SqlHelper.FillDataset( ConnectionString, DatabaseOwner + ObjectQualifier + "spKIEMNHAP_GETALL", ds, s, _maphieu, qadmin, loai);
            // // // //// ds.WriteXmlSchema("PhieuHuyThuoc_HoidongHuy.xsd");
            System.Data.SqlClient.SqlCommand cmd = SqlHelper.CreateCommand(SQLConnectionDataNoiT, DatabaseOwner + ObjectQualifier + "spKIEMNHAP_GETALL");

            cmd.CommandTimeout = 18000;
            cmd.CommandType = System.Data.CommandType.StoredProcedure;
            cmd.Parameters.AddWithValue("MaPhieu", _maphieu);
            cmd.Parameters.AddWithValue("QADMIN", qadmin);
            cmd.Parameters.AddWithValue("LOAI", loai);

            System.Data.SqlClient.SqlDataAdapter sqlad = new System.Data.SqlClient.SqlDataAdapter(cmd);

            sqlad.Fill(ds);
            if (ds.Tables.Count > 0)
                //string[] s ={ "" };
                ds.Tables[0].TableName = "SCRPhieuHuyThuoc_HoidongHuy_RPT";
            sqlad.Dispose(); cmd.Dispose(); sqlad = null;
            cmd = null;
            // if (SQLConnectionBD.State == System.Data.ConnectionState.Closed)
            //SQLConnectionBD.Close(); SQLConnectionBD.Dispose();
            //if (_sqlConnection.State == System.Data.ConnectionState.Closed)
            {
                //_sqlConnection.Close(); _sqlConnection.Dispose();
                //_sqlConnection = null;
            }
            return ds;

        }
        public override DataSet RptGetPhieuHuyThuoc_DSTV(string _maphieu, bool qadmin, byte loai)
        {
            DataSet ds = new DataSet("CRPhieuHuyThuoc_DSTV_RPT");
            //string[] s = { "CRPhieuHuyThuoc_DSTV_RPT" };
            //SqlHelper.FillDataset( ConnectionString, DatabaseOwner + ObjectQualifier + "spKIEMNHAP_GETALL", ds, s, _maphieu, qadmin, loai);
            // // // //// ds.WriteXmlSchema("CRPhieuHuyThuoc_DSTV.xsd");
            System.Data.SqlClient.SqlCommand cmd = SqlHelper.CreateCommand(SQLConnectionDataNoiT, DatabaseOwner + ObjectQualifier + "spKIEMNHAP_GETALL");

            cmd.CommandTimeout = 18000;
            cmd.CommandType = System.Data.CommandType.StoredProcedure;
            cmd.Parameters.AddWithValue("MaPhieu", _maphieu);
            cmd.Parameters.AddWithValue("QADMIN", qadmin);
            cmd.Parameters.AddWithValue("LOAI", loai);

            System.Data.SqlClient.SqlDataAdapter sqlad = new System.Data.SqlClient.SqlDataAdapter(cmd);

            sqlad.Fill(ds);
            if (ds.Tables.Count > 0)
                //string[] s ={ "" };
                ds.Tables[0].TableName = "CRPhieuHuyThuoc_DSTV_RPT";
            sqlad.Dispose(); cmd.Dispose(); sqlad = null;
            cmd = null;
            // if (SQLConnectionBD.State == System.Data.ConnectionState.Closed)
            //SQLConnectionBD.Close(); SQLConnectionBD.Dispose();
            //if (_sqlConnection.State == System.Data.ConnectionState.Closed)
            {
                //_sqlConnection.Close(); _sqlConnection.Dispose();
                //_sqlConnection = null;
            }
            return ds;

        }
        public override DataSet crSoQuy(String _maKho, DateTime _tuNgay, DateTime _denNgay, string dk)
        {
            DataSet ds = new DataSet();
            string[] s = { "crTheKho" };
            SqlHelper.FillDataset(SQLConnectionDataNoiT, DatabaseOwner + ObjectQualifier + "SPSoQuy_GetAll", ds, s, _maKho, _tuNgay, _denNgay, dk);
            // ds.WriteXmlSchema("crSoQuy.xsd"); 
            return ds;
        }
        public override DataSet RptGetInHoaDonBanThuoc(string _masokham, string _DK, bool qadmin)
        {
            DataSet ds = new DataSet("CRKhambenh_PhieuBanthuoc_RPT");
            string[] s = { "CRKhambenh_PhieuBanthuoc_RPT" };
            SqlHelper.FillDataset(SQLConnectionData, DatabaseOwner + ObjectQualifier + "spKhamBenh_ThuocSD_GETALL", ds, s, _masokham, _DK, qadmin);
            // // // //// ds.WriteXmlSchema("CRKhambenh_PhieuBanthuoc.xsd");
            //System.Data.SqlClient.SqlCommand cmd = SqlHelper.CreateCommand(SQLConnectionBD, DatabaseOwner + ObjectQualifier + "spKhamBenh_ThuocSD_GETALL");

            //cmd.CommandTimeout = 18000;
            //cmd.CommandType = System.Data.CommandType.StoredProcedure;
            //cmd.Parameters.AddWithValue("MaSoKham", _masokham);
            //cmd.Parameters.AddWithValue("DK", _DK);
            //cmd.Parameters.AddWithValue("QADMIN", qadmin);

            //System.Data.SqlClient.SqlDataAdapter sqlad = new System.Data.SqlClient.SqlDataAdapter(cmd);

            //sqlad.Fill(ds);
            if (ds.Tables.Count > 0)
                //string[] s ={ "" };
                ds.Tables[0].TableName = "CRKhambenh_PhieuBanthuoc_RPT";
            //sqlad.Dispose(); cmd.Dispose(); sqlad = null;
            // cmd = null;
            // if (SQLConnectionBD.State == System.Data.ConnectionState.Closed)
            //SQLConnectionBD.Close(); SQLConnectionBD.Dispose();
            //if (_sqlConnection.State == System.Data.ConnectionState.Closed)
            {
                //_sqlConnection.Close(); _sqlConnection.Dispose();
                //_sqlConnection = null;
            }
            return ds;

        }
        public override DataSet RptGetKhambenh_Inlichhen(DateTime _TUNGAYYC, DateTime _DENNGAYYC, string _MABS, string _DK)
        {
            DataSet ds = new DataSet("CRKhambenh_Inlichhen_RPT");
            string[] s = { "CRKhambenh_Inlichhen_RPT" };
            SqlHelper.FillDataset(SQLConnectionData, DatabaseOwner + ObjectQualifier + "spKhamBenh_LichHen", ds, s, _TUNGAYYC, _DENNGAYYC, _MABS, _DK);
            // // // //// ds.WriteXmlSchema("CRKhambenh_Inlichhen.xsd");
            // System.Data.SqlClient.SqlCommand cmd = SqlHelper.CreateCommand(SQLConnectionData, DatabaseOwner + ObjectQualifier + "spKhamBenh_LichHen");

            // cmd.CommandTimeout = 18000;
            // cmd.CommandType = System.Data.CommandType.StoredProcedure;
            // cmd.Parameters.AddWithValue("TUNGAYYC", _TUNGAYYC);
            // cmd.Parameters.AddWithValue("DENNGAYYC", _DENNGAYYC);
            // cmd.Parameters.AddWithValue("MABS", _MABS);
            // cmd.Parameters.AddWithValue("DK", _DK);

            // System.Data.SqlClient.SqlDataAdapter sqlad = new System.Data.SqlClient.SqlDataAdapter(cmd);

            // sqlad.Fill(ds);
            // if (ds.Tables.Count > 0)
            //     //string[] s ={ "" };
            //     ds.Tables[0].TableName = "CRKhambenh_Inlichhen_RPT";
            // ds.WriteXmlSchema("CRKhambenh_Inlichhen.xsd");
            //sqlad.Dispose(); cmd.Dispose(); sqlad = null;
            // cmd = null;
            //// if (SQLConnectionBD.State == System.Data.ConnectionState.Closed)
            //     //SQLConnectionBD.Close(); SQLConnectionBD.Dispose();
            // //if (_sqlConnection.State == System.Data.ConnectionState.Closed)
            // {
            //     //_sqlConnection.Close(); _sqlConnection.Dispose();
            //     //_sqlConnection = null;
            // } 
            return ds;

        }
        public override DataSet RptGetKhambenh_DieutriARV(DateTime _TUNGAYYC, DateTime _DENNGAYYC, string _DK)
        {
            DataSet ds = new DataSet("CRKhambenh_Inlichhen_RPT");
            string[] s = { "CRKhambenh_Inlichhen_RPT" };
           // SqlHelper.FillDataset(SQLConnectionData, DatabaseOwner + ObjectQualifier + "spKhambenh_DieutriARV", ds, s, _TUNGAYYC, _DENNGAYYC, _MABS, _DK);
            // // // //// ds.WriteXmlSchema("CRKhambenh_Inlichhen.xsd");
            System.Data.SqlClient.SqlCommand cmd = SqlHelper.CreateCommand(SQLConnectionData, DatabaseOwner + ObjectQualifier + "spKhambenh_DieutriARV");

            cmd.CommandTimeout = 18000;
            cmd.CommandType = System.Data.CommandType.StoredProcedure;
            cmd.Parameters.AddWithValue("TUNGAY", _TUNGAYYC);
            cmd.Parameters.AddWithValue("DENNGAY", _DENNGAYYC);
           
            cmd.Parameters.AddWithValue("DK", _DK);

            System.Data.SqlClient.SqlDataAdapter sqlad = new System.Data.SqlClient.SqlDataAdapter(cmd);

            sqlad.Fill(ds);
            if (ds.Tables.Count > 0)
                //string[] s ={ "" };
                ds.Tables[0].TableName = "CRKhambenh_Inlichhen_RPT";
           // ds.WriteXmlSchema("CRKhambenh_Inlichhen.xsd");
            sqlad.Dispose(); cmd.Dispose(); sqlad = null;
            cmd = null;
            //// if (SQLConnectionBD.State == System.Data.ConnectionState.Closed)
            //     //SQLConnectionBD.Close(); SQLConnectionBD.Dispose();
            // //if (_sqlConnection.State == System.Data.ConnectionState.Closed)
            // {
            //     //_sqlConnection.Close(); _sqlConnection.Dispose();
            //     //_sqlConnection = null;
            // } 
            return ds;

        }
   
        #region Báo cáo Xuất CNK
        public override DataSet RptGetBCXuatThuoc(string ACCOUNT, DateTime _TUNGAYYC, DateTime _DENNGAYYC, int LOAIPHIEU, string MAKHO, string MANHOM, string MACHUNGLOAI, string MAPL, string _DK)
        {
            DataSet ds = new DataSet();
            string[] s = { "CRBCXuatthuoc_RPT" };
            SqlHelper.FillDataset(ConnectionString, DatabaseOwner + ObjectQualifier + "spnk_BCXUATTHUOC ", ds, s, ACCOUNT, _TUNGAYYC, _DENNGAYYC, LOAIPHIEU, MAKHO, MANHOM, MACHUNGLOAI, MAPL, _DK);
            return ds;
        }
        #endregion
        public override DataSet RptGetBCXUATTHUOC(string ACCOUNT, DateTime _TUNGAYYC, DateTime _DENNGAYYC, int LOAIPHIEU, string MAKHO, string MANHOM, string MACHUNGLOAI, string MAPL, string _DK)
        {
            DataSet ds = new DataSet();
            string[] s = { "CRBCXuatthuoc_RPT" };
          //  SqlHelper.FillDataset(SQLConnectionDataNoiT, DatabaseOwner + ObjectQualifier + "spDUOC_BCXUATTHUOC ", ds, s, ACCOUNT, _TUNGAYYC, _DENNGAYYC, LOAIPHIEU, MAKHO, MANHOM, MACHUNGLOAI, MAPL, _DK);
            // // // //// ds.WriteXmlSchema("CRBCXuatthuoc_RPT.xsd");
            System.Data.SqlClient.SqlCommand cmd = SqlHelper.CreateCommand(SQLConnectionData, DatabaseOwner + ObjectQualifier + "spDUOC_BCXUATTHUOC");

            cmd.CommandTimeout = 18000;
            cmd.CommandType = System.Data.CommandType.StoredProcedure;
            cmd.Parameters.AddWithValue("ACCOUNT", ACCOUNT);
            cmd.Parameters.AddWithValue("TUNGAY", _TUNGAYYC);
            cmd.Parameters.AddWithValue("DENNGAY", _DENNGAYYC);
            cmd.Parameters.AddWithValue("LOAIPHIEU", LOAIPHIEU);
            cmd.Parameters.AddWithValue("MAKHO", MAKHO);
            cmd.Parameters.AddWithValue("MANHOM", MANHOM);
            cmd.Parameters.AddWithValue("MACHUNGLOAI", MACHUNGLOAI);
            cmd.Parameters.AddWithValue("MAPL", MAPL);
            cmd.Parameters.AddWithValue("DK", _DK);
            System.Data.SqlClient.SqlDataAdapter sqlad = new System.Data.SqlClient.SqlDataAdapter(cmd);

            sqlad.Fill(ds);
            if (ds.Tables.Count > 0)
                //string[] s ={ "" };
                ds.Tables[0].TableName = "CRBCXuatthuoc_RPT";
            sqlad.Dispose(); cmd.Dispose(); sqlad = null;
            cmd = null;
            // if (SQLConnectionBD.State == System.Data.ConnectionState.Closed)
            //SQLConnectionBD.Close(); SQLConnectionBD.Dispose();
            //if (_sqlConnection.State == System.Data.ConnectionState.Closed)
            {
                //_sqlConnection.Close(); _sqlConnection.Dispose();
                //_sqlConnection = null;
            }
            return ds;

        }
        public override DataSet RptGetBCXUATTHUOC(string ACCOUNT, DateTime _TUNGAYYC, DateTime _DENNGAYYC, int LOAIPHIEU, string MAKHO, String MADT, string MANHOM, string MACHUNGLOAI, string MAPL, string _DK)
        {
            DataSet ds = new DataSet();
            string[] s = { "CRBCXuatthuoc_RPT" };
           // SqlHelper.FillDataset(SQLConnectionDataNoiT, DatabaseOwner + ObjectQualifier + "spDUOC_BCXUATTHUOCDT ", ds, s, ACCOUNT, _TUNGAYYC, _DENNGAYYC, LOAIPHIEU, MAKHO, MADT, MANHOM, MACHUNGLOAI, MAPL, _DK);
            // //// // // //// ds.WriteXmlSchema("CRBCXuatthuoc_RPT.xsd");
            // System.Data.SqlClient.SqlCommand cmd = SqlHelper.CreateCommand(SQLConnectionDataNoiT, DatabaseOwner + ObjectQualifier + "spDUOC_BCXUATTHUOCDT");

            // cmd.CommandTimeout = 18000;
            // cmd.CommandType = System.Data.CommandType.StoredProcedure;
            // cmd.Parameters.AddWithValue("ACCOUNT", ACCOUNT);
            // cmd.Parameters.AddWithValue("TUNGAY", _TUNGAYYC);
            // cmd.Parameters.AddWithValue("DENNGAY", _DENNGAYYC);
            // cmd.Parameters.AddWithValue("LOAIPHIEU", LOAIPHIEU);
            // cmd.Parameters.AddWithValue("MAKHO", MAKHO);
            // cmd.Parameters.AddWithValue("MADT", MADT);
            // cmd.Parameters.AddWithValue("MANHOM", MANHOM);
            // cmd.Parameters.AddWithValue("MACHUNGLOAI", MACHUNGLOAI);
            // cmd.Parameters.AddWithValue("MAPL", MAPL);
            // cmd.Parameters.AddWithValue("DK", _DK);
            // System.Data.SqlClient.SqlDataAdapter sqlad = new System.Data.SqlClient.SqlDataAdapter(cmd);

            // sqlad.Fill(ds);
            // if (ds.Tables.Count > 0)
            //     //string[] s ={ "" };
            //     ds.Tables[0].TableName = "CRBCXuatthuoc_RPT";
            //sqlad.Dispose(); cmd.Dispose(); sqlad = null;
            // cmd = null;
            //// if (SQLConnectionBD.State == System.Data.ConnectionState.Closed)
            //     //SQLConnectionBD.Close(); SQLConnectionBD.Dispose();
            // //if (_sqlConnection.State == System.Data.ConnectionState.Closed)
            // {
            //     //_sqlConnection.Close(); _sqlConnection.Dispose();
            //     //_sqlConnection = null;
            // } 
            return ds;

        }

        public override DataSet RptGetBCXUATTHUOCKhoa(string ACCOUNT, DateTime _TUNGAYYC, DateTime _DENNGAYYC, int LOAIPHIEU, string MAKHO, string MANHOM, string MACHUNGLOAI, string MAPL, string _DK)
        {
            DataSet ds = new DataSet("CRBCXuatthuoc_RPT");
            string[] s = { "CRBCXuatthuoc_RPT" };
           // SqlHelper.FillDataset(SQLConnectionDataNoiT, DatabaseOwner + ObjectQualifier + "spDUOC_BCXUATTHUOC ", ds, s, ACCOUNT, _TUNGAYYC, _DENNGAYYC, LOAIPHIEU, MAKHO, MANHOM, MACHUNGLOAI, MAPL, _DK);
            //// ds.WriteXmlSchema("CRBCXuatthuocKhoa_RPT.xsd");
            //  // ds.WriteXmlSchema("CRBCXuatthuocKhoa_RPT.xsd");
            System.Data.SqlClient.SqlCommand cmd = SqlHelper.CreateCommand(SQLConnectionDataNoiT, DatabaseOwner + ObjectQualifier + "spDUOC_BCXUATTHUOC");

            cmd.CommandTimeout = 18000;
            cmd.CommandType = System.Data.CommandType.StoredProcedure;
            cmd.Parameters.AddWithValue("ACCOUNT", ACCOUNT);
            cmd.Parameters.AddWithValue("TUNGAY", _TUNGAYYC);
            cmd.Parameters.AddWithValue("DENNGAY", _DENNGAYYC);
            cmd.Parameters.AddWithValue("LOAIPHIEU", LOAIPHIEU);
            cmd.Parameters.AddWithValue("MAKHO", MAKHO);
            cmd.Parameters.AddWithValue("MANHOM", MANHOM);
            cmd.Parameters.AddWithValue("MACHUNGLOAI", MACHUNGLOAI);
            cmd.Parameters.AddWithValue("MAPL", MAPL);
            cmd.Parameters.AddWithValue("DK", _DK);
            System.Data.SqlClient.SqlDataAdapter sqlad = new System.Data.SqlClient.SqlDataAdapter(cmd);

            sqlad.Fill(ds);
            if (ds.Tables.Count > 0)
                //string[] s ={ "" };
                ds.Tables[0].TableName = "CRBCXuatthuoc_RPT";
            //sqlad.Dispose(); cmd.Dispose(); sqlad = null;
            // cmd = null;
            // if (SQLConnectionBD.State == System.Data.ConnectionState.Closed)
            //SQLConnectionBD.Close(); SQLConnectionBD.Dispose();
            ////if (_sqlConnection.State == System.Data.ConnectionState.Closed)
            //{
            //    //_sqlConnection.Close(); _sqlConnection.Dispose();
            //    //_sqlConnection = null;
            //} 
            return ds;

        }
        public override DataSet RptGetBCXUATTHUOCKhoa(string ACCOUNT, DateTime _TUNGAYYC, DateTime _DENNGAYYC, int LOAIPHIEU, string MAKHO, string MaDT, string MANHOM, string MACHUNGLOAI, string MAPL, string _DK)
        {
            DataSet ds = new DataSet("CRBCXuatthuoc_RPT");
            string[] s = { "CRBCXuatthuoc_RPT" };
            SqlHelper.FillDataset(SQLConnectionDataNoiT, DatabaseOwner + ObjectQualifier + "spDUOC_BCXUATTHUOC ", ds, s, ACCOUNT, _TUNGAYYC, _DENNGAYYC, LOAIPHIEU, MAKHO, MANHOM, MACHUNGLOAI, MAPL, _DK);
            //// ds.WriteXmlSchema("CRBCXuatthuocKhoa_RPT.xsd");
            //  // ds.WriteXmlSchema("CRBCXuatthuocKhoa_RPT.xsd");
            // System.Data.SqlClient.SqlCommand cmd = SqlHelper.CreateCommand(SQLConnectionDataNoiT, DatabaseOwner + ObjectQualifier + "spDUOC_BCXUATTHUOCDT");

            // cmd.CommandTimeout = 18000;
            // cmd.CommandType = System.Data.CommandType.StoredProcedure;
            // cmd.Parameters.AddWithValue("ACCOUNT", ACCOUNT);
            // cmd.Parameters.AddWithValue("TUNGAY", _TUNGAYYC);
            // cmd.Parameters.AddWithValue("DENNGAY", _DENNGAYYC);
            // cmd.Parameters.AddWithValue("LOAIPHIEU", LOAIPHIEU);
            // cmd.Parameters.AddWithValue("MAKHO", MAKHO);
            // cmd.Parameters.AddWithValue("MADT", MaDT);
            // cmd.Parameters.AddWithValue("MANHOM", MANHOM);
            // cmd.Parameters.AddWithValue("MACHUNGLOAI", MACHUNGLOAI);
            // cmd.Parameters.AddWithValue("MAPL", MAPL);
            // cmd.Parameters.AddWithValue("DK", _DK);
            // System.Data.SqlClient.SqlDataAdapter sqlad = new System.Data.SqlClient.SqlDataAdapter(cmd);

            // sqlad.Fill(ds);
            // if (ds.Tables.Count > 0)
            //     //string[] s ={ "" };
            //     ds.Tables[0].TableName = "CRBCXuatthuoc_RPT";
            //sqlad.Dispose(); cmd.Dispose(); sqlad = null;
            // cmd = null;
            //// if (SQLConnectionBD.State == System.Data.ConnectionState.Closed)
            //     //SQLConnectionBD.Close(); SQLConnectionBD.Dispose();
            // //if (_sqlConnection.State == System.Data.ConnectionState.Closed)
            // {
            //     //_sqlConnection.Close(); _sqlConnection.Dispose();
            //     //_sqlConnection = null;
            // } 
            return ds;

        }

        public override DataSet RptGetBCXUATTHUOCNgay(string ACCOUNT, DateTime _TUNGAYYC, DateTime _DENNGAYYC, int LOAIPHIEU, string MAKHO, string MANHOM, string MACHUNGLOAI, string MAPL, string _DK)
        {
            DataSet ds = new DataSet("CRBCXuatthuoc_RPT");
            string[] s = { "CRBCXuatthuoc_RPT" };
            SqlHelper.FillDataset(SQLConnectionDataNoiT, DatabaseOwner + ObjectQualifier + "spDUOC_BCXUATTHUOC ", ds, s, ACCOUNT, _TUNGAYYC, _DENNGAYYC, LOAIPHIEU, MAKHO, MANHOM, MACHUNGLOAI, MAPL, _DK);
            // //// ds.WriteXmlSchema("CRBCXuatthuocNgay_RPT.xsd");
            // System.Data.SqlClient.SqlCommand cmd = SqlHelper.CreateCommand(SQLConnectionDataNoiT, DatabaseOwner + ObjectQualifier + "spDUOC_BCXUATTHUOC");

            // cmd.CommandTimeout = 18000;
            // cmd.CommandType = System.Data.CommandType.StoredProcedure;
            // cmd.Parameters.AddWithValue("ACCOUNT", ACCOUNT);
            // cmd.Parameters.AddWithValue("TUNGAY", _TUNGAYYC);
            // cmd.Parameters.AddWithValue("DENNGAY", _DENNGAYYC);
            // cmd.Parameters.AddWithValue("LOAIPHIEU", LOAIPHIEU);
            // cmd.Parameters.AddWithValue("MAKHO", MAKHO);
            // cmd.Parameters.AddWithValue("MANHOM", MANHOM);
            // cmd.Parameters.AddWithValue("MACHUNGLOAI", MACHUNGLOAI);
            // cmd.Parameters.AddWithValue("MAPL", MAPL);
            // cmd.Parameters.AddWithValue("DK", _DK);
            // System.Data.SqlClient.SqlDataAdapter sqlad = new System.Data.SqlClient.SqlDataAdapter(cmd);

            // sqlad.Fill(ds);
            // if (ds.Tables.Count > 0)
            //     //string[] s ={ "" };
            //     ds.Tables[0].TableName = "CRBCXuatthuoc_RPT";
            //sqlad.Dispose(); cmd.Dispose(); sqlad = null;
            // cmd = null;
            //// if (SQLConnectionBD.State == System.Data.ConnectionState.Closed)
            //     //SQLConnectionBD.Close(); SQLConnectionBD.Dispose();
            // //if (_sqlConnection.State == System.Data.ConnectionState.Closed)
            // {
            //     //_sqlConnection.Close(); _sqlConnection.Dispose();
            //     //_sqlConnection = null;
            // } 
            return ds;

        }
        public override DataSet RptGetBCXUATTHUOCNgay(string ACCOUNT, DateTime _TUNGAYYC, DateTime _DENNGAYYC, int LOAIPHIEU, string MAKHO, string MaDT, string MANHOM, string MACHUNGLOAI, string MAPL, string _DK)
        {
            DataSet ds = new DataSet("CRBCXuatthuoc_RPT");
            string[] s = { "CRBCXuatthuoc_RPT" };
            SqlHelper.FillDataset(SQLConnectionDataNoiT, DatabaseOwner + ObjectQualifier + "spDUOC_BCXUATTHUOC ", ds, s, ACCOUNT, _TUNGAYYC, _DENNGAYYC, LOAIPHIEU, MAKHO, MANHOM, MACHUNGLOAI, MAPL, _DK);
            // //// ds.WriteXmlSchema("CRBCXuatthuocNgay_RPT.xsd");
            // System.Data.SqlClient.SqlCommand cmd = SqlHelper.CreateCommand(SQLConnectionDataNoiT, DatabaseOwner + ObjectQualifier + "spDUOC_BCXUATTHUOCDT");

            // cmd.CommandTimeout = 18000;
            // cmd.CommandType = System.Data.CommandType.StoredProcedure;
            // cmd.Parameters.AddWithValue("ACCOUNT", ACCOUNT);
            // cmd.Parameters.AddWithValue("TUNGAY", _TUNGAYYC);
            // cmd.Parameters.AddWithValue("DENNGAY", _DENNGAYYC);
            // cmd.Parameters.AddWithValue("LOAIPHIEU", LOAIPHIEU);
            // cmd.Parameters.AddWithValue("MAKHO", MAKHO);
            // cmd.Parameters.AddWithValue("MADT", MaDT);
            // cmd.Parameters.AddWithValue("MANHOM", MANHOM);
            // cmd.Parameters.AddWithValue("MACHUNGLOAI", MACHUNGLOAI);
            // cmd.Parameters.AddWithValue("MAPL", MAPL);
            // cmd.Parameters.AddWithValue("DK", _DK);
            // System.Data.SqlClient.SqlDataAdapter sqlad = new System.Data.SqlClient.SqlDataAdapter(cmd);

            // sqlad.Fill(ds);
            // if (ds.Tables.Count > 0)
            //     //string[] s ={ "" };
            //     ds.Tables[0].TableName = "CRBCXuatthuoc_RPT";
            //sqlad.Dispose(); cmd.Dispose(); sqlad = null;
            // cmd = null;
            // if (SQLConnectionBD.State == System.Data.ConnectionState.Closed)
            //SQLConnectionBD.Close(); SQLConnectionBD.Dispose();
            //if (_sqlConnection.State == System.Data.ConnectionState.Closed)
            {
                //_sqlConnection.Close(); _sqlConnection.Dispose();
                //_sqlConnection = null;
            }
            return ds;

        }

        public override DataSet RptGetBCXUATTHUOC_C(string ACCOUNT, DateTime _TUNGAYYC, DateTime _DENNGAYYC, int LOAIPHIEU, string MAKHO, string MANHOM, string MACHUNGLOAI, string MAPL, string _DK)
        {
            DataSet ds = new DataSet();
            string[] s = { "CRBCXuatthuoc_C_RPT" };
            SqlHelper.FillDataset(SQLConnectionDataNoiT, DatabaseOwner + ObjectQualifier + "spDUOC_BCXUATTHUOC ", ds, s, ACCOUNT, _TUNGAYYC, _DENNGAYYC, LOAIPHIEU, MAKHO, MANHOM, MACHUNGLOAI, MAPL, _DK);
            // // // //// ds.WriteXmlSchema("CRBCXuatthuoc_C_RPT.xsd");
            return ds;
        }
        public override DataSet RptGetBCXUATTHUOC_C(string ACCOUNT, DateTime _TUNGAYYC, DateTime _DENNGAYYC, int LOAIPHIEU, string MAKHO, String MaDT, string MANHOM, string MACHUNGLOAI, string MAPL, string _DK)
        {
            DataSet ds = new DataSet();
            string[] s = { "CRBCXuatthuoc_C_RPT" };
            SqlHelper.FillDataset(SQLConnectionDataNoiT, DatabaseOwner + ObjectQualifier + "spDUOC_BCXUATTHUOCDT ", ds, s, ACCOUNT, _TUNGAYYC, _DENNGAYYC, LOAIPHIEU, MAKHO, MaDT, MANHOM, MACHUNGLOAI, MAPL, _DK);
            // // // //// ds.WriteXmlSchema("CRBCXuatthuoc_C_RPT.xsd");
            return ds;
        }
        public override DataSet RptBCNXTThuoc_Khochin(DateTime _tuNgay, DateTime _denNgay, string _maKho, String _MaDT, int _loaiBC, string _maNhom, string _maChungLoai, string _maPL, string _dK)
        {
            DataSet ds = new DataSet("CRBCNXTThuoc_Chin_RPT");
            //string[] s = { "CRBCNXTThuoc_Chin_RPT" };
            //SqlHelper.FillDataset( ConnectionString, DatabaseOwner + ObjectQualifier + "SPDUOC_BCNHAPXUATTONDT", ds, s, _tuNgay, _denNgay, _maKho, _MaDT, _loaiBC, _maNhom, _maChungLoai, _maPL, _dK);
            //ds.WriteXmlSchema("CRBCXuatthuoc_Chin_RPT.xsd");

            System.Data.SqlClient.SqlCommand cmd = SqlHelper.CreateCommand(SQLConnectionDataNoiT, DatabaseOwner + ObjectQualifier + "SPDUOC_BCNHAPXUATTONDT");

            cmd.CommandTimeout = 18000;
            cmd.CommandType = System.Data.CommandType.StoredProcedure;
            cmd.Parameters.AddWithValue("TUNGAY", _tuNgay);
            cmd.Parameters.AddWithValue("DENNGAY", _denNgay);
            cmd.Parameters.AddWithValue("LOAIBC", _loaiBC);
            cmd.Parameters.AddWithValue("MAKHO", _maKho);
            cmd.Parameters.AddWithValue("MADT", _MaDT);
            cmd.Parameters.AddWithValue("MANHOM", _maNhom);
            cmd.Parameters.AddWithValue("MACHUNGLOAI", _maChungLoai);
            cmd.Parameters.AddWithValue("MAPL", _maPL);
            cmd.Parameters.AddWithValue("DK", _dK);
            System.Data.SqlClient.SqlDataAdapter sqlad = new System.Data.SqlClient.SqlDataAdapter(cmd);

            sqlad.Fill(ds);
            if (ds.Tables.Count > 0)
                //string[] s ={ "" };
                ds.Tables[0].TableName = "CRBCNXTThuoc_Chin_RPT";
            //ds.WriteXmlSchema("CRBCXuatthuoc_Quay_RPT.xsd");
            //ds.WriteXml("CRBCXuatthuoc_Quay_RPT1.xsd");
            sqlad.Dispose(); cmd.Dispose(); sqlad = null;
            cmd = null;
            // if (SQLConnectionBD.State == System.Data.ConnectionState.Closed)
            //SQLConnectionBD.Close(); SQLConnectionBD.Dispose();
            //if (_sqlConnection.State == System.Data.ConnectionState.Closed)
            {
                //_sqlConnection.Close(); _sqlConnection.Dispose();
                //_sqlConnection = null;
            }
            return ds;

        }
        public override DataSet RptBCNXTThuoc_C(DateTime _tuNgay, DateTime _denNgay, string _maKho, int _loaiBC, string _maNhom, string _maChungLoai, string _maPL, string _dK)
        {
            DataSet ds = new DataSet("CRBCNXTThuoc_C_RPT");
            string[] s = { "CRBCNXTThuoc_C_RPT" };
            SqlHelper.FillDataset(SQLConnectionDataNoiT, DatabaseOwner + ObjectQualifier + "SPDUOC_BCNHAPXUATTON", ds, s, _tuNgay, _denNgay, _maKho, _loaiBC, _maNhom, _maChungLoai, _maPL, _dK);
            // // // //// ds.WriteXmlSchema("CRBCXuatthuoc_C_RPT.xsd");
            // System.Data.SqlClient.SqlCommand cmd = SqlHelper.CreateCommand(SQLConnectionDataNoiT, DatabaseOwner + ObjectQualifier + "SPDUOC_BCNHAPXUATTON");

            // cmd.CommandTimeout = 18000;
            // cmd.CommandType = System.Data.CommandType.StoredProcedure;
            // cmd.Parameters.AddWithValue("TUNGAY", _tuNgay);
            // cmd.Parameters.AddWithValue("DENNGAY", _denNgay);
            // cmd.Parameters.AddWithValue("LOAIBC", _loaiBC);
            // cmd.Parameters.AddWithValue("MAKHO", _maKho);
            // cmd.Parameters.AddWithValue("MANHOM", _maNhom);
            // cmd.Parameters.AddWithValue("MACHUNGLOAI", _maChungLoai);
            // cmd.Parameters.AddWithValue("MAPL", _maPL);
            // cmd.Parameters.AddWithValue("DK", _dK);
            // System.Data.SqlClient.SqlDataAdapter sqlad = new System.Data.SqlClient.SqlDataAdapter(cmd);

            // sqlad.Fill(ds);

            // if (ds.Tables.Count > 0)
            //     //string[] s ={ "" };
            //     ds.Tables[0].TableName = "CRBCNXTThuoc_C_RPT";
            // //ds.WriteXmlSchema("CRBCXuatthuoc_C_RPT.xsd");
            //sqlad.Dispose(); cmd.Dispose(); sqlad = null;
            // cmd = null;
            // if (SQLConnectionBD.State == System.Data.ConnectionState.Closed)
            //SQLConnectionBD.Close(); SQLConnectionBD.Dispose();
            //if (_sqlConnection.State == System.Data.ConnectionState.Closed)
            {
                //_sqlConnection.Close(); _sqlConnection.Dispose();
                //_sqlConnection = null;
            }
            return ds;

        }
        public override DataSet RptBCNXTThuoc_C(DateTime _tuNgay, DateTime _denNgay, string _maKho, String _MaDT, int _loaiBC, string _maNhom, string _maChungLoai, string _maPL, string _dK)
        {
            DataSet ds = new DataSet("CRBCNXTThuoc_C_RPT");
            string[] s = { "CRBCNXTThuoc_C_RPT" };
            SqlHelper.FillDataset(SQLConnectionDataNoiT, DatabaseOwner + ObjectQualifier + "SPDUOC_BCNHAPXUATTON", ds, s, _tuNgay, _denNgay, _maKho, _loaiBC, _maNhom, _maChungLoai, _maPL, _dK);
            // // // //// ds.WriteXmlSchema("CRBCXuatthuoc_C_RPT.xsd");
            // System.Data.SqlClient.SqlCommand cmd = SqlHelper.CreateCommand(SQLConnectionDataNoiT, DatabaseOwner + ObjectQualifier + "SPDUOC_BCNHAPXUATTONDT");

            // cmd.CommandTimeout = 18000;
            // cmd.CommandType = System.Data.CommandType.StoredProcedure;
            // cmd.Parameters.AddWithValue("TUNGAY", _tuNgay);
            // cmd.Parameters.AddWithValue("DENNGAY", _denNgay);
            // cmd.Parameters.AddWithValue("LOAIBC", _loaiBC);
            // cmd.Parameters.AddWithValue("MAKHO", _maKho);
            // cmd.Parameters.AddWithValue("MADT", _MaDT);
            // cmd.Parameters.AddWithValue("MANHOM", _maNhom);
            // cmd.Parameters.AddWithValue("MACHUNGLOAI", _maChungLoai);
            // cmd.Parameters.AddWithValue("MAPL", _maPL);
            // cmd.Parameters.AddWithValue("DK", _dK);
            // System.Data.SqlClient.SqlDataAdapter sqlad = new System.Data.SqlClient.SqlDataAdapter(cmd);

            // sqlad.Fill(ds);
            // if (ds.Tables.Count > 0)
            //     //string[] s ={ "" };
            //     ds.Tables[0].TableName = "CRBCNXTThuoc_C_RPT";
            //sqlad.Dispose(); cmd.Dispose(); sqlad = null;
            // cmd = null;
            // if (SQLConnectionBD.State == System.Data.ConnectionState.Closed)
            //SQLConnectionBD.Close(); SQLConnectionBD.Dispose();
            //if (_sqlConnection.State == System.Data.ConnectionState.Closed)
            {
                //_sqlConnection.Close(); _sqlConnection.Dispose();
                //_sqlConnection = null;
            }
            return ds;

        }

        public override DataSet RptBCNXTThuoc_ToanBV(DateTime _tuNgay, DateTime _denNgay, string _maKho, int _loaiBC, string _maNhom, string _maChungLoai, string _maPL, string _dK)
        {
            DataSet ds = new DataSet("CRBCNXTThuoc_ToanBV_RPT");
            string[] s = { "CRBCNXTThuoc_ToanBV_RPT" };
            SqlHelper.FillDataset(SQLConnectionDataNoiT, DatabaseOwner + ObjectQualifier + "SPDUOC_BCNHAPXUATTON ", ds, s, _tuNgay, _denNgay, _maKho, _loaiBC, _maNhom, _maChungLoai, _maPL, _dK);
            // // // //// ds.WriteXmlSchema("CRBCNXTThuoc_ToanBV_RPT.xsd");
            // System.Data.SqlClient.SqlCommand cmd = SqlHelper.CreateCommand(SQLConnectionDataNoiT, DatabaseOwner + ObjectQualifier + "SPDUOC_BCNHAPXUATTON");

            // cmd.CommandTimeout = 18000;
            // cmd.CommandType = System.Data.CommandType.StoredProcedure;
            // cmd.Parameters.AddWithValue("TUNGAY", _tuNgay);
            // cmd.Parameters.AddWithValue("DENNGAY", _denNgay);
            // cmd.Parameters.AddWithValue("MAKHO", _maKho);
            // cmd.Parameters.AddWithValue("LOAIBC", _loaiBC);
            // cmd.Parameters.AddWithValue("MANHOM", _maNhom);
            // cmd.Parameters.AddWithValue("MACHUNGLOAI", _maChungLoai);
            // cmd.Parameters.AddWithValue("MAPL", _maPL);
            // cmd.Parameters.AddWithValue("DK", _dK);
            // System.Data.SqlClient.SqlDataAdapter sqlad = new System.Data.SqlClient.SqlDataAdapter(cmd);

            // sqlad.Fill(ds);
            // if (ds.Tables.Count > 0)
            //     //string[] s ={ "" };
            //     ds.Tables[0].TableName = "CRBCNXTThuoc_ToanBV_RPT";
            //sqlad.Dispose(); cmd.Dispose(); sqlad = null;
            // cmd = null;
            // if (SQLConnectionBD.State == System.Data.ConnectionState.Closed)
            //SQLConnectionBD.Close(); SQLConnectionBD.Dispose();
            //if (_sqlConnection.State == System.Data.ConnectionState.Closed)
            {
                //_sqlConnection.Close(); _sqlConnection.Dispose();
                //_sqlConnection = null;
            }
            return ds;

        }

        public override DataSet RptGetBCNHAPThuoc(string ACCOUNT, DateTime _TUNGAYYC, DateTime _DENNGAYYC, int LOAIPHIEU, string MAKHO, string MANHOM, string MACHUNGLOAI, string MAPL, string _DK)
        {
            DataSet ds = new DataSet("CRBCNHAPThuoc_RPT");
            string[] s = { "CRBCNHAPThuoc_RPT" };
            SqlHelper.FillDataset(SQLConnectionDataNoiT, DatabaseOwner + ObjectQualifier + "spDUOC_BCNHAPTHUOC ", ds, s, ACCOUNT, _TUNGAYYC, _DENNGAYYC, LOAIPHIEU, MAKHO, MANHOM, MACHUNGLOAI, MAPL, _DK);
            // ds.WriteXmlSchema("CRBCKiemNHAPThuoc_RPT.xsd");

            // System.Data.SqlClient.SqlCommand cmd = SqlHelper.CreateCommand(SQLConnectionDataNoiT, DatabaseOwner + ObjectQualifier + "spDUOC_BCNHAPTHUOC");

            // cmd.CommandTimeout = 18000;
            // cmd.CommandType = System.Data.CommandType.StoredProcedure;
            // cmd.Parameters.AddWithValue("ACCOUNT", ACCOUNT);
            // cmd.Parameters.AddWithValue("TUNGAY", _TUNGAYYC);
            // cmd.Parameters.AddWithValue("DENNGAY", _DENNGAYYC);
            // cmd.Parameters.AddWithValue("LOAIPHIEU", LOAIPHIEU);
            // cmd.Parameters.AddWithValue("MAKHO", MAKHO);
            // cmd.Parameters.AddWithValue("MANHOM", MANHOM);
            // cmd.Parameters.AddWithValue("MACHUNGLOAI", MACHUNGLOAI);
            // cmd.Parameters.AddWithValue("MAPL", MAPL);
            // cmd.Parameters.AddWithValue("DK", _DK);
            // System.Data.SqlClient.SqlDataAdapter sqlad = new System.Data.SqlClient.SqlDataAdapter(cmd);

            // sqlad.Fill(ds);
            // if (ds.Tables.Count > 0)
            //     //string[] s ={ "" };
            //     ds.Tables[0].TableName = "CRBCNHAPThuoc_RPT";
            //sqlad.Dispose(); cmd.Dispose(); sqlad = null;
            // cmd = null;
            // if (SQLConnectionBD.State == System.Data.ConnectionState.Closed)
            //SQLConnectionBD.Close(); SQLConnectionBD.Dispose();
            //if (_sqlConnection.State == System.Data.ConnectionState.Closed)
            {
                //_sqlConnection.Close(); _sqlConnection.Dispose();
                //_sqlConnection = null;
            }
            return ds;

        }

        public override DataSet RptGetBCNHAPThuoc_NCC(string ACCOUNT, DateTime _TUNGAYYC, DateTime _DENNGAYYC, int LOAIPHIEU, string MAKHO, string MANHOM, string MACHUNGLOAI, string MAPL, string _DK)
        {
            DataSet ds = new DataSet("CRBCNHAPThuoc_NCC_RPT");
            string[] s = { "CRBCNHAPThuoc_NCC_RPT" };
            SqlHelper.FillDataset(SQLConnectionDataNoiT, DatabaseOwner + ObjectQualifier + "spDUOC_BCNHAPTHUOC ", ds, s, ACCOUNT, _TUNGAYYC, _DENNGAYYC, LOAIPHIEU, MAKHO, MANHOM, MACHUNGLOAI, MAPL, _DK);
            // // // //// ds.WriteXmlSchema("CRBCNHAPThuoc_NCC_RPT.xsd");
            // System.Data.SqlClient.SqlCommand cmd = SqlHelper.CreateCommand(SQLConnectionDataNoiT, DatabaseOwner + ObjectQualifier + "spDUOC_BCNHAPTHUOC");

            // cmd.CommandTimeout = 18000;
            // cmd.CommandType = System.Data.CommandType.StoredProcedure;
            // cmd.Parameters.AddWithValue("ACCOUNT", ACCOUNT);
            // cmd.Parameters.AddWithValue("TUNGAY", _TUNGAYYC);
            // cmd.Parameters.AddWithValue("DENNGAY", _DENNGAYYC);
            // cmd.Parameters.AddWithValue("LOAIPHIEU", LOAIPHIEU);
            // cmd.Parameters.AddWithValue("MAKHO", MAKHO);
            // cmd.Parameters.AddWithValue("MANHOM", MANHOM);
            // cmd.Parameters.AddWithValue("MACHUNGLOAI", MACHUNGLOAI);
            // cmd.Parameters.AddWithValue("MAPL", MAPL);
            // cmd.Parameters.AddWithValue("DK", _DK);
            // System.Data.SqlClient.SqlDataAdapter sqlad = new System.Data.SqlClient.SqlDataAdapter(cmd);

            // sqlad.Fill(ds);
            // if (ds.Tables.Count > 0)
            //     //string[] s ={ "" };
            //     ds.Tables[0].TableName = "CRBCNHAPThuoc_NCC_RPT";
            //sqlad.Dispose(); cmd.Dispose(); sqlad = null;
            // cmd = null;
            // if (SQLConnectionBD.State == System.Data.ConnectionState.Closed)
            //SQLConnectionBD.Close(); SQLConnectionBD.Dispose();
            //if (_sqlConnection.State == System.Data.ConnectionState.Closed)
            {
                //_sqlConnection.Close(); _sqlConnection.Dispose();
                //_sqlConnection = null;
            }
            return ds;

        }
        public override DataSet RptGetBCBCNHAPTRATHUOC(string ACCOUNT, DateTime _TUNGAYYC, DateTime _DENNGAYYC, int LOAIPHIEU, string MAKHO, string MANHOM, string MACHUNGLOAI, string MAPL, string _DK)
        {
            DataSet ds = new DataSet("CRBCNHAPTRATHUOC_RPT");
            string[] s = { "CRBCNHAPTRATHUOC_RPT" };
            SqlHelper.FillDataset(SQLConnectionDataNoiT, DatabaseOwner + ObjectQualifier + "spDUOC_BCNHAPTRATHUOC ", ds, s, ACCOUNT, _TUNGAYYC, _DENNGAYYC, LOAIPHIEU, MAKHO, MANHOM, MACHUNGLOAI, MAPL, _DK);
            // // // //// ds.WriteXmlSchema("CRBCNHAPTRATHUOC_RPT.xsd");
            // System.Data.SqlClient.SqlCommand cmd = SqlHelper.CreateCommand(SQLConnectionDataNoiT, DatabaseOwner + ObjectQualifier + "spDUOC_BCNHAPTRATHUOC");

            // cmd.CommandTimeout = 18000;
            // cmd.CommandType = System.Data.CommandType.StoredProcedure;
            // cmd.Parameters.AddWithValue("ACCOUNT", ACCOUNT);
            // cmd.Parameters.AddWithValue("TUNGAY", _TUNGAYYC);
            // cmd.Parameters.AddWithValue("DENNGAY", _DENNGAYYC);
            // cmd.Parameters.AddWithValue("LOAIPHIEU", LOAIPHIEU);
            // cmd.Parameters.AddWithValue("MAKHO", MAKHO);
            // cmd.Parameters.AddWithValue("MANHOM", MANHOM);
            // cmd.Parameters.AddWithValue("MACHUNGLOAI", MACHUNGLOAI);
            // cmd.Parameters.AddWithValue("MAPL", MAPL);
            // cmd.Parameters.AddWithValue("DK", _DK);
            // System.Data.SqlClient.SqlDataAdapter sqlad = new System.Data.SqlClient.SqlDataAdapter(cmd);

            // sqlad.Fill(ds);
            // if (ds.Tables.Count > 0)
            //     //string[] s ={ "" };
            //     ds.Tables[0].TableName = "CRBCNHAPTRATHUOC_RPT";
            //sqlad.Dispose(); cmd.Dispose(); sqlad = null;
            // cmd = null;
            //// if (SQLConnectionBD.State == System.Data.ConnectionState.Closed)
            //     //SQLConnectionBD.Close(); SQLConnectionBD.Dispose();
            // //if (_sqlConnection.State == System.Data.ConnectionState.Closed)
            // {
            //     //_sqlConnection.Close(); _sqlConnection.Dispose();
            //     //_sqlConnection = null;
            // } 
            return ds;

        }
        public override DataSet RptGetBCNhapTraTHUOCKhoa(string ACCOUNT, DateTime _TUNGAYYC, DateTime _DENNGAYYC, int LOAIPHIEU, string MAKHO, string MANHOM, string MACHUNGLOAI, string MAPL, string _DK)
        {
            DataSet ds = new DataSet("CRBCXuatthuoc_RPT");
            string[] s = { "CRBCXuatthuoc_RPT" };
            SqlHelper.FillDataset(SQLConnectionDataNoiT, DatabaseOwner + ObjectQualifier + "spDUOC_BCNHAPTRATHUOC ", ds, s, ACCOUNT, _TUNGAYYC, _DENNGAYYC, LOAIPHIEU, MAKHO, MANHOM, MACHUNGLOAI, MAPL, _DK);
            //// ds.WriteXmlSchema("CRBCXuatthuocKhoa_RPT.xsd");
            //  // ds.WriteXmlSchema("CRBCXuatthuocKhoa_RPT.xsd");
            // System.Data.SqlClient.SqlCommand cmd = SqlHelper.CreateCommand(SQLConnectionDataNoiT, DatabaseOwner + ObjectQualifier + "spDUOC_BCNHAPTRATHUOC");

            // cmd.CommandTimeout = 18000;
            // cmd.CommandType = System.Data.CommandType.StoredProcedure;
            // cmd.Parameters.AddWithValue("ACCOUNT", ACCOUNT);
            // cmd.Parameters.AddWithValue("TUNGAY", _TUNGAYYC);
            // cmd.Parameters.AddWithValue("DENNGAY", _DENNGAYYC);
            // cmd.Parameters.AddWithValue("LOAIPHIEU", LOAIPHIEU);
            // cmd.Parameters.AddWithValue("MAKHO", MAKHO);
            // cmd.Parameters.AddWithValue("MANHOM", MANHOM);
            // cmd.Parameters.AddWithValue("MACHUNGLOAI", MACHUNGLOAI);
            // cmd.Parameters.AddWithValue("MAPL", MAPL);
            // cmd.Parameters.AddWithValue("DK", _DK);
            // System.Data.SqlClient.SqlDataAdapter sqlad = new System.Data.SqlClient.SqlDataAdapter(cmd);

            // sqlad.Fill(ds);
            // if (ds.Tables.Count > 0)
            //     //string[] s ={ "" };
            //     ds.Tables[0].TableName = "CRBCXuatthuoc_RPT";
            //sqlad.Dispose(); cmd.Dispose(); sqlad = null;
            // cmd = null;
            // if (SQLConnectionBD.State == System.Data.ConnectionState.Closed)
            //SQLConnectionBD.Close(); SQLConnectionBD.Dispose();
            //if (_sqlConnection.State == System.Data.ConnectionState.Closed)
            {
                //_sqlConnection.Close(); _sqlConnection.Dispose();
                //_sqlConnection = null;
            }
            return ds;

        }
        public override DataSet RptGetBCBCNHAPTRATHUOC(string ACCOUNT, DateTime _TUNGAYYC, DateTime _DENNGAYYC, int LOAIPHIEU, string MAKHO, String MADT, string MANHOM, string MACHUNGLOAI, string MAPL, string _DK)
        {
            DataSet ds = new DataSet("CRBCNHAPTRATHUOC_RPT");
            string[] s = { "CRBCNHAPTRATHUOC_RPT" };
            SqlHelper.FillDataset(SQLConnectionDataNoiT, DatabaseOwner + ObjectQualifier + "spDUOC_BCNHAPTRATHUOCDT ", ds, s, ACCOUNT, _TUNGAYYC, _DENNGAYYC, LOAIPHIEU, MAKHO, MANHOM, MACHUNGLOAI, MAPL, _DK);
            // // // //// ds.WriteXmlSchema("CRBCNHAPTRATHUOC_RPT.xsd");
            // System.Data.SqlClient.SqlCommand cmd = SqlHelper.CreateCommand(SQLConnectionDataNoiT, DatabaseOwner + ObjectQualifier + "spDUOC_BCNHAPTRATHUOCDT");

            // cmd.CommandTimeout = 18000;
            // cmd.CommandType = System.Data.CommandType.StoredProcedure;
            // cmd.Parameters.AddWithValue("ACCOUNT", ACCOUNT);
            // cmd.Parameters.AddWithValue("TUNGAY", _TUNGAYYC);
            // cmd.Parameters.AddWithValue("DENNGAY", _DENNGAYYC);
            // cmd.Parameters.AddWithValue("LOAIPHIEU", LOAIPHIEU);
            // cmd.Parameters.AddWithValue("MAKHO", MAKHO);
            // cmd.Parameters.AddWithValue("MADT", MADT);
            // cmd.Parameters.AddWithValue("MANHOM", MANHOM);
            // cmd.Parameters.AddWithValue("MACHUNGLOAI", MACHUNGLOAI);
            // cmd.Parameters.AddWithValue("MAPL", MAPL);
            // cmd.Parameters.AddWithValue("DK", _DK);
            // System.Data.SqlClient.SqlDataAdapter sqlad = new System.Data.SqlClient.SqlDataAdapter(cmd);

            // sqlad.Fill(ds);
            // if (ds.Tables.Count > 0)
            //     //string[] s ={ "" };
            //     ds.Tables[0].TableName = "CRBCNHAPTRATHUOC_RPT";
            //sqlad.Dispose(); cmd.Dispose(); sqlad = null;
            // cmd = null;
            //// if (SQLConnectionBD.State == System.Data.ConnectionState.Closed)
            //     //SQLConnectionBD.Close(); SQLConnectionBD.Dispose();
            // //if (_sqlConnection.State == System.Data.ConnectionState.Closed)
            // {
            //     //_sqlConnection.Close(); _sqlConnection.Dispose();
            //     //_sqlConnection = null;
            // } 
            return ds;

        }
        public override DataSet RptGetBCNhapTraTHUOCKhoa(string ACCOUNT, DateTime _TUNGAYYC, DateTime _DENNGAYYC, int LOAIPHIEU, string MAKHO, String MADT, string MANHOM, string MACHUNGLOAI, string MAPL, string _DK)
        {
            DataSet ds = new DataSet("CRBCXuatthuoc_RPT");
            string[] s = { "CRBCXuatthuoc_RPT" };
            SqlHelper.FillDataset(SQLConnectionDataNoiT, DatabaseOwner + ObjectQualifier + "spDUOC_BCNHAPTRATHUOCDT ", ds, s, ACCOUNT, _TUNGAYYC, _DENNGAYYC, LOAIPHIEU, MAKHO, MANHOM, MACHUNGLOAI, MAPL, _DK);
            //// ds.WriteXmlSchema("CRBCXuatthuocKhoa_RPT.xsd");
            //  // ds.WriteXmlSchema("CRBCXuatthuocKhoa_RPT.xsd");
            // System.Data.SqlClient.SqlCommand cmd = SqlHelper.CreateCommand(SQLConnectionDataNoiT, DatabaseOwner + ObjectQualifier + "spDUOC_BCNHAPTRATHUOCDT");

            // cmd.CommandTimeout = 18000;
            // cmd.CommandType = System.Data.CommandType.StoredProcedure;
            // cmd.Parameters.AddWithValue("ACCOUNT", ACCOUNT);
            // cmd.Parameters.AddWithValue("TUNGAY", _TUNGAYYC);
            // cmd.Parameters.AddWithValue("DENNGAY", _DENNGAYYC);
            // cmd.Parameters.AddWithValue("LOAIPHIEU", LOAIPHIEU);
            // cmd.Parameters.AddWithValue("MAKHO", MAKHO);
            // cmd.Parameters.AddWithValue("MADT", MADT);
            // cmd.Parameters.AddWithValue("MANHOM", MANHOM);
            // cmd.Parameters.AddWithValue("MACHUNGLOAI", MACHUNGLOAI);
            // cmd.Parameters.AddWithValue("MAPL", MAPL);
            // cmd.Parameters.AddWithValue("DK", _DK);
            // System.Data.SqlClient.SqlDataAdapter sqlad = new System.Data.SqlClient.SqlDataAdapter(cmd);

            // sqlad.Fill(ds);
            // if (ds.Tables.Count > 0)
            //     //string[] s ={ "" };
            //     ds.Tables[0].TableName = "CRBCXuatthuoc_RPT";
            //sqlad.Dispose(); cmd.Dispose(); sqlad = null;
            // cmd = null;
            // if (SQLConnectionBD.State == System.Data.ConnectionState.Closed)
            //SQLConnectionBD.Close(); SQLConnectionBD.Dispose();
            //if (_sqlConnection.State == System.Data.ConnectionState.Closed)
            {
                //_sqlConnection.Close(); _sqlConnection.Dispose();
                //_sqlConnection = null;
            }
            return ds;

        }

        public override DataSet RptGetInPHIEUXUATTRA(Boolean _qadmin, String _maPXT)
        {
            DataSet ds = new DataSet("CRInPHIEUXUATTRA_RPT");
            string[] s = { "CRInPHIEUXUATTRA_RPT" };
            SqlHelper.FillDataset(SQLConnectionDataNoiT, DatabaseOwner + ObjectQualifier + "spXUATTRA_C_GETALL ", ds, s, _qadmin, _maPXT);
            // // // //// ds.WriteXmlSchema("CRInPHIEUXUATTRA_RPT.xsd");
            // System.Data.SqlClient.SqlCommand cmd = SqlHelper.CreateCommand(SQLConnectionDataNoiT, DatabaseOwner + ObjectQualifier + "spXUATTRA_C_GETALL");

            // cmd.CommandTimeout = 18000;
            // cmd.CommandType = System.Data.CommandType.StoredProcedure;
            // cmd.Parameters.AddWithValue("QADMIN", _qadmin);
            // cmd.Parameters.AddWithValue("maPXT", _maPXT);

            // System.Data.SqlClient.SqlDataAdapter sqlad = new System.Data.SqlClient.SqlDataAdapter(cmd);

            // sqlad.Fill(ds);
            // if (ds.Tables.Count > 0)
            //     //string[] s ={ "" };
            //     ds.Tables[0].TableName = "CRInPHIEUXUATTRA_RPT";
            //sqlad.Dispose(); cmd.Dispose(); sqlad = null;
            // cmd = null;
            //// if (SQLConnectionBD.State == System.Data.ConnectionState.Closed)
            //     //SQLConnectionBD.Close(); SQLConnectionBD.Dispose();
            // //if (_sqlConnection.State == System.Data.ConnectionState.Closed)
            // {
            //     //_sqlConnection.Close(); _sqlConnection.Dispose();
            //     //_sqlConnection = null;
            // } 
            return ds;

        }
        public override DataSet RptBCNXTThuoc_ToanBV(DateTime _tuNgay, DateTime _denNgay, string _maKho, String _MaDT, int _loaiBC, string _maNhom, string _maChungLoai, string _maPL, string _dK)
        {
            DataSet ds = new DataSet("CRBCNXTThuoc_ToanBV_RPT");
            string[] s = { "CRBCNXTThuoc_ToanBV_RPT" };
            SqlHelper.FillDataset(SQLConnectionDataNoiT, DatabaseOwner + ObjectQualifier + "SPDUOC_BCNHAPXUATTON ", ds, s, _tuNgay, _denNgay, _maKho, _loaiBC, _maNhom, _maChungLoai, _maPL, _dK);
            // // // //// ds.WriteXmlSchema("CRBCNXTThuoc_ToanBV_RPT.xsd");
            // System.Data.SqlClient.SqlCommand cmd = SqlHelper.CreateCommand(SQLConnectionDataNoiT, DatabaseOwner + ObjectQualifier + "SPDUOC_BCNHAPXUATTON_TOANBVDT");

            // cmd.CommandTimeout = 18000;
            // cmd.CommandType = System.Data.CommandType.StoredProcedure;
            // cmd.Parameters.AddWithValue("TUNGAY", _tuNgay);
            // cmd.Parameters.AddWithValue("DENNGAY", _denNgay);
            // cmd.Parameters.AddWithValue("MAKHO", _maKho);
            // cmd.Parameters.AddWithValue("MADT", _MaDT);
            // cmd.Parameters.AddWithValue("LOAIBC", _loaiBC);
            // cmd.Parameters.AddWithValue("MANHOM", _maNhom);
            // cmd.Parameters.AddWithValue("MACHUNGLOAI", _maChungLoai);
            // cmd.Parameters.AddWithValue("MAPL", _maPL);
            // cmd.Parameters.AddWithValue("DK", _dK);
            // System.Data.SqlClient.SqlDataAdapter sqlad = new System.Data.SqlClient.SqlDataAdapter(cmd);

            // sqlad.Fill(ds);
            // if (ds.Tables.Count > 0)
            //     //string[] s ={ "" };
            //     ds.Tables[0].TableName = "CRBCNXTThuoc_ToanBV_RPT";
            //sqlad.Dispose(); cmd.Dispose(); sqlad = null;
            // cmd = null;
            // if (SQLConnectionBD.State == System.Data.ConnectionState.Closed)
            //SQLConnectionBD.Close(); SQLConnectionBD.Dispose();
            //if (_sqlConnection.State == System.Data.ConnectionState.Closed)
            {
                //_sqlConnection.Close(); _sqlConnection.Dispose();
                //_sqlConnection = null;
            }
            return ds;

        }

        public override DataSet crPhieuDTNhap_C_BN(String _MaKho, String _MaDT, String _MAKHOA, Byte _Loai, String _dk)
        {
            DataSet ds = new DataSet();
            string[] s = { "crPhieuNhapTra_C_BN" };
            SqlHelper.FillDataset(SQLConnectionDataNoiT, DatabaseOwner + ObjectQualifier + "spNhapTra_C_BN", ds, s, _MaKho, _MaDT, _MAKHOA, _Loai, _dk);
            ////ds.WriteXmlSchema("crPhieuNhapTra_C_BN.xsd");
            return ds;
        }
        public override DataSet crPhieuNhap_C_GetAll(Boolean _qadmin, String _maPN)
        {
            //string[] s ={ "" };
            DataSet ds = new DataSet("crPhieuNhap_C_GetAll");
            string[] s = { "crPhieuNhap_C_GetAll" };
            SqlHelper.FillDataset(SQLConnectionDataNoiT, DatabaseOwner + ObjectQualifier + "spPhieuNhap_C_GETALL", ds, s, _qadmin, _maPN);
            //// ds.WriteXmlSchema("crPhieuNhap_C_GetAll.xsd");
            // System.Data.SqlClient.SqlCommand cmd = SqlHelper.CreateCommand(SQLConnectionDataNoiT, DatabaseOwner + ObjectQualifier + "spPhieuNhap_C_GETALL");

            // cmd.CommandTimeout = 18000;
            // cmd.CommandType = System.Data.CommandType.StoredProcedure;
            // cmd.Parameters.AddWithValue("QADMIN", _qadmin);
            // cmd.Parameters.AddWithValue("maPN", _maPN);

            // System.Data.SqlClient.SqlDataAdapter sqlad = new System.Data.SqlClient.SqlDataAdapter(cmd);

            // sqlad.Fill(ds);
            // if (ds.Tables.Count > 0)
            //     //string[] s ={ "" };
            //     ds.Tables[0].TableName = "crPhieuNhap_C_GetAll";
            //sqlad.Dispose(); cmd.Dispose(); sqlad = null;
            // cmd = null;
            // if (SQLConnectionBD.State == System.Data.ConnectionState.Closed)
            //SQLConnectionBD.Close(); SQLConnectionBD.Dispose();
            //if (_sqlConnection.State == System.Data.ConnectionState.Closed)
            {
                //_sqlConnection.Close(); _sqlConnection.Dispose();
                //_sqlConnection = null;
            }
            return ds;

        }
        public override DataSet crTonKhoa_GetAll(DateTime _thang, String _maKhoa, String _dK)
        {
            DataSet ds = new DataSet("crTonKhoa_GetAll");
            string[] s = { "crTonKhoa_GetAll" };
            SqlHelper.FillDataset(SQLConnectionDataNoiT, DatabaseOwner + ObjectQualifier + "spTonkhoa_GetAll", ds, s, _thang, _maKhoa, _dK);
            // // // //// ds.WriteXmlSchema("crTonKhoa_GetAll.xsd");
            // System.Data.SqlClient.SqlCommand cmd = SqlHelper.CreateCommand(SQLConnectionDataNoiT, DatabaseOwner + ObjectQualifier + "spTonkhoa_GetAll");

            // cmd.CommandTimeout = 18000;
            // cmd.CommandType = System.Data.CommandType.StoredProcedure;
            // cmd.Parameters.AddWithValue("THANG", _thang);
            // cmd.Parameters.AddWithValue("MAKHOA", _maKhoa);
            // cmd.Parameters.AddWithValue("dk", _dK);

            // System.Data.SqlClient.SqlDataAdapter sqlad = new System.Data.SqlClient.SqlDataAdapter(cmd);

            // sqlad.Fill(ds);
            // if (ds.Tables.Count > 0)
            //     ds.Tables[0].TableName = "crTonKhoa_GetAll";
            //sqlad.Dispose(); cmd.Dispose(); sqlad = null;
            // cmd = null;
            // if (SQLConnectionBD.State == System.Data.ConnectionState.Closed)
            //SQLConnectionBD.Close(); SQLConnectionBD.Dispose();
            //if (_sqlConnection.State == System.Data.ConnectionState.Closed)
            {
                //_sqlConnection.Close(); _sqlConnection.Dispose();
                //_sqlConnection = null;
            }
            return ds;

        }
        public override DataSet crPhieuXuat_C_GetAll(Boolean _qadmin, String _maPX)
        {
            DataSet ds = new DataSet("crPhieuXuat_C_GetAll");
            string[] s = { "crPhieuXuat_C_GetAll" };
            SqlHelper.FillDataset(SQLConnectionDataNoiT, DatabaseOwner + ObjectQualifier + "spPHIEUXUAT_C_GETALL", ds, s, _qadmin, _maPX);
            // // // //// ds.WriteXmlSchema("crPhieuXuat_C_GetAll.xsd");
            // System.Data.SqlClient.SqlCommand cmd = SqlHelper.CreateCommand(SQLConnectionDataNoiT, DatabaseOwner + ObjectQualifier + "spPHIEUXUAT_C_GETALL");

            // cmd.CommandTimeout = 18000;
            // cmd.CommandType = System.Data.CommandType.StoredProcedure;
            // cmd.Parameters.AddWithValue("QADMIN", _qadmin);
            // cmd.Parameters.AddWithValue("maPX", _maPX);

            // System.Data.SqlClient.SqlDataAdapter sqlad = new System.Data.SqlClient.SqlDataAdapter(cmd);

            // sqlad.Fill(ds);
            // if (ds.Tables.Count > 0)
            //     ds.Tables[0].TableName = "crPhieuXuat_C_GetAll";
            //sqlad.Dispose(); cmd.Dispose(); sqlad = null;
            // cmd = null;
            // if (SQLConnectionBD.State == System.Data.ConnectionState.Closed)
            //SQLConnectionBD.Close(); SQLConnectionBD.Dispose();
            //if (_sqlConnection.State == System.Data.ConnectionState.Closed)
            {
                //_sqlConnection.Close(); _sqlConnection.Dispose();
                //_sqlConnection = null;
            }
            return ds;

        }
        public override DataSet crKiemKe(String _maKK, Boolean _qadmin)
        {
            DataSet ds = new DataSet("crKiemKe");
            string[] s = { "crKiemKe" };
            SqlHelper.FillDataset(SQLConnectionDataNoiT, DatabaseOwner + ObjectQualifier + "spKIEMKE_HD_GETALL", ds, s, _maKK, _qadmin);
            // // // //// ds.WriteXmlSchema("crKiemKe.xsd");
            // System.Data.SqlClient.SqlCommand cmd = SqlHelper.CreateCommand(SQLConnectionDataNoiT, DatabaseOwner + ObjectQualifier + "spKIEMKE_HD_GETALL");

            // cmd.CommandTimeout = 18000;
            // cmd.CommandType = System.Data.CommandType.StoredProcedure;
            // cmd.Parameters.AddWithValue("QADMIN", _qadmin);
            // cmd.Parameters.AddWithValue("MaKK", _maKK);

            // System.Data.SqlClient.SqlDataAdapter sqlad = new System.Data.SqlClient.SqlDataAdapter(cmd);

            // sqlad.Fill(ds);
            // if (ds.Tables.Count > 0)
            //     ds.Tables[0].TableName = "crKiemKe";
            //sqlad.Dispose(); cmd.Dispose(); sqlad = null;
            // cmd = null;
            // if (SQLConnectionBD.State == System.Data.ConnectionState.Closed)
            //SQLConnectionBD.Close(); SQLConnectionBD.Dispose();
            //if (_sqlConnection.State == System.Data.ConnectionState.Closed)
            {
                //_sqlConnection.Close(); _sqlConnection.Dispose();
                //_sqlConnection = null;
            }
            return ds;

        }
        public override DataSet crKiemKe_HoiDong(String _maPhieu, Boolean _qadmin, Byte _loai)
        {
            DataSet ds = new DataSet();
            string[] s = { "crKiemKe_HoiDong" };
            SqlHelper.FillDataset(SQLConnectionDataNoiT, DatabaseOwner + ObjectQualifier + "spKIEMNHAP_GETALL", ds, s, _maPhieu, _qadmin, _loai);
            // // // //// ds.WriteXmlSchema("crKiemKe_HoiDong.xsd");
            // System.Data.SqlClient.SqlCommand cmd = SqlHelper.CreateCommand(SQLConnectionDataNoiT, DatabaseOwner + ObjectQualifier + "spKIEMNHAP_GETALL");

            // cmd.CommandTimeout = 18000;
            // cmd.CommandType = System.Data.CommandType.StoredProcedure;
            // cmd.Parameters.AddWithValue("MaPhieu", _maPhieu);
            // cmd.Parameters.AddWithValue("QADMIN", _qadmin);
            // cmd.Parameters.AddWithValue("LOAI", _loai);

            // System.Data.SqlClient.SqlDataAdapter sqlad = new System.Data.SqlClient.SqlDataAdapter(cmd);

            // sqlad.Fill(ds);
            // if (ds.Tables.Count > 0)
            //     ds.Tables[0].TableName = "crKiemKe_HoiDong";
            //sqlad.Dispose(); cmd.Dispose(); sqlad = null;
            // cmd = null;
            // if (SQLConnectionBD.State == System.Data.ConnectionState.Closed)
            //SQLConnectionBD.Close(); SQLConnectionBD.Dispose();
            //if (_sqlConnection.State == System.Data.ConnectionState.Closed)
            {
                //_sqlConnection.Close(); _sqlConnection.Dispose();
                //_sqlConnection = null;
            }
            return ds;

        }
        public override DataSet crPhieuDoiThuoc_C_GetAll(Boolean _qadmin, String _maDThuoc)
        {
            DataSet ds = new DataSet("crPhieuDoiThuoc_C_GetAll");
            string[] s = { "crPhieuDoiThuoc_C_GetAll" };
            SqlHelper.FillDataset(SQLConnectionDataNoiT, DatabaseOwner + ObjectQualifier + "spPhieuDoiThuoc_C_GETALL", ds, s, _qadmin, _maDThuoc);
            //// // // //// ds.WriteXmlSchema("crPhieuDoiThuoc_C_GetAll.xsd");
            // System.Data.SqlClient.SqlCommand cmd = SqlHelper.CreateCommand(SQLConnectionDataNoiT, DatabaseOwner + ObjectQualifier + "spPhieuDoiThuoc_C_GETALL");

            // cmd.CommandTimeout = 18000;
            // cmd.CommandType = System.Data.CommandType.StoredProcedure;
            // cmd.Parameters.AddWithValue("QADMIN", _qadmin);
            // cmd.Parameters.AddWithValue("MaDThuoc", _maDThuoc);

            // System.Data.SqlClient.SqlDataAdapter sqlad = new System.Data.SqlClient.SqlDataAdapter(cmd);

            // sqlad.Fill(ds);
            // if (ds.Tables.Count > 0)
            //     ds.Tables[0].TableName = "crPhieuDoiThuoc_C_GetAll";
            //sqlad.Dispose(); cmd.Dispose(); sqlad = null;
            // cmd = null;
            //// if (SQLConnectionBD.State == System.Data.ConnectionState.Closed)
            //     //SQLConnectionBD.Close(); SQLConnectionBD.Dispose();
            // //if (_sqlConnection.State == System.Data.ConnectionState.Closed)
            // {
            //     //_sqlConnection.Close(); _sqlConnection.Dispose();
            //     //_sqlConnection = null;
            // } 
            return ds;

        }
        public override DataSet crPhieuNhapTra_C_GetAll(Boolean _qadmin, String _maPNT)
        {
            DataSet ds = new DataSet("crPhieuNhapTra_C_GetAll");
            string[] s = { "crPhieuNhapTra_C_GetAll" };
            SqlHelper.FillDataset(SQLConnectionDataNoiT, DatabaseOwner + ObjectQualifier + "spNHAPTRA_C_GETALL", ds, s, _qadmin, _maPNT);
            // // // //// ds.WriteXmlSchema("crPhieuNhapTra_C_GetAll.xsd");
            // System.Data.SqlClient.SqlCommand cmd = SqlHelper.CreateCommand(SQLConnectionDataNoiT, DatabaseOwner + ObjectQualifier + "spNHAPTRA_C_GETALL");

            // cmd.CommandTimeout = 18000;
            // cmd.CommandType = System.Data.CommandType.StoredProcedure;
            // cmd.Parameters.AddWithValue("QADMIN", _qadmin);
            // cmd.Parameters.AddWithValue("MAPNT", _maPNT);

            // System.Data.SqlClient.SqlDataAdapter sqlad = new System.Data.SqlClient.SqlDataAdapter(cmd);

            // sqlad.Fill(ds);
            // if (ds.Tables.Count > 0)
            //     ds.Tables[0].TableName = "crPhieuNhapTra_C_GetAll";
            //sqlad.Dispose(); cmd.Dispose(); sqlad = null;
            // cmd = null;
            // if (SQLConnectionBD.State == System.Data.ConnectionState.Closed)
            //SQLConnectionBD.Close(); SQLConnectionBD.Dispose();
            //if (_sqlConnection.State == System.Data.ConnectionState.Closed)
            {
                //_sqlConnection.Close(); _sqlConnection.Dispose();
                //_sqlConnection = null;
            }
            //ds.WriteXmlSchema("c://tem//crPhieuNhapTra_C_BN.xsd");
            return ds;

        }
        public override DataSet crPhieuNhap_HDC_GetAll(string _dk)
        {
            //string[] s ={ "" };
            DataSet ds = new DataSet("CRPhieuNhap_HDC");
            string[] s = { "CRPhieuNhap_HDC" };
            SqlHelper.FillDataset(SQLConnectionDataNoiT, DatabaseOwner + ObjectQualifier + "spPhieuNhap_HDC_GETALL", ds, s, _dk);
            //// ds.WriteXmlSchema("crPhieuNhap_C_GetAll.xsd");
            //System.Data.SqlClient.SqlCommand cmd = SqlHelper.CreateCommand(SQLConnectionDataNoiT, DatabaseOwner + ObjectQualifier + "spPhieuNhap_HDC_GETALL");

            //cmd.CommandTimeout = 18000;
            //cmd.CommandType = System.Data.CommandType.StoredProcedure;
            //cmd.Parameters.AddWithValue("dk", _dk);

            //System.Data.SqlClient.SqlDataAdapter sqlad = new System.Data.SqlClient.SqlDataAdapter(cmd);

            //sqlad.Fill(ds);
            if (ds.Tables.Count > 0)
                //string[] s ={ "" };
                ds.Tables[0].TableName = "CRPhieuNhap_HDC";
            //sqlad = null;
            //cmd = null; 
            return ds;

        }
        public override DataSet CRDUOC_BCPhieuNhap(String _MaKho, string _MaNCC, DateTime _tuNgay, DateTime _denNgay, string _dk, byte _loai, Boolean _qadmin)
        {
            DataSet ds = new DataSet();
            string[] s = { "CRDUOC_BCPhieuNhap" };
            SqlHelper.FillDataset(SQLConnectionDataNoiT, DatabaseOwner + ObjectQualifier + "SPDUOC_BCPhieuNhap", ds, s, _MaKho, _MaNCC, _tuNgay, _denNgay, _dk, _loai);
            // ds.WriteXmlSchema("CRDUOC_BCPhieuNhap.xsd");
            return ds;
        }
        public override DataSet CRDUOC_BCPhieuNhap(String _MaKho, String _MaDT, string _MaNCC, DateTime _tuNgay, DateTime _denNgay, string _dk)
        {
            DataSet ds = new DataSet();
            string[] s = { "CRDUOC_BCPhieuNhap" };
            SqlHelper.FillDataset(SQLConnectionDataNoiT, DatabaseOwner + ObjectQualifier + "SPDUOC_BCPhieuNhapDT", ds, s, _MaKho, _MaDT, _MaNCC, _tuNgay, _denNgay, _dk);
            //  // ds.WriteXmlSchema("CRDUOC_BCPhieuNhap.xsd");
            return ds;
        }
        public override DataSet CRHoaChat_BCPhieuNhap(String _MaKho, string _MaNCC, DateTime _tuNgay, DateTime _denNgay, string _dk)
        {
            DataSet ds = new DataSet();
            string[] s = { "CRHoaChat_BCPhieuNhap" };
            SqlHelper.FillDataset(SQLConnectionDataNoiT, DatabaseOwner + ObjectQualifier + "SPHoaChat_BCPhieuNhap", ds, s, _MaKho, _MaNCC, _tuNgay, _denNgay, _dk);
            // ds.WriteXmlSchema("CRHoaChat_BCPhieuNhap.xsd");
            return ds;
        }
        public override DataSet CRVTYT_BCPhieuNhap(String _MaKho, string _MaNCC, DateTime _tuNgay, DateTime _denNgay, string _dk)
        {
            DataSet ds = new DataSet();
            string[] s = { "CRVTYT_BCPhieuNhap" };
            SqlHelper.FillDataset(SQLConnectionDataNoiT, DatabaseOwner + ObjectQualifier + "SPVTYT_BCPhieuNhap", ds, s, _MaKho, _MaNCC, _tuNgay, _denNgay, _dk);
            // ds.WriteXmlSchema("CRVTYT_BCPhieuNhap.xsd");
            return ds;
        }

        public override DataSet crDuoc_BCNhapThuoc(String _account, DateTime _tuNgay, DateTime _denNgay, Byte _loaiPhieu, String _maKho, String _maNhom, String _maChungLoai, String _maPL, String _dK)
        {
            DataSet ds = new DataSet();
            string[] s = { "crDuoc_BCNhapThuoc" };
            SqlHelper.FillDataset(SQLConnectionDataNoiT, DatabaseOwner + ObjectQualifier + "spDUOC_BCNHAPTHUOC", ds, s, _account, _tuNgay, _denNgay, _loaiPhieu, _maKho, _maNhom, _maChungLoai, _maPL, _dK);
            // // ds.WriteXmlSchema("crDuoc_BCNhapThuoc.xsd");
            //System.Data.SqlClient.SqlCommand cmd = SqlHelper.CreateCommand(SQLConnectionBD, DatabaseOwner + ObjectQualifier + "spDUOC_BCNHAPTHUOC");

            //cmd.CommandTimeout = 18000;
            //cmd.CommandType = System.Data.CommandType.StoredProcedure;
            //cmd.Parameters.AddWithValue("ACCOUNT", _account);
            //cmd.Parameters.AddWithValue("TUNGAY", _tuNgay);
            //cmd.Parameters.AddWithValue("DENNGAY", _denNgay);
            //cmd.Parameters.AddWithValue("LOAIPHIEU", _loaiPhieu);
            //cmd.Parameters.AddWithValue("MAKHO", _maKho);
            //cmd.Parameters.AddWithValue("MANHOM", _maNhom);
            //cmd.Parameters.AddWithValue("MACHUNGLOAI", _maChungLoai);
            //cmd.Parameters.AddWithValue("MAPL", _maPL);
            //cmd.Parameters.AddWithValue("DK", _dK);


            //System.Data.SqlClient.SqlDataAdapter sqlad = new System.Data.SqlClient.SqlDataAdapter(cmd);

            //sqlad.Fill(ds);
            // if (ds.Tables.Count > 0)
            //     ds.Tables[0].TableName = "crDuoc_BCNhapThuoc";
            //sqlad.Dispose(); cmd.Dispose(); sqlad = null;
            // cmd = null;
            // if (SQLConnectionBD.State == System.Data.ConnectionState.Closed)
            //SQLConnectionBD.Close(); SQLConnectionBD.Dispose();
            //if (_sqlConnection.State == System.Data.ConnectionState.Closed)
            {
                //_sqlConnection.Close(); _sqlConnection.Dispose();
                //_sqlConnection = null;
            }
            return ds;

        }
        public override DataSet crDuoc_BCNhapThuoc(String _account, DateTime _tuNgay, DateTime _denNgay, Byte _loaiPhieu, String _maKho, String _maDT, String _maNhom, String _maChungLoai, String _maPL, String _dK)
        {
            DataSet ds = new DataSet();
            string[] s = { "crDuoc_BCNhapThuoc" };
            SqlHelper.FillDataset(SQLConnectionDataNoiT, DatabaseOwner + ObjectQualifier + "spDUOC_BCNHAPTHUOC", ds, s, _account, _tuNgay, _denNgay, _loaiPhieu, _maKho, _maDT, _maNhom, _maChungLoai, _maPL, _dK);
            // // // ds.WriteXmlSchema("crDuoc_BCNhapThuoc.xsd");
            // System.Data.SqlClient.SqlCommand cmd = SqlHelper.CreateCommand(SQLConnectionBD, DatabaseOwner + ObjectQualifier + "spDUOC_BCNHAPTHUOCDT");

            // cmd.CommandTimeout = 18000;
            // cmd.CommandType = System.Data.CommandType.StoredProcedure;
            // cmd.Parameters.AddWithValue("ACCOUNT", _account);
            // cmd.Parameters.AddWithValue("TUNGAY", _tuNgay);
            // cmd.Parameters.AddWithValue("DENNGAY", _denNgay);
            // cmd.Parameters.AddWithValue("LOAIPHIEU", _loaiPhieu);
            // cmd.Parameters.AddWithValue("MAKHO", _maKho);
            // cmd.Parameters.AddWithValue("MADT", _maDT);
            // cmd.Parameters.AddWithValue("MANHOM", _maNhom);
            // cmd.Parameters.AddWithValue("MACHUNGLOAI", _maChungLoai);
            // cmd.Parameters.AddWithValue("MAPL", _maPL);
            // cmd.Parameters.AddWithValue("DK", _dK);


            // System.Data.SqlClient.SqlDataAdapter sqlad = new System.Data.SqlClient.SqlDataAdapter(cmd);

            // sqlad.Fill(ds);
            // if (ds.Tables.Count > 0)
            //     ds.Tables[0].TableName = "crDuoc_BCNhapThuoc";
            //sqlad.Dispose(); cmd.Dispose(); sqlad = null;
            // cmd = null;
            // if (SQLConnectionBD.State == System.Data.ConnectionState.Closed)
            //SQLConnectionBD.Close(); SQLConnectionBD.Dispose();
            //if (_sqlConnection.State == System.Data.ConnectionState.Closed)
            {
                //_sqlConnection.Close(); _sqlConnection.Dispose();
                //_sqlConnection = null;
            }
            return ds;

        }
        public override DataSet crDuoc_TheKhoDoc(String _maKho, String _maThuoc, DateTime _tuNgay, DateTime _denNgay)
        {
            DataSet ds = new DataSet("crDuoc_TheKho");
            string[] s = { "crDuoc_TheKho" };
           // SqlHelper.FillDataset(SQLConnectionDataNoiT, DatabaseOwner + ObjectQualifier + "SPDUOC_THEKHODoc", ds, s, _maKho, _maThuoc, _tuNgay, _denNgay);
            // //// ds.WriteXmlSchema("crDuoc_TheKho.xsd");
            System.Data.SqlClient.SqlCommand cmd = SqlHelper.CreateCommand(SQLConnectionBD, DatabaseOwner + ObjectQualifier + "SPDUOC_THEKHO");

            cmd.CommandTimeout = 18000;
            cmd.CommandType = System.Data.CommandType.StoredProcedure;
            cmd.Parameters.AddWithValue("MAKHO", _maKho);
            cmd.Parameters.AddWithValue("MATHUOC", _maThuoc);
            cmd.Parameters.AddWithValue("TUNGAY", _tuNgay);
            cmd.Parameters.AddWithValue("DENNGAY", _denNgay);

            System.Data.SqlClient.SqlDataAdapter sqlad = new System.Data.SqlClient.SqlDataAdapter(cmd);

            sqlad.Fill(ds);
            if (ds.Tables.Count > 0)
                ds.Tables[0].TableName = "crDuoc_TheKho";
            sqlad.Dispose(); cmd.Dispose(); sqlad = null;
            cmd = null;
            // if (SQLConnectionBD.State == System.Data.ConnectionState.Closed)
            //SQLConnectionBD.Close(); SQLConnectionBD.Dispose();
            //if (_sqlConnection.State == System.Data.ConnectionState.Closed)
            {
                //_sqlConnection.Close(); _sqlConnection.Dispose();
                //_sqlConnection = null;
            }
            return ds;

        }
      
        public override DataSet crDuoc_TheKho(String _maKho, String _maThuoc, DateTime _tuNgay, DateTime _denNgay)
        {
            DataSet ds = new DataSet("crDuoc_TheKho");
            string[] s = { "crDuoc_TheKho" };
            SqlHelper.FillDataset(SQLConnectionDataNoiT, DatabaseOwner + ObjectQualifier + "SPDUOC_THEKHO", ds, s, _maKho, _maThuoc, _tuNgay, _denNgay);
            // //// ds.WriteXmlSchema("crDuoc_TheKho.xsd");
            // System.Data.SqlClient.SqlCommand cmd = SqlHelper.CreateCommand(SQLConnectionBD, DatabaseOwner + ObjectQualifier + "SPDUOC_THEKHO");

            // cmd.CommandTimeout = 18000;
            // cmd.CommandType = System.Data.CommandType.StoredProcedure;
            // cmd.Parameters.AddWithValue("MAKHO", _maKho);
            // cmd.Parameters.AddWithValue("MATHUOC", _maThuoc);
            // cmd.Parameters.AddWithValue("TUNGAY", _tuNgay);
            // cmd.Parameters.AddWithValue("DENNGAY", _denNgay);

            // System.Data.SqlClient.SqlDataAdapter sqlad = new System.Data.SqlClient.SqlDataAdapter(cmd);

            // sqlad.Fill(ds);
            // if (ds.Tables.Count > 0)
            //     ds.Tables[0].TableName = "crDuoc_TheKho";
            //sqlad.Dispose(); cmd.Dispose(); sqlad = null;
            // cmd = null;
            // if (SQLConnectionBD.State == System.Data.ConnectionState.Closed)
            //SQLConnectionBD.Close(); SQLConnectionBD.Dispose();
            //if (_sqlConnection.State == System.Data.ConnectionState.Closed)
            {
                //_sqlConnection.Close(); _sqlConnection.Dispose();
                //_sqlConnection = null;
            }
            return ds;

        }
        public override DataSet crDuoc_TheKho(String _maKho, String _MaDT, String _maThuoc, DateTime _tuNgay, DateTime _denNgay)
        {
            DataSet ds = new DataSet("crDuoc_TheKho");
            string[] s = { "crDuoc_TheKho" };
            SqlHelper.FillDataset(SQLConnectionDataNoiT, DatabaseOwner + ObjectQualifier + "SPDUOC_THEKHO", ds, s, _maKho, _MaDT, _maThuoc, _tuNgay, _denNgay);
            // // //// ds.WriteXmlSchema("crDuoc_TheKho.xsd");
            // System.Data.SqlClient.SqlCommand cmd = SqlHelper.CreateCommand(SQLConnectionBD, DatabaseOwner + ObjectQualifier + "SPDUOC_THEKHODT");

            // cmd.CommandTimeout = 18000;
            // cmd.CommandType = System.Data.CommandType.StoredProcedure;
            // cmd.Parameters.AddWithValue("MAKHO", _maKho);
            // cmd.Parameters.AddWithValue("MADT", _MaDT);
            // cmd.Parameters.AddWithValue("MATHUOC", _maThuoc);
            // cmd.Parameters.AddWithValue("TUNGAY", _tuNgay);
            // cmd.Parameters.AddWithValue("DENNGAY", _denNgay);

            // System.Data.SqlClient.SqlDataAdapter sqlad = new System.Data.SqlClient.SqlDataAdapter(cmd);

            // sqlad.Fill(ds);
            // if (ds.Tables.Count > 0)
            //     ds.Tables[0].TableName = "crDuoc_TheKho";
            //sqlad.Dispose(); cmd.Dispose(); sqlad = null;
            // cmd = null;
            // if (SQLConnectionBD.State == System.Data.ConnectionState.Closed)
            //SQLConnectionBD.Close(); SQLConnectionBD.Dispose();
            //if (_sqlConnection.State == System.Data.ConnectionState.Closed)
            {
                //_sqlConnection.Close(); _sqlConnection.Dispose();
                //_sqlConnection = null;
            }
            return ds;

        }


        public override DataSet crPhieuDTNhap_C_GetAll(Boolean _qadmin, String _maDuTru)
        {
            DataSet ds = new DataSet("crPhieuDTNhap_C_GetAll");
            string[] s = { "crPhieuDTNhap_C_GetAll" };
            SqlHelper.FillDataset(SQLConnectionDataNoiT, DatabaseOwner + ObjectQualifier + "spPhieuDTNhap_C_GETALL", ds, s, _qadmin, _maDuTru);
            // // // //// ds.WriteXmlSchema("crPhieuDTNhap_C_GetAll.xsd");
            // System.Data.SqlClient.SqlCommand cmd = SqlHelper.CreateCommand(SQLConnectionBD, DatabaseOwner + ObjectQualifier + "spPhieuDTNhap_C_GETALL");

            // cmd.CommandTimeout = 18000;
            // cmd.CommandType = System.Data.CommandType.StoredProcedure;
            // cmd.Parameters.AddWithValue("QADMIN", _qadmin);
            // cmd.Parameters.AddWithValue("MaDuTru", _maDuTru);


            // System.Data.SqlClient.SqlDataAdapter sqlad = new System.Data.SqlClient.SqlDataAdapter(cmd);

            // sqlad.Fill(ds);
            // if (ds.Tables.Count > 0)
            //     ds.Tables[0].TableName = "crPhieuDTNhap_C_GetAll";
            //sqlad.Dispose(); cmd.Dispose(); sqlad = null;
            // cmd = null;
            // if (SQLConnectionBD.State == System.Data.ConnectionState.Closed)
            //SQLConnectionBD.Close(); SQLConnectionBD.Dispose();
            //if (_sqlConnection.State == System.Data.ConnectionState.Closed)
            {
                //_sqlConnection.Close(); _sqlConnection.Dispose();
                //_sqlConnection = null;
            }
            return ds;

        }
        public override DataSet RptTonKhoTheoHD(DateTime _tuNgay, DateTime _denNgay, string _maKho, int _loaiBC, string _maNhom, string _maChungLoai, string _maPL, string _dK)
        {
            DataSet ds = new DataSet("CRBCTonKhoTheoHD_RPT");
            string[] s = { "CRBCTonKhoTheoHD_RPT" };
            // SqlHelper.FillDataset(ConnectionString, DatabaseOwner + ObjectQualifier + "SPDUOC_BCNHAPXUATTON", ds, s, _tuNgay, _denNgay, _maKho, _loaiBC, _maNhom, _maChungLoai, _maPL, _dK);
            // // // //// ds.WriteXmlSchema("CRBCTonKhoTheoHD_RPT.xsd");
            System.Data.SqlClient.SqlCommand cmd = SqlHelper.CreateCommand(SQLConnectionDataNoiT, DatabaseOwner + ObjectQualifier + "SPDUOC_BCNHAPXUATTON");

            cmd.CommandTimeout = 18000;
            cmd.CommandType = System.Data.CommandType.StoredProcedure;
            cmd.Parameters.AddWithValue("TUNGAY", _tuNgay);
            cmd.Parameters.AddWithValue("DENNGAY", _denNgay);
            cmd.Parameters.AddWithValue("MAKHO", _maKho);
            cmd.Parameters.AddWithValue("LOAIBC", _loaiBC);
            cmd.Parameters.AddWithValue("MANHOM", _maNhom);
            cmd.Parameters.AddWithValue("MACHUNGLOAI", _maChungLoai);
            if (_maPL == null)
                cmd.Parameters.AddWithValue("MAPL", "");
            else
                cmd.Parameters.AddWithValue("MAPL", _maPL);
            cmd.Parameters.AddWithValue("DK", _dK);


            System.Data.SqlClient.SqlDataAdapter sqlad = new System.Data.SqlClient.SqlDataAdapter(cmd);

            sqlad.Fill(ds);
            if (ds.Tables.Count > 0)
                ds.Tables[0].TableName = "CRBCTonKhoTheoHD_RPT";
            //sqlad.Dispose(); cmd.Dispose(); sqlad = null;
            // cmd = null;
            // if (SQLConnectionBD.State == System.Data.ConnectionState.Closed)
            //SQLConnectionBD.Close(); SQLConnectionBD.Dispose();
            //if (_sqlConnection.State == System.Data.ConnectionState.Closed)
            {
                //_sqlConnection.Close(); _sqlConnection.Dispose();
                //_sqlConnection = null;
            }
            return ds;

        }
        public override DataSet RptTonKhoTheoHD(DateTime _tuNgay, DateTime _denNgay, string _maKho, String _MaDT, int _loaiBC, string _maNhom, string _maChungLoai, string _maPL, string _dK)
        {
            DataSet ds = new DataSet("CRBCTonKhoTheoHD_RPT");
            string[] s = { "CRBCTonKhoTheoHD_RPT" };
            SqlHelper.FillDataset(SQLConnectionDataNoiT, DatabaseOwner + ObjectQualifier + "SPDUOC_BCNHAPXUATTON", ds, s, _tuNgay, _denNgay, _maKho, _MaDT, _loaiBC, _maNhom, _maChungLoai, _maPL, _dK);
            // // // //// ds.WriteXmlSchema("CRBCTonKhoTheoHD_RPT.xsd");
            // System.Data.SqlClient.SqlCommand cmd = SqlHelper.CreateCommand(SQLConnectionBD, DatabaseOwner + ObjectQualifier + "SPDUOC_BCNHAPXUATTONDT");

            // cmd.CommandTimeout = 18000;
            // cmd.CommandType = System.Data.CommandType.StoredProcedure;
            // cmd.Parameters.AddWithValue("TUNGAY", _tuNgay);
            // cmd.Parameters.AddWithValue("DENNGAY", _denNgay);
            // cmd.Parameters.AddWithValue("MAKHO", _maKho);
            // cmd.Parameters.AddWithValue("MADT", _MaDT);
            // cmd.Parameters.AddWithValue("LOAIBC", _loaiBC);
            // cmd.Parameters.AddWithValue("MANHOM", _maNhom);
            // cmd.Parameters.AddWithValue("MACHUNGLOAI", _maChungLoai);
            // if (_maPL == null)
            //     cmd.Parameters.AddWithValue("MAPL", "");
            // else
            //     cmd.Parameters.AddWithValue("MAPL", _maPL);
            // cmd.Parameters.AddWithValue("DK", _dK);


            // System.Data.SqlClient.SqlDataAdapter sqlad = new System.Data.SqlClient.SqlDataAdapter(cmd);

            // sqlad.Fill(ds);
            // if (ds.Tables.Count > 0)
            //     ds.Tables[0].TableName = "CRBCTonKhoTheoHD_RPT";
            //sqlad.Dispose(); cmd.Dispose(); sqlad = null;
            // cmd = null;
            // if (SQLConnectionBD.State == System.Data.ConnectionState.Closed)
            //SQLConnectionBD.Close(); SQLConnectionBD.Dispose();
            //if (_sqlConnection.State == System.Data.ConnectionState.Closed)
            {
                //_sqlConnection.Close(); _sqlConnection.Dispose();
                //_sqlConnection = null;
            }
            return ds;

        }

        public override DataSet BCChiTietXuatKhoaPhong(string _ACCOUNT, DateTime _tuNgay, DateTime _denNgay, int _LOAIPHIEU, string _maKho, string _maNhom, string _maChungLoai, string _maPL, string _dK)
        {
            DataSet ds = new DataSet("CRChiTietXuatKhoaPhong_RPt");
            string[] s = { "CRChiTietXuatKhoaPhong_RPt" };
            SqlHelper.FillDataset(SQLConnectionDataNoiT, DatabaseOwner + ObjectQualifier + "spDUOC_BCXUATTHUOC", ds, s, _ACCOUNT, _tuNgay, _denNgay, _LOAIPHIEU, _maKho, _maNhom, _maChungLoai, _maPL, _dK);
            // // //// ds.WriteXmlSchema("CRChiTietXuatKhoaPhong_RPt.xsd");
            // System.Data.SqlClient.SqlCommand cmd = SqlHelper.CreateCommand(SQLConnectionBD, DatabaseOwner + ObjectQualifier + "spDUOC_BCXUATTHUOC");

            // cmd.CommandTimeout = 18000;
            // cmd.CommandType = System.Data.CommandType.StoredProcedure;
            // cmd.Parameters.AddWithValue("ACCOUNT", _ACCOUNT);
            // cmd.Parameters.AddWithValue("TUNGAY", _tuNgay);
            // cmd.Parameters.AddWithValue("DENNGAY", _denNgay);
            // cmd.Parameters.AddWithValue("LOAIPHIEU", _LOAIPHIEU);
            // cmd.Parameters.AddWithValue("MAKHO", _maKho);
            // cmd.Parameters.AddWithValue("MANHOM", _maNhom);
            // cmd.Parameters.AddWithValue("MACHUNGLOAI", _maChungLoai);
            // cmd.Parameters.AddWithValue("MAPL", _maPL);
            // cmd.Parameters.AddWithValue("DK", _dK);


            // System.Data.SqlClient.SqlDataAdapter sqlad = new System.Data.SqlClient.SqlDataAdapter(cmd);

            // sqlad.Fill(ds);
            // if (ds.Tables.Count > 0)
            //     ds.Tables[0].TableName = "CRChiTietXuatKhoaPhong_RPt";
            //sqlad.Dispose(); cmd.Dispose(); sqlad = null;
            // cmd = null;
            // if (SQLConnectionBD.State == System.Data.ConnectionState.Closed)
            //SQLConnectionBD.Close(); SQLConnectionBD.Dispose();
            //if (_sqlConnection.State == System.Data.ConnectionState.Closed)
            {
                //_sqlConnection.Close(); _sqlConnection.Dispose();
                //_sqlConnection = null;
            }
            return ds;

        }
        public override DataSet BCChiTietXuatKhoaPhong(string _ACCOUNT, DateTime _tuNgay, DateTime _denNgay, int _LOAIPHIEU, string _maKho, String MaDT, string _maNhom, string _maChungLoai, string _maPL, string _dK)
        {
            DataSet ds = new DataSet("CRChiTietXuatKhoaPhong_RPt");
            //string[] s = { "CRChiTietXuatKhoaPhong_RPt" };
            //SqlHelper.FillDataset( ConnectionString, DatabaseOwner + ObjectQualifier + "spDUOC_BCXUATTHUOC", ds, s, _ACCOUNT, _tuNgay, _denNgay, _LOAIPHIEU,_maKho, _maNhom, _maChungLoai, _maPL, _dK);
            // // //// ds.WriteXmlSchema("CRChiTietXuatKhoaPhong_RPt.xsd");
            System.Data.SqlClient.SqlCommand cmd = SqlHelper.CreateCommand(SQLConnectionDataNoiT, DatabaseOwner + ObjectQualifier + "spDUOC_BCXUATTHUOCDT");

            cmd.CommandTimeout = 18000;
            cmd.CommandType = System.Data.CommandType.StoredProcedure;
            cmd.Parameters.AddWithValue("ACCOUNT", _ACCOUNT);
            cmd.Parameters.AddWithValue("TUNGAY", _tuNgay);
            cmd.Parameters.AddWithValue("DENNGAY", _denNgay);
            cmd.Parameters.AddWithValue("LOAIPHIEU", _LOAIPHIEU);
            cmd.Parameters.AddWithValue("MAKHO", _maKho);
            cmd.Parameters.AddWithValue("MADT", MaDT);
            cmd.Parameters.AddWithValue("MANHOM", _maNhom);
            cmd.Parameters.AddWithValue("MACHUNGLOAI", _maChungLoai);
            cmd.Parameters.AddWithValue("MAPL", _maPL);
            cmd.Parameters.AddWithValue("DK", _dK);


            System.Data.SqlClient.SqlDataAdapter sqlad = new System.Data.SqlClient.SqlDataAdapter(cmd);

            sqlad.Fill(ds);
            if (ds.Tables.Count > 0)
                ds.Tables[0].TableName = "CRChiTietXuatKhoaPhong_RPt";
            sqlad.Dispose(); cmd.Dispose(); sqlad = null;
            cmd = null;
            // if (SQLConnectionBD.State == System.Data.ConnectionState.Closed)
            //SQLConnectionBD.Close(); SQLConnectionBD.Dispose();
            //if (_sqlConnection.State == System.Data.ConnectionState.Closed)
            {
                //_sqlConnection.Close(); _sqlConnection.Dispose();
                //_sqlConnection = null;
            }
            return ds;

        }

        public override DataSet BCDonThuocDY(string _MAKHOA, DateTime _NGAYDK, string _DK, Boolean _qadmin)
        {
            DataSet ds = new DataSet("CRDonThuocDY_RPT");
            //string[] s = { "CRDonThuocDY_RPT" };                 
            //SqlHelper.FillDataset( ConnectionString, DatabaseOwner + ObjectQualifier + "spBenhan_ThuocSD_DY_GETSDT", ds, s, _MAKHOA, _NGAYDK, _DK, _qadmin);
            //// //// ds.WriteXmlSchema("CRPhieuLinh_DY.xsd");
            System.Data.SqlClient.SqlCommand cmd = SqlHelper.CreateCommand(SQLConnectionDataNoiT, DatabaseOwner + ObjectQualifier + "spBenhan_ThuocSD_DY_GETSDT");

            cmd.CommandTimeout = 18000;
            cmd.CommandType = System.Data.CommandType.StoredProcedure;
            cmd.Parameters.AddWithValue("MAKHOA", _MAKHOA);
            cmd.Parameters.AddWithValue("NGAYDK", _NGAYDK);
            cmd.Parameters.AddWithValue("DK", _DK);
            cmd.Parameters.AddWithValue("QADMIN", _qadmin);
            System.Data.SqlClient.SqlDataAdapter sqlad = new System.Data.SqlClient.SqlDataAdapter(cmd);

            sqlad.Fill(ds);
            if (ds.Tables.Count > 0)
                ds.Tables[0].TableName = "CRDonThuocDY_RPT";
            sqlad.Dispose(); cmd.Dispose(); sqlad = null;
            cmd = null;
            // if (SQLConnectionBD.State == System.Data.ConnectionState.Closed)
            //SQLConnectionBD.Close(); SQLConnectionBD.Dispose();
            //if (_sqlConnection.State == System.Data.ConnectionState.Closed)
            {
                //_sqlConnection.Close(); _sqlConnection.Dispose();
                //_sqlConnection = null;
            }
            return ds;

        }
        public override DataSet crBC_ThuocDY(String TUNGAY, String DENNGAY, String MADT, String MAKHOA, byte lOAIBC, String DK)
        {
            DataSet ds = new DataSet("crBC_ThuocDY");
            //string[] s = { "CRDonThuocDY_RPT" };                 
            //SqlHelper.FillDataset( ConnectionString, DatabaseOwner + ObjectQualifier + "spBenhan_ThuocSD_DY_GETSDT", ds, s, _MAKHOA, _NGAYDK, _DK, _qadmin);
            //// //// ds.WriteXmlSchema("CRPhieuLinh_DY.xsd");
            System.Data.SqlClient.SqlCommand cmd = SqlHelper.CreateCommand(SQLConnectionDataNoiT, DatabaseOwner + ObjectQualifier + "SP_PKTIENTHUOCDY");

            cmd.CommandTimeout = 18000;
            cmd.CommandType = System.Data.CommandType.StoredProcedure;
            cmd.Parameters.AddWithValue("TUNGAY", TUNGAY);
            cmd.Parameters.AddWithValue("DENNGAY", DENNGAY);
            cmd.Parameters.AddWithValue("MADT", MADT);
            cmd.Parameters.AddWithValue("MAKHOA", MAKHOA);
            cmd.Parameters.AddWithValue("lOAIBC", lOAIBC);
            cmd.Parameters.AddWithValue("DK", DK);
            System.Data.SqlClient.SqlDataAdapter sqlad = new System.Data.SqlClient.SqlDataAdapter(cmd);

            sqlad.Fill(ds);
            if (ds.Tables.Count > 0)
                ds.Tables[0].TableName = "crBC_ThuocDY";
            sqlad.Dispose(); cmd.Dispose(); sqlad = null;
            cmd = null;
            // if (SQLConnectionBD.State == System.Data.ConnectionState.Closed)
            //SQLConnectionBD.Close(); SQLConnectionBD.Dispose();
            //if (_sqlConnection.State == System.Data.ConnectionState.Closed)
            {
                //_sqlConnection.Close(); _sqlConnection.Dispose();
                //_sqlConnection = null;
            }
            return ds;

        }
        public override DataSet RptBCNXTThuoc_Quay(DateTime _tuNgay, DateTime _denNgay, string _maKho, String _MaDT, int _loaiBC, string _maNhom, string _maChungLoai, string _maPL, string _dK)
        {
            DataSet ds = new DataSet("CRBCNXTThuoc_Quay_RPT");
            //string[] s = { "CRBCNXTThuoc_C_RPT" };
            //SqlHelper.FillDataset( ConnectionString, DatabaseOwner + ObjectQualifier + "SPDUOC_BCNHAPXUATTONDT", ds, s, _tuNgay, _denNgay, _maKho, _MaDT, _loaiBC, _maNhom, _maChungLoai, _maPL, _dK);
            //ds.WriteXmlSchema("CRBCXuatthuoc_Quay_RPT.xsd");

            System.Data.SqlClient.SqlCommand cmd = SqlHelper.CreateCommand(SQLConnectionDataNoiT, DatabaseOwner + ObjectQualifier + "SPDUOC_BCNHAPXUATTONDT");

            cmd.CommandTimeout = 18000;
            cmd.CommandType = System.Data.CommandType.StoredProcedure;
            cmd.Parameters.AddWithValue("TUNGAY", _tuNgay);
            cmd.Parameters.AddWithValue("DENNGAY", _denNgay);
            cmd.Parameters.AddWithValue("LOAIBC", _loaiBC);
            cmd.Parameters.AddWithValue("MAKHO", _maKho);
            cmd.Parameters.AddWithValue("MADT", _MaDT);
            cmd.Parameters.AddWithValue("MANHOM", _maNhom);
            cmd.Parameters.AddWithValue("MACHUNGLOAI", _maChungLoai);
            cmd.Parameters.AddWithValue("MAPL", _maPL);
            cmd.Parameters.AddWithValue("DK", _dK);
            System.Data.SqlClient.SqlDataAdapter sqlad = new System.Data.SqlClient.SqlDataAdapter(cmd);

            sqlad.Fill(ds);
            if (ds.Tables.Count > 0)
                //string[] s ={ "" };
                ds.Tables[0].TableName = "CRBCNXTThuoc_Quay_RPT";
            //ds.WriteXmlSchema("CRBCXuatthuoc_Quay_RPT.xsd");
            //ds.WriteXml("CRBCXuatthuoc_Quay_RPT1.xsd");
            sqlad.Dispose(); cmd.Dispose(); sqlad = null;
            cmd = null;
            // if (SQLConnectionBD.State == System.Data.ConnectionState.Closed)
            //SQLConnectionBD.Close(); SQLConnectionBD.Dispose();
            //if (_sqlConnection.State == System.Data.ConnectionState.Closed)
            {
                //_sqlConnection.Close(); _sqlConnection.Dispose();
                //_sqlConnection = null;
            }
            return ds;

        }
        public override DataSet CRDuocPhieuLinh_RPTa(DateTime _TUNGAYYC, DateTime _DENNGAYYC, Boolean _Duyet, Boolean _Phat, string _MaDT, string _MaKho, string _MAKHOA, Boolean _DADUNG, string _dk)
        {
            DataSet ds = new DataSet("CRPhieuLinh_RPTa");
            string[] s = { "CRPhieuLinh_RPTa" };
			 // SqlHelper.FillDataset(ConnectionString, DatabaseOwner + ObjectQualifier + "spKhamBenh_ThuocSD_BN_gets", ds, s, _TUNGAYYC, _DENNGAYYC, _Duyet, _Phat, _MaDT, _MaKho, _MAKHOA, _DADUNG, _dk);
			 //ds.WriteXmlSchema("I:\\CRPhieuLinh_DYT.xsd");

            System.Data.SqlClient.SqlCommand cmd = SqlHelper.CreateCommand(SQLConnectionDataNoiT, DatabaseOwner + ObjectQualifier + "spKhamBenh_ThuocSD_BN_gets");

			 cmd.CommandTimeout = 18000;
			 cmd.CommandType = System.Data.CommandType.StoredProcedure;
			 cmd.Parameters.AddWithValue("TuNgay", _TUNGAYYC);
			 cmd.Parameters.AddWithValue("DenNgay", _DENNGAYYC);
			 cmd.Parameters.AddWithValue("Duyet", _Duyet);
			 cmd.Parameters.AddWithValue("Phat", _Phat);
			 cmd.Parameters.AddWithValue("MaDT", _MaDT);
			 cmd.Parameters.AddWithValue("MaKho", _MaKho);
			 cmd.Parameters.AddWithValue("MAKHOA", _MAKHOA);
			 cmd.Parameters.AddWithValue("DADUNG", _DADUNG);
			 cmd.Parameters.AddWithValue("dk", _dk);

			 System.Data.SqlClient.SqlDataAdapter sqlad = new System.Data.SqlClient.SqlDataAdapter(cmd);

			 sqlad.Fill(ds);
			 if (ds.Tables.Count > 0)
				 ds.Tables[0].TableName = "CRPhieuLinh_RPTa";
			 //ds.WriteXmlSchema("I:\\CRPhieuLinh_DYT.xsd");
			 sqlad.Dispose(); cmd.Dispose(); sqlad = null;
			 cmd = null;
			 //if (SQLConnectionBD.State == System.Data.ConnectionState.Closed)
			 //	SQLConnectionBD.Close(); SQLConnectionBD.Dispose();
			 //if (_sqlConnection.State == System.Data.ConnectionState.Closed)
            {
                //_sqlConnection.Close(); _sqlConnection.Dispose();
                //_sqlConnection = null;
            }
            return ds;

        }
        //public override DataSet crBC_ThuocDY(DateTime TUNGAY, DateTime DENNGAY, String MADT, String MAKHOA, byte lOAIBC, String DK)
        //{
        //    DataSet ds = new DataSet("crBC_ThuocDY");
        //    //string[] s = { "CRDonThuocDY_RPT" };                 
        //    //SqlHelper.FillDataset( ConnectionString, DatabaseOwner + ObjectQualifier + "spBenhan_ThuocSD_DY_GETSDT", ds, s, _MAKHOA, _NGAYDK, _DK, _qadmin);
        //    //// //// ds.WriteXmlSchema("CRPhieuLinh_DY.xsd");
        //    System.Data.SqlClient.SqlCommand cmd = SqlHelper.CreateCommand(SQLConnectionBD, DatabaseOwner + ObjectQualifier + "SP_PKTIENTHUOCDY");

        //    cmd.CommandTimeout = 18000;
        //    cmd.CommandType = System.Data.CommandType.StoredProcedure;
        //    cmd.Parameters.AddWithValue("TUNGAY", TUNGAY);
        //    cmd.Parameters.AddWithValue("DENNGAY", DENNGAY);
        //    cmd.Parameters.AddWithValue("MADT", MADT);
        //    cmd.Parameters.AddWithValue("MAKHOA", MAKHOA);
        //    cmd.Parameters.AddWithValue("lOAIBC", lOAIBC);
        //    cmd.Parameters.AddWithValue("DK", DK);
        //    System.Data.SqlClient.SqlDataAdapter sqlad = new System.Data.SqlClient.SqlDataAdapter(cmd);

        //    sqlad.Fill(ds);
        //    if (ds.Tables.Count > 0)
        //        ds.Tables[0].TableName = "crBC_ThuocDY";
        //    sqlad.Dispose(); cmd.Dispose(); sqlad = null;
        //    cmd = null;
        //    // if (SQLConnectionBD.State == System.Data.ConnectionState.Closed)
        //    //SQLConnectionBD.Close(); SQLConnectionBD.Dispose();
        //    //if (_sqlConnection.State == System.Data.ConnectionState.Closed)
        //    {
        //        //_sqlConnection.Close(); _sqlConnection.Dispose();
        //        //_sqlConnection = null;
        //    }
        //    return ds;

        //}
        #endregion

        #region PhongKham

        public override DataSet CRBCTamThuPK_RPT(String MaSoKham, string dk, bool qadmin)
        {
            DataSet ds = new DataSet();
            string[] s = { "CRBCTamThu_RPT" };
            SqlHelper.FillDataset(SQLConnectionData, DatabaseOwner + ObjectQualifier + "spKhamBenh_DongTien_GETAll", ds, s, MaSoKham, dk, qadmin);
            // ds.WriteXmlSchema("CRBCTamThu_RPT.xsd");
            return ds;
        }
        public override DataSet CRSLKeDon(DateTime _TUNGAYYC, DateTime _DENNGAYYC, byte loai, string _dk, Boolean _qadmin)
        {
            DataSet ds = new DataSet("CRSLKeDon");
            //string[] s = { "CRSLKeDon" };
            //SqlHelper.FillDataset(ConnectionString, DatabaseOwner + ObjectQualifier + "spKhambenh_ThuocSD_GETS", ds, s, _TUNGAYYC, _DENNGAYYC, loai, _dk, _qadmin);
            ////// ds.WriteXmlSchema("CRSLKeDon.xsd");
            System.Data.SqlClient.SqlCommand cmd = SqlHelper.CreateCommand(SQLConnectionData, DatabaseOwner + ObjectQualifier + "spKhambenh_ThuocSD_GETS");

            cmd.CommandTimeout = 18000;
            cmd.CommandType = System.Data.CommandType.StoredProcedure;
            cmd.Parameters.AddWithValue("TuNgay", _TUNGAYYC);
            cmd.Parameters.AddWithValue("denNGAY", _DENNGAYYC);
            cmd.Parameters.AddWithValue("LOAI", loai);
            cmd.Parameters.AddWithValue("dk", _dk);
            cmd.Parameters.AddWithValue("QADMIN", _qadmin);
            System.Data.SqlClient.SqlDataAdapter sqlad = new System.Data.SqlClient.SqlDataAdapter(cmd);

            sqlad.Fill(ds);
            if (ds.Tables.Count > 0)
                ds.Tables[0].TableName = "CRSLKeDon";
            sqlad.Dispose(); cmd.Dispose(); sqlad = null;
            cmd = null;
            // if (SQLConnectionBD.State == System.Data.ConnectionState.Closed)
            //SQLConnectionBD.Close(); SQLConnectionBD.Dispose();
            //if (_sqlConnection.State == System.Data.ConnectionState.Closed)
            {
                //_sqlConnection.Close(); _sqlConnection.Dispose();
                //_sqlConnection = null;
            }
            //  // ds.WriteXmlSchema("CRSLKeDon.xsd");
            return ds;

        }
        public override DataSet crBenhAn_DonThuoc_DY(String _maSoKham, int _sttkhoa, String _dK, Boolean _qadmin)
        {
            DataSet ds = new DataSet("crKhamBenh_DonThuoc");
            //string[] s = { "crKhamBenh_DonThuoc" };
            //SqlHelper.FillDataset(ConnectionString, DatabaseOwner + ObjectQualifier + "spBenhAn_ThuocSD_DYC_GETALL", ds, s, _maSoKham,_sttkhoa,0, _dK, _qadmin);
            //// // // //// ds.WriteXmlSchema("crKhamBenh_DonThuoc.xsd");
            System.Data.SqlClient.SqlCommand cmd = SqlHelper.CreateCommand(SQLConnectionDataNoiT, DatabaseOwner + ObjectQualifier + "spBenhAn_ThuocSD_DYC_GETALL");

            cmd.CommandTimeout = 18000;
            cmd.CommandType = System.Data.CommandType.StoredProcedure;
            cmd.Parameters.AddWithValue("MaBA", _maSoKham);
            cmd.Parameters.AddWithValue("STTKhoa", _sttkhoa);
            cmd.Parameters.AddWithValue("STT", 0);
            cmd.Parameters.AddWithValue("dk", _dK);
            cmd.Parameters.AddWithValue("QADMIN", _qadmin);
            System.Data.SqlClient.SqlDataAdapter sqlad = new System.Data.SqlClient.SqlDataAdapter(cmd);

            sqlad.Fill(ds);
            if (ds.Tables.Count > 0)
                ds.Tables[0].TableName = "crKhamBenh_DonThuoc";
            sqlad.Dispose(); cmd.Dispose(); sqlad = null;
            cmd = null;
            // if (SQLConnectionBD.State == System.Data.ConnectionState.Closed)
            //SQLConnectionBD.Close(); SQLConnectionBD.Dispose();
            //if (_sqlConnection.State == System.Data.ConnectionState.Closed)
            {
                //_sqlConnection.Close(); _sqlConnection.Dispose();
                //_sqlConnection = null;
            }
            return ds;

        }

        public override DataSet crKhamBenh_DonThuoc_DY(String _maSoKham, String _dK, Boolean _qadmin)
        {
            DataSet ds = new DataSet("crKhamBenh_DonThuoc");
            //string[] s = { "crKhamBenh_DonThuoc" };
            //SqlHelper.FillDataset(ConnectionString, DatabaseOwner + ObjectQualifier + "spKhambenh_ThuocSD_DYC_GETALL", ds, s, _maSoKham, 0,_dK, _qadmin);
            //// // // //// ds.WriteXmlSchema("crKhamBenh_DonThuoc.xsd");
            System.Data.SqlClient.SqlCommand cmd = SqlHelper.CreateCommand(SQLConnectionData, DatabaseOwner + ObjectQualifier + "spKhambenh_ThuocSD_DYC_GETALL");

            cmd.CommandTimeout = 18000;
            cmd.CommandType = System.Data.CommandType.StoredProcedure;
            cmd.Parameters.AddWithValue("MaSoKham", _maSoKham);
            cmd.Parameters.AddWithValue("STT", 0);
            cmd.Parameters.AddWithValue("dk", _dK);
            cmd.Parameters.AddWithValue("QADMIN", _qadmin);
            System.Data.SqlClient.SqlDataAdapter sqlad = new System.Data.SqlClient.SqlDataAdapter(cmd);

            sqlad.Fill(ds);
            if (ds.Tables.Count > 0)
                ds.Tables[0].TableName = "crKhamBenh_DonThuoc";
            sqlad.Dispose(); cmd.Dispose(); sqlad = null;
            cmd = null;
            // if (SQLConnectionBD.State == System.Data.ConnectionState.Closed)
            //SQLConnectionBD.Close(); SQLConnectionBD.Dispose();
            //if (_sqlConnection.State == System.Data.ConnectionState.Closed)
            {
                //_sqlConnection.Close(); _sqlConnection.Dispose();
                //_sqlConnection = null;
            }
            //ds.WriteXmlSchema("c:\\tem\\crdonthuoc.xsd");
            return ds;

        }

        public override DataSet crKhamBenh_DonThuoc(String _maSoKham, String _dK, Boolean _qadmin)
        {
            DataSet ds = new DataSet("crKhamBenh_DonThuoc");
            //string[] s = { "crKhamBenh_DonThuoc" };
            //SqlHelper.FillDataset(ConnectionString, DatabaseOwner + ObjectQualifier + "spKhambenh_ThuocSD_GETALL", ds, s, _maSoKham, _dK, _qadmin);
            //// // // //// ds.WriteXmlSchema("crKhamBenh_DonThuoc.xsd");
            System.Data.SqlClient.SqlCommand cmd = SqlHelper.CreateCommand(SQLConnectionData, DatabaseOwner + ObjectQualifier + "spKhambenh_ThuocSD_GETALL");

            cmd.CommandTimeout = 18000;
            cmd.CommandType = System.Data.CommandType.StoredProcedure;
            cmd.Parameters.AddWithValue("MaSoKham", _maSoKham);
            cmd.Parameters.AddWithValue("dk", _dK);
            cmd.Parameters.AddWithValue("QADMIN", _qadmin);
            System.Data.SqlClient.SqlDataAdapter sqlad = new System.Data.SqlClient.SqlDataAdapter(cmd);

            sqlad.Fill(ds);
            if (ds.Tables.Count > 0)
                ds.Tables[0].TableName = "crKhamBenh_DonThuoc";
            sqlad.Dispose(); cmd.Dispose(); sqlad = null;
            cmd = null;
            // if (SQLConnectionBD.State == System.Data.ConnectionState.Closed)
            //SQLConnectionBD.Close(); SQLConnectionBD.Dispose();
            //if (_sqlConnection.State == System.Data.ConnectionState.Closed)
            {
                //_sqlConnection.Close(); _sqlConnection.Dispose();
                //_sqlConnection = null;
            }
            return ds;

        }
        public override DataSet crHopDongKB(String _mahd, Boolean _qadmin)
        {
            DataSet ds = new DataSet("crHopDongKB");
            System.Data.SqlClient.SqlCommand cmd = SqlHelper.CreateCommand(SQLConnectionData, DatabaseOwner + ObjectQualifier + "spHopDongKB_BN_Gets");

            cmd.CommandTimeout = 18000;
            cmd.CommandType = System.Data.CommandType.StoredProcedure;
            cmd.Parameters.AddWithValue("MaHD", _mahd);
         
            cmd.Parameters.AddWithValue("QADMIN", _qadmin);
            System.Data.SqlClient.SqlDataAdapter sqlad = new System.Data.SqlClient.SqlDataAdapter(cmd);

            sqlad.Fill(ds);
            if (ds.Tables.Count > 0)
                ds.Tables[0].TableName = "crHopDongKB";
            sqlad.Dispose(); cmd.Dispose(); sqlad = null;
            cmd = null;
            // if (SQLConnectionBD.State == System.Data.ConnectionState.Closed)
            //SQLConnectionBD.Close(); SQLConnectionBD.Dispose();
            //if (_sqlConnection.State == System.Data.ConnectionState.Closed)
            {
                //_sqlConnection.Close(); _sqlConnection.Dispose();
                //_sqlConnection = null;
            }
            return ds;

        }
     
        public override DataSet crKhamBenh_KeNgoai(String _maSoKham, String _dK, Boolean _qadmin)
        {
            DataSet ds = new DataSet("crKhamBenh_DonThuoc");
            //string[] s = { "crKhamBenh_DonThuoc" };
            //SqlHelper.FillDataset(ConnectionString, DatabaseOwner + ObjectQualifier + "spBenhAn_ThuocSD_Ke_GETALL", ds, s, _maSoKham, _dK, _qadmin);
            //// // // //// ds.WriteXmlSchema("crKhamBenh_DonThuoc.xsd");
            System.Data.SqlClient.SqlCommand cmd = SqlHelper.CreateCommand(SQLConnectionData, DatabaseOwner + ObjectQualifier + "spKhamBenh_KeNgoai_GETALL");

            cmd.CommandTimeout = 18000;
            cmd.CommandType = System.Data.CommandType.StoredProcedure;
            cmd.Parameters.AddWithValue("MaSoKham", _maSoKham);
            cmd.Parameters.AddWithValue("dk", _dK);
            cmd.Parameters.AddWithValue("QADMIN", _qadmin);
            System.Data.SqlClient.SqlDataAdapter sqlad = new System.Data.SqlClient.SqlDataAdapter(cmd);

            sqlad.Fill(ds);
            if (ds.Tables.Count > 0)
                ds.Tables[0].TableName = "crKhamBenh_DonThuoc";
            sqlad.Dispose(); cmd.Dispose(); sqlad = null;
            cmd = null;
            // if (SQLConnectionBD.State == System.Data.ConnectionState.Closed)
            //SQLConnectionBD.Close(); SQLConnectionBD.Dispose();
            //if (_sqlConnection.State == System.Data.ConnectionState.Closed)
            {
                //_sqlConnection.Close(); _sqlConnection.Dispose();
                //_sqlConnection = null;
            }
            return ds;

        }
        public override DataSet crBenhAn_KeNgoai(String _maba, String _dK, Boolean _qadmin)
        {
            DataSet ds = new DataSet("crKhamBenh_DonThuoc");
            //string[] s = { "crKhamBenh_DonThuoc" };
            //SqlHelper.FillDataset(ConnectionString, DatabaseOwner + ObjectQualifier + "spBenhAn_ThuocSD_Ke_GETALL", ds, s, _maSoKham, _dK, _qadmin);
            //// // // //// ds.WriteXmlSchema("crKhamBenh_DonThuoc.xsd");
            System.Data.SqlClient.SqlCommand cmd = SqlHelper.CreateCommand(SQLConnectionData, DatabaseOwner + ObjectQualifier + "spBenhAn_KeNgoai_GETALL");

            cmd.CommandTimeout = 18000;
            cmd.CommandType = System.Data.CommandType.StoredProcedure;
            cmd.Parameters.AddWithValue("MaBA", _maba);
            cmd.Parameters.AddWithValue("dk", _dK);
            cmd.Parameters.AddWithValue("QADMIN", _qadmin);
            System.Data.SqlClient.SqlDataAdapter sqlad = new System.Data.SqlClient.SqlDataAdapter(cmd);

            sqlad.Fill(ds);
            if (ds.Tables.Count > 0)
                ds.Tables[0].TableName = "crKhamBenh_DonThuoc";
            sqlad.Dispose(); cmd.Dispose(); sqlad = null;
            cmd = null;
            // if (SQLConnectionBD.State == System.Data.ConnectionState.Closed)
            //SQLConnectionBD.Close(); SQLConnectionBD.Dispose();
            //if (_sqlConnection.State == System.Data.ConnectionState.Closed)
            {
                //_sqlConnection.Close(); _sqlConnection.Dispose();
                //_sqlConnection = null;
            }
            return ds;

        }

        public override DataSet crKhamBenh_DonThuoc_Ke(String _maSoKham, String _dK, Boolean _qadmin)
        {
            DataSet ds = new DataSet("crKhamBenh_DonThuoc");
            //string[] s = { "crKhamBenh_DonThuoc" };
            //SqlHelper.FillDataset(ConnectionString, DatabaseOwner + ObjectQualifier + "spBenhAn_ThuocSD_Ke_GETALL", ds, s, _maSoKham, _dK, _qadmin);
            //// // // //// ds.WriteXmlSchema("crKhamBenh_DonThuoc.xsd");
            System.Data.SqlClient.SqlCommand cmd = SqlHelper.CreateCommand(SQLConnectionData, DatabaseOwner + ObjectQualifier + "spBenhAn_ThuocSD_Ke_GETALL");

            cmd.CommandTimeout = 18000;
            cmd.CommandType = System.Data.CommandType.StoredProcedure;
            cmd.Parameters.AddWithValue("MaBA", _maSoKham);
            cmd.Parameters.AddWithValue("dk", _dK);
            cmd.Parameters.AddWithValue("QADMIN", _qadmin);
            System.Data.SqlClient.SqlDataAdapter sqlad = new System.Data.SqlClient.SqlDataAdapter(cmd);

            sqlad.Fill(ds);
            if (ds.Tables.Count > 0)
                ds.Tables[0].TableName = "crKhamBenh_DonThuoc";
            sqlad.Dispose(); cmd.Dispose(); sqlad = null;
            cmd = null;
            // if (SQLConnectionBD.State == System.Data.ConnectionState.Closed)
            //SQLConnectionBD.Close(); SQLConnectionBD.Dispose();
            //if (_sqlConnection.State == System.Data.ConnectionState.Closed)
            {
                //_sqlConnection.Close(); _sqlConnection.Dispose();
                //_sqlConnection = null;
            }
            return ds;

        }
        public override DataSet crBenhAn_DonThuoc(String _maSoKham, String _dK, Boolean _qadmin)
        {
            DataSet ds = new DataSet("crKhamBenh_DonThuoc");
            //string[] s = { "crKhamBenh_DonThuoc" };
            //SqlHelper.FillDataset(ConnectionString, DatabaseOwner + ObjectQualifier + "spBenhAn_ThuocSD_Ke_GETALL", ds, s, _maSoKham, _dK, _qadmin);
            //// // // //// ds.WriteXmlSchema("crKhamBenh_DonThuoc.xsd");
            System.Data.SqlClient.SqlCommand cmd = SqlHelper.CreateCommand(SQLConnectionData, DatabaseOwner + ObjectQualifier + "spBenhAn_ThuocSD_GETALL");

            cmd.CommandTimeout = 18000;
            cmd.CommandType = System.Data.CommandType.StoredProcedure;
            cmd.Parameters.AddWithValue("MaBA", _maSoKham);
            cmd.Parameters.AddWithValue("dk", _dK);
            cmd.Parameters.AddWithValue("QADMIN", _qadmin);
            System.Data.SqlClient.SqlDataAdapter sqlad = new System.Data.SqlClient.SqlDataAdapter(cmd);

            sqlad.Fill(ds);
            if (ds.Tables.Count > 0)
                ds.Tables[0].TableName = "crKhamBenh_DonThuoc";
            sqlad.Dispose(); cmd.Dispose(); sqlad = null;
            cmd = null;
            // if (SQLConnectionBD.State == System.Data.ConnectionState.Closed)
            //SQLConnectionBD.Close(); SQLConnectionBD.Dispose();
            //if (_sqlConnection.State == System.Data.ConnectionState.Closed)
            {
                //_sqlConnection.Close(); _sqlConnection.Dispose();
                //_sqlConnection = null;
            }
            return ds;

        }

        public override DataSet RptGetBCMienGiamPK(DateTime _TUNGAYYC, DateTime _DENNGAYYC, string _DK)
        {
            DataSet ds = new DataSet("CRInhoadonthanhtoan_BHNT_RPT");

            //string[] s = { "CRInhoadonthanhtoan_BHNT_RPT" };
            //SqlHelper.FillDataset(ConnectionString, DatabaseOwner + ObjectQualifier + "spKHAMBENH_HoaDon_GETAll", ds, s, _TUNGAYYC, _DENNGAYYC,  _DK);
            //// // // //// ds.WriteXmlSchema("CRInhoadonthanhtoan_BHNT.xsd");
            System.Data.SqlClient.SqlCommand cmd = SqlHelper.CreateCommand(SQLConnectionData, DatabaseOwner + ObjectQualifier + "spKHAMBENH_MienGiam_GETAll");

            cmd.CommandTimeout = 18000;
            cmd.CommandType = System.Data.CommandType.StoredProcedure;
            cmd.Parameters.AddWithValue("TuNgay", _TUNGAYYC);
            cmd.Parameters.AddWithValue("DenNgay", _DENNGAYYC);

            cmd.Parameters.AddWithValue("DK", _DK);

            System.Data.SqlClient.SqlDataAdapter sqlad = new System.Data.SqlClient.SqlDataAdapter(cmd);

            sqlad.Fill(ds);
            if (ds.Tables.Count > 0)
                ds.Tables[0].TableName = "CRInhoadonthanhtoan_BHNT_RPT";
            sqlad.Dispose(); cmd.Dispose(); sqlad = null;
            cmd = null;
            //ds.WriteXmlSchema("RptGetBCMienGiamPK.xsd");
            // if (SQLConnectionBD.State == System.Data.ConnectionState.Closed)
            //SQLConnectionBD.Close(); SQLConnectionBD.Dispose();
            //if (_sqlConnection.State == System.Data.ConnectionState.Closed)
            {
                //_sqlConnection.Close(); _sqlConnection.Dispose();
                //_sqlConnection = null;
            }
            return ds;

        }
     public override DataSet RptGetInhoadonthanhtoan_BHNT(DateTime _TUNGAYYC, DateTime _DENNGAYYC, int LOAIPHIEU, byte loaibc, string _DK)
        {
            DataSet ds = new DataSet("CRInhoadonthanhtoan_BHNT_RPT");

            //string[] s = { "CRInhoadonthanhtoan_BHNT_RPT" };
            //SqlHelper.FillDataset(ConnectionString, DatabaseOwner + ObjectQualifier + "spKHAMBENH_HoaDon_GETAll", ds, s, _TUNGAYYC, _DENNGAYYC, LOAIPHIEU, _DK);
            //// // // //// ds.WriteXmlSchema("CRInhoadonthanhtoan_BHNT.xsd");
            System.Data.SqlClient.SqlCommand cmd = SqlHelper.CreateCommand(SQLConnectionDataBC, DatabaseOwner + ObjectQualifier + "spKHAMBENH_HoaDon_GETsHD");

            cmd.CommandTimeout = 18000;
            cmd.CommandType = System.Data.CommandType.StoredProcedure;
            cmd.Parameters.AddWithValue("TuNgay", _TUNGAYYC);
            cmd.Parameters.AddWithValue("DenNgay", _DENNGAYYC);
            cmd.Parameters.AddWithValue("loai", LOAIPHIEU);
            cmd.Parameters.AddWithValue("loaibc", loaibc);
            cmd.Parameters.AddWithValue("DK", _DK);

            System.Data.SqlClient.SqlDataAdapter sqlad = new System.Data.SqlClient.SqlDataAdapter(cmd);

            sqlad.Fill(ds);
            if (ds.Tables.Count > 0)
                ds.Tables[0].TableName = "CRInhoadonthanhtoan_BHNT_RPT";
            sqlad.Dispose(); cmd.Dispose(); sqlad = null;
            cmd = null;
            // if (SQLConnectionBD.State == System.Data.ConnectionState.Closed)
            //SQLConnectionBD.Close(); SQLConnectionBD.Dispose();
            //if (_sqlConnection.State == System.Data.ConnectionState.Closed)
            {
                //_sqlConnection.Close(); _sqlConnection.Dispose();
                //_sqlConnection = null;
            }
            //ds.WriteXmlSchema("CRInhoadonthanhtoan_BHNT.xsd");
            return ds;

        }
        public override DataSet RptGetInhoadonthanhtoan_BHNT(DateTime _TUNGAYYC, DateTime _DENNGAYYC, int LOAIPHIEU, string _DK)
        {
            DataSet ds = new DataSet("CRInhoadonthanhtoan_BHNT_RPT");

            //string[] s = { "CRInhoadonthanhtoan_BHNT_RPT" };
            //SqlHelper.FillDataset(ConnectionString, DatabaseOwner + ObjectQualifier + "spKHAMBENH_HoaDon_GETAll", ds, s, _TUNGAYYC, _DENNGAYYC, LOAIPHIEU, _DK);
            //// // // //// ds.WriteXmlSchema("CRInhoadonthanhtoan_BHNT.xsd");
            System.Data.SqlClient.SqlCommand cmd = SqlHelper.CreateCommand(SQLConnectionData, DatabaseOwner + ObjectQualifier + "spKHAMBENH_HoaDon_GETsHD");

            cmd.CommandTimeout = 18000;
            cmd.CommandType = System.Data.CommandType.StoredProcedure;
            cmd.Parameters.AddWithValue("TuNgay", _TUNGAYYC);
            cmd.Parameters.AddWithValue("DenNgay", _DENNGAYYC);
            cmd.Parameters.AddWithValue("loai", LOAIPHIEU);
            cmd.Parameters.AddWithValue("DK", _DK);

            System.Data.SqlClient.SqlDataAdapter sqlad = new System.Data.SqlClient.SqlDataAdapter(cmd);

            sqlad.Fill(ds);
            if (ds.Tables.Count > 0)
                ds.Tables[0].TableName = "CRInhoadonthanhtoan_BHNT_RPT";
            sqlad.Dispose(); cmd.Dispose(); sqlad = null;
            cmd = null;
            // if (SQLConnectionBD.State == System.Data.ConnectionState.Closed)
            //SQLConnectionBD.Close(); SQLConnectionBD.Dispose();
            //if (_sqlConnection.State == System.Data.ConnectionState.Closed)
            {
                //_sqlConnection.Close(); _sqlConnection.Dispose();
                //_sqlConnection = null;
            }
            //ds.WriteXmlSchema("CRInhoadonthanhtoan_BHNT.xsd");
            return ds;

        }

        public override DataSet CRThuocSDHN(DateTime _TUNGAYYC, DateTime _DENNGAYYC, string _makhoa, string _DK, bool _thuocpm, string _madt, string _khophat, bool _daphat)
        {
            DataSet ds = new DataSet("BenhAn_ThuocSD_BNTH_gets");
            //string[] s1 = { "BenhAn_ThuocSD_BNTH_gets" };
            //SqlHelper.FillDataset(ConnectionString, DatabaseOwner + ObjectQualifier + "spBenhAn_ThuocSD_BNTH_gets", ds, s1, _TUNGAYYC, _DENNGAYYC, _makhoa, _DK, _thuocpm, _madt, _khophat, _daphat);
            System.Data.SqlClient.SqlCommand cmd = SqlHelper.CreateCommand(SQLConnectionDataNoiT, DatabaseOwner + ObjectQualifier + "spBenhAn_ThuocSD_BNTH_gets");

            cmd.CommandTimeout = 18000;
            cmd.CommandType = System.Data.CommandType.StoredProcedure;
            cmd.Parameters.AddWithValue("TuNgay", _TUNGAYYC);
            cmd.Parameters.AddWithValue("DenNgay", _DENNGAYYC);
            cmd.Parameters.AddWithValue("MaKhoA", _makhoa);
            cmd.Parameters.AddWithValue("dk", _DK);
            cmd.Parameters.AddWithValue("thuocPM", _thuocpm);
            cmd.Parameters.AddWithValue("maDT", _madt);
            cmd.Parameters.AddWithValue("khophat", _khophat);
            cmd.Parameters.AddWithValue("daphat", _daphat);
            System.Data.SqlClient.SqlDataAdapter sqlad = new System.Data.SqlClient.SqlDataAdapter(cmd);

            sqlad.Fill(ds);
            if (ds.Tables.Count > 0)
                ds.Tables[0].TableName = "BenhAn_ThuocSD_BNTH_gets";
            sqlad.Dispose(); cmd.Dispose(); sqlad = null;
            cmd = null;
            // if (SQLConnectionBD.State == System.Data.ConnectionState.Closed)
            //SQLConnectionBD.Close(); SQLConnectionBD.Dispose();
            //if (_sqlConnection.State == System.Data.ConnectionState.Closed)
            {
                //_sqlConnection.Close(); _sqlConnection.Dispose();
                //_sqlConnection = null;
            }
            return ds;

        }
        public override DataSet CRVTSDHN(DateTime _TUNGAYYC, DateTime _DENNGAYYC, string _makhoa, string _DK, bool _thuocpm, string _madt, string _khophat, bool _daphat)
        {
            DataSet ds = new DataSet("BenhAn_ThuocSD_BNTH_gets");
            //string[] s1 = { "BenhAn_ThuocSD_BNTH_gets" };
            //SqlHelper.FillDataset(ConnectionString, DatabaseOwner + ObjectQualifier + "spBenhAn_VTTH_BNTH_gets", ds, s1, _TUNGAYYC, _DENNGAYYC, _makhoa, _DK, _thuocpm, _madt, _khophat, _daphat);
            System.Data.SqlClient.SqlCommand cmd = SqlHelper.CreateCommand(SQLConnectionDataNoiT, DatabaseOwner + ObjectQualifier + "spBenhAn_VTTH_BNTH_gets");
            cmd.CommandTimeout = 18000;
            cmd.CommandType = System.Data.CommandType.StoredProcedure;
            cmd.Parameters.AddWithValue("TuNgay", _TUNGAYYC);
            cmd.Parameters.AddWithValue("DenNgay", _DENNGAYYC);
            cmd.Parameters.AddWithValue("MaKhoA", _makhoa);
            cmd.Parameters.AddWithValue("dk", _DK);
            cmd.Parameters.AddWithValue("thuocPM", _thuocpm);
            cmd.Parameters.AddWithValue("maDT", _madt);
            cmd.Parameters.AddWithValue("khophat", _khophat);
            cmd.Parameters.AddWithValue("daphat", _daphat);
            System.Data.SqlClient.SqlDataAdapter sqlad = new System.Data.SqlClient.SqlDataAdapter(cmd);

            sqlad.Fill(ds);
            if (ds.Tables.Count > 0)
                ds.Tables[0].TableName = "BenhAn_ThuocSD_BNTH_gets";
            sqlad.Dispose(); cmd.Dispose(); sqlad = null;
            cmd = null;
            // if (SQLConnectionBD.State == System.Data.ConnectionState.Closed)
            //SQLConnectionBD.Close(); SQLConnectionBD.Dispose();
            //if (_sqlConnection.State == System.Data.ConnectionState.Closed)
            {
                //_sqlConnection.Close(); _sqlConnection.Dispose();
                //_sqlConnection = null;
            }
            return ds;

        }
        public override DataSet CRHCSDHN(DateTime _TUNGAYYC, DateTime _DENNGAYYC, string _makhoa, string _DK, bool _thuocpm, string _madt, string _khophat, bool _daphat)
        {
            DataSet ds = new DataSet("BenhAn_ThuocSD_BNTH_gets");
            //string[] s1 = { "BenhAn_ThuocSD_BNTH_gets" };
            //SqlHelper.FillDataset(ConnectionString, DatabaseOwner + ObjectQualifier + "spBenhAn_HoaChat_BNTH_gets", ds, s1, _TUNGAYYC, _DENNGAYYC, _makhoa, _DK, _thuocpm, _madt, _khophat, _daphat);

            System.Data.SqlClient.SqlCommand cmd = SqlHelper.CreateCommand(SQLConnectionDataNoiT, DatabaseOwner + ObjectQualifier + "spBenhAn_ThuocSD_BNTH_gets");

            cmd.CommandTimeout = 18000;
            cmd.CommandType = System.Data.CommandType.StoredProcedure;
            cmd.Parameters.AddWithValue("TuNgay", _TUNGAYYC);
            cmd.Parameters.AddWithValue("DenNgay", _DENNGAYYC);
            cmd.Parameters.AddWithValue("MaKhoA", _makhoa);
            cmd.Parameters.AddWithValue("dk", _DK);
            cmd.Parameters.AddWithValue("thuocPM", _thuocpm);
            cmd.Parameters.AddWithValue("maDT", _madt);
            cmd.Parameters.AddWithValue("khophat", _khophat);
            cmd.Parameters.AddWithValue("daphat", _daphat);
            System.Data.SqlClient.SqlDataAdapter sqlad = new System.Data.SqlClient.SqlDataAdapter(cmd);

            sqlad.Fill(ds);
            if (ds.Tables.Count > 0)
                ds.Tables[0].TableName = "BenhAn_ThuocSD_BNTH_gets";
            sqlad.Dispose(); cmd.Dispose(); sqlad = null;
            cmd = null;
            // if (SQLConnectionBD.State == System.Data.ConnectionState.Closed)
            //SQLConnectionBD.Close(); SQLConnectionBD.Dispose();
            //if (_sqlConnection.State == System.Data.ConnectionState.Closed)
            {
                //_sqlConnection.Close(); _sqlConnection.Dispose();
                //_sqlConnection = null;
            }
            return ds;

        }
        public override DataSet CRThuThuatHN(DateTime _TUNGAYYC, DateTime _DENNGAYYC, string _makhoa, string _DK, bool _thuocpm, string _madt, string _khophat, bool _daphat)
        {
            DataSet ds = new DataSet("BenhAn_ThuocSD_BNTH_gets");
            // string[] s1 = { "BenhAn_ThuocSD_BNTH_gets" };
            // SqlHelper.FillDataset(ConnectionString, DatabaseOwner + ObjectQualifier + "spBenhAn_vtth_BNTH_gets", ds, s1, _TUNGAYYC, _DENNGAYYC, _makhoa, _DK, _thuocpm, _madt, _khophat, _daphat);
            //// //  // ds.WriteXmlSchema("cr.xsd");

            System.Data.SqlClient.SqlCommand cmd = SqlHelper.CreateCommand(SQLConnectionDataNoiT, DatabaseOwner + ObjectQualifier + "spBenhAn_c_BNTH_gets");

            cmd.CommandTimeout = 18000;
            cmd.CommandType = System.Data.CommandType.StoredProcedure;
            cmd.Parameters.AddWithValue("TuNgay", _TUNGAYYC);
            cmd.Parameters.AddWithValue("DenNgay", _DENNGAYYC);
            cmd.Parameters.AddWithValue("MaKhoA", _makhoa);
            cmd.Parameters.AddWithValue("dk", _DK);
          
            cmd.Parameters.AddWithValue("maDT", _madt);
            
            cmd.Parameters.AddWithValue("daphat", _daphat);
            System.Data.SqlClient.SqlDataAdapter sqlad = new System.Data.SqlClient.SqlDataAdapter(cmd);

            sqlad.Fill(ds);
            if (ds.Tables.Count > 0)
                ds.Tables[0].TableName = "BenhAn_ThuocSD_BNTH_gets";
            sqlad.Dispose(); cmd.Dispose(); sqlad = null;
            cmd = null;
            // if (SQLConnectionBD.State == System.Data.ConnectionState.Closed)
            //SQLConnectionBD.Close(); SQLConnectionBD.Dispose();
            //if (_sqlConnection.State == System.Data.ConnectionState.Closed)
            {
                //_sqlConnection.Close(); _sqlConnection.Dispose();
                //_sqlConnection = null;
            }
            return ds;

        }
        public override DataSet RptGetInphoihoadonthanhtoan_BHNT(Boolean _qadmin, String _maSoKham, Byte _DaTT, byte _loai, String _dK)
        {
            DataSet ds = new DataSet("CRInhoadonthanhtoan_BHNT_RPT");

            //string[] s = { "CRInhoadonthanhtoan_BHNT_RPT" };
            //SqlHelper.FillDataset(ConnectionString, DatabaseOwner + ObjectQualifier + "spKhambenh_GETsBCDICHVU", ds, s, _qadmin, _maSoKham, _DaTT, _loai, _dK);
            //// // // //// ds.WriteXmlSchema("CRInphoihoadonthanhtoan_BHNT_RPT.xsd");
            System.Data.SqlClient.SqlCommand cmd = SqlHelper.CreateCommand(SQLConnectionData, DatabaseOwner + ObjectQualifier + "spKhambenh_GETsBCDICHVU");

            cmd.CommandTimeout = 18000;
            cmd.CommandType = System.Data.CommandType.StoredProcedure;
            cmd.Parameters.AddWithValue("qadmin", _qadmin);
            cmd.Parameters.AddWithValue("MaSoKham", _maSoKham);
            cmd.Parameters.AddWithValue("DaTT", _DaTT);
            cmd.Parameters.AddWithValue("loai", _loai);
            cmd.Parameters.AddWithValue("dk", _dK);

            System.Data.SqlClient.SqlDataAdapter sqlad = new System.Data.SqlClient.SqlDataAdapter(cmd);

            sqlad.Fill(ds);
            if (ds.Tables.Count > 0)
                ds.Tables[0].TableName = "CRInhoadonthanhtoan_BHNT_RPT";
            // ds.WriteXmlSchema("CRInphoihoadonthanhtoan_BHNT_RPT.xsd");
            sqlad.Dispose(); cmd.Dispose(); sqlad = null;
            cmd = null;
            // if (SQLConnectionBD.State == System.Data.ConnectionState.Closed)
            //SQLConnectionBD.Close(); SQLConnectionBD.Dispose();
            //if (_sqlConnection.State == System.Data.ConnectionState.Closed)
            {
                //_sqlConnection.Close(); _sqlConnection.Dispose();
                //_sqlConnection = null;
            }
            return ds;

        }
        public override DataSet RptGetInphoihoadonthanhtoan_BHNT(Boolean _qadmin, String _MaBN, Byte _DaTT, byte _loai, DateTime _TUNGAYYC, DateTime _DENNGAYYC, String _dK)
        {
            DataSet ds = new DataSet("CRInhoadonthanhtoan_BHNT_RPT");

            //string[] s = { "CRInhoadonthanhtoan_BHNT_RPT" };
            //SqlHelper.FillDataset(ConnectionString, DatabaseOwner + ObjectQualifier + "spKhambenh_GETsBCDICHVU", ds, s, _qadmin, _maSoKham, _DaTT, _loai, _dK);
            //// // // //// ds.WriteXmlSchema("CRInphoihoadonthanhtoan_BHNT_RPT.xsd");
            System.Data.SqlClient.SqlCommand cmd = SqlHelper.CreateCommand(SQLConnectionData, DatabaseOwner + ObjectQualifier + "spKhambenh_GETsBCDICHVUNgay");

            cmd.CommandTimeout = 18000;
            cmd.CommandType = System.Data.CommandType.StoredProcedure;
            cmd.Parameters.AddWithValue("qadmin", _qadmin);
            cmd.Parameters.AddWithValue("MaBN", _MaBN);
            cmd.Parameters.AddWithValue("DaTT", _DaTT);
            cmd.Parameters.AddWithValue("loai", _loai);
            cmd.Parameters.AddWithValue("TuNgay", _TUNGAYYC);
            cmd.Parameters.AddWithValue("DenNgay", _DENNGAYYC);

            cmd.Parameters.AddWithValue("dk", _dK);

            System.Data.SqlClient.SqlDataAdapter sqlad = new System.Data.SqlClient.SqlDataAdapter(cmd);

            sqlad.Fill(ds);
            if (ds.Tables.Count > 0)
                ds.Tables[0].TableName = "CRInhoadonthanhtoan_BHNT_RPT";
            // ds.WriteXmlSchema("CRInphoihoadonthanhtoan_BHNT_RPT.xsd");
            sqlad.Dispose(); cmd.Dispose(); sqlad = null;
            cmd = null;
            // if (SQLConnectionBD.State == System.Data.ConnectionState.Closed)
            //SQLConnectionBD.Close(); SQLConnectionBD.Dispose();
            //if (_sqlConnection.State == System.Data.ConnectionState.Closed)
            {
                //_sqlConnection.Close(); _sqlConnection.Dispose();
                //_sqlConnection = null;
            }
            return ds;

        }
        public override DataSet RptGetBenhan_ChiDinh(DateTime _TUNGAYYC, DateTime _DENNGAYYC, string _makhoa, string _DK, string _madt, bool _daphat)
        {
            DataSet ds = new DataSet("crKhambenh_PhieuThu_RPT");
            //string[] s = { "crKhambenh_PhieuThu_RPT" };
            //SqlHelper.FillDataset(ConnectionString, DatabaseOwner + ObjectQualifier + "spBenhAn_C_BNTH_gets", ds, s, _TUNGAYYC, _DENNGAYYC, _makhoa, _DK, _madt, _daphat);
            ////////// ds.WriteXmlSchema("crKhambenh_PhieuThu_RPT.xsd");
            System.Data.SqlClient.SqlCommand cmd = SqlHelper.CreateCommand(SQLConnectionDataNoiT, DatabaseOwner + ObjectQualifier + "spBenhAn_C_BNTH_gets");

            cmd.CommandTimeout = 18000;
            cmd.CommandType = System.Data.CommandType.StoredProcedure;
            cmd.Parameters.AddWithValue("TuNgay", _TUNGAYYC);
            cmd.Parameters.AddWithValue("DenNgay", _DENNGAYYC);
            cmd.Parameters.AddWithValue("MaKhoA", _makhoa);
            cmd.Parameters.AddWithValue("dk", _DK);
            cmd.Parameters.AddWithValue("maDT", _madt);
            cmd.Parameters.AddWithValue("daphat", _daphat);
            System.Data.SqlClient.SqlDataAdapter sqlad = new System.Data.SqlClient.SqlDataAdapter(cmd);

            sqlad.Fill(ds);
            if (ds.Tables.Count > 0)
                ds.Tables[0].TableName = "crKhambenh_PhieuThu_RPT";
            sqlad.Dispose(); cmd.Dispose(); sqlad = null;
            cmd = null;
            // ds.WriteXmlSchema("crKhambenh_PhieuThu_RPT.xsd");
            // if (SQLConnectionBD.State == System.Data.ConnectionState.Closed)
            //SQLConnectionBD.Close(); SQLConnectionBD.Dispose();
            //if (_sqlConnection.State == System.Data.ConnectionState.Closed)
            {
                //_sqlConnection.Close(); _sqlConnection.Dispose();
                //_sqlConnection = null;
            }
            return ds;

        }

        public override DataSet RptGetKhambenh_PhieuThu(Boolean _qadmin, String _maSoKham, Byte _DaTT, byte _loai, String _dK)
        {
            DataSet ds = new DataSet("crKhambenh_PhieuThu_RPT");
            //string[] s = { "crKhambenh_PhieuThu_RPT" };
            //SqlHelper.FillDataset(ConnectionString, DatabaseOwner + ObjectQualifier + "spKhambenh_GETsDICHVU", ds, s, _qadmin, _maSoKham, _DaTT, _loai, _dK);
            ////////// ds.WriteXmlSchema("crKhambenh_PhieuThu_RPT.xsd");
            System.Data.SqlClient.SqlCommand cmd = SqlHelper.CreateCommand(SQLConnectionData, DatabaseOwner + ObjectQualifier + "spKhambenh_GETsDICHVU");

            cmd.CommandTimeout = 18000;
            cmd.CommandType = System.Data.CommandType.StoredProcedure;
            cmd.Parameters.AddWithValue("qadmin", _qadmin);
            cmd.Parameters.AddWithValue("MaSoKham", _maSoKham);
            cmd.Parameters.AddWithValue("DaTT", _DaTT);
            cmd.Parameters.AddWithValue("loai", _loai);
            cmd.Parameters.AddWithValue("dk", _dK);

            System.Data.SqlClient.SqlDataAdapter sqlad = new System.Data.SqlClient.SqlDataAdapter(cmd);

            sqlad.Fill(ds);
            if (ds.Tables.Count > 0)
                ds.Tables[0].TableName = "crKhambenh_PhieuThu_RPT";
            sqlad.Dispose(); cmd.Dispose(); sqlad = null;
            cmd = null;
            // if (SQLConnectionBD.State == System.Data.ConnectionState.Closed)
            //SQLConnectionBD.Close(); SQLConnectionBD.Dispose();
            //if (_sqlConnection.State == System.Data.ConnectionState.Closed)
            {
                //_sqlConnection.Close(); _sqlConnection.Dispose();
                //_sqlConnection = null;
            }
            return ds;

        }

        public override DataSet RptGetKhambenh_ChiDinhBS(Boolean _qadmin, String _maSoKham, Byte _DaTT, byte _loai, String _dK)
        {
            DataSet ds = new DataSet("crKhambenh_PhieuThu_RPT");
            //string[] s = { "crKhambenh_PhieuThu_RPT" };
            //SqlHelper.FillDataset(ConnectionString, DatabaseOwner + ObjectQualifier + "spKhambenh_GETsDICHVUCD", ds, s, _qadmin, _maSoKham, _DaTT, _loai, _dK);
            //// // // //// ds.WriteXmlSchema("crKhambenh_PhieuThu_RPT.xsd");
            System.Data.SqlClient.SqlCommand cmd = SqlHelper.CreateCommand(SQLConnectionData, DatabaseOwner + ObjectQualifier + "spKhambenh_GETsDICHVUCd");

            cmd.CommandTimeout = 18000;
            cmd.CommandType = System.Data.CommandType.StoredProcedure;
            cmd.Parameters.AddWithValue("qadmin", _qadmin);
            cmd.Parameters.AddWithValue("MaSoKham", _maSoKham);
            cmd.Parameters.AddWithValue("DaTT", _DaTT);
            cmd.Parameters.AddWithValue("loai", _loai);
            cmd.Parameters.AddWithValue("dk", _dK);

            System.Data.SqlClient.SqlDataAdapter sqlad = new System.Data.SqlClient.SqlDataAdapter(cmd);

            sqlad.Fill(ds);
            if (ds.Tables.Count > 0)
                ds.Tables[0].TableName = "crKhambenh_PhieuThu_RPT";
            sqlad.Dispose(); cmd.Dispose(); sqlad = null;
            // cmd = null;
            // if (SQLConnectionBD.State == System.Data.ConnectionState.Closed)
            //SQLConnectionBD.Close(); SQLConnectionBD.Dispose();
            //if (_sqlConnection.State == System.Data.ConnectionState.Closed)
            {
                //_sqlConnection.Close(); _sqlConnection.Dispose();
                //_sqlConnection = null;
            }
            return ds;

        }
        public override DataSet RptGetKhambenh_VP(DateTime _TUNGAYYC, DateTime _DENNGAYYC, String _maDT, byte _loai, string _noitt, string _loaiphieu, String _dK)
        {
            DataSet ds = new DataSet("KhamBenh");
            //string[] s = { "CRBCKhamBenh_VP_RPT" };
            //SqlHelper.FillDataset(ConnectionString, DatabaseOwner + ObjectQualifier + "spBCKhambenh_VP", ds, s, _TUNGAYYC, _DENNGAYYC, _maDT, _loai, _dK);
            //////// // //// ds.WriteXmlSchema("CRBCKhamBenh_VP.xsd");
            System.Data.SqlClient.SqlConnection _connectionserver = new System.Data.SqlClient.SqlConnection(_connectionStringBC);
            _connectionserver.Open();
            System.Data.SqlClient.SqlCommand cmd = SqlHelper.CreateCommand(_connectionserver, DatabaseOwner + ObjectQualifier + "spBCKhambenh_VP");

            cmd.CommandTimeout = 18000;
            cmd.CommandType = System.Data.CommandType.StoredProcedure;
            cmd.Parameters.AddWithValue("TUNGAY", _TUNGAYYC);
            cmd.Parameters.AddWithValue("DENNGAY", _DENNGAYYC);
            cmd.Parameters.AddWithValue("MADT", _maDT);
            cmd.Parameters.AddWithValue("LOAIBC", _loai);
            cmd.Parameters.AddWithValue("noitt", _noitt);
            cmd.Parameters.AddWithValue("loaiphieu", _loaiphieu);
            cmd.Parameters.AddWithValue("dk", _dK);

            System.Data.SqlClient.SqlDataAdapter sqlad = new System.Data.SqlClient.SqlDataAdapter(cmd);

            sqlad.Fill(ds);
            if (ds.Tables.Count > 0)
                ds.Tables[0].TableName = "CRBCKhamBenh_VP_RPT";
            sqlad.Dispose(); cmd.Dispose(); sqlad = null;
            cmd = null;
            _connectionserver.Close();
            _connectionserver = null;
            // if (SQLConnectionBD.State == System.Data.ConnectionState.Closed)
            //SQLConnectionBD.Close(); SQLConnectionBD.Dispose();
            //if (_sqlConnection.State == System.Data.ConnectionState.Closed)
            {
                //_sqlConnection.Close(); _sqlConnection.Dispose();
                //_sqlConnection = null;
            }
            return ds;

        }
        public override DataSet RptGetTienThu_VP(DateTime _TUNGAYYC, DateTime _DENNGAYYC, byte _loai, String _dK)
        {
            DataSet ds = new DataSet("spBCTienThu_VP");
            //string[] s = { "spBCTienThu_VP" };
            //SqlHelper.FillDataset(ConnectionString, DatabaseOwner + ObjectQualifier + "spBCTienThu_VP", ds, s, _TUNGAYYC, _DENNGAYYC, _loai, _dK);
            ////// // //// ds.WriteXmlSchema("CRBCKhamBenh_VP.xsd");
            System.Data.SqlClient.SqlCommand cmd = SqlHelper.CreateCommand(SQLConnectionData, DatabaseOwner + ObjectQualifier + "spBCTienThu_VP");

            cmd.CommandTimeout = 18000;
            cmd.CommandType = System.Data.CommandType.StoredProcedure;
            cmd.Parameters.AddWithValue("TUNGAY", _TUNGAYYC);
            cmd.Parameters.AddWithValue("DENNGAY", _DENNGAYYC);
            cmd.Parameters.AddWithValue("LOAIBC", _loai);
            cmd.Parameters.AddWithValue("dk", _dK);

            System.Data.SqlClient.SqlDataAdapter sqlad = new System.Data.SqlClient.SqlDataAdapter(cmd);

            sqlad.Fill(ds);
            if (ds.Tables.Count > 0)
                ds.Tables[0].TableName = "spBCTienThu_VP";
            sqlad.Dispose(); cmd.Dispose(); sqlad = null;
            cmd = null;
            // if (SQLConnectionBD.State == System.Data.ConnectionState.Closed)
            //SQLConnectionBD.Close(); SQLConnectionBD.Dispose();
            ////if (_sqlConnection.State == System.Data.ConnectionState.Closed)
            //{
            //    //_sqlConnection.Close(); _sqlConnection.Dispose();
            //    //_sqlConnection = null;
            //}
            return ds;

        }
        public override DataSet CRBCSoLieuNT(DateTime _TUNGAYYC, DateTime _DENNGAYYC, String _makhoa, byte _loai, String _dK)
        {
            DataSet ds = new DataSet("CRBCSoLieuNT");
            //string[] s ={ "CRBCSoLieuNT" };
            //    SqlHelper.FillDataset(ConnectionString, DatabaseOwner + ObjectQualifier + "spNGOAITRU_ThongkeBN", ds, s, _TUNGAYYC, _DENNGAYYC, _makhoa, _loai, _dK);
            ////  // ds.WriteXmlSchema("CRBCSoLieuNT.xsd");
            System.Data.SqlClient.SqlCommand cmd = SqlHelper.CreateCommand(SQLConnectionData, DatabaseOwner + ObjectQualifier + "spNGOAITRU_ThongkeBN");

            cmd.CommandTimeout = 18000;
            cmd.CommandType = System.Data.CommandType.StoredProcedure;
            cmd.Parameters.AddWithValue("tungay", _TUNGAYYC);
            cmd.Parameters.AddWithValue("denngay", _DENNGAYYC);
            cmd.Parameters.AddWithValue("MAKHOA", _makhoa);
            cmd.Parameters.AddWithValue("loai", _loai);
            cmd.Parameters.AddWithValue("DK", _dK);

            System.Data.SqlClient.SqlDataAdapter sqlad = new System.Data.SqlClient.SqlDataAdapter(cmd);

            sqlad.Fill(ds);
            if (ds.Tables.Count > 0)
                ds.Tables[0].TableName = "CRBCSoLieuNT";
            sqlad.Dispose(); cmd.Dispose(); sqlad = null;
            cmd = null;
            // if (SQLConnectionBD.State == System.Data.ConnectionState.Closed)
            //SQLConnectionBD.Close(); SQLConnectionBD.Dispose();
            //if (_sqlConnection.State == System.Data.ConnectionState.Closed)
            {
                //_sqlConnection.Close(); _sqlConnection.Dispose();
                //_sqlConnection = null;
            }
            return ds;

        }
        public override DataSet CRBCSoLieuKhamBenh(DateTime _TUNGAYYC, DateTime _DENNGAYYC, String _makhoa, byte _loai, String _dK)
        {
            DataSet ds = new DataSet("CRBCSoLieuKhamBenh");
            //string[] s ={ "CRBCSoLieuKhamBenh" };
            //SqlHelper.FillDataset(ConnectionString, DatabaseOwner + ObjectQualifier + "spNGOAITRU_ThongkeBN", ds, s, _TUNGAYYC, _DENNGAYYC, _makhoa, _loai, _dK);
            //// // //// ds.WriteXmlSchema("CRBCSoLieuNT.xsd");
            System.Data.SqlClient.SqlCommand cmd = SqlHelper.CreateCommand(SQLConnectionData, DatabaseOwner + ObjectQualifier + "spNGOAITRU_ThongkeBN");

            cmd.CommandTimeout = 18000;
            cmd.CommandType = System.Data.CommandType.StoredProcedure;
            cmd.Parameters.AddWithValue("tungay", _TUNGAYYC);
            cmd.Parameters.AddWithValue("denngay", _DENNGAYYC);
            cmd.Parameters.AddWithValue("MAKHOA", _makhoa);
            cmd.Parameters.AddWithValue("loai", _loai);
            cmd.Parameters.AddWithValue("DK", _dK);

            System.Data.SqlClient.SqlDataAdapter sqlad = new System.Data.SqlClient.SqlDataAdapter(cmd);

            sqlad.Fill(ds);
            if (ds.Tables.Count > 0)
                ds.Tables[0].TableName = "CRBCSoLieuKhamBenh";
            sqlad.Dispose(); cmd.Dispose(); sqlad = null;
            cmd = null;
            // if (SQLConnectionBD.State == System.Data.ConnectionState.Closed)
            //SQLConnectionBD.Close(); SQLConnectionBD.Dispose();
            //if (_sqlConnection.State == System.Data.ConnectionState.Closed)
            {
                //_sqlConnection.Close(); _sqlConnection.Dispose();
                //_sqlConnection = null;
            }
            return ds;

        }
        public override DataSet CRNGOAITRU_ThongkeBN(DateTime _TUNGAYYC, DateTime _DENNGAYYC, String _makhoa, byte _loai, String _dK)
        {
            DataSet ds = new DataSet("SPNGOAITRU_ThongkeBN");
            // string[] s ={ "SPNGOAITRU_ThongkeBN" };
            // SqlHelper.FillDataset(ConnectionString, DatabaseOwner + ObjectQualifier + "spNGOAITRU_ThongkeBN", ds, s, _TUNGAYYC, _DENNGAYYC, _makhoa, _loai, _dK);
            //////// ds.WriteXmlSchema("CRNGOAITRU_ThongkeBN_RPT11.xsd");
            System.Data.SqlClient.SqlCommand cmd = SqlHelper.CreateCommand(SQLConnectionData, DatabaseOwner + ObjectQualifier + "spNGOAITRU_ThongkeBN");

            cmd.CommandTimeout = 18000;
            cmd.CommandType = System.Data.CommandType.StoredProcedure;
            cmd.Parameters.AddWithValue("tungay", _TUNGAYYC);
            cmd.Parameters.AddWithValue("denngay", _DENNGAYYC);
            cmd.Parameters.AddWithValue("MAKHOA", _makhoa);
            cmd.Parameters.AddWithValue("loai", _loai);
            cmd.Parameters.AddWithValue("DK", _dK);

            System.Data.SqlClient.SqlDataAdapter sqlad = new System.Data.SqlClient.SqlDataAdapter(cmd);

            sqlad.Fill(ds);
            if (ds.Tables.Count > 0)
                ds.Tables[0].TableName = "SPNGOAITRU_ThongkeBN";
            sqlad.Dispose(); cmd.Dispose(); sqlad = null;
            cmd = null;
            // if (SQLConnectionBD.State == System.Data.ConnectionState.Closed)
            //SQLConnectionBD.Close(); SQLConnectionBD.Dispose();
            //if (_sqlConnection.State == System.Data.ConnectionState.Closed)
            {
                //_sqlConnection.Close(); _sqlConnection.Dispose();
                //_sqlConnection = null;
            }
            //ds.WriteXmlSchema("CRNGOAITRU_ThongkeBN_RPT2.xsd");
            return ds;

        }
        public override DataSet CRNGOAITRU_ThongkeBN(DateTime _TUNGAYYC, DateTime _DENNGAYYC, byte _loai, String _noitt, String _makhoa, String _dK)
        {
            DataSet ds = new DataSet("BCBENHANCT_VP");
            // string[] s ={ "SPNGOAITRU_ThongkeBN" };
            // SqlHelper.FillDataset(ConnectionString, DatabaseOwner + ObjectQualifier + "spNGOAITRU_ThongkeBN", ds, s, _TUNGAYYC, _DENNGAYYC, _makhoa, _loai, _dK);
            //////// ds.WriteXmlSchema("CRNGOAITRU_ThongkeBN_RPT11.xsd");
            System.Data.SqlClient.SqlCommand cmd = SqlHelper.CreateCommand(SQLConnectionDataBC, DatabaseOwner + ObjectQualifier + "spBCKhamBenhCT_CM");

            cmd.CommandTimeout = 18000;
            cmd.CommandType = System.Data.CommandType.StoredProcedure;
            cmd.Parameters.AddWithValue("tungay", _TUNGAYYC);
            cmd.Parameters.AddWithValue("denngay", _DENNGAYYC);
           
            cmd.Parameters.AddWithValue("loaibc", _loai);
            cmd.Parameters.AddWithValue("MAKHOA", _makhoa);
            cmd.Parameters.AddWithValue("noitt", _noitt);
            cmd.Parameters.AddWithValue("DK", _dK);
           
            System.Data.SqlClient.SqlDataAdapter sqlad = new System.Data.SqlClient.SqlDataAdapter(cmd);

            sqlad.Fill(ds);
            if (ds.Tables.Count > 0)
                ds.Tables[0].TableName = "BCBENHANCT_VP";
            sqlad.Dispose(); cmd.Dispose(); sqlad = null;
            cmd = null;
            // if (SQLConnectionBD.State == System.Data.ConnectionState.Closed)
            //SQLConnectionBD.Close(); SQLConnectionBD.Dispose();
            //if (_sqlConnection.State == System.Data.ConnectionState.Closed)
            {
                //_sqlConnection.Close(); _sqlConnection.Dispose();
                //_sqlConnection = null;
            }
            //ds.WriteXmlSchema("CRNGOAITRU_ThongkeBN_RPT2.xsd");
            return ds;

        }
        public override DataSet RptBCBenhAn_VP(DateTime _TUNGAYYC, DateTime _DENNGAYYC, String _maDT, byte _loai, String _dK)
        {
            DataSet ds = new DataSet("BenhAn_VP");
            //string[] s = { "CRBCBenhAn_VP_RPT" };
            //SqlHelper.FillDataset(ConnectionString, DatabaseOwner + ObjectQualifier + "spBCBenhAn_VP", ds, s, _TUNGAYYC, _DENNGAYYC, _maDT, _loai, _dK);
            ////// // //// ds.WriteXmlSchema("CRBCBenhAn_VP_RPT.xsd");
            System.Data.SqlClient.SqlCommand cmd = SqlHelper.CreateCommand(SQLConnectionDataBC, DatabaseOwner + ObjectQualifier + "spBCBenhAn_VP");

            cmd.CommandTimeout = 18000;
            cmd.CommandType = System.Data.CommandType.StoredProcedure;
            cmd.Parameters.AddWithValue("TUNGAY", _TUNGAYYC);
            cmd.Parameters.AddWithValue("DENNGAY", _DENNGAYYC);
            cmd.Parameters.AddWithValue("MADT", _maDT);
            cmd.Parameters.AddWithValue("LOAIBC", _loai);
            cmd.Parameters.AddWithValue("dk", _dK);

            System.Data.SqlClient.SqlDataAdapter sqlad = new System.Data.SqlClient.SqlDataAdapter(cmd);

            sqlad.Fill(ds);
            if (ds.Tables.Count > 0)
                ds.Tables[0].TableName = "CRBCBenhAn_VP_RPT";
            sqlad.Dispose(); cmd.Dispose(); sqlad = null;
            cmd = null;
            // if (SQLConnectionBD.State == System.Data.ConnectionState.Closed)
            //SQLConnectionBD.Close(); SQLConnectionBD.Dispose();
            //if (_sqlConnection.State == System.Data.ConnectionState.Closed)
            {
                //_sqlConnection.Close(); _sqlConnection.Dispose();
                //_sqlConnection = null;
            }
            return ds;

        }
        public override DataSet RptGetKhamBenhCT_VP(DateTime _TUNGAYYC, DateTime _DENNGAYYC, String _maDT, byte _loai, string _noitt, string _loaiphieu, String _dK, Boolean _RAVIEN, String _MAKHOA)
        {
            DataSet ds = new DataSet();
            //string[] s = { "BCBENHANCT_VP" };
            //SqlHelper.FillDataset(ConnectionString, DatabaseOwner + ObjectQualifier + "spBCKhamBenhCT_VP", ds, s, _TUNGAYYC, _DENNGAYYC, _maDT, _loai, _dK, _RAVIEN, _MAKHOA);
            // // ds.WriteXmlSchema("BCBENHANCT_VP.xsd");

            System.Data.SqlClient.SqlCommand cmd = SqlHelper.CreateCommand(SQLConnectionDataBC, DatabaseOwner + ObjectQualifier + "spBCKhamBenhCT_VP");

            cmd.CommandTimeout = 18000;
            cmd.CommandType = System.Data.CommandType.StoredProcedure;
            cmd.Parameters.AddWithValue("TUNGAY", _TUNGAYYC);
            cmd.Parameters.AddWithValue("DENNGAY", _DENNGAYYC);
            cmd.Parameters.AddWithValue("MADT", _maDT);
            cmd.Parameters.AddWithValue("noitt", _noitt);
            cmd.Parameters.AddWithValue("loaiphieu", _loaiphieu);
            cmd.Parameters.AddWithValue("LOAIBC", _loai);
            cmd.Parameters.AddWithValue("DK", _dK);
            cmd.Parameters.AddWithValue("RAVIENBH", _RAVIEN);
            cmd.Parameters.AddWithValue("MAKHOA", _MAKHOA);
            System.Data.SqlClient.SqlDataAdapter sqlad = new System.Data.SqlClient.SqlDataAdapter(cmd);

            sqlad.Fill(ds);
            if (ds.Tables.Count > 0)
                ds.Tables[0].TableName = "BCBENHANCT_VP";
            sqlad.Dispose(); cmd.Dispose(); sqlad = null;
            cmd = null;
            // if (SQLConnectionBD.State == System.Data.ConnectionState.Closed)
            //SQLConnectionBD.Close(); SQLConnectionBD.Dispose();
            //if (_sqlConnection.State == System.Data.ConnectionState.Closed)
            {
                //_sqlConnection.Close(); _sqlConnection.Dispose();
                //_sqlConnection = null;
            }
            return ds;



        }
        public override DataSet RptGetInBCNhapThuoc(DateTime _TUNGAYYC, DateTime _DENNGAYYC, String _maDV, byte _loai, string _TRA, string _maNV, string _noitt, int LOAIPHIEU, String _dK, Byte _DaDung)
        {
            DataSet ds = new DataSet("DichVu");
            //string[] s ={ "CRInBCNhapThuoc_RPT" };
            //SqlHelper.FillDataset(ConnectionString, DatabaseOwner + ObjectQualifier + "sp_BCVIENPHINGOAITRU", ds, s, _TUNGAYYC, _DENNGAYYC, _maDV, _loai, _TRA, _maNV, LOAIPHIEU, _dK, _DaDung);
            // ////// ds.WriteXmlSchema("CRInBCNhapThuoc.xsd");
            System.Data.SqlClient.SqlConnection _connectionserver = new System.Data.SqlClient.SqlConnection(_connectionStringBC);
            _connectionserver.Open();
            System.Data.SqlClient.SqlCommand cmd = SqlHelper.CreateCommand(_connectionserver, DatabaseOwner + ObjectQualifier + "sp_BCVIENPHINGOAITRU");

            cmd.CommandTimeout = 18000;
            cmd.CommandType = System.Data.CommandType.StoredProcedure;
            cmd.Parameters.AddWithValue("TUNGAY", _TUNGAYYC);
            cmd.Parameters.AddWithValue("DENNGAY", _DENNGAYYC);
            cmd.Parameters.AddWithValue("MADV", _maDV);
            cmd.Parameters.AddWithValue("noitt", _noitt);
            cmd.Parameters.AddWithValue("LOAI", _loai);
            cmd.Parameters.AddWithValue("TRA", _TRA);
            cmd.Parameters.AddWithValue("MANV", _maNV);
            cmd.Parameters.AddWithValue("LOAIPHIEU", LOAIPHIEU);
            cmd.Parameters.AddWithValue("DK", _dK);
            cmd.Parameters.AddWithValue("DADUNG", _DaDung);
            System.Data.SqlClient.SqlDataAdapter sqlad = new System.Data.SqlClient.SqlDataAdapter(cmd);

            sqlad.Fill(ds);
            if (ds.Tables.Count > 0)
                ds.Tables[0].TableName = "CRInBCNhapThuoc_RPT";
            sqlad.Dispose(); cmd.Dispose(); sqlad = null;
            cmd = null;
            _connectionserver.Close();
            _connectionserver = null;
            // if (SQLConnectionBD.State == System.Data.ConnectionState.Closed)
            //SQLConnectionBD.Close(); SQLConnectionBD.Dispose();
            //if (_sqlConnection.State == System.Data.ConnectionState.Closed)
            {
                //_sqlConnection.Close(); _sqlConnection.Dispose();
                //_sqlConnection = null;
            }
            return ds;

        }

        public override DataSet GetCRSoChamCong(Boolean _qadmin, String _makhoa, DateTime _tuNgay, DateTime _denNgay, String _dK)
        {
            DataSet ds = new DataSet("CRSoChamCong");
            //         string[] s ={ "CRSoChamCong" };
            //         SqlHelper.FillDataset(ConnectionString, DatabaseOwner + ObjectQualifier + "spSOCHAMCONG_GETALL", ds, s, _qadmin, _makhoa, _tuNgay, _denNgay, _dK);
            ////// ds.WriteXml  ("CRSoChamCong1.xsd");
            System.Data.SqlClient.SqlCommand cmd = SqlHelper.CreateCommand(SQLConnectionData, DatabaseOwner + ObjectQualifier + "spSOCHAMCONG_GETALL");

            cmd.CommandTimeout = 18000;
            cmd.CommandType = System.Data.CommandType.StoredProcedure;
            cmd.Parameters.AddWithValue("QADMIN", _qadmin);
            cmd.Parameters.AddWithValue("MaKhoa", _makhoa);
            cmd.Parameters.AddWithValue("TUNGAY", _tuNgay);
            cmd.Parameters.AddWithValue("DENNGAY", _denNgay);
            cmd.Parameters.AddWithValue("DK", _dK);

            System.Data.SqlClient.SqlDataAdapter sqlad = new System.Data.SqlClient.SqlDataAdapter(cmd);

            sqlad.Fill(ds);
            if (ds.Tables.Count > 0)
                ds.Tables[0].TableName = "CRSoChamCong";
            sqlad.Dispose(); cmd.Dispose(); sqlad = null;
            cmd = null;
            // if (SQLConnectionBD.State == System.Data.ConnectionState.Closed)
            //SQLConnectionBD.Close(); SQLConnectionBD.Dispose();
            //if (_sqlConnection.State == System.Data.ConnectionState.Closed)
            {
                //_sqlConnection.Close(); _sqlConnection.Dispose();
                //_sqlConnection = null;
            }
            return ds;

        }

        #endregion

        #region Can Lam Sang
        #region Mau
        #region Reports
        public override DataSet RptGetMauBCXUATTHUOCKhoa(string ACCOUNT, DateTime _TUNGAYYC, DateTime _DENNGAYYC, int LOAIPHIEU, string MAKHO, string MANHOM, string MACHUNGLOAI, string MAPL, string _DK)
        {
            DataSet ds = new DataSet("CRBCXuatthuoc_RPT");
            //string[] s = { "CRBCXuatthuoc_RPT" };
            //SqlHelper.FillDataset( ConnectionString, DatabaseOwner + ObjectQualifier + "spDUOC_BCXUATTHUOC ", ds, s, ACCOUNT, _TUNGAYYC, _DENNGAYYC, LOAIPHIEU, MAKHO, MANHOM, MACHUNGLOAI, MAPL, _DK);
            //// ds.WriteXmlSchema("CRBCXuatthuocKhoa_RPT.xsd");
            //  // ds.WriteXmlSchema("CRBCXuatthuocKhoa_RPT.xsd");
            System.Data.SqlClient.SqlCommand cmd = SqlHelper.CreateCommand(SQLConnectionData, DatabaseOwner + ObjectQualifier + "spMau_BCXUATTHUOC");

            cmd.CommandTimeout = 18000;
            cmd.CommandType = System.Data.CommandType.StoredProcedure;
            cmd.Parameters.AddWithValue("ACCOUNT", ACCOUNT);
            cmd.Parameters.AddWithValue("TUNGAY", _TUNGAYYC);
            cmd.Parameters.AddWithValue("DENNGAY", _DENNGAYYC);
            cmd.Parameters.AddWithValue("LOAIPHIEU", LOAIPHIEU);
            cmd.Parameters.AddWithValue("MAKHO", MAKHO);
            cmd.Parameters.AddWithValue("MANHOM", MANHOM);
            cmd.Parameters.AddWithValue("MACHUNGLOAI", MACHUNGLOAI);
            cmd.Parameters.AddWithValue("MAPL", MAPL);
            cmd.Parameters.AddWithValue("DK", _DK);
            System.Data.SqlClient.SqlDataAdapter sqlad = new System.Data.SqlClient.SqlDataAdapter(cmd);

            sqlad.Fill(ds);
            if (ds.Tables.Count > 0)
                //string[] s ={ "" };
                ds.Tables[0].TableName = "CRBCXuatthuoc_RPT";
            sqlad.Dispose(); cmd.Dispose(); sqlad = null;
            cmd = null;
            // if (SQLConnectionBD.State == System.Data.ConnectionState.Closed)
            //SQLConnectionBD.Close(); SQLConnectionBD.Dispose();
            //if (_sqlConnection.State == System.Data.ConnectionState.Closed)
            {
                //_sqlConnection.Close(); _sqlConnection.Dispose();
                //_sqlConnection = null;
            }
            return ds;

        }
        public override DataSet RptGetMauBCXUATTHUOCKhoa(string ACCOUNT, DateTime _TUNGAYYC, DateTime _DENNGAYYC, int LOAIPHIEU, string MAKHO, string MaDT, string MANHOM, string MACHUNGLOAI, string MAPL, string _DK)
        {
            DataSet ds = new DataSet("CRBCXuatthuoc_RPT");
            //string[] s = { "CRBCXuatthuoc_RPT" };
            //SqlHelper.FillDataset( ConnectionString, DatabaseOwner + ObjectQualifier + "spDUOC_BCXUATTHUOC ", ds, s, ACCOUNT, _TUNGAYYC, _DENNGAYYC, LOAIPHIEU, MAKHO, MANHOM, MACHUNGLOAI, MAPL, _DK);
            //// ds.WriteXmlSchema("CRBCXuatthuocKhoa_RPT.xsd");
            //  // ds.WriteXmlSchema("CRBCXuatthuocKhoa_RPT.xsd");
            System.Data.SqlClient.SqlCommand cmd = SqlHelper.CreateCommand(SQLConnectionData, DatabaseOwner + ObjectQualifier + "spMau_BCXUATTHUOCDT");

            cmd.CommandTimeout = 18000;
            cmd.CommandType = System.Data.CommandType.StoredProcedure;
            cmd.Parameters.AddWithValue("ACCOUNT", ACCOUNT);
            cmd.Parameters.AddWithValue("TUNGAY", _TUNGAYYC);
            cmd.Parameters.AddWithValue("DENNGAY", _DENNGAYYC);
            cmd.Parameters.AddWithValue("LOAIPHIEU", LOAIPHIEU);
            cmd.Parameters.AddWithValue("MAKHO", MAKHO);
            cmd.Parameters.AddWithValue("MADT", MaDT);
            cmd.Parameters.AddWithValue("MANHOM", MANHOM);
            cmd.Parameters.AddWithValue("MACHUNGLOAI", MACHUNGLOAI);
            cmd.Parameters.AddWithValue("MAPL", MAPL);
            cmd.Parameters.AddWithValue("DK", _DK);
            System.Data.SqlClient.SqlDataAdapter sqlad = new System.Data.SqlClient.SqlDataAdapter(cmd);

            sqlad.Fill(ds);
            if (ds.Tables.Count > 0)
                //string[] s ={ "" };
                ds.Tables[0].TableName = "CRBCXuatthuoc_RPT";
            sqlad.Dispose(); cmd.Dispose(); sqlad = null;
            cmd = null;
            // if (SQLConnectionBD.State == System.Data.ConnectionState.Closed)
            //SQLConnectionBD.Close(); SQLConnectionBD.Dispose();
            //if (_sqlConnection.State == System.Data.ConnectionState.Closed)
            {
                //_sqlConnection.Close(); _sqlConnection.Dispose();
                //_sqlConnection = null;
            }
            return ds;

        }
        public override DataSet RptGetMauBCXUATTHUOCNgay(string ACCOUNT, DateTime _TUNGAYYC, DateTime _DENNGAYYC, int LOAIPHIEU, string MAKHO, string MANHOM, string MACHUNGLOAI, string MAPL, string _DK)
        {
            DataSet ds = new DataSet("CRBCXuatthuoc_RPT");
            //string[] s = { "CRBCXuatthuoc_RPT" };
            //SqlHelper.FillDataset( ConnectionString, DatabaseOwner + ObjectQualifier + "spDUOC_BCXUATTHUOC ", ds, s, ACCOUNT, _TUNGAYYC, _DENNGAYYC, LOAIPHIEU, MAKHO, MANHOM, MACHUNGLOAI, MAPL, _DK);
            // //// ds.WriteXmlSchema("CRBCXuatthuocNgay_RPT.xsd");
            System.Data.SqlClient.SqlCommand cmd = SqlHelper.CreateCommand(SQLConnectionData, DatabaseOwner + ObjectQualifier + "spMau_BCXUATTHUOC");

            cmd.CommandTimeout = 18000;
            cmd.CommandType = System.Data.CommandType.StoredProcedure;
            cmd.Parameters.AddWithValue("ACCOUNT", ACCOUNT);
            cmd.Parameters.AddWithValue("TUNGAY", _TUNGAYYC);
            cmd.Parameters.AddWithValue("DENNGAY", _DENNGAYYC);
            cmd.Parameters.AddWithValue("LOAIPHIEU", LOAIPHIEU);
            cmd.Parameters.AddWithValue("MAKHO", MAKHO);
            cmd.Parameters.AddWithValue("MANHOM", MANHOM);
            cmd.Parameters.AddWithValue("MACHUNGLOAI", MACHUNGLOAI);
            cmd.Parameters.AddWithValue("MAPL", MAPL);
            cmd.Parameters.AddWithValue("DK", _DK);
            System.Data.SqlClient.SqlDataAdapter sqlad = new System.Data.SqlClient.SqlDataAdapter(cmd);

            sqlad.Fill(ds);
            if (ds.Tables.Count > 0)
                //string[] s ={ "" };
                ds.Tables[0].TableName = "CRBCXuatthuoc_RPT";
            sqlad.Dispose(); cmd.Dispose(); sqlad = null;
            cmd = null;
            // if (SQLConnectionBD.State == System.Data.ConnectionState.Closed)
            //SQLConnectionBD.Close(); SQLConnectionBD.Dispose();
            //if (_sqlConnection.State == System.Data.ConnectionState.Closed)
            {
                //_sqlConnection.Close(); _sqlConnection.Dispose();
                //_sqlConnection = null;
            }
            return ds;

        }
        public override DataSet RptGetMauBCXUATTHUOCNgay(string ACCOUNT, DateTime _TUNGAYYC, DateTime _DENNGAYYC, int LOAIPHIEU, string MAKHO, string MaDT, string MANHOM, string MACHUNGLOAI, string MAPL, string _DK)
        {
            DataSet ds = new DataSet("CRBCXuatthuoc_RPT");
            //string[] s = { "CRBCXuatthuoc_RPT" };
            //SqlHelper.FillDataset( ConnectionString, DatabaseOwner + ObjectQualifier + "spDUOC_BCXUATTHUOC ", ds, s, ACCOUNT, _TUNGAYYC, _DENNGAYYC, LOAIPHIEU, MAKHO, MANHOM, MACHUNGLOAI, MAPL, _DK);
            // //// ds.WriteXmlSchema("CRBCXuatthuocNgay_RPT.xsd");
            System.Data.SqlClient.SqlCommand cmd = SqlHelper.CreateCommand(SQLConnectionData, DatabaseOwner + ObjectQualifier + "spMau_BCXUATTHUOCDT");

            cmd.CommandTimeout = 18000;
            cmd.CommandType = System.Data.CommandType.StoredProcedure;
            cmd.Parameters.AddWithValue("ACCOUNT", ACCOUNT);
            cmd.Parameters.AddWithValue("TUNGAY", _TUNGAYYC);
            cmd.Parameters.AddWithValue("DENNGAY", _DENNGAYYC);
            cmd.Parameters.AddWithValue("LOAIPHIEU", LOAIPHIEU);
            cmd.Parameters.AddWithValue("MAKHO", MAKHO);
            cmd.Parameters.AddWithValue("MADT", MaDT);
            cmd.Parameters.AddWithValue("MANHOM", MANHOM);
            cmd.Parameters.AddWithValue("MACHUNGLOAI", MACHUNGLOAI);
            cmd.Parameters.AddWithValue("MAPL", MAPL);
            cmd.Parameters.AddWithValue("DK", _DK);
            System.Data.SqlClient.SqlDataAdapter sqlad = new System.Data.SqlClient.SqlDataAdapter(cmd);

            sqlad.Fill(ds);
            if (ds.Tables.Count > 0)
                //string[] s ={ "" };
                ds.Tables[0].TableName = "CRBCXuatthuoc_RPT";
            sqlad.Dispose(); cmd.Dispose(); sqlad = null;
            cmd = null;
            // if (SQLConnectionBD.State == System.Data.ConnectionState.Closed)
            //SQLConnectionBD.Close(); SQLConnectionBD.Dispose();
            //if (_sqlConnection.State == System.Data.ConnectionState.Closed)
            {
                //_sqlConnection.Close(); _sqlConnection.Dispose();
                //_sqlConnection = null;
            }
            return ds;

        }

        public override DataSet crMauPhieuNhap_C_GetAll(Boolean _qadmin, String _maPN)
        {
            DataSet ds = new DataSet("crPhieuNhap_C_GetAll");
            //string[] s ={ "crPhieuNhap_C_GetAll" };
            //SqlHelper.FillDataset( ConnectionString, DatabaseOwner + ObjectQualifier + "spMauPhieuNhap_C_GETALL", ds, s, _qadmin, _maPN);
            //// // // // //// ds.WriteXmlSchema("crPhieuNhap_C_GetAll.xsd");
            System.Data.SqlClient.SqlCommand cmd = SqlHelper.CreateCommand(SQLConnectionData, DatabaseOwner + ObjectQualifier + "spMauPhieuNhap_C_GETALL");

            cmd.CommandTimeout = 18000;
            cmd.CommandType = System.Data.CommandType.StoredProcedure;
            cmd.Parameters.AddWithValue("QADMIN", _qadmin);
            cmd.Parameters.AddWithValue("maPN", _maPN);


            System.Data.SqlClient.SqlDataAdapter sqlad = new System.Data.SqlClient.SqlDataAdapter(cmd);

            sqlad.Fill(ds);
            if (ds.Tables.Count > 0)
                ds.Tables[0].TableName = "crPhieuNhap_C_GetAll";
            sqlad.Dispose(); cmd.Dispose(); sqlad = null;
            cmd = null;
            // if (SQLConnectionBD.State == System.Data.ConnectionState.Closed)
            //SQLConnectionBD.Close(); SQLConnectionBD.Dispose();
            //if (_sqlConnection.State == System.Data.ConnectionState.Closed)
            {
                //_sqlConnection.Close(); _sqlConnection.Dispose();
                //_sqlConnection = null;
            }
            return ds;

        }

        public override DataSet crBCTeBao(byte loai, string maso, int sttkhoa, int stt)
        {
            DataSet ds = new DataSet("spBCTEBAO_XN_GET");
            System.Data.SqlClient.SqlCommand cmd = SqlHelper.CreateCommand(SQLConnectionData, DatabaseOwner + ObjectQualifier + "spBCTEBAO_XN_GET");

            cmd.CommandTimeout = 18000;
            cmd.CommandType = System.Data.CommandType.StoredProcedure;
            cmd.Parameters.AddWithValue("LOAI", loai);
            cmd.Parameters.AddWithValue("MABA", maso);
            cmd.Parameters.AddWithValue("sttkhoa", sttkhoa);
            cmd.Parameters.AddWithValue("stt", stt);
            cmd.Parameters.AddWithValue("DK", "");
            System.Data.SqlClient.SqlDataAdapter sqlad = new System.Data.SqlClient.SqlDataAdapter(cmd);

            sqlad.Fill(ds);
            if (ds.Tables.Count > 0)
                ds.Tables[0].TableName = "spBCTEBAO_XN_GET";
            sqlad.Dispose(); cmd.Dispose(); sqlad = null;
            cmd = null;
            // if (SQLConnectionBD.State == System.Data.ConnectionState.Closed)
            //SQLConnectionBD.Close(); SQLConnectionBD.Dispose();
            //if (_sqlConnection.State == System.Data.ConnectionState.Closed)
            {
                //_sqlConnection.Close(); _sqlConnection.Dispose();
                //_sqlConnection = null;
            }
            return ds;

        }

        public override DataSet crMauPhieuNhapTra_C_GetAll(Boolean _qadmin, String _maPNT)
        {
            DataSet ds = new DataSet("crPhieuNhapTra_C_GetAll");
            //string[] s ={ "crPhieuNhapTra_C_GetAll" };
            //SqlHelper.FillDataset( ConnectionString, DatabaseOwner + ObjectQualifier + "spMAUNhapTra_C_GETALL", ds, s, _qadmin, _maPNT);
            // // // //// ds.WriteXmlSchema("crPhieuNhapTra_C_GetAll.xsd");
            System.Data.SqlClient.SqlCommand cmd = SqlHelper.CreateCommand(SQLConnectionData, DatabaseOwner + ObjectQualifier + "spMAUNhapTra_C_GETALL");

            cmd.CommandTimeout = 18000;
            cmd.CommandType = System.Data.CommandType.StoredProcedure;
            cmd.Parameters.AddWithValue("QADMIN", _qadmin);
            cmd.Parameters.AddWithValue("maPNT", _maPNT);


            System.Data.SqlClient.SqlDataAdapter sqlad = new System.Data.SqlClient.SqlDataAdapter(cmd);

            sqlad.Fill(ds);
            if (ds.Tables.Count > 0)
                ds.Tables[0].TableName = "crPhieuNhapTra_C_GetAll";
            sqlad.Dispose(); cmd.Dispose(); sqlad = null;
            cmd = null;
            // if (SQLConnectionBD.State == System.Data.ConnectionState.Closed)
            //SQLConnectionBD.Close(); SQLConnectionBD.Dispose();
            //if (_sqlConnection.State == System.Data.ConnectionState.Closed)
            {
                //_sqlConnection.Close(); _sqlConnection.Dispose();
                //_sqlConnection = null;
            }
            return ds;

        }
        public override DataSet crMauPhieuXuat_C_GetAll(Boolean _qadmin, String _maPX)
        {
            DataSet ds = new DataSet("crPhieuXuat_C_GetAll");
            //string[] s ={ "crPhieuXuat_C_GetAll" };
            //SqlHelper.FillDataset( ConnectionString, DatabaseOwner + ObjectQualifier + "spMauPhieuXuat_C_GETALL", ds, s, _qadmin, _maPX);
            //// // // // //// ds.WriteXmlSchema("crPhieuXuat_C_GetAll.xsd");
            System.Data.SqlClient.SqlCommand cmd = SqlHelper.CreateCommand(SQLConnectionData, DatabaseOwner + ObjectQualifier + "spMauPhieuXuat_C_GETALL");

            cmd.CommandTimeout = 18000;
            cmd.CommandType = System.Data.CommandType.StoredProcedure;
            cmd.Parameters.AddWithValue("QADMIN", _qadmin);
            cmd.Parameters.AddWithValue("maPX", _maPX);


            System.Data.SqlClient.SqlDataAdapter sqlad = new System.Data.SqlClient.SqlDataAdapter(cmd);

            sqlad.Fill(ds);
            if (ds.Tables.Count > 0)
                ds.Tables[0].TableName = "crPhieuXuat_C_GetAll";
            sqlad.Dispose(); cmd.Dispose(); sqlad = null;
            cmd = null;

            return ds;

        }
        public override DataSet crMauKiemKe(String _maKK, Boolean _qadmin)
        {
            DataSet ds = new DataSet("crKiemKe");
            //string[] s ={ "crKiemKe" };
            //SqlHelper.FillDataset( ConnectionString, DatabaseOwner + ObjectQualifier + "spMAUKIEMKE_HD_GETALL", ds, s, _maKK, _qadmin);
            // // // // //// ds.WriteXmlSchema("crKiemKe.xsd");
            System.Data.SqlClient.SqlCommand cmd = SqlHelper.CreateCommand(SQLConnectionData, DatabaseOwner + ObjectQualifier + "spMAUKIEMKE_HD_GETALL");

            cmd.CommandTimeout = 18000;
            cmd.CommandType = System.Data.CommandType.StoredProcedure;
            cmd.Parameters.AddWithValue("QADMIN", _qadmin);
            cmd.Parameters.AddWithValue("maKK", _maKK);


            System.Data.SqlClient.SqlDataAdapter sqlad = new System.Data.SqlClient.SqlDataAdapter(cmd);

            sqlad.Fill(ds);
            if (ds.Tables.Count > 0)
                ds.Tables[0].TableName = "crKiemKe";
            sqlad.Dispose(); cmd.Dispose(); sqlad = null;
            cmd = null;
            // if (SQLConnectionBD.State == System.Data.ConnectionState.Closed)
            //SQLConnectionBD.Close(); SQLConnectionBD.Dispose();
            //if (_sqlConnection.State == System.Data.ConnectionState.Closed)
            {
                //_sqlConnection.Close(); _sqlConnection.Dispose();
                //_sqlConnection = null;
            }
            return ds;

        }
        public override DataSet crMauKiemKe_HoiDong(String _maPhieu, Boolean _qadmin, Byte _loai)
        {
            DataSet ds = new DataSet("crKiemKe_HoiDong");
            //string[] s ={ "crKiemKe_HoiDong" };
            //SqlHelper.FillDataset( ConnectionString, DatabaseOwner + ObjectQualifier + "spMauKIEMNHAP_GETALL", ds, s, _maPhieu, _qadmin, _loai);
            // // // //// ds.WriteXmlSchema("crKiemKe_HoiDong.xsd");
            System.Data.SqlClient.SqlCommand cmd = SqlHelper.CreateCommand(SQLConnectionData, DatabaseOwner + ObjectQualifier + "spMauKIEMNHAP_GETALL");

            cmd.CommandTimeout = 18000;
            cmd.CommandType = System.Data.CommandType.StoredProcedure;
            cmd.Parameters.AddWithValue("QADMIN", _qadmin);
            cmd.Parameters.AddWithValue("maPhieu", _maPhieu);
            cmd.Parameters.AddWithValue("loai", _loai);

            System.Data.SqlClient.SqlDataAdapter sqlad = new System.Data.SqlClient.SqlDataAdapter(cmd);

            sqlad.Fill(ds);
            if (ds.Tables.Count > 0)
                ds.Tables[0].TableName = "crKiemKe_HoiDong";
            sqlad.Dispose(); cmd.Dispose(); sqlad = null;
            cmd = null;
            // if (SQLConnectionBD.State == System.Data.ConnectionState.Closed)
            //SQLConnectionBD.Close(); SQLConnectionBD.Dispose();
            //if (_sqlConnection.State == System.Data.ConnectionState.Closed)
            {
                //_sqlConnection.Close(); _sqlConnection.Dispose();
                //_sqlConnection = null;
            }
            return ds;

        }

        public override DataSet crMauPhieuDTNhap_C_GetAll(Boolean _qadmin, String _maDuTru)
        {
            DataSet ds = new DataSet("crPhieuDTNhap_C_GetAll");
            //string[] s ={ "crPhieuDTNhap_C_GetAll" };
            //SqlHelper.FillDataset( ConnectionString, DatabaseOwner + ObjectQualifier + "spMauPhieuDTNhap_C_GETALL", ds, s, _qadmin, _maDuTru);
            // // // // //// ds.WriteXmlSchema("crPhieuDTNhap_C_GetAll.xsd");
            System.Data.SqlClient.SqlCommand cmd = SqlHelper.CreateCommand(SQLConnectionData, DatabaseOwner + ObjectQualifier + "spMauPhieuDTNhap_C_GETALL");

            cmd.CommandTimeout = 18000;
            cmd.CommandType = System.Data.CommandType.StoredProcedure;
            cmd.Parameters.AddWithValue("QADMIN", _qadmin);
            cmd.Parameters.AddWithValue("maDuTru", _maDuTru);

            System.Data.SqlClient.SqlDataAdapter sqlad = new System.Data.SqlClient.SqlDataAdapter(cmd);

            sqlad.Fill(ds);
            if (ds.Tables.Count > 0)
                ds.Tables[0].TableName = "crPhieuDTNhap_C_GetAll";
            sqlad.Dispose(); cmd.Dispose(); sqlad = null;
            cmd = null;
            // if (SQLConnectionBD.State == System.Data.ConnectionState.Closed)
            //SQLConnectionBD.Close(); SQLConnectionBD.Dispose();
            //if (_sqlConnection.State == System.Data.ConnectionState.Closed)
            {
                //_sqlConnection.Close(); _sqlConnection.Dispose();
                //_sqlConnection = null;
            }
            return ds;

        }
        public override DataSet crMauPhieuDoiThuoc_C_GetAll(Boolean _qadmin, String _maDThuoc)
        {
            DataSet ds = new DataSet("crPhieuDoiThuoc_C_GetAll");
            //string[] s ={ "crPhieuDoiThuoc_C_GetAll" };
            //SqlHelper.FillDataset( ConnectionString, DatabaseOwner + ObjectQualifier + "spMauPhieuDoiThuoc_C_GETALL", ds, s, _qadmin, _maDThuoc);
            // // // //// ds.WriteXmlSchema("crPhieuDoiThuoc_C_GetAll.xsd");
            System.Data.SqlClient.SqlCommand cmd = SqlHelper.CreateCommand(SQLConnectionData, DatabaseOwner + ObjectQualifier + "spMauPhieuDoiThuoc_C_GETALL");

            cmd.CommandTimeout = 18000;
            cmd.CommandType = System.Data.CommandType.StoredProcedure;
            cmd.Parameters.AddWithValue("QADMIN", _qadmin);
            cmd.Parameters.AddWithValue("maDThuoc", _maDThuoc);

            System.Data.SqlClient.SqlDataAdapter sqlad = new System.Data.SqlClient.SqlDataAdapter(cmd);

            sqlad.Fill(ds);
            if (ds.Tables.Count > 0)
                ds.Tables[0].TableName = "crPhieuDoiThuoc_C_GetAll";
            sqlad.Dispose(); cmd.Dispose(); sqlad = null;
            cmd = null;
            // if (SQLConnectionBD.State == System.Data.ConnectionState.Closed)
            //SQLConnectionBD.Close(); SQLConnectionBD.Dispose();
            //if (_sqlConnection.State == System.Data.ConnectionState.Closed)
            {
                //_sqlConnection.Close(); _sqlConnection.Dispose();
                //_sqlConnection = null;
            }
            return ds;

        }
        public override DataSet BCMauChiTietXuatKhoaPhong(string _ACCOUNT, DateTime _tuNgay, DateTime _denNgay, int _LOAIPHIEU, string _maKho, string _maNhom, string _maChungLoai, string _maPL, string _dK)
        {
            DataSet ds = new DataSet("CRChiTietXuatKhoaPhong_RPt");
            //string[] s = { "CRChiTietXuatKhoaPhong_RPt" };
            //SqlHelper.FillDataset( ConnectionString, DatabaseOwner + ObjectQualifier + "SPMAU_BCXUATTHUOC", ds, s, _ACCOUNT, _tuNgay, _denNgay, _LOAIPHIEU, _maKho, _maNhom, _maChungLoai, _maPL, _dK);
            //// // //// ds.WriteXmlSchema("CRChiTietXuatKhoaPhong_RPt.xsd");
            System.Data.SqlClient.SqlCommand cmd = SqlHelper.CreateCommand(SQLConnectionData, DatabaseOwner + ObjectQualifier + "SPMAU_BCXUATTHUOC");

            cmd.CommandTimeout = 18000;
            cmd.CommandType = System.Data.CommandType.StoredProcedure;
            cmd.Parameters.AddWithValue("ACCOUNT", _ACCOUNT);
            cmd.Parameters.AddWithValue("TUNGAY", _tuNgay);
            cmd.Parameters.AddWithValue("DENNGAY", _denNgay);
            cmd.Parameters.AddWithValue("LOAIPHIEU", _LOAIPHIEU);
            cmd.Parameters.AddWithValue("MAKHO", _maKho);
            cmd.Parameters.AddWithValue("MANHOM", _maNhom);
            cmd.Parameters.AddWithValue("MACHUNGLOAI", _maChungLoai);
            cmd.Parameters.AddWithValue("MAPL", _maPL);
            cmd.Parameters.AddWithValue("DK", _dK);

            System.Data.SqlClient.SqlDataAdapter sqlad = new System.Data.SqlClient.SqlDataAdapter(cmd);

            sqlad.Fill(ds);
            if (ds.Tables.Count > 0)
                ds.Tables[0].TableName = "CRChiTietXuatKhoaPhong_RPt";
            sqlad.Dispose(); cmd.Dispose(); sqlad = null;
            cmd = null;
            // if (SQLConnectionBD.State == System.Data.ConnectionState.Closed)
            //SQLConnectionBD.Close(); SQLConnectionBD.Dispose();
            //if (_sqlConnection.State == System.Data.ConnectionState.Closed)
            {
                //_sqlConnection.Close(); _sqlConnection.Dispose();
                //_sqlConnection = null;
            }
            return ds;

        }
        public override DataSet RptGetMauInPHIEUXUATTRA(Boolean _qadmin, String _maPXT)
        {
            DataSet ds = new DataSet("CRInPHIEUXUATTRA_RPT");
            //string[] s = { "CRInPHIEUXUATTRA_RPT" };
            //SqlHelper.FillDataset( ConnectionString, DatabaseOwner + ObjectQualifier + "spMauXuatTra_C_GETALL ", ds, s, _qadmin, _maPXT);
            // // // //// ds.WriteXmlSchema("CRInPHIEUXUATTRA_RPT.xsd");
            System.Data.SqlClient.SqlCommand cmd = SqlHelper.CreateCommand(SQLConnectionData, DatabaseOwner + ObjectQualifier + "spMauXuatTra_C_GETALL");

            cmd.CommandTimeout = 18000;
            cmd.CommandType = System.Data.CommandType.StoredProcedure;
            cmd.Parameters.AddWithValue("QADMIN", _qadmin);
            cmd.Parameters.AddWithValue("maPXT", _maPXT);

            System.Data.SqlClient.SqlDataAdapter sqlad = new System.Data.SqlClient.SqlDataAdapter(cmd);

            sqlad.Fill(ds);
            if (ds.Tables.Count > 0)
                ds.Tables[0].TableName = "CRInPHIEUXUATTRA_RPT";
            sqlad.Dispose(); cmd.Dispose(); sqlad = null;
            cmd = null;
            // if (SQLConnectionBD.State == System.Data.ConnectionState.Closed)
            //SQLConnectionBD.Close(); SQLConnectionBD.Dispose();
            //if (_sqlConnection.State == System.Data.ConnectionState.Closed)
            {
                //_sqlConnection.Close(); _sqlConnection.Dispose();
                //_sqlConnection = null;
            }
            return ds;

        }
        public override DataSet RptMauBCNXTThuoc_C(DateTime _tuNgay, DateTime _denNgay, string _maKho, int _loaiBC, string _maNhom, string _maChungLoai, string _maPL, string _dK)
        {
            DataSet ds = new DataSet("CRBCNXTThuoc_C_RPT");
            //string[] s = { "CRBCNXTThuoc_C_RPT" };
            //SqlHelper.FillDataset( ConnectionString, DatabaseOwner + ObjectQualifier + "SPMAU_BCNHAPXUATTON", ds, s, _tuNgay, _denNgay, _maKho, _loaiBC, _maNhom, _maChungLoai,_maPL , _dK);
            // // // //// ds.WriteXmlSchema("CRBCXuatthuoc_C_RPT.xsd");
            System.Data.SqlClient.SqlCommand cmd = SqlHelper.CreateCommand(SQLConnectionData, DatabaseOwner + ObjectQualifier + "SPMAU_BCNHAPXUATTON");

            cmd.CommandTimeout = 18000;
            cmd.CommandType = System.Data.CommandType.StoredProcedure;
            cmd.Parameters.AddWithValue("TUNGAY", _tuNgay);
            cmd.Parameters.AddWithValue("DENNGAY", _denNgay);
            cmd.Parameters.AddWithValue("MAKHO", _maKho);
            cmd.Parameters.AddWithValue("LOAIBC", _loaiBC);
            cmd.Parameters.AddWithValue("MANHOM", _maNhom);
            cmd.Parameters.AddWithValue("MACHUNGLOAI", _maChungLoai);
            cmd.Parameters.AddWithValue("MAPL", _maPL);
            cmd.Parameters.AddWithValue("DK", _dK);


            System.Data.SqlClient.SqlDataAdapter sqlad = new System.Data.SqlClient.SqlDataAdapter(cmd);

            sqlad.Fill(ds);
            if (ds.Tables.Count > 0)
                ds.Tables[0].TableName = "CRBCNXTThuoc_C_RPT";
            sqlad.Dispose(); cmd.Dispose(); sqlad = null;
            cmd = null;
            // if (SQLConnectionBD.State == System.Data.ConnectionState.Closed)
            //SQLConnectionBD.Close(); SQLConnectionBD.Dispose();
            //if (_sqlConnection.State == System.Data.ConnectionState.Closed)
            {
                //_sqlConnection.Close(); _sqlConnection.Dispose();
                //_sqlConnection = null;
            }
            return ds;

        }
        public override DataSet RptMauBCNXTThuoc_ToanBV(DateTime _tuNgay, DateTime _denNgay, string _maKho, int _loaiBC, string _maNhom, string _maChungLoai, string _maPL, string _dK)
        {
            DataSet ds = new DataSet("CRBCNXTThuoc_ToanBV_RPT");
            //string[] s = { "CRBCNXTThuoc_ToanBV_RPT" };
            //SqlHelper.FillDataset( ConnectionString, DatabaseOwner + ObjectQualifier + "SPMAU_BCNHAPXUATTON ", ds, s, _tuNgay, _denNgay, _maKho, _loaiBC, _maNhom, _maChungLoai,_maPL , _dK);
            //// // // //// ds.WriteXmlSchema("CRBCNXTThuoc_ToanBV_RPT.xsd");
            System.Data.SqlClient.SqlCommand cmd = SqlHelper.CreateCommand(SQLConnectionData, DatabaseOwner + ObjectQualifier + "SPMAU_BCNHAPXUATTON");

            cmd.CommandTimeout = 18000;
            cmd.CommandType = System.Data.CommandType.StoredProcedure;
            cmd.Parameters.AddWithValue("TUNGAY", _tuNgay);
            cmd.Parameters.AddWithValue("DENNGAY", _denNgay);
            cmd.Parameters.AddWithValue("MAKHO", _maKho);
            cmd.Parameters.AddWithValue("LOAIBC", _loaiBC);
            cmd.Parameters.AddWithValue("MANHOM", _maNhom);
            cmd.Parameters.AddWithValue("MACHUNGLOAI", _maChungLoai);
            cmd.Parameters.AddWithValue("MAPL", _maPL);
            cmd.Parameters.AddWithValue("DK", _dK);


            System.Data.SqlClient.SqlDataAdapter sqlad = new System.Data.SqlClient.SqlDataAdapter(cmd);

            sqlad.Fill(ds);
            if (ds.Tables.Count > 0)
                ds.Tables[0].TableName = "CRBCNXTThuoc_ToanBV_RPT";
            sqlad.Dispose(); cmd.Dispose(); sqlad = null;
            cmd = null;
            // if (SQLConnectionBD.State == System.Data.ConnectionState.Closed)
            //SQLConnectionBD.Close(); SQLConnectionBD.Dispose();
            //if (_sqlConnection.State == System.Data.ConnectionState.Closed)
            {
                //_sqlConnection.Close(); _sqlConnection.Dispose();
                //_sqlConnection = null;
            }
            return ds;

        }
        public override DataSet RptGetMauBCBCNHAPTRATHUOC(string ACCOUNT, DateTime _TUNGAYYC, DateTime _DENNGAYYC, int LOAIPHIEU, string MAKHO, string MANHOM, string MACHUNGLOAI, string MAPL, string _DK)
        {
            DataSet ds = new DataSet("CRBCNHAPTRATHUOC_RPT");
            //string[] s = { "CRBCNHAPTRATHUOC_RPT" };
            //SqlHelper.FillDataset( ConnectionString, DatabaseOwner + ObjectQualifier + "spMAU_BCNHAPTRATHUOC ", ds, s, ACCOUNT, _TUNGAYYC, _DENNGAYYC, LOAIPHIEU, MAKHO, MANHOM, MACHUNGLOAI, MAPL, _DK);
            // // // // //// ds.WriteXmlSchema("CRBCNHAPTRATHUOC_RPT.xsd");
            System.Data.SqlClient.SqlCommand cmd = SqlHelper.CreateCommand(SQLConnectionData, DatabaseOwner + ObjectQualifier + "spMAU_BCNHAPTRATHUOC");

            cmd.CommandTimeout = 18000;
            cmd.CommandType = System.Data.CommandType.StoredProcedure;
            cmd.Parameters.AddWithValue("ACCOUNT", ACCOUNT);
            cmd.Parameters.AddWithValue("TUNGAY", _TUNGAYYC);
            cmd.Parameters.AddWithValue("DENNGAY", _DENNGAYYC);
            cmd.Parameters.AddWithValue("LOAIPHIEU", LOAIPHIEU);
            cmd.Parameters.AddWithValue("MAKHO", MAKHO);
            cmd.Parameters.AddWithValue("MANHOM", MANHOM);
            cmd.Parameters.AddWithValue("MACHUNGLOAI", MACHUNGLOAI);
            cmd.Parameters.AddWithValue("MAPL", MAPL);
            cmd.Parameters.AddWithValue("DK", _DK);

            System.Data.SqlClient.SqlDataAdapter sqlad = new System.Data.SqlClient.SqlDataAdapter(cmd);

            sqlad.Fill(ds);
            if (ds.Tables.Count > 0)
                ds.Tables[0].TableName = "CRBCNHAPTRATHUOC_RPT";
            sqlad.Dispose(); cmd.Dispose(); sqlad = null;
            cmd = null;
            // if (SQLConnectionBD.State == System.Data.ConnectionState.Closed)
            //SQLConnectionBD.Close(); SQLConnectionBD.Dispose();
            //if (_sqlConnection.State == System.Data.ConnectionState.Closed)
            {
                //_sqlConnection.Close(); _sqlConnection.Dispose();
                //_sqlConnection = null;
            }
            return ds;

        }
        public override DataSet crMauDuoc_TheKho(String _maKho, String _maThuoc, DateTime _tuNgay, DateTime _denNgay)
        {
            DataSet ds = new DataSet();
            //string[] s = { "crDuoc_TheKho" };
            //SqlHelper.FillDataset( ConnectionString, DatabaseOwner + ObjectQualifier + "SPMAU_THEKHO", ds, s, _maKho, _maThuoc, _tuNgay, _denNgay);
            // // // //// ds.WriteXmlSchema("crDuoc_TheKho.xsd");
            System.Data.SqlClient.SqlCommand cmd = SqlHelper.CreateCommand(SQLConnectionData, DatabaseOwner + ObjectQualifier + "SPMAU_THEKHO");

            cmd.CommandTimeout = 18000;
            cmd.CommandType = System.Data.CommandType.StoredProcedure;
            cmd.Parameters.AddWithValue("MAKHO", _maKho);
            cmd.Parameters.AddWithValue("maThuoc", _maThuoc);
            cmd.Parameters.AddWithValue("TUNGAY", _tuNgay);
            cmd.Parameters.AddWithValue("DENNGAY", _denNgay);
            System.Data.SqlClient.SqlDataAdapter sqlad = new System.Data.SqlClient.SqlDataAdapter(cmd);

            sqlad.Fill(ds);
            if (ds.Tables.Count > 0)
                ds.Tables[0].TableName = "crDuoc_TheKho";
            sqlad.Dispose(); cmd.Dispose(); sqlad = null;
            cmd = null;
            // if (SQLConnectionBD.State == System.Data.ConnectionState.Closed)
            //SQLConnectionBD.Close(); SQLConnectionBD.Dispose();
            //if (_sqlConnection.State == System.Data.ConnectionState.Closed)
            {
                //_sqlConnection.Close(); _sqlConnection.Dispose();
                //_sqlConnection = null;
            }
            return ds;

        }
         
        public override DataSet crMauDuoc_BCNhapThuoc(String _account, DateTime _tuNgay, DateTime _denNgay, Byte _loaiPhieu, String _maKho, String _maNhom, String _maChungLoai, String _maPL, String _dK)
        {
            DataSet ds = new DataSet("crDuoc_BCNhapThuoc");
            //string[] s = { "crDuoc_BCNhapThuoc" };
            //SqlHelper.FillDataset( ConnectionString, DatabaseOwner + ObjectQualifier + "spMAU_BCNHAPTHUOC", ds, s, _account, _tuNgay, _denNgay, _loaiPhieu, _maKho, _maNhom, _maChungLoai, _maPL, _dK);
            // // // //// ds.WriteXmlSchema("crDuoc_BCNhapThuoc.xsd");
            System.Data.SqlClient.SqlCommand cmd = SqlHelper.CreateCommand(SQLConnectionData, DatabaseOwner + ObjectQualifier + "spMAU_BCNHAPTHUOC");

            cmd.CommandTimeout = 18000;
            cmd.CommandType = System.Data.CommandType.StoredProcedure;
            cmd.Parameters.AddWithValue("ACCOUNT", _account);
            cmd.Parameters.AddWithValue("TUNGAY", _tuNgay);
            cmd.Parameters.AddWithValue("DENNGAY", _denNgay);
            cmd.Parameters.AddWithValue("LOAIPHIEU", _loaiPhieu);
            cmd.Parameters.AddWithValue("MAKHO", _maKho);
            cmd.Parameters.AddWithValue("MANHOM", _maNhom);
            cmd.Parameters.AddWithValue("MACHUNGLOAI", _maChungLoai);
            cmd.Parameters.AddWithValue("MAPL", _maPL);
            cmd.Parameters.AddWithValue("DK", _dK);

            System.Data.SqlClient.SqlDataAdapter sqlad = new System.Data.SqlClient.SqlDataAdapter(cmd);

            sqlad.Fill(ds);
            if (ds.Tables.Count > 0)
                ds.Tables[0].TableName = "crDuoc_BCNhapThuoc";
            sqlad.Dispose(); cmd.Dispose(); sqlad = null;
            cmd = null;
            // if (SQLConnectionBD.State == System.Data.ConnectionState.Closed)
            //SQLConnectionBD.Close(); SQLConnectionBD.Dispose();
            //if (_sqlConnection.State == System.Data.ConnectionState.Closed)
            {
                //_sqlConnection.Close(); _sqlConnection.Dispose();
                //_sqlConnection = null;
            }
            return ds;

        }
        public override DataSet RptGetMauBCXUATTHUOC(string ACCOUNT, DateTime _TUNGAYYC, DateTime _DENNGAYYC, int LOAIPHIEU, string MAKHO, string MANHOM, string MACHUNGLOAI, string MAPL, string _DK)
        {
            DataSet ds = new DataSet("CRBCXuatthuoc_RPT");
            //string[] s = { "CRBCXuatthuoc_RPT" };
            //SqlHelper.FillDataset( ConnectionString, DatabaseOwner + ObjectQualifier + "SPMAU_BCXUATTHUOC ", ds, s, ACCOUNT, _TUNGAYYC, _DENNGAYYC, LOAIPHIEU, MAKHO, MANHOM, MACHUNGLOAI, MAPL, _DK);
            // // // //// ds.WriteXmlSchema("CRBCXuatthuoc_RPT.xsd");
            System.Data.SqlClient.SqlCommand cmd = SqlHelper.CreateCommand(SQLConnectionData, DatabaseOwner + ObjectQualifier + "SPMAU_BCXUATTHUOC");

            cmd.CommandTimeout = 18000;
            cmd.CommandType = System.Data.CommandType.StoredProcedure;
            cmd.Parameters.AddWithValue("ACCOUNT", ACCOUNT);
            cmd.Parameters.AddWithValue("TUNGAY", _TUNGAYYC);
            cmd.Parameters.AddWithValue("DENNGAY", _DENNGAYYC);
            cmd.Parameters.AddWithValue("LOAIPHIEU", LOAIPHIEU);
            cmd.Parameters.AddWithValue("MAKHO", MAKHO);
            cmd.Parameters.AddWithValue("MANHOM", MANHOM);
            cmd.Parameters.AddWithValue("MACHUNGLOAI", MACHUNGLOAI);
            cmd.Parameters.AddWithValue("MAPL", MAPL);
            cmd.Parameters.AddWithValue("DK", _DK);

            System.Data.SqlClient.SqlDataAdapter sqlad = new System.Data.SqlClient.SqlDataAdapter(cmd);

            sqlad.Fill(ds);
            if (ds.Tables.Count > 0)
                ds.Tables[0].TableName = "CRBCXuatthuoc_RPT";
            sqlad.Dispose(); cmd.Dispose(); sqlad = null;
            cmd = null;
            // if (SQLConnectionBD.State == System.Data.ConnectionState.Closed)
            //SQLConnectionBD.Close(); SQLConnectionBD.Dispose();
            //if (_sqlConnection.State == System.Data.ConnectionState.Closed)
            {
                //_sqlConnection.Close(); _sqlConnection.Dispose();
                //_sqlConnection = null;
            }
            return ds;

        }
        public override DataSet RptGetMauBCXUATTHUOC_C(string ACCOUNT, DateTime _TUNGAYYC, DateTime _DENNGAYYC, int LOAIPHIEU, string MAKHO, string MANHOM, string MACHUNGLOAI, string MAPL, string _DK)
        {
            DataSet ds = new DataSet("CRBCXuatthuoc_C_RPT");
            //string[] s = { "CRBCXuatthuoc_C_RPT" };
            //SqlHelper.FillDataset( ConnectionString, DatabaseOwner + ObjectQualifier + "SPMAU_BCXUATTHUOC ", ds, s, ACCOUNT, _TUNGAYYC, _DENNGAYYC, LOAIPHIEU, MAKHO, MANHOM, MACHUNGLOAI, MAPL, _DK);
            // // // //// ds.WriteXmlSchema("CRBCXuatthuoc_C_RPT.xsd");
            System.Data.SqlClient.SqlCommand cmd = SqlHelper.CreateCommand(SQLConnectionData, DatabaseOwner + ObjectQualifier + "SPMAU_BCXUATTHUOC");

            cmd.CommandTimeout = 18000;
            cmd.CommandType = System.Data.CommandType.StoredProcedure;
            cmd.Parameters.AddWithValue("ACCOUNT", ACCOUNT);
            cmd.Parameters.AddWithValue("TUNGAY", _TUNGAYYC);
            cmd.Parameters.AddWithValue("DENNGAY", _DENNGAYYC);
            cmd.Parameters.AddWithValue("LOAIPHIEU", LOAIPHIEU);
            cmd.Parameters.AddWithValue("MAKHO", MAKHO);
            cmd.Parameters.AddWithValue("MANHOM", MANHOM);
            cmd.Parameters.AddWithValue("MACHUNGLOAI", MACHUNGLOAI);
            cmd.Parameters.AddWithValue("MAPL", MAPL);
            cmd.Parameters.AddWithValue("DK", _DK);

            System.Data.SqlClient.SqlDataAdapter sqlad = new System.Data.SqlClient.SqlDataAdapter(cmd);

            sqlad.Fill(ds);
            if (ds.Tables.Count > 0)
                ds.Tables[0].TableName = "CRBCXuatthuoc_C_RPT";
            sqlad.Dispose(); cmd.Dispose(); sqlad = null;
            cmd = null;
            // if (SQLConnectionBD.State == System.Data.ConnectionState.Closed)
            //SQLConnectionBD.Close(); SQLConnectionBD.Dispose();
            //if (_sqlConnection.State == System.Data.ConnectionState.Closed)
            {
                //_sqlConnection.Close(); _sqlConnection.Dispose();
                //_sqlConnection = null;
            }
            return ds;

        }
        public override DataSet crMauTonKhoa_GetAll(DateTime _thang, String _maKhoa, String _dK)
        {
            DataSet ds = new DataSet("crTonKhoa_GetAll");
            //string[] s ={ "crTonKhoa_GetAll" };
            //SqlHelper.FillDataset( ConnectionString, DatabaseOwner + ObjectQualifier + "spMauTonkhoa_GetAll", ds, s, _thang, _maKhoa, _dK);
            // // // //// ds.WriteXmlSchema("crTonKhoa_GetAll.xsd");
            System.Data.SqlClient.SqlCommand cmd = SqlHelper.CreateCommand(SQLConnectionData, DatabaseOwner + ObjectQualifier + "spMauTonkhoa_GetAll");

            cmd.CommandTimeout = 18000;
            cmd.CommandType = System.Data.CommandType.StoredProcedure;
            cmd.Parameters.AddWithValue("thang", _thang);
            cmd.Parameters.AddWithValue("MaKhoa", _maKhoa);
            cmd.Parameters.AddWithValue("DK", _dK);
            System.Data.SqlClient.SqlDataAdapter sqlad = new System.Data.SqlClient.SqlDataAdapter(cmd);

            sqlad.Fill(ds);
            if (ds.Tables.Count > 0)
                ds.Tables[0].TableName = "crTonKhoa_GetAll";
            sqlad.Dispose(); cmd.Dispose(); sqlad = null;
            cmd = null;
            // if (SQLConnectionBD.State == System.Data.ConnectionState.Closed)
            //SQLConnectionBD.Close(); SQLConnectionBD.Dispose();
            //if (_sqlConnection.State == System.Data.ConnectionState.Closed)
            {
                //_sqlConnection.Close(); _sqlConnection.Dispose();
                //_sqlConnection = null;
            }
            return ds;

        }
        public override DataSet crMauBCDinhmucVT(DateTime _tuNgay, DateTime _denNgay, String _maDV, String _maNhanVien, String _dK)
        {
            DataSet ds = new DataSet("crMauBCDinhmucVT");
            //string[] s ={ "crMauBCDinhmucVT" };
            //SqlHelper.FillDataset( SQLConnectionBD, DatabaseOwner + ObjectQualifier + "sp_BCDinhMucVTTH", ds, s, _tuNgay, _denNgay, _maDV, _maNhanVien, _dK);
            // // // //// ds.WriteXmlSchema("crMauBCDinhmucVT.xsd");
            System.Data.SqlClient.SqlCommand cmd = SqlHelper.CreateCommand(SQLConnectionData, DatabaseOwner + ObjectQualifier + "sp_BCDinhMucVTTH");

            cmd.CommandTimeout = 18000;
            cmd.CommandType = System.Data.CommandType.StoredProcedure;
            cmd.Parameters.AddWithValue("TUNGAY", _tuNgay);
            cmd.Parameters.AddWithValue("DENNGAY", _denNgay);
            cmd.Parameters.AddWithValue("MADV", _maDV);
            cmd.Parameters.AddWithValue("MANV", _maNhanVien);
            cmd.Parameters.AddWithValue("dK", _dK);

            System.Data.SqlClient.SqlDataAdapter sqlad = new System.Data.SqlClient.SqlDataAdapter(cmd);

            sqlad.Fill(ds);
            if (ds.Tables.Count > 0)
                ds.Tables[0].TableName = "crMauBCDinhmucVT";
            sqlad.Dispose(); cmd.Dispose(); sqlad = null;
            cmd = null;
            // if (SQLConnectionBD.State == System.Data.ConnectionState.Closed)
            //SQLConnectionBD.Close(); SQLConnectionBD.Dispose();
            //if (_sqlConnection.State == System.Data.ConnectionState.Closed)
            {
                //_sqlConnection.Close(); _sqlConnection.Dispose();
                //_sqlConnection = null;
            }
            return ds;

        }
        public override DataSet crMauBCDinhmucHC(DateTime _tuNgay, DateTime _denNgay, String _maDV, String _maNhanVien, String _dK)
        {
            DataSet ds = new DataSet("crMauBCDinhmucVT");
            //string[] s ={ "crMauBCDinhmucVT" };
            //SqlHelper.FillDataset( SQLConnectionBD, DatabaseOwner + ObjectQualifier + "sp_BCDinhMucVTTH", ds, s, _tuNgay, _denNgay, _maDV, _maNhanVien, _dK);
            // // // //// ds.WriteXmlSchema("crMauBCDinhmucVT.xsd");
            System.Data.SqlClient.SqlCommand cmd = SqlHelper.CreateCommand(SQLConnectionData, DatabaseOwner + ObjectQualifier + "sp_BCDinhMucHoaChat");

            cmd.CommandTimeout = 18000;
            cmd.CommandType = System.Data.CommandType.StoredProcedure;
            cmd.Parameters.AddWithValue("TUNGAY", _tuNgay);
            cmd.Parameters.AddWithValue("DENNGAY", _denNgay);
            cmd.Parameters.AddWithValue("MADV", _maDV);
            cmd.Parameters.AddWithValue("MANV", _maNhanVien);
            cmd.Parameters.AddWithValue("dK", _dK);

            System.Data.SqlClient.SqlDataAdapter sqlad = new System.Data.SqlClient.SqlDataAdapter(cmd);

            sqlad.Fill(ds);
            if (ds.Tables.Count > 0)
                ds.Tables[0].TableName = "crMauBCDinhmucVT";
            sqlad.Dispose(); cmd.Dispose(); sqlad = null;
            cmd = null;
            // if (SQLConnectionBD.State == System.Data.ConnectionState.Closed)
            //SQLConnectionBD.Close(); SQLConnectionBD.Dispose();
            //if (_sqlConnection.State == System.Data.ConnectionState.Closed)
            {
                //_sqlConnection.Close(); _sqlConnection.Dispose();
                //_sqlConnection = null;
            }
            return ds;

        }

        public override DataSet crBCThuocHanDung(String _MaKho, DateTime _HanDung, String _MaNhomThuoc, String _MaChungLoai, String _MaPhanLoai, String _dK)
        {
            DataSet ds = new DataSet("crBCThuocHanDung");
            //   string[] s ={ "crBCThuocHanDung" };
            //   SqlHelper.FillDataset( SQLConnectionBD, DatabaseOwner + ObjectQualifier + "SPDUOC_BCHANDUNG", ds, s,  _MaKho,  _HanDung,  _MaNhomThuoc, _MaChungLoai,  _MaPhanLoai,   _dK);
            ////   // // //// ds.WriteXmlSchema("crBCThuocHanDung.xsd");
            System.Data.SqlClient.SqlCommand cmd = SqlHelper.CreateCommand(SQLConnectionData, DatabaseOwner + ObjectQualifier + "SPDUOC_BCHANDUNG");

            cmd.CommandTimeout = 18000;
            cmd.CommandType = System.Data.CommandType.StoredProcedure;
            cmd.Parameters.AddWithValue("MaKho", _MaKho);
            cmd.Parameters.AddWithValue("HANDUNG", _HanDung);
            cmd.Parameters.AddWithValue("MaNT", _MaNhomThuoc);
            cmd.Parameters.AddWithValue("MACHUNGLOAI", _MaChungLoai);
            cmd.Parameters.AddWithValue("MAPL", _MaPhanLoai);
            cmd.Parameters.AddWithValue("DK", _dK);

            System.Data.SqlClient.SqlDataAdapter sqlad = new System.Data.SqlClient.SqlDataAdapter(cmd);

            sqlad.Fill(ds);
            if (ds.Tables.Count > 0)
                ds.Tables[0].TableName = "crBCThuocHanDung";
            sqlad.Dispose(); cmd.Dispose(); sqlad = null;
            cmd = null;
            // if (SQLConnectionBD.State == System.Data.ConnectionState.Closed)
            //SQLConnectionBD.Close(); SQLConnectionBD.Dispose();
            //if (_sqlConnection.State == System.Data.ConnectionState.Closed)
            {
                //_sqlConnection.Close(); _sqlConnection.Dispose();
                //_sqlConnection = null;
            }
            return ds;

        }
        public override DataSet crBCMauHanDung(String _MaKho, DateTime _HanDung, String _MaNhomThuoc, String _MaChungLoai, String _MaPhanLoai, String _dK)
        {
            DataSet ds = new DataSet("crBCMauHanDung");
            //string[] s ={ "crBCMauHanDung" };
            //SqlHelper.FillDataset( SQLConnectionBD, DatabaseOwner + ObjectQualifier + "SPMAU_BCHANDUNG", ds, s, _MaKho, _HanDung, _MaNhomThuoc, _MaChungLoai, _MaPhanLoai, _dK);
            //// // //// ds.WriteXmlSchema("crBCMauHanDung.xsd");
            System.Data.SqlClient.SqlCommand cmd = SqlHelper.CreateCommand(SQLConnectionData, DatabaseOwner + ObjectQualifier + "SPMAU_BCHANDUNG");

            cmd.CommandTimeout = 18000;
            cmd.CommandType = System.Data.CommandType.StoredProcedure;
            cmd.Parameters.AddWithValue("MaKho", _MaKho);
            cmd.Parameters.AddWithValue("HANDUNG", _HanDung);
            cmd.Parameters.AddWithValue("MaNT", _MaNhomThuoc);
            cmd.Parameters.AddWithValue("MACHUNGLOAI", _MaChungLoai);
            cmd.Parameters.AddWithValue("MALH", _MaPhanLoai);
            cmd.Parameters.AddWithValue("DK", _dK);


            System.Data.SqlClient.SqlDataAdapter sqlad = new System.Data.SqlClient.SqlDataAdapter(cmd);

            sqlad.Fill(ds);
            if (ds.Tables.Count > 0)
                ds.Tables[0].TableName = "crBCMauHanDung";
            sqlad.Dispose(); cmd.Dispose(); sqlad = null;
            cmd = null;
            // if (SQLConnectionBD.State == System.Data.ConnectionState.Closed)
            //SQLConnectionBD.Close(); SQLConnectionBD.Dispose();
            //if (_sqlConnection.State == System.Data.ConnectionState.Closed)
            {
                //_sqlConnection.Close(); _sqlConnection.Dispose();
                //_sqlConnection = null;
            }
            return ds;

        }
        public override DataSet crBCVTHanDung(String _MaKho, DateTime _HanDung, String _MaNhomThuoc, String _MaChungLoai, String _MaPhanLoai, String _dK)
        {
            DataSet ds = new DataSet("crBCVTHanDung");
            //string[] s ={ "crBCVTHanDung" };
            //SqlHelper.FillDataset( SQLConnectionBD, DatabaseOwner + ObjectQualifier + "SPVTYT_BCHANDUNG", ds, s, _MaKho, _HanDung, _MaNhomThuoc, _MaChungLoai, _MaPhanLoai, _dK);
            // //// ds.WriteXmlSchema("crBCVTHanDungt.xsd");
            System.Data.SqlClient.SqlCommand cmd = SqlHelper.CreateCommand(SQLConnectionData, DatabaseOwner + ObjectQualifier + "SPVTYT_BCHANDUNG");

            cmd.CommandTimeout = 18000;
            cmd.CommandType = System.Data.CommandType.StoredProcedure;
            cmd.Parameters.AddWithValue("MaKho", _MaKho);
            cmd.Parameters.AddWithValue("HANDUNG", _HanDung);
            cmd.Parameters.AddWithValue("MaNT", _MaNhomThuoc);
            cmd.Parameters.AddWithValue("MACHUNGLOAI", _MaChungLoai);
            cmd.Parameters.AddWithValue("MALH", _MaPhanLoai);
            cmd.Parameters.AddWithValue("DK", _dK);


            System.Data.SqlClient.SqlDataAdapter sqlad = new System.Data.SqlClient.SqlDataAdapter(cmd);

            sqlad.Fill(ds);
            if (ds.Tables.Count > 0)
                ds.Tables[0].TableName = "crBCVTHanDung";
            sqlad.Dispose(); cmd.Dispose(); sqlad = null;
            cmd = null;
            // if (SQLConnectionBD.State == System.Data.ConnectionState.Closed)
            //SQLConnectionBD.Close(); SQLConnectionBD.Dispose();
            //if (_sqlConnection.State == System.Data.ConnectionState.Closed)
            {
                //_sqlConnection.Close(); _sqlConnection.Dispose();
                //_sqlConnection = null;
            }
            return ds;

        }
        public override DataSet crBCHCHanDung(String _MaKho, DateTime _HanDung, String _MaNhomThuoc, String _MaChungLoai, String _MaPhanLoai, String _dK)
        {
            DataSet ds = new DataSet("crBCHCHanDung");
            //string[] s ={ "crBCHCHanDung"};
            //SqlHelper.FillDataset( SQLConnectionBD, DatabaseOwner + ObjectQualifier + "SPHOACHAT_BCHANDUNG", ds, s, _MaKho, _HanDung, _MaNhomThuoc, _MaChungLoai, _MaPhanLoai, _dK);
            //// // //// ds.WriteXmlSchema("crBCHCHanDung.xsd");
            System.Data.SqlClient.SqlCommand cmd = SqlHelper.CreateCommand(SQLConnectionData, DatabaseOwner + ObjectQualifier + "SPHOACHAT_BCHANDUNG");

            cmd.CommandTimeout = 18000;
            cmd.CommandType = System.Data.CommandType.StoredProcedure;
            cmd.Parameters.AddWithValue("MaKho", _MaKho);
            cmd.Parameters.AddWithValue("HANDUNG", _HanDung);
            cmd.Parameters.AddWithValue("MaNT", _MaNhomThuoc);
            cmd.Parameters.AddWithValue("MACHUNGLOAI", _MaChungLoai);
            cmd.Parameters.AddWithValue("MALH", _MaPhanLoai);
            cmd.Parameters.AddWithValue("DK", _dK);

            System.Data.SqlClient.SqlDataAdapter sqlad = new System.Data.SqlClient.SqlDataAdapter(cmd);

            sqlad.Fill(ds);
            if (ds.Tables.Count > 0)
                ds.Tables[0].TableName = "crBCHCHanDung";
            sqlad.Dispose(); cmd.Dispose(); sqlad = null;
            cmd = null;
            // if (SQLConnectionBD.State == System.Data.ConnectionState.Closed)
            //SQLConnectionBD.Close(); SQLConnectionBD.Dispose();
            //if (_sqlConnection.State == System.Data.ConnectionState.Closed)
            {
                //_sqlConnection.Close(); _sqlConnection.Dispose();
                //_sqlConnection = null;
            }
            return ds;

        }
        public override DataSet crBCThuocNguong(String _MaKho, String _MaNhomThuoc, String _MaChungLoai, String _MaPhanLoai, String _dK)
        {
            DataSet ds = new DataSet("crBCThuocHanDung");
            //string[] s ={ "crBCThuocHanDung" };
            //SqlHelper.FillDataset( SQLConnectionBD, DatabaseOwner + ObjectQualifier + "SPDUOC_BCNguongThuoc", ds, s, _MaKho,  _MaNhomThuoc, _MaChungLoai, _MaPhanLoai, _dK);
            //  //// ds.WriteXmlSchema("crBCThuocNguong.xsd");
            System.Data.SqlClient.SqlCommand cmd = SqlHelper.CreateCommand(SQLConnectionData, DatabaseOwner + ObjectQualifier + "SPDUOC_BCNguongThuoc");

            cmd.CommandTimeout = 18000;
            cmd.CommandType = System.Data.CommandType.StoredProcedure;
            cmd.Parameters.AddWithValue("MaKho", _MaKho);
            cmd.Parameters.AddWithValue("MaNT", _MaNhomThuoc);
            cmd.Parameters.AddWithValue("MACHUNGLOAI", _MaChungLoai);
            cmd.Parameters.AddWithValue("MAPL", _MaPhanLoai);
            cmd.Parameters.AddWithValue("DK", _dK);

            System.Data.SqlClient.SqlDataAdapter sqlad = new System.Data.SqlClient.SqlDataAdapter(cmd);

            sqlad.Fill(ds);
            if (ds.Tables.Count > 0)
                ds.Tables[0].TableName = "crBCThuocHanDung";
            sqlad.Dispose(); cmd.Dispose(); sqlad = null;
            cmd = null;
            // if (SQLConnectionBD.State == System.Data.ConnectionState.Closed)
            //SQLConnectionBD.Close(); SQLConnectionBD.Dispose();
            //if (_sqlConnection.State == System.Data.ConnectionState.Closed)
            {
                //_sqlConnection.Close(); _sqlConnection.Dispose();
                //_sqlConnection = null;
            }
            return ds;

        }
        public override DataSet crBCMauNguong(String _MaKho, String _MaNhomThuoc, String _MaChungLoai, String _MaPhanLoai, String _dK)
        {
            DataSet ds = new DataSet("crBCMauHanDung");
            //string[] s ={ "crBCMauHanDung" };
            //SqlHelper.FillDataset( SQLConnectionBD, DatabaseOwner + ObjectQualifier + "SPMAU_BCNguongThuoc", ds, s, _MaKho, _MaNhomThuoc, _MaChungLoai, _MaPhanLoai, _dK);
            //// // //// ds.WriteXmlSchema("crBCMauNguong.xsd");
            System.Data.SqlClient.SqlCommand cmd = SqlHelper.CreateCommand(SQLConnectionData, DatabaseOwner + ObjectQualifier + "SPDUOC_BCNguongThuoc");

            cmd.CommandTimeout = 18000;
            cmd.CommandType = System.Data.CommandType.StoredProcedure;
            cmd.Parameters.AddWithValue("MaKho", _MaKho);
            cmd.Parameters.AddWithValue("MANT", _MaNhomThuoc);
            cmd.Parameters.AddWithValue("MACHUNGLOAI", _MaChungLoai);
            cmd.Parameters.AddWithValue("MAPL", _MaPhanLoai);
            cmd.Parameters.AddWithValue("DK", _dK);

            System.Data.SqlClient.SqlDataAdapter sqlad = new System.Data.SqlClient.SqlDataAdapter(cmd);

            sqlad.Fill(ds);
            if (ds.Tables.Count > 0)
                ds.Tables[0].TableName = "crBCMauHanDung";
            sqlad.Dispose(); cmd.Dispose(); sqlad = null;
            cmd = null;
            // if (SQLConnectionBD.State == System.Data.ConnectionState.Closed)
            //SQLConnectionBD.Close(); SQLConnectionBD.Dispose();
            //if (_sqlConnection.State == System.Data.ConnectionState.Closed)
            {
                //_sqlConnection.Close(); _sqlConnection.Dispose();
                //_sqlConnection = null;
            }
            return ds;

        }
        public override DataSet crBCVTNguong(String _MaKho, String _MaNhomThuoc, String _MaChungLoai, String _MaPhanLoai, String _dK)
        {
            DataSet ds = new DataSet("crBCVTHanDung");
            //string[] s ={ "crBCVTHanDung" };
            //SqlHelper.FillDataset( SQLConnectionBD, DatabaseOwner + ObjectQualifier + "SPVTYT_BCNguongThuoc", ds, s, _MaKho, _MaNhomThuoc, _MaChungLoai, _MaPhanLoai, _dK);
            // // // //// ds.WriteXmlSchema("crBCVTNguong.xsd");
            System.Data.SqlClient.SqlCommand cmd = SqlHelper.CreateCommand(SQLConnectionData, DatabaseOwner + ObjectQualifier + "SPVTYT_BCNguongThuoc");

            cmd.CommandTimeout = 18000;
            cmd.CommandType = System.Data.CommandType.StoredProcedure;
            cmd.Parameters.AddWithValue("MaKho", _MaKho);
            cmd.Parameters.AddWithValue("MANT", _MaNhomThuoc);
            cmd.Parameters.AddWithValue("MACHUNGLOAI", _MaChungLoai);
            cmd.Parameters.AddWithValue("MAPL", _MaPhanLoai);
            cmd.Parameters.AddWithValue("DK", _dK);

            System.Data.SqlClient.SqlDataAdapter sqlad = new System.Data.SqlClient.SqlDataAdapter(cmd);

            sqlad.Fill(ds);
            if (ds.Tables.Count > 0)
                ds.Tables[0].TableName = "crBCVTHanDung";
            sqlad.Dispose(); cmd.Dispose(); sqlad = null;
            cmd = null;
            // if (SQLConnectionBD.State == System.Data.ConnectionState.Closed)
            //SQLConnectionBD.Close(); SQLConnectionBD.Dispose();
            //if (_sqlConnection.State == System.Data.ConnectionState.Closed)
            {
                //_sqlConnection.Close(); _sqlConnection.Dispose();
                //_sqlConnection = null;
            }
            return ds;

        }
        public override DataSet crBCHCNguong(String _MaKho, String _MaNhomThuoc, String _MaChungLoai, String _MaPhanLoai, String _dK)
        {
            DataSet ds = new DataSet("crBCHCHanDung");
            //string[] s ={ "crBCHCHanDung" };
            //SqlHelper.FillDataset( SQLConnectionBD, DatabaseOwner + ObjectQualifier + "SPHOACHAT_BCNguongThuoc", ds, s, _MaKho, _MaNhomThuoc, _MaChungLoai, _MaPhanLoai, _dK);
            //// // //// ds.WriteXmlSchema("crBCHCNguong.xsd");
            System.Data.SqlClient.SqlCommand cmd = SqlHelper.CreateCommand(SQLConnectionData, DatabaseOwner + ObjectQualifier + "SPHOACHAT_BCNguongThuoc");

            cmd.CommandTimeout = 18000;
            cmd.CommandType = System.Data.CommandType.StoredProcedure;
            cmd.Parameters.AddWithValue("MaKho", _MaKho);
            cmd.Parameters.AddWithValue("MANT", _MaNhomThuoc);
            cmd.Parameters.AddWithValue("MACHUNGLOAI ", _MaChungLoai);
            cmd.Parameters.AddWithValue("MALH", _MaPhanLoai);
            cmd.Parameters.AddWithValue("DK", _dK);

            System.Data.SqlClient.SqlDataAdapter sqlad = new System.Data.SqlClient.SqlDataAdapter(cmd);

            sqlad.Fill(ds);
            if (ds.Tables.Count > 0)
                ds.Tables[0].TableName = "crBCHCHanDung";
            sqlad.Dispose(); cmd.Dispose(); sqlad = null;
            cmd = null;
            // if (SQLConnectionBD.State == System.Data.ConnectionState.Closed)
            //SQLConnectionBD.Close(); SQLConnectionBD.Dispose();
            //if (_sqlConnection.State == System.Data.ConnectionState.Closed)
            {
                //_sqlConnection.Close(); _sqlConnection.Dispose();
                //_sqlConnection = null;
            }
            return ds;

        }
        public override DataSet RptMauTonKhoTheoHD(DateTime _tuNgay, DateTime _denNgay, string _maKho, int _loaiBC, string _maNhom, string _maChungLoai, string _maPL, string _dK)
        {
            DataSet ds = new DataSet("CRBCTonKhoTheoHD_RPT");
            //string[] s = { "CRBCTonKhoTheoHD_RPT" };
            //SqlHelper.FillDataset( ConnectionString, DatabaseOwner + ObjectQualifier + "SPMau_BCNHAPXUATTON", ds, s, _tuNgay, _denNgay, _maKho, _loaiBC, _maNhom, _maChungLoai, _maPL, _dK);
            // // // //// ds.WriteXmlSchema("CRBCTonKhoTheoHD_RPT.xsd");
            System.Data.SqlClient.SqlCommand cmd = SqlHelper.CreateCommand(SQLConnectionData, DatabaseOwner + ObjectQualifier + "SPMau_BCNHAPXUATTON");

            cmd.CommandTimeout = 18000;
            cmd.CommandType = System.Data.CommandType.StoredProcedure;
            cmd.Parameters.AddWithValue("TuNgay", _tuNgay);
            cmd.Parameters.AddWithValue("DenNgay", _denNgay);
            cmd.Parameters.AddWithValue("MAKHO", _maKho);
            cmd.Parameters.AddWithValue("LOAIBC", _loaiBC);
            cmd.Parameters.AddWithValue("MANHOM", _maNhom);
            cmd.Parameters.AddWithValue("MACHUNGLOAI", _maChungLoai);
            cmd.Parameters.AddWithValue("MAPL", _maPL);
            cmd.Parameters.AddWithValue("dK", _dK);


            System.Data.SqlClient.SqlDataAdapter sqlad = new System.Data.SqlClient.SqlDataAdapter(cmd);

            sqlad.Fill(ds);
            if (ds.Tables.Count > 0)
                ds.Tables[0].TableName = "CRBCTonKhoTheoHD_RPT";
            sqlad.Dispose(); cmd.Dispose(); sqlad = null;
            cmd = null;
            // if (SQLConnectionBD.State == System.Data.ConnectionState.Closed)
            //SQLConnectionBD.Close(); SQLConnectionBD.Dispose();
            //if (_sqlConnection.State == System.Data.ConnectionState.Closed)
            {
                //_sqlConnection.Close(); _sqlConnection.Dispose();
                //_sqlConnection = null;
            }
            return ds;

        }

        public override DataSet CRMauPhieuLinh_RPTa(DateTime _TUNGAYYC, DateTime _DENNGAYYC, Boolean _Duyet, Boolean _Phat, string _MaDT, string _MaKho, string _MAKHOA, Boolean _DADUNG, string _dk)
        {
            DataSet ds = new DataSet();
            string[] s = { "CRPhieuLinh_RPTa" };
            SqlHelper.FillDataset(SQLConnectionData, DatabaseOwner + ObjectQualifier + "spKhambenh_MAU_BN_gets", ds, s, _TUNGAYYC, _DENNGAYYC, _Duyet, _Phat, _MaDT, _MaKho, _MAKHOA, _DADUNG, _dk);
            //// //// ds.WriteXmlSchema("CRPhieuLinh_DY.xsd");
            return ds;
        }
        public override DataSet CRMauBCPhatChoBN_RPT(DateTime _tuNgay, DateTime _denNgay, Boolean _duyet, Boolean _phat, string _maDT, string _maKho, string _maKhoa, Boolean _daDung, string _dK)
        {
            DataSet ds = new DataSet("CRMauBCPhatChoBN_RPT");
            //string[] s = { "CRMauBCPhatChoBN_RPT" };
            //SqlHelper.FillDataset(ConnectionString, DatabaseOwner + ObjectQualifier + "spKhambenh_MAU_BN_gets", ds, s, _tuNgay, _denNgay, _duyet, _phat, _maDT, _maKho, _maKhoa, _daDung, _dK);
            //// //// ds.WriteXmlSchema("CRMauBCPhatChoBN_RPT.xsd");
            System.Data.SqlClient.SqlCommand cmd = SqlHelper.CreateCommand(SQLConnectionData, DatabaseOwner + ObjectQualifier + "spKhambenh_MAU_BN_gets");

            cmd.CommandTimeout = 18000;
            cmd.CommandType = System.Data.CommandType.StoredProcedure;
            cmd.Parameters.AddWithValue("TuNgay", _tuNgay);
            cmd.Parameters.AddWithValue("DenNgay", _denNgay);
            cmd.Parameters.AddWithValue("Duyet", _duyet);
            cmd.Parameters.AddWithValue("Phat", _phat);
            cmd.Parameters.AddWithValue("MaDT", _maDT);
            cmd.Parameters.AddWithValue("MaKho", _maKho);
            cmd.Parameters.AddWithValue("MAKHOA", _maKhoa);
            cmd.Parameters.AddWithValue("DADUNG", _daDung);
            cmd.Parameters.AddWithValue("dK", _dK);

            System.Data.SqlClient.SqlDataAdapter sqlad = new System.Data.SqlClient.SqlDataAdapter(cmd);

            sqlad.Fill(ds);
            if (ds.Tables.Count > 0)
                ds.Tables[0].TableName = "CRMauBCPhatChoBN_RPT";
            sqlad.Dispose(); cmd.Dispose(); sqlad = null;
            cmd = null;
            return ds;

        }
        #endregion
        #region Get List
        //MauPhieuNhap

        public override IDataReader GetMauPhieuNhap_GetAll(Boolean _qadmin, String _maKho, String _mNCC, DateTime _tuNgay, DateTime _denNgay, String _dKien)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spMauPhieuNHAP_GETALL", _qadmin, _maKho, _mNCC, _tuNgay, _denNgay, _dKien));
        }
        public override IDataReader GetAllMauPhieuNhap_Get(String _maMauPhieuNhap, Boolean _qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spMauPhieuNHAP_GET", _maMauPhieuNhap, _qadmin));
        }
        //MauPhieuNhap chi tiet
        public override IDataReader GetMauPhieuNhap_C_GetAll(Boolean _qadmin, String _maMauPhieu)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spMauPhieuNHAP_C_GETALL", _qadmin, _maMauPhieu));
        }
        public override IDataReader GetMauPhieuNhap_C_Get(String _maPN, decimal STT)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spMauPhieuNHAP_C_GET", _maPN, STT));
        }
        public override IDataReader GetMauPhieuXuat(String _mapx, Boolean _qadmin, byte _loaiMauPhieu, Boolean _daphat)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spMauPhieuXuat_Get", _mapx, _qadmin, _loaiMauPhieu, _daphat));
        }
        public override IDataReader GetAllMauPhieuXuat(Boolean _qadmin, String _maKho, Byte _loaiMauPhieu, Boolean _daPhat, DateTime _tuNgay, DateTime _denNgay, String _dieuKienThem, Boolean _daduyet)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spMauPhieuXuat_GetAll", _qadmin, _maKho, _loaiMauPhieu, _daPhat, _tuNgay, _denNgay, _dieuKienThem, _daduyet));
        }
        public override IDataReader GetMauPhieuXuat_C(String _mapx, Byte _orderNumber)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spMauPhieuXuat_Get", _mapx, _orderNumber));
        }

        public override IDataReader GetMauNhapTra(String _mapx, Boolean _qadmin, byte _loaiMauPhieu, byte _daphat)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spMauNhapTra_Get", _mapx, _qadmin, _loaiMauPhieu, _daphat));
        }
        public override IDataReader GetAllMauNhapTra(Boolean _qadmin, String _maKho, Byte _loaiMauPhieu, Byte _daPhat, DateTime _tuNgay, DateTime _denNgay, String _dieuKienThem)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spMauNhapTra_GetAll", _qadmin, _maKho, _loaiMauPhieu, _daPhat, _tuNgay, _denNgay, _dieuKienThem));
        }
        public override IDataReader GetMauNhapTra_C(String _mapx, Byte _orderNumber)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spMauNhapTra_Get", _mapx, _orderNumber));
        }
        public override IDataReader GetMauXuatTra(String _maPXT, Boolean _qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spMauXuatTra_GET", _maPXT, _qadmin));
        }
        public override IDataReader GetAllMauXuatTra(Boolean _qadmin, String makho, String maNCC, DateTime tungay, DateTime denngay, String dieukienthem)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spMauXuatTra_GetAll", _qadmin, makho, maNCC, tungay, denngay, dieukienthem));
        }
        public override IDataReader GetMauXuatTra_C(String _maPXT, Decimal STT)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spMauXuatTra_C_GET", _maPXT, STT));
        }
        public override IDataReader GetAllMauKiemNhap(String _maMauPhieu, Boolean _qadmin, Byte loai)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spMauKiemNHAP_GETALL", _maMauPhieu, _qadmin, loai));
        }
        public override IDataReader GetMauTonDau(String _makho)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spMauTonDAU_GET", _makho));
        }

        public override IDataReader GetMauTonDauKhoa(String makhoa)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spMauTonDAUKhoa_GET", makhoa));
        }

        public override IDataReader GetMauKiemKe(String _maKK, bool qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spMauKiemKE_GET", _maKK, qadmin));
        }
        public override IDataReader GetAllMauKiemKe(String makho, DateTime tungay, DateTime denngay, String dieukienthem, bool qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spMauKiemKe_GETALL", makho, tungay, denngay, dieukienthem, qadmin));
        }
        public override IDataReader GetMauKiemKe_C(String _maKK, Decimal _sTT)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spMauKiemKE_C_GET", _maKK, _sTT));
        }
        public override IDataReader GetMauKiemKe_HD(String _mAKK, Decimal _sTT)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spMauKiemKE_HD_GET", _mAKK, _sTT));
        }
        public override IDataReader GetMauPhieuDoiThuoc(String _maDThuoc, bool _qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spMauPhieuDoiThuoc_GET", _maDThuoc, _qadmin));
        }
        public override IDataReader GetAllMauPhieuDoiThuoc(String makho, String maNCC, DateTime tungay, DateTime denngay, String dieukienthem, bool qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spMauPhieuDoiThuoc_GETALL", makho, maNCC, tungay, denngay, dieukienthem, qadmin));
        }
        public override IDataReader GetMauPhieuDoiThuoc_C(String _maDThuoc, Decimal _sTT)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spMauPhieuDoiThuoc_C_GET", _maDThuoc, _sTT));
        }
        public override IDataReader GetAllMauTonKhoa(DateTime ngayyclinh, string makhoa, String dk)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spmauTonkhoa_GetAll", ngayyclinh, makhoa, dk));
        }
        public override IDataReader GetsMauTonKhoa(DateTime tuthang, DateTime denthang, string makhoa, String dk)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spmauTonkhoa_Gets", tuthang, denthang, makhoa, dk));
        }

        public override IDataReader GetAllKhambenh_Mau_BN_gets(DateTime TuNgay, DateTime DenNgay, Boolean Duyet, Boolean Phat, String MaDT, String MaKho, String MAKHOA, Boolean dadung, String dk)
        {
            //    return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spKhambenh_Mau_BN_gets", TuNgay, DenNgay, Duyet, Phat, MaDT, MaKho, MAKHOA, dadung, dk));
            System.Data.SqlClient.SqlCommand cmd = SqlHelper.CreateCommand(SQLConnectionBD, DatabaseOwner + ObjectQualifier + "spKhambenh_Mau_BN_gets");

            cmd.CommandTimeout = 18000;
            cmd.CommandType = System.Data.CommandType.StoredProcedure;
            cmd.Parameters.AddWithValue("TuNgay", TuNgay);
            cmd.Parameters.AddWithValue("DenNgay", DenNgay);
            cmd.Parameters.AddWithValue("Duyet", Duyet);
            cmd.Parameters.AddWithValue("Phat", Phat);
            cmd.Parameters.AddWithValue("MaDT", MaDT);
            cmd.Parameters.AddWithValue("MaKho", MaKho);
            cmd.Parameters.AddWithValue("MaKhoa", MAKHOA);
            cmd.Parameters.AddWithValue("dadung", dadung);
            cmd.Parameters.AddWithValue("DK", dk);
            IDataReader dt;
            dt = (IDataReader)cmd.ExecuteReader(CommandBehavior.CloseConnection); ;
            cmd.Dispose();
            cmd = null;
            // if (SQLConnectionBD.State == System.Data.ConnectionState.Closed)
            //SQLConnectionBD.Close(); SQLConnectionBD.Dispose();
            //if (_sqlConnection.State == System.Data.ConnectionState.Closed)
            {
                //_sqlConnection.Close(); _sqlConnection.Dispose();
                //_sqlConnection = null;
            }
            return dt;
        }
        public override IDataReader GetAllKhambenh_Mau_CT_gets(DateTime TuNgay, DateTime DenNgay, Boolean Duyet, Boolean Phat, String MaDT, String MaKho, String MAKHOA, Boolean dadung, String dk)
        {
            //    return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spKhambenh_Mau_BN_gets", TuNgay, DenNgay, Duyet, Phat, MaDT, MaKho, MAKHOA, dadung, dk));
            System.Data.SqlClient.SqlCommand cmd = SqlHelper.CreateCommand(SQLConnectionBD, DatabaseOwner + ObjectQualifier + "spKhambenh_Mau_CT_gets");

            cmd.CommandTimeout = 18000;
            cmd.CommandType = System.Data.CommandType.StoredProcedure;
            cmd.Parameters.AddWithValue("TuNgay", TuNgay);
            cmd.Parameters.AddWithValue("DenNgay", DenNgay);
            cmd.Parameters.AddWithValue("Duyet", Duyet);
            cmd.Parameters.AddWithValue("Phat", Phat);
            cmd.Parameters.AddWithValue("MaDT", MaDT);
            cmd.Parameters.AddWithValue("MaKho", MaKho);
            cmd.Parameters.AddWithValue("MaKhoa", MAKHOA);
            cmd.Parameters.AddWithValue("dadung", dadung);
            cmd.Parameters.AddWithValue("DK", dk);
            IDataReader dt;
            dt = (IDataReader)cmd.ExecuteReader(CommandBehavior.CloseConnection); ;
            cmd.Dispose();
            cmd = null;
            // if (SQLConnectionBD.State == System.Data.ConnectionState.Closed)
            //SQLConnectionBD.Close(); SQLConnectionBD.Dispose();
            //if (_sqlConnection.State == System.Data.ConnectionState.Closed)
            {
                //_sqlConnection.Close(); _sqlConnection.Dispose();
                //_sqlConnection = null;
            }
            return dt;
        }
        public override IDataReader GetAllKhambenh_Mau_TON_gets(DateTime TuNgay, DateTime DenNgay, Boolean Duyet, Boolean Phat, String MaDT, String MaKho, String MAKHOA, Boolean dadung, String dk)
        {
            //  return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString , DatabaseOwner + ObjectQualifier + "spKhambenh_Mau_TON_gets", TuNgay, DenNgay, Duyet, Phat, MaDT, MaKho, MAKHOA, dadung, dk));
            System.Data.SqlClient.SqlCommand cmd = SqlHelper.CreateCommand(SQLConnectionBD, DatabaseOwner + ObjectQualifier + "spKhambenh_Mau_TON_gets");

            cmd.CommandTimeout = 18000;
            cmd.CommandType = System.Data.CommandType.StoredProcedure;
            cmd.Parameters.AddWithValue("TuNgay", TuNgay);
            cmd.Parameters.AddWithValue("DenNgay", DenNgay);
            cmd.Parameters.AddWithValue("Duyet", Duyet);
            cmd.Parameters.AddWithValue("Phat", Phat);
            cmd.Parameters.AddWithValue("MaDT", MaDT);
            cmd.Parameters.AddWithValue("MaKho", MaKho);
            cmd.Parameters.AddWithValue("MaKhoa", MAKHOA);
            cmd.Parameters.AddWithValue("dadung", dadung);
            cmd.Parameters.AddWithValue("DK", dk);
            IDataReader dt;
            dt = (IDataReader)cmd.ExecuteReader(CommandBehavior.CloseConnection); ;
            cmd.Dispose();
            cmd = null;
            // if (SQLConnectionBD.State == System.Data.ConnectionState.Closed)
            //SQLConnectionBD.Close(); SQLConnectionBD.Dispose();
            //if (_sqlConnection.State == System.Data.ConnectionState.Closed)
            {
                //_sqlConnection.Close(); _sqlConnection.Dispose();
                //_sqlConnection = null;
            }
            return dt;
        }
        public override IDataReader GetMauPhieuDTNhap(String _maDuTru, bool qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spMauPhieuDTNhap_GET", _maDuTru, qadmin));
        }
        public override IDataReader GetAllMauPhieuDTNhap(Boolean _qadmin, String _maKho, DateTime _tuNgay, DateTime _denNgay, String _dKien)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spMauPhieuDTNhap_GETALL", _qadmin, _maKho, _tuNgay, _denNgay, _dKien));
        }
        public override IDataReader GetMauPhieuDTNhap_C(String _maDuTru, Decimal _sTT)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spMauPhieuDTNhap_C_GET", _maDuTru, _sTT));
        }

        #endregion

        #region Find List
        //MauPhieuNhap
        public override IDataReader FindMauPhieuNhap(string _DK, Boolean _qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spMauPhieuNhap_Finds", _DK, _qadmin));
        }
        public override IDataReader FindMauPhieuDoiThuoc(bool qadmin, string dk)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spMauPhieuDoiThuoc_FINDS", qadmin, dk));
        }
        #endregion

        #region MauPhieuNhap
        // public abstract String InsertMauPhieuNhap(string _maNCC, String _soHD, String _soCT, SmartDate _ngayPNhap, String _maKho, decimal _chietKhau, Boolean _thanhToan, SmartDate _ngayTToan, SmartDate _ngayNhapTT, String _NVNhap, decimal _MauTong, String _ghiChu, Boolean _huy, String _nguoiSD, string _maMay, String _nguoiGiao);
        public override String InsertMauPhieuNhap(string _maNCC, String _soHD, String _soCT, SmartDate _ngayPNhap, String _maKho, decimal _chietKhau, Boolean _thanhToan, SmartDate _ngayTToan, SmartDate _ngayNhapTT, String _NVNhap, decimal _MauTong, String _ghiChu, Boolean _huy, String _nguoiSD, string _maMay, String _nguoiGiao, String _manguon, String _mahinhthuc, string _sohdon, SmartDate _ngayhdon)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spMauPhieuNHAP_CREATE", _maNCC, _soHD, _soCT, _ngayPNhap.DBValue, _maKho, _chietKhau, _thanhToan, _ngayTToan.DBValue, _ngayNhapTT.DBValue, _NVNhap, _MauTong, _ghiChu, _huy, _nguoiSD, _maMay, _nguoiGiao, _manguon, _mahinhthuc, _sohdon, _ngayhdon.DBValue));
        }
        public override void UpdateMauPhieuNhap(String _maPN, string _maNCC, String _soHD, String _soCT, SmartDate _ngayPNhap, String _maKho, decimal _chietKhau, Boolean _thanhToan, SmartDate _ngayTToan, SmartDate _ngayNhapTT, String _NVNhap, decimal _MauTong, String _ghiChu, Boolean _huy, String _nguoiSD, SmartDate _ngaySD1, String _nguoiSD1, String _nguoiGiao, String _manguon, String _mahinhthuc, string _sohdon, SmartDate _ngayhdon)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spMauPhieuNHAP_UPDATE", _maPN, _maNCC, _soHD, _soCT, _ngayPNhap.DBValue, _maKho, _chietKhau, _thanhToan, _ngayTToan.DBValue, _ngayNhapTT.DBValue, _NVNhap, _MauTong, _ghiChu, _huy, _nguoiSD, _ngaySD1.DBValue, _nguoiSD1, _nguoiGiao, _manguon, _mahinhthuc, _sohdon, _ngayhdon.DBValue);
        }
        public override void DeleteMauPhieuNhap(String _maPN, SmartDate _ngaySD, string _maMay, String _nguoiSD)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spMauPhieuNHAP_DELETED", _maPN, _ngaySD.DBValue, _maMay, _nguoiSD);
        }
        #endregion

        #region MauPhieuNhap chi tiet

        public override String InsertMauPhieuNhap_C(String _maPN, String _maThuoc, decimal _soluong, SmartDate _hanSD, decimal _donGia, decimal _chietKhau, String _soLo, Boolean _huy, String _ghiChu, string _maMay, String _nguoiSD, String _manhommau, String _rdh, SmartDate _ngaydc)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spMauPhieuNHAP_C_CREATE", _maPN, _maThuoc, _soluong, _hanSD.DBValue, _donGia, _chietKhau, _soLo, _huy, _ghiChu, _maMay, _nguoiSD, _manhommau,_rdh, _ngaydc.DBValue));
        }
        public override void UpdateMauPhieuNhap_C(String _maPN, decimal _sTT, String _maThuoc, decimal _soluong, SmartDate _hanSD, decimal _donGia, decimal _chietKhau, String _soLo, Boolean _huy, String _ghiChu, SmartDate _ngaySD, string _maMay, String _nguoiSD, String _manhommau, String _rdh, SmartDate _ngaydc)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spMauPhieuNHAP_C_UPDATE", _maPN, _sTT, _maThuoc, _soluong, _hanSD.DBValue, _donGia, _chietKhau, _soLo, _huy, _ghiChu, _ngaySD.DBValue, _maMay, _nguoiSD, _manhommau, _rdh, _ngaydc.DBValue);
        }
        public override void DeleteMauPhieuNhap_C(String _maPN, decimal _sTT, String _nguoiSD)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spMauPhieuNHAP_C_DELETED", _maPN, _sTT, _nguoiSD);
        }
        #endregion

        #region MauPhieuXuat
        public override String InsertMauPhieuXuat(String _noiXuat, SmartDate _ngayXuat, SmartDate _ngayXuatTT, String _noiNhap, Byte _loaiMauPhieu, String _soCT, String _nvXuat, String _nvNhan, String _ghiChu, Boolean _huy, String _nguoiLap, Boolean _khoaYC, string _maMay, Boolean _daPhat, Boolean _daDuyet)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spMauPhieuXUAT_CREATE", _noiXuat, _ngayXuat.DBValue, _ngayXuatTT.DBValue, _noiNhap, _loaiMauPhieu, _soCT, _nvXuat, _nvNhan, _ghiChu, _huy, _nguoiLap, _khoaYC, _maMay, _daPhat, _daDuyet));
        }
        public override void UpdateMauPhieuXuat(String _maPX, String _noiXuat, SmartDate _ngayXuat, SmartDate _ngayXuatTT, String _noiNhap, Byte _loaiMauPhieu, String _soCT, String _nvXuat, String _nvNhan, String _ghiChu, Boolean _huy, string _maMay, String _nguoiSD, Boolean _daPhat, Boolean _daDuyet)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spMauPhieuXUAT_UPDATE", _maPX, _noiXuat, _ngayXuat.DBValue, _ngayXuatTT.DBValue, _noiNhap, _loaiMauPhieu, _soCT, _nvXuat, _nvNhan, _ghiChu, _huy, _maMay, _nguoiSD, _daPhat, _daDuyet);
        }
        public override void DeleteMauPhieuXuat(String _maPX, string _maMay, String _nguoiSD)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spMauPhieuXUAT_DELETED", _maPX, _maMay, _nguoiSD);
        }

        #region MauPhieu Xuat chi tiet

        public override String InsertMauPhieuXuat_C(String _maPX, String _maThuoc, Decimal _soLuong, SmartDate _hanSD, String _soLo, Decimal _donGia, Decimal _soLuongYC, Decimal _giaBan, String _ghiChu, String _nguoiSD, string _maMay)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spMauPhieuXUAT_C_CREATE", _maPX, _maThuoc, _soLuong, _hanSD.DBValue, _soLo, _donGia, _soLuongYC, _giaBan, _ghiChu, _nguoiSD, _maMay));
        }
        public override void UpdateMauPhieuXuat_C(String _maPX, Decimal _sTT, String _maThuoc, Decimal _soLuong, SmartDate _hanSD, String _soLo, Decimal _donGia, Decimal _soLuongYC, Decimal _giaBan, Boolean _huy, String _ghiChu, String _nguoiSD, string _maMay)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spMauPhieuXUAT_C_UPDATE", _maPX, _sTT, _maThuoc, _soLuong, _hanSD.DBValue, _soLo, _donGia, _soLuongYC, _giaBan, _huy, _ghiChu, _nguoiSD, _maMay);
        }
        public override void DeleteMauPhieuXuat_C(String _maPX, Decimal _sTT, String _nguoiSD, string _maMay)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spMauPhieuXUAT_C_DELETED", _maPX, _sTT, _nguoiSD, _maMay);
        }

        #endregion

        #endregion

        #region Nhap Tra


        public override String InsertMauNhapTra(String _noiNhap, SmartDate _ngayNhap, SmartDate _ngayNhapTT, String _noiXuat, Byte _loaiMauPhieu, String _soCT, String _nvXuat, String _nvNhan, String _ghiChu, String _nguoiLap, Boolean _bnTra, string _maMay, Byte _daPhat)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spMauNhapTra_CREATE", _noiNhap, _ngayNhap.DBValue, _ngayNhapTT.DBValue, _noiXuat, _loaiMauPhieu, _soCT, _nvXuat, _nvNhan, _ghiChu, _nguoiLap, _bnTra, _maMay, _daPhat));
        }
        public override void UpdateMauNhapTra(String _maPX, String _noiXuat, SmartDate _ngayNhap, SmartDate _ngayNhapTT, String _noiNhap, Byte _loaiMauPhieu, String _soCT, String _nvXuat, String _nvNhan, String _ghiChu, Boolean _huy, string _maMay, String _nguoiSD, Byte _daPhat)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spMauNhapTra_UPDATE", _maPX, _noiXuat, _ngayNhap.DBValue, _ngayNhapTT.DBValue, _noiNhap, _loaiMauPhieu, _soCT, _nvXuat, _nvNhan, _ghiChu, _huy, _maMay, _nguoiSD, _daPhat);
        }
        public override void DeleteMauNhapTra(String _maPX, string _maMay, String _nguoiSD)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spMauNhapTra_DELETED", _maPX, _maMay, _nguoiSD);
        }
        #endregion

        #region Nhap tra chi tiet
        //InsertMauNhapTra_C(String _MaPNT, String _maThuoc, Decimal _soLuong, SmartDate _hanSD,  Decimal _donGia,String _soLo,  Boolean Huy, String _ghiChu,String _maMay, String _nguoiSD);
        public override String InsertMauNhapTra_C(String _maPX, String _maThuoc, Decimal _soLuong, SmartDate _hanSD, Decimal _donGia, String _soLo, Boolean _Huy, String _ghiChu, string _maMay, String _nguoiSD, Decimal _soLuongYC)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spMauNhapTra_C_CREATE", _maPX, _maThuoc, _soLuong, _hanSD.DBValue, _donGia, _soLo, _Huy, _ghiChu, _maMay, _nguoiSD, _soLuongYC));
        }
        public override void UpdateMauNhapTra_C(String _maPX, Decimal _sTT, String _maThuoc, Decimal _soLuong, SmartDate _hanSD, String _soLo, Decimal _donGia, Decimal _soLuongYC, Decimal _giaBan, Boolean _huy, String _ghiChu, String _nguoiSD, string _maMay)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spMauNhapTra_C_UPDATE", _maPX, _sTT, _maThuoc, _soLuong, _hanSD.DBValue, _soLo, _donGia, _soLuongYC, _giaBan, _huy, _ghiChu, _nguoiSD, _maMay);
        }
        public override void DeleteMauNhapTra_C(String _maPX, Decimal _sTT, String _nguoiSD, string _maMay)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spMauNhapTra_C_DELETED", _maPX, _sTT, _nguoiSD, _maMay);
        }

        #endregion

        #region MauKiem Nhap
        public override String InsertMauKiemNhap(String _maMauPhieu, String _maNV, String _maCD, Byte _loai, String _ghichu, string _maMay, String _nguoiSD, Byte _vaitro)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spMauKiemNHAP_CREATE", _maMauPhieu, _maNV, _maCD, _loai, _ghichu, _maMay, _nguoiSD, _vaitro));
        }
        public override void UpdateMauKiemNhap(String _maMauPhieu, Byte _sTT, String _maNV, String _maCD, Byte _loai, Boolean _huy, String _ghichu, string _maMay, String _nguoiSD, Byte _vaitro)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spMauKiemNHAP_UPDATE", _maMauPhieu, _sTT, _maNV, _maCD, _loai, _huy, _ghichu, _maMay, _nguoiSD, _vaitro);
        }
        public override void DeleteMauKiemNhap(String _maMay, String _nguoiSD, String _maMauPhieu, Byte _sTT)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spMauKiemNHAP_DELETED", _maMay, _nguoiSD, _maMauPhieu, _sTT);
        }


        #endregion

        #region Xuat Tra
        public override String InsertMauXuatTra(String _maNCC, String _soCT, SmartDate _ngayXT, String _makho, Boolean _thanhtoan, SmartDate _ngayTToan, SmartDate _ngayXuatTT, Decimal _MauTong, String _ghichu, string _maMay, String _nguoiLap, SmartDate _ngayLap, String _nVXuat, String _nVNhan, Decimal _vAT, string _sohdon, SmartDate _ngayhdon)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spMauXuatTra_CREATE", _maNCC, _soCT, _ngayXT.DBValue, _makho, _thanhtoan, _ngayTToan.DBValue, _ngayXuatTT.DBValue, _MauTong, _ghichu, _maMay, _nguoiLap, _ngayLap.DBValue, _nVXuat, _nVNhan, _vAT, _sohdon, _ngayhdon.DBValue));
        }
        public override void UpdateMauXuatTra(String _maPXT, String _maNCC, String _soCT, SmartDate _ngayXT, String _makho, Boolean _thanhtoan, SmartDate _ngayTToan, SmartDate _ngayXuatTT, Decimal _MauTong, String _ghichu, Boolean _huy, String _nguoiSD, string _maMay, String _nVXuat, String _nVNhan, Decimal _vAT, string _sohdon, SmartDate _ngayhdon)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spMauXuatTra_UPDATE", _maPXT, _maNCC, _soCT, _ngayXT.DBValue, _makho, _thanhtoan, _ngayTToan.DBValue, _ngayXuatTT.DBValue, _MauTong, _ghichu, _huy, _nguoiSD, _maMay, _nVXuat, _nVNhan, _vAT, _sohdon, _ngayhdon.DBValue);
        }
        public override void DeleteMauXuatTra(String _maMay, String _nguoiSD, String _maPXT)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spMauXuatTra_DELETED", _maMay, _nguoiSD, _maPXT);
        }
        #endregion

        #region Xuat tra chi tiet
        public override String InsertMauXuatTra_C(String _mathuoc, Decimal _soluong, SmartDate _hanSD, Decimal _donGia, String _soLo, String _ghichu, String _nguoiSD, string _maMay, String _maPXT, Decimal _vAT)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spMauXuatTra_C_CREATE", _mathuoc, _soluong, _hanSD.DBValue, _donGia, _soLo, _ghichu, _nguoiSD, _maMay, _maPXT, _vAT));
        }
        public override void UpdateMauXuatTra_C(Decimal _sTT, String _mathuoc, Decimal _soluong, SmartDate _hanSD, Decimal _donGia, String _soLo, Boolean _huy, String _ghichu, String _nguoiSD, string _maMay, String _maPXT, Decimal _vAT)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spMauXuatTra_C_UPDATE", _sTT, _mathuoc, _soluong, _hanSD.DBValue, _donGia, _soLo, _huy, _ghichu, _nguoiSD, _maMay, _maPXT, _vAT);
        }
        public override void DeleteMauXuatTra_C(String _maMay, String _nguoiSD, String _maPXT, Decimal _sTT)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spMauXuatTra_C_DELETED", _maMay, _nguoiSD, _maPXT, _sTT);
        }

        #endregion

        #region MauTon dau Kho

        public override String InsertMauTonDau(SmartDate _ngayMauTon, String _makho, String _nguoiSD, string _maMay)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spMauTonDau_CREATE", _ngayMauTon.DBValue, _makho, _nguoiSD, _maMay));
        }
        public override void UpdateMauTonDau(SmartDate _ngayMauTon, String _makho, String _nguoiSD, string _maMay)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spMauTonDau_UPDATE", _ngayMauTon.DBValue, _makho, _nguoiSD, _maMay);
        }

        #endregion

        #region MauTon dau Khoa

        public override String InsertMauTonDauKhoa(SmartDate _ngayMauTon, String _makhoa, String _nguoiSD, string _maMay)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spMauTonDauKhoa_CREATE", _ngayMauTon.DBValue, _makhoa, _nguoiSD, _maMay));
        }
        public override void UpdateMauTonDauKhoa(SmartDate _ngayMauTon, String _makhoa, String _nguoiSD, string _maMay)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spMauTonDauKhoa_UPDATE", _ngayMauTon.DBValue, _makhoa, _nguoiSD, _maMay);
        }

        #endregion

        #region MauKiem Ke
        public override String InsertMauKiemKe(SmartDate _ngayKK, String _makho, String _nguoiKK, String _nguoiLap, String _ghiChu, Boolean _xuly, string _maMay)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spMauKiemKe_Create", _ngayKK.DBValue, _makho, _nguoiKK, _nguoiLap, _ghiChu, _xuly, _maMay));
        }
        public override void UpdateMauKiemKe(String _maKK, SmartDate _ngayKK, String _makho, String _nguoiKK, String _ghiChu, Boolean _xuly, string _maMay, String _nguoiSD, Boolean _huy)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spMauKiemKe_Update", _maKK, _ngayKK.DBValue, _makho, _nguoiKK, _ghiChu, _xuly, _maMay, _nguoiSD, _huy);
        }
        public override void DeleteMauKiemKe(String _maMay, String _nguoiSD, String _maKK)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spMauKiemKE_DELETED", _maMay, _nguoiSD, _maKK);
        }
        #endregion

        #region MauKiem Ke chi tiet
        public override String InsertMauKiemKe_C(String _maKK, String _maThuoc, Decimal _soLuong, Decimal _dongia, Decimal _sLDC, String _ghiChu, Decimal _sLMauTon, String _nguoiSD, string _maMay)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spMauKiemKE_C_CREATE", _maKK, _maThuoc, _soLuong, _dongia, _sLDC, _ghiChu, _sLMauTon, _nguoiSD, _maMay));
        }
        public override void UpdateMauKiemKe_C(String _maKK, Decimal _sTT, String _maThuoc, Decimal _soLuong, Decimal _dongia, Decimal _sLDC, String _ghiChu, Decimal _sLMauTon, Boolean _huy, String _nguoiSD, string _maMay)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spMauKiemKE_C_UPDATE", _maKK, _sTT, _maThuoc, _soLuong, _dongia, _sLDC, _ghiChu, _sLMauTon, _huy, _nguoiSD, _maMay);
        }
        public override void DeleteMauKiemKe_C(String _maMay, String _nguoiSD, String _maKK, Decimal _sTT)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spMauKiemKE_C_DELETED", _maMay, _nguoiSD, _maKK, _sTT);
        }

        #endregion

        #region MauKiem Ke chi tiet Han dung
        public override String InsertMauKiemKe_HD(String _mAKK, String _maThuoc, SmartDate _hANDUNG, String _solo, Decimal _sOLUONG, Decimal _sLMauTon, Decimal _sLDC, String _ghichu, String _nguoiSD, string _maMay, string _MANHOMMAU)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spMauKiemKE_HD_CREATE", _mAKK, _maThuoc, _hANDUNG.DBValue, _solo, _sOLUONG, _sLMauTon, _sLDC, _ghichu, _nguoiSD, _maMay, _MANHOMMAU));
        }
        public override void UpdateMauKiemKe_HD(String _mAKK, Decimal _sTT, String _maThuoc, SmartDate _hANDUNG, String _solo, Decimal _sOLUONG, Decimal _sLMauTon, Decimal _sLDC, String _ghichu, Boolean _huy, String _nguoiSD, string _maMay, string _MANHOMMAU)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spMauKiemKE_HD_UPDATE", _mAKK, _sTT, _maThuoc, _hANDUNG.DBValue, _solo, _sOLUONG, _sLMauTon, _sLDC, _ghichu, _huy, _nguoiSD, _maMay, _MANHOMMAU);
        }
        public override void DeleteMauKiemKe_HD(String _maMay, String _nguoiSD, String _maKK, Decimal _sTT)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spMauKiemKE_HD_DELETED", _maMay, _nguoiSD, _maKK, _sTT);
        }
        #endregion

        #region MauPhieu Doi Thuoc
        public override String InsertMauPhieuDoiThuoc(String _maNCC, String _soCT, SmartDate _ngayDThuoc, String _makho, String _ghichu, String _nguoiLap, string _maMay)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spMauPhieuDoiThuoc_CREATE", _maNCC, _soCT, _ngayDThuoc.DBValue, _makho, _ghichu, _nguoiLap, _maMay));
        }
        public override void UpdateMauPhieuDoiThuoc(String _maDThuoc, String _maNCC, String _soCT, SmartDate _ngayDThuoc, String _makho, String _ghichu, Boolean _huy, String _nguoiSD, string _maMay)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spMauPhieuDoiThuoc_UPDATE", _maDThuoc, _maNCC, _soCT, _ngayDThuoc.DBValue, _makho, _ghichu, _huy, _nguoiSD, _maMay);
        }
        public override void DeleteMauPhieuDoiThuoc(String _maMay, String _nguoiSD, String _maDThuoc)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spMauPhieuDoiThuoc_DELETED", _maMay, _nguoiSD, _maDThuoc);
        }


        #endregion

        #region MauPhieu Doi Thuoc Chi tiet
        public override String InsertMauPhieuDoiThuoc_C(String _maDThuoc, String _mathuoc, Decimal _soluong, SmartDate _hanSD, SmartDate _hanSDCu, Decimal _donGia, String _soLo, String _soLoCu, String _ghichu, String _nguoiSD, string _maMay)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spMauPhieuDoiThuoc_C_CREATE", _maDThuoc, _mathuoc, _soluong, _hanSD.DBValue, _hanSDCu.DBValue, _donGia, _soLo, _soLoCu, _ghichu, _nguoiSD, _maMay));
        }
        public override void UpdateMauPhieuDoiThuoc_C(String _maDThuoc, Decimal _sTT, String _mathuoc, Decimal _soluong, SmartDate _hanSD, SmartDate _hanSDCu, Decimal _donGia, String _soLo, String _soLoCu, Boolean _huy, String _ghichu, String _nguoiSD, string _maMay)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spMauPhieuDoiThuoc_C_UPDATE", _maDThuoc, _sTT, _mathuoc, _soluong, _hanSD.DBValue, _hanSDCu.DBValue, _donGia, _soLo, _soLoCu, _huy, _ghichu, _nguoiSD, _maMay);
        }
        public override void DeleteMauPhieuDoiThuoc_C(String _maMay, String _nguoiSD, String _maDThuoc, Decimal _sTT)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spMauPhieuDoiThuoc_C_DELETED", _maMay, _nguoiSD, _maDThuoc, _sTT);
        }
        #endregion

        #region Phieu Du tru Nhap
        public override String InsertMauPhieuDTNhap(String _soCT, SmartDate _ngayPhieu, String _makho, String _nguoiDuTru, Decimal _tong, String _ghichu, String _nguoiLap, string _maMay, string _maNCC)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spMauPhieuDTNhap_CREATE", _soCT, _ngayPhieu.DBValue, _makho, _nguoiDuTru, _tong, _ghichu, _nguoiLap, _maMay, _maNCC));
        }
        public override void UpdateMauPhieuDTNhap(String _maDuTru, String _soCT, SmartDate _ngayPhieu, String _makho, String _nguoiDuTru, Decimal _tong, String _ghichu, Boolean _huy, String _nguoiSD, string _maMay, string _maNCC)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spMauPhieuDTNhap_update", _maDuTru, _soCT, _ngayPhieu.DBValue, _makho, _nguoiDuTru, _tong, _ghichu, _huy, _nguoiSD, _maMay, _maNCC);
        }
        public override void DeleteMauPhieuDTNhap(String _maMay, String _nguoiSD, String _maDuTru)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spMauPhieuDTNhap_DELETED", _maMay, _nguoiSD, _maDuTru);
        }

        #endregion

        #region Phieu Du tru Nhap chi tiet
        public override String InsertMauPhieuDTNhap_C(String _maDuTru, String _mathuoc, Decimal _soluong, Decimal _donGia, String _ghichu, String _nguoiSD, string _maMay)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spMauPhieuDTNhap_C_CREATE", _maDuTru, _mathuoc, _soluong, _donGia, _ghichu, _nguoiSD, _maMay));
        }
        public override void UpdateMauPhieuDTNhap_C(String _maDuTru, Decimal _sTT, String _mathuoc, Decimal _soluong, Decimal _donGia, Boolean _huy, String _ghichu, String _nguoiSD, string _maMay)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spMauPhieuDTNhap_C_UPDATE", _maDuTru, _sTT, _mathuoc, _soluong, _donGia, _huy, _ghichu, _nguoiSD, _maMay);
        }
        public override void DeleteMauPhieuDTNhap_C(String _maMay, String _nguoiSD, String _maDuTru, Decimal _sTT)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spMauPhieuDTNhap_C_DELETED", _maMay, _nguoiSD, _maDuTru, _sTT);
        }
        #endregion

        public override void Khambenh_Mau_DP_Update(String MaSoKham, String STT, Boolean Duyet, Boolean Phat, DateTime NgayP, String NguoiD, String NguoiP, DateTime NgayD, String MaMay, string makx, String MAPX, string solo, string hansd)
        {
            SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "[spKhambenh_Mau_DP_Update]", MaSoKham, STT, Duyet, Phat, NgayP, NguoiD, NguoiP, NgayD, MaMay, makx, MAPX, solo, hansd);
        }
        public override void BenhAn_Mau_DP_Update(String MaBA, int STT, int STTkhoa, Boolean Duyet, Boolean Phat, DateTime NgayP, String NguoiD, String NguoiP, DateTime NgayD, String MaMay, String MAPX, string solo, string hansd)
        {
            SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spBenhAn_Mau_DP_Update", MaBA, STT, STTkhoa, Duyet, Phat, NgayP, NguoiD, NguoiP, NgayD, MaMay, MAPX, solo, hansd);
        }
        #endregion
        #endregion

        #region VatTu
        #region Reports

		public override DataSet crLKPhieuNhap_C_GetAll(Boolean _qadmin, String _maPN)
		{
			DataSet ds = new DataSet("crPhieuNhap_C_GetAll");
			string[] s = { "crPhieuNhap_C_GetAll" };
            SqlHelper.FillDataset(SQLConnectionData, DatabaseOwner + ObjectQualifier + "spLKPhieuNhap_C_GETALL", ds, s, _qadmin, _maPN);
			//// // // //// ds.WriteXmlSchema("crPhieuNhap_C_GetAll.xsd");
			//System.Data.SqlClient.SqlCommand cmd = SqlHelper.CreateCommand(SQLConnectionBD, DatabaseOwner + ObjectQualifier + "spLKPhieuNhap_C_GETALL");

			//cmd.CommandTimeout = 18000;
			//cmd.CommandType = System.Data.CommandType.StoredProcedure;
			//cmd.Parameters.AddWithValue("QADMIN", _qadmin);
			//cmd.Parameters.AddWithValue("MAPN", _maPN);

			//System.Data.SqlClient.SqlDataAdapter sqlad = new System.Data.SqlClient.SqlDataAdapter(cmd);

			//sqlad.Fill(ds);
			if (ds.Tables.Count > 0)
				ds.Tables[0].TableName = "crPhieuNhap_C_GetAll";
			//sqlad.Dispose(); cmd.Dispose(); sqlad = null;
			// cmd = null;
			// if (SQLConnectionBD.State == System.Data.ConnectionState.Closed)
			//SQLConnectionBD.Close(); SQLConnectionBD.Dispose();
			//if (_sqlConnection.State == System.Data.ConnectionState.Closed)
			{
				//_sqlConnection.Close(); _sqlConnection.Dispose();
				//_sqlConnection = null;
			}
			return ds;

		}

        public override DataSet CRVTPhieuLinh_RPTa(DateTime _TUNGAYYC, DateTime _DENNGAYYC, Boolean _Duyet, Boolean _Phat, string _MaDT, string _MaKho, string _MAKHOA, Boolean _DADUNG, string _dk)
        {
            DataSet ds = new DataSet("CRPhieuLinh_RPTa");
            string[] s = { "CRPhieuLinh_RPTa" };
            SqlHelper.FillDataset(SQLConnectionData, DatabaseOwner + ObjectQualifier + "spKhamBenh_VTTH_BN_gets", ds, s, _TUNGAYYC, _DENNGAYYC, _Duyet, _Phat, _MaDT, _MaKho, _MAKHOA, _DADUNG, _dk);
            // // ds.WriteXmlSchema("CRVTPhieuLinh_DY.xsd");
            //System.Data.SqlClient.SqlCommand cmd = SqlHelper.CreateCommand(SQLConnectionBD, DatabaseOwner + ObjectQualifier + "spKhamBenh_VTTH_BN_gets");

            //cmd.CommandTimeout = 18000;
            //cmd.CommandType = System.Data.CommandType.StoredProcedure;
            //cmd.Parameters.AddWithValue("TuNgay", _TUNGAYYC);
            //cmd.Parameters.AddWithValue("DenNgay", _DENNGAYYC);
            //cmd.Parameters.AddWithValue("Duyet", _Duyet);
            //cmd.Parameters.AddWithValue("Phat", _Phat);
            //cmd.Parameters.AddWithValue("MaDT", _MaDT);
            //cmd.Parameters.AddWithValue("MaKho", _MaKho);
            //cmd.Parameters.AddWithValue("MAKHOA", _MAKHOA);
            //cmd.Parameters.AddWithValue("DADUNG", _DADUNG);
            //cmd.Parameters.AddWithValue("dk", _dk);

            //System.Data.SqlClient.SqlDataAdapter sqlad = new System.Data.SqlClient.SqlDataAdapter(cmd);

            //sqlad.Fill(ds);
            if (ds.Tables.Count > 0)
                ds.Tables[0].TableName = "CRPhieuLinh_RPTa";
            //sqlad.Dispose(); cmd.Dispose(); sqlad = null;
            // cmd = null;
            // if (SQLConnectionBD.State == System.Data.ConnectionState.Closed)
            //SQLConnectionBD.Close(); SQLConnectionBD.Dispose();
            //if (_sqlConnection.State == System.Data.ConnectionState.Closed)
            {
                //_sqlConnection.Close(); _sqlConnection.Dispose();
                //_sqlConnection = null;
            }
            return ds;

        }
        public override DataSet crVTPhieuNhap_C_GetAll(Boolean _qadmin, String _maPN)
        {
            DataSet ds = new DataSet("crPhieuNhap_C_GetAll");
            string[] s = { "crPhieuNhap_C_GetAll" };
            SqlHelper.FillDataset(SQLConnectionData, DatabaseOwner + ObjectQualifier + "spVTPhieuNhap_C_GETALL", ds, s, _qadmin, _maPN);
            //// // // //// ds.WriteXmlSchema("crPhieuNhap_C_GetAll.xsd");
            //System.Data.SqlClient.SqlCommand cmd = SqlHelper.CreateCommand(SQLConnectionBD, DatabaseOwner + ObjectQualifier + "spVTPhieuNhap_C_GETALL");

            //cmd.CommandTimeout = 18000;
            //cmd.CommandType = System.Data.CommandType.StoredProcedure;
            //cmd.Parameters.AddWithValue("QADMIN", _qadmin);
            //cmd.Parameters.AddWithValue("MAPN", _maPN);

            //System.Data.SqlClient.SqlDataAdapter sqlad = new System.Data.SqlClient.SqlDataAdapter(cmd);

            //sqlad.Fill(ds);
            if (ds.Tables.Count > 0)
                ds.Tables[0].TableName = "crPhieuNhap_C_GetAll";
            //sqlad.Dispose(); cmd.Dispose(); sqlad = null;
            // cmd = null;
            // if (SQLConnectionBD.State == System.Data.ConnectionState.Closed)
            //SQLConnectionBD.Close(); SQLConnectionBD.Dispose();
            //if (_sqlConnection.State == System.Data.ConnectionState.Closed)
            {
                //_sqlConnection.Close(); _sqlConnection.Dispose();
                //_sqlConnection = null;
            }
            return ds;

        }
        public override DataSet crVTPhieuNhapTra_C_GetAll(Boolean _qadmin, String _maPNT)
        {
            DataSet ds = new DataSet("crPhieuNhapTra_C_GetAll");
            string[] s = { "crPhieuNhapTra_C_GetAll" };
            SqlHelper.FillDataset(SQLConnectionData, DatabaseOwner + ObjectQualifier + "spVTNhapTra_C_GETALL", ds, s, _qadmin, _maPNT);
            //// // // //// ds.WriteXmlSchema("crPhieuNhapTra_C_GetAll.xsd");
            // System.Data.SqlClient.SqlCommand cmd = SqlHelper.CreateCommand(SQLConnectionBD, DatabaseOwner + ObjectQualifier + "spVTNhapTra_C_GETALL");

            // cmd.CommandTimeout = 18000;
            // cmd.CommandType = System.Data.CommandType.StoredProcedure;
            // cmd.Parameters.AddWithValue("QADMIN", _qadmin);
            // cmd.Parameters.AddWithValue("MAPNT", _maPNT);

            // System.Data.SqlClient.SqlDataAdapter sqlad = new System.Data.SqlClient.SqlDataAdapter(cmd);

            // sqlad.Fill(ds);
            // if (ds.Tables.Count > 0)
            //     ds.Tables[0].TableName = "crPhieuNhapTra_C_GetAll";
            //sqlad.Dispose(); cmd.Dispose(); sqlad = null;
            // cmd = null;
            //// if (SQLConnectionBD.State == System.Data.ConnectionState.Closed)
            //     //SQLConnectionBD.Close(); SQLConnectionBD.Dispose();
            // //if (_sqlConnection.State == System.Data.ConnectionState.Closed)
            // {
            //     //_sqlConnection.Close(); _sqlConnection.Dispose();
            //     //_sqlConnection = null;
            // }
            return ds;

        }
        public override DataSet crVTPhieuXuat_C_GetAll(Boolean _qadmin, String _maPX)
        {
            DataSet ds = new DataSet("crPhieuXuat_C_GetAll");
            string[] s = { "crPhieuXuat_C_GetAll" };
            SqlHelper.FillDataset(SQLConnectionData, DatabaseOwner + ObjectQualifier + "spVTPhieuXuat_C_GETALL", ds, s, _qadmin, _maPX);
            // // // //// ds.WriteXmlSchema("crPhieuXuat_C_GetAll.xsd");
            // System.Data.SqlClient.SqlCommand cmd = SqlHelper.CreateCommand(SQLConnectionBD, DatabaseOwner + ObjectQualifier + "spVTPhieuXuat_C_GETALL");

            // cmd.CommandTimeout = 18000;
            // cmd.CommandType = System.Data.CommandType.StoredProcedure;
            // cmd.Parameters.AddWithValue("QADMIN", _qadmin);
            // cmd.Parameters.AddWithValue("MAPX", _maPX);

            // System.Data.SqlClient.SqlDataAdapter sqlad = new System.Data.SqlClient.SqlDataAdapter(cmd);

            // sqlad.Fill(ds);
            // if (ds.Tables.Count > 0)
            //     ds.Tables[0].TableName = "crPhieuXuat_C_GetAll";
            //sqlad.Dispose(); cmd.Dispose(); sqlad = null;
            // cmd = null;
            //// if (SQLConnectionBD.State == System.Data.ConnectionState.Closed)
            //     //SQLConnectionBD.Close(); SQLConnectionBD.Dispose();
            // //if (_sqlConnection.State == System.Data.ConnectionState.Closed)
            // {
            //     //_sqlConnection.Close(); _sqlConnection.Dispose();
            //     //_sqlConnection = null;
            // }
            return ds;

        }
		public override DataSet crLKPhieuXuat_C_GetAll(Boolean _qadmin, String _maPX)
		{
			DataSet ds = new DataSet("crPhieuXuat_C_GetAll");
			string[] s = { "crPhieuXuat_C_GetAll" };
            SqlHelper.FillDataset(SQLConnectionData, DatabaseOwner + ObjectQualifier + "spLKPhieuXuat_C_GETALL", ds, s, _qadmin, _maPX);
			// // // //// ds.WriteXmlSchema("crPhieuXuat_C_GetAll.xsd");
			// System.Data.SqlClient.SqlCommand cmd = SqlHelper.CreateCommand(SQLConnectionBD, DatabaseOwner + ObjectQualifier + "spLKPhieuXuat_C_GETALL");

			// cmd.CommandTimeout = 18000;
			// cmd.CommandType = System.Data.CommandType.StoredProcedure;
			// cmd.Parameters.AddWithValue("QADMIN", _qadmin);
			// cmd.Parameters.AddWithValue("MAPX", _maPX);

			// System.Data.SqlClient.SqlDataAdapter sqlad = new System.Data.SqlClient.SqlDataAdapter(cmd);

			// sqlad.Fill(ds);
			// if (ds.Tables.Count > 0)
			//     ds.Tables[0].TableName = "crPhieuXuat_C_GetAll";
			//sqlad.Dispose(); cmd.Dispose(); sqlad = null;
			// cmd = null;
			//// if (SQLConnectionBD.State == System.Data.ConnectionState.Closed)
			//     //SQLConnectionBD.Close(); SQLConnectionBD.Dispose();
			// //if (_sqlConnection.State == System.Data.ConnectionState.Closed)
			// {
			//     //_sqlConnection.Close(); _sqlConnection.Dispose();
			//     //_sqlConnection = null;
			// }
			return ds;

		}
        public override DataSet RptVTGetInPHIEUXUATTRA(Boolean _qadmin, String _maPXT)
        {
            DataSet ds = new DataSet();
            string[] s = { "CRInPHIEUXUATTRA_RPT" };
            SqlHelper.FillDataset(SQLConnectionData, DatabaseOwner + ObjectQualifier + "spVTXuatTra_C_GETALL ", ds, s, _qadmin, _maPXT);
            // // // //// ds.WriteXmlSchema("CRInPHIEUXUATTRA_RPT.xsd");
            return ds;
        }
        public override DataSet crVTPhieuDoiThuoc_C_GetAll(Boolean _qadmin, String _maDThuoc)
        {
            DataSet ds = new DataSet();
            string[] s = { "crPhieuDoiThuoc_C_GetAll" };
            SqlHelper.FillDataset(SQLConnectionData, DatabaseOwner + ObjectQualifier + "spVTPhieuDoiThuoc_C_GETALL", ds, s, _qadmin, _maDThuoc);
            // // // //// ds.WriteXmlSchema("crPhieuDoiThuoc_C_GetAll.xsd");
            return ds;
        }

        public override DataSet crDMVTYT_GIA_RPT(string _madt, string dk)
        {
            DataSet ds = new DataSet();
            string[] s = { "DMVTYT_GIA_RPT" };
            SqlHelper.FillDataset(SQLConnectionData, DatabaseOwner + ObjectQualifier + "spDMVTYT_GIA_RPT", ds, s, _madt, dk);
            // // // //// ds.WriteXmlSchema("DMVTYT_GIA_RPT.xsd");
            return ds;
        }
        public override DataSet crVTKiemKe(String _maKK, Boolean _qadmin)
        {
            DataSet ds = new DataSet("crKiemKe");
            string[] s = { "crKiemKe" };
            SqlHelper.FillDataset(SQLConnectionData, DatabaseOwner + ObjectQualifier + "spVTKIEMKE_HD_GETALL", ds, s, _maKK, _qadmin);
            //// // // //// ds.WriteXmlSchema("crKiemKe.xsd");
            //return ds;

            //System.Data.SqlClient.SqlCommand cmd = SqlHelper.CreateCommand(SQLConnectionBD, DatabaseOwner + ObjectQualifier + "spVTKIEMKE_HD_GETALL");

            //cmd.CommandTimeout = 18000;
            //cmd.CommandType = System.Data.CommandType.StoredProcedure;
            //cmd.Parameters.AddWithValue("QADMIN", _qadmin);
            //cmd.Parameters.AddWithValue("MaKK", _maKK);

            //System.Data.SqlClient.SqlDataAdapter sqlad = new System.Data.SqlClient.SqlDataAdapter(cmd);

            //sqlad.Fill(ds);
            if (ds.Tables.Count > 0)
                ds.Tables[0].TableName = "crKiemKe";
            //sqlad.Dispose(); cmd.Dispose(); sqlad = null;
            // cmd = null;
            //// if (SQLConnectionBD.State == System.Data.ConnectionState.Closed)
            //     //SQLConnectionBD.Close(); SQLConnectionBD.Dispose();
            // //if (_sqlConnection.State == System.Data.ConnectionState.Closed)
            // {
            //     //_sqlConnection.Close(); _sqlConnection.Dispose();
            //     //_sqlConnection = null;
            // } 
            return ds;
        }
        public override DataSet crVTKiemKe_HoiDong(String _maPhieu, Boolean _qadmin, Byte _loai)
        {
            DataSet ds = new DataSet();
            string[] s = { "crKiemKe_HoiDong" };
            SqlHelper.FillDataset(SQLConnectionData, DatabaseOwner + ObjectQualifier + "spVTKIEMNHAP_GETALL", ds, s, _maPhieu, _qadmin, _loai);
            //// // // //// ds.WriteXmlSchema("crKiemKe_HoiDong.xsd");
            //return ds;

            //System.Data.SqlClient.SqlCommand cmd = SqlHelper.CreateCommand(SQLConnectionBD, DatabaseOwner + ObjectQualifier + "spVTKIEMNHAP_GETALL");

            //cmd.CommandTimeout = 18000;
            //cmd.CommandType = System.Data.CommandType.StoredProcedure;
            //cmd.Parameters.AddWithValue("MaPhieu", _maPhieu);
            //cmd.Parameters.AddWithValue("QADMIN", _qadmin);
            //cmd.Parameters.AddWithValue("LOAI", _loai);

            //System.Data.SqlClient.SqlDataAdapter sqlad = new System.Data.SqlClient.SqlDataAdapter(cmd);

            //sqlad.Fill(ds);
            if (ds.Tables.Count > 0)
                ds.Tables[0].TableName = "crKiemKe_HoiDong";
            //sqlad.Dispose(); cmd.Dispose(); sqlad = null;
            // cmd = null;
            // if (SQLConnectionBD.State == System.Data.ConnectionState.Closed)
            //SQLConnectionBD.Close(); SQLConnectionBD.Dispose();
            //if (_sqlConnection.State == System.Data.ConnectionState.Closed)
            {
                //_sqlConnection.Close(); _sqlConnection.Dispose();
                //_sqlConnection = null;
            }
            return ds;
        }
        public override DataSet crVTPhieuDTNhap_C_GetAll(Boolean _qadmin, String _maDuTru)
        {
            DataSet ds = new DataSet();
            string[] s = { "crPhieuDTNhap_C_GetAll" };
            SqlHelper.FillDataset(SQLConnectionData, DatabaseOwner + ObjectQualifier + "spVTPhieuDTNhap_C_GETALL", ds, s, _qadmin, _maDuTru);
            // // // //// ds.WriteXmlSchema("crPhieuDTNhap_C_GetAll.xsd");
            return ds;
        }

        public override DataSet crVTDuoc_TheKho(String _maKho, String _maThuoc, DateTime _tuNgay, DateTime _denNgay)
        {
            DataSet ds = new DataSet();
            string[] s = { "crDuoc_TheKho" };
            SqlHelper.FillDataset(SQLConnectionData, DatabaseOwner + ObjectQualifier + "SPVTYT_THEKHO", ds, s, _maKho, _maThuoc, _tuNgay, _denNgay);
            // // // //// ds.WriteXmlSchema("crDuoc_TheKho.xsd"); 
            return ds;
        }
        public override DataSet RptGetVTBCNhapTraTHUOC(string ACCOUNT, DateTime _TUNGAYYC, DateTime _DENNGAYYC, int LOAIPHIEU, string MAKHO, string MANHOM, string MACHUNGLOAI, string MAPL, string _DK)
        {
            DataSet ds = new DataSet();
            string[] s = { "CRBCNHAPTRATHUOC_RPT" };
            SqlHelper.FillDataset(SQLConnectionData, DatabaseOwner + ObjectQualifier + "spVTYT_BCNHAPTRATHUOC ", ds, s, ACCOUNT, _TUNGAYYC, _DENNGAYYC, LOAIPHIEU, MAKHO, MANHOM, MACHUNGLOAI, MAPL, _DK);
            // // // // //// ds.WriteXmlSchema("CRBCNHAPTRATHUOC_RPT.xsd");
            return ds;
        }
        public override DataSet crVTDuoc_BCNhapThuoc(String _account, DateTime _tuNgay, DateTime _denNgay, Byte _loaiPhieu, String _maKho, String _maNhom, String _maChungLoai, String _maPL, String _dK)
        {
            DataSet ds = new DataSet();
            string[] s = { "crDuoc_BCNhapThuoc" };
            SqlHelper.FillDataset(SQLConnectionData, DatabaseOwner + ObjectQualifier + "spVTYT_BCNHAPTHUOC", ds, s, _account, _tuNgay, _denNgay, _loaiPhieu, _maKho, _maNhom, _maChungLoai, _maPL, _dK);
            // // // //// ds.WriteXmlSchema("crDuoc_BCNhapThuoc.xsd");
            return ds;
        }
        public override DataSet RptGetVTBCXUATTHUOC(string ACCOUNT, DateTime _TUNGAYYC, DateTime _DENNGAYYC, int LOAIPHIEU, string MAKHO, string MANHOM, string MACHUNGLOAI, string MAPL, string _DK)
        {
            DataSet ds = new DataSet();
            string[] s = { "CRBCXuatthuoc_RPT" };
            SqlHelper.FillDataset(SQLConnectionData, DatabaseOwner + ObjectQualifier + "spVTYT_BCXUATTHUOC", ds, s, ACCOUNT, _TUNGAYYC, _DENNGAYYC, LOAIPHIEU, MAKHO, MANHOM, MACHUNGLOAI, MAPL, _DK);

            // DataSet ds = new DataSet();

            // System.Data.SqlClient.SqlCommand cmd = SqlHelper.CreateCommand(SQLConnectionBD, DatabaseOwner + ObjectQualifier + "spVTYT_BCXUATTHUOC");
            // cmd.CommandTimeout = 18000;
            // cmd.CommandType = System.Data.CommandType.StoredProcedure;
            // cmd.Parameters.AddWithValue("ACCOUNT", ACCOUNT);
            // cmd.Parameters.AddWithValue("TUNGAY", _TUNGAYYC);
            // cmd.Parameters.AddWithValue("DENNGAY", _DENNGAYYC);
            // cmd.Parameters.AddWithValue("LOAIPHIEU", LOAIPHIEU);
            // cmd.Parameters.AddWithValue("MAKHO", MAKHO);
            // cmd.Parameters.AddWithValue("MANHOM", MANHOM);
            // cmd.Parameters.AddWithValue("MACHUNGLOAI", MACHUNGLOAI);
            // cmd.Parameters.AddWithValue("MAPL", MAPL);
            // cmd.Parameters.AddWithValue("DK", _DK);
            // System.Data.SqlClient.SqlDataAdapter sqlad = new System.Data.SqlClient.SqlDataAdapter(cmd);

            // sqlad.Fill(ds);
            // if (ds.Tables.Count > 0)
            //     //string[] s ={ "" };
            //     ds.Tables[0].TableName = "CRBCXuatthuoc_RPT";
            //sqlad.Dispose(); cmd.Dispose(); sqlad = null;
            // cmd = null;
            // if (SQLConnectionBD.State == System.Data.ConnectionState.Closed)
            //SQLConnectionBD.Close(); SQLConnectionBD.Dispose();
            //if (_sqlConnection.State == System.Data.ConnectionState.Closed)
            {
                //_sqlConnection.Close(); _sqlConnection.Dispose();
                //_sqlConnection = null;
            }
            return ds;
        }

        public override DataSet RptGetBCNhapTraVTKhoa(string ACCOUNT, DateTime _TUNGAYYC, DateTime _DENNGAYYC, int LOAIPHIEU, string MAKHO, string MANHOM, string MACHUNGLOAI, string MAPL, string _DK)
        {
            DataSet ds = new DataSet("CRBCXuatthuoc_RPT");
            string[] s = { "CRBCXuatthuoc_RPT" };
            SqlHelper.FillDataset(SQLConnectionData, DatabaseOwner + ObjectQualifier + "spVTYT_BCNHAPTRATHUOC ", ds, s, ACCOUNT, _TUNGAYYC, _DENNGAYYC, LOAIPHIEU, MAKHO, MANHOM, MACHUNGLOAI, MAPL, _DK);
            //// ds.WriteXmlSchema("CRBCXuatthuocKhoa_RPT.xsd");
            //  // ds.WriteXmlSchema("CRBCXuatthuocKhoa_RPT.xsd");
            // System.Data.SqlClient.SqlCommand cmd = SqlHelper.CreateCommand(SQLConnectionBD, DatabaseOwner + ObjectQualifier + "spVTYT_BCNHAPTRATHUOC");

            // cmd.CommandTimeout = 18000;
            // cmd.CommandType = System.Data.CommandType.StoredProcedure;
            // cmd.Parameters.AddWithValue("ACCOUNT", ACCOUNT);
            // cmd.Parameters.AddWithValue("TUNGAY", _TUNGAYYC);
            // cmd.Parameters.AddWithValue("DENNGAY", _DENNGAYYC);
            // cmd.Parameters.AddWithValue("LOAIPHIEU", LOAIPHIEU);
            // cmd.Parameters.AddWithValue("MAKHO", MAKHO);
            // cmd.Parameters.AddWithValue("MANHOM", MANHOM);
            // cmd.Parameters.AddWithValue("MACHUNGLOAI", MACHUNGLOAI);
            // cmd.Parameters.AddWithValue("MAPL", MAPL);
            // cmd.Parameters.AddWithValue("DK", _DK);
            // System.Data.SqlClient.SqlDataAdapter sqlad = new System.Data.SqlClient.SqlDataAdapter(cmd);

            // sqlad.Fill(ds);
            // if (ds.Tables.Count > 0)
            //     //string[] s ={ "" };
            //     ds.Tables[0].TableName = "CRBCXuatthuoc_RPT";
            //sqlad.Dispose(); cmd.Dispose(); sqlad = null;
            // cmd = null;
            // if (SQLConnectionBD.State == System.Data.ConnectionState.Closed)
            //SQLConnectionBD.Close(); SQLConnectionBD.Dispose();
            //if (_sqlConnection.State == System.Data.ConnectionState.Closed)
            {
                //_sqlConnection.Close(); _sqlConnection.Dispose();
                //_sqlConnection = null;
            }
            return ds;

        }
        public override DataSet RptGetVTBCXUATTHUOC_C(string ACCOUNT, DateTime _TUNGAYYC, DateTime _DENNGAYYC, int LOAIPHIEU, string MAKHO, string MANHOM, string MACHUNGLOAI, string MAPL, string _DK)
        {
            DataSet ds = new DataSet();
            string[] s = { "CRBCXuatthuoc_C_RPT" };
            SqlHelper.FillDataset(SQLConnectionData, DatabaseOwner + ObjectQualifier + "spVTYT_BCXUATTHUOC ", ds, s, ACCOUNT, _TUNGAYYC, _DENNGAYYC, LOAIPHIEU, MAKHO, MANHOM, MACHUNGLOAI, MAPL, _DK);
            // // // //// ds.WriteXmlSchema("CRBCXuatthuoc_C_RPT.xsd");
            return ds;
        }
        public override DataSet RptVTBCNXTThuoc_C(DateTime _tuNgay, DateTime _denNgay, string _maKho, int _loaiBC, string _maNhom, string _maChungLoai, string _maPL, string _dK)
        {
            DataSet ds = new DataSet();
            string[] s = { "CRBCNXTThuoc_C_RPT" };
            SqlHelper.FillDataset(SQLConnectionData, DatabaseOwner + ObjectQualifier + "SPVTYT_BCNHAPXUATTON", ds, s, _tuNgay, _denNgay, _maKho, _loaiBC, _maNhom, _maChungLoai, _maPL, _dK);
            // // // //// ds.WriteXmlSchema("CRBCXuatthuoc_C_RPT.xsd");
            return ds;
        }
        public override IDataReader GetAllVTNhapTra_C_TonBN_gets(String MaKho, String MAKHOA, Byte Loai, String dk)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(SQLConnectionData, DatabaseOwner + ObjectQualifier + "spVTNhapTra_C_TonBN_Gets", MaKho, MAKHOA, Loai, dk));
        }
        public override DataSet RptVTBCNXTThuoc_ToanBV(DateTime _tuNgay, DateTime _denNgay, string _maKho, int _loaiBC, string _maNhom, string _maChungLoai, string _maPL, string _dK)
        {
            DataSet ds = new DataSet();
            string[] s = { "CRBCNXTThuoc_ToanBV_RPT" };
            SqlHelper.FillDataset(SQLConnectionData, DatabaseOwner + ObjectQualifier + "SPVTYT_BCNHAPXUATTON ", ds, s, _tuNgay, _denNgay, _maKho, _loaiBC, _maNhom, _maChungLoai, _maPL, _dK);
            // // // //// ds.WriteXmlSchema("CRBCNXTThuoc_ToanBV_RPT.xsd");
            return ds;
        }
        public override DataSet crVTTonKhoa_GetAll(DateTime _thang, String _maKhoa, String _dK)
        {
            DataSet ds = new DataSet();
            string[] s = { "crTonKhoa_GetAll" };
            SqlHelper.FillDataset(SQLConnectionData, DatabaseOwner + ObjectQualifier + "spVTTonkhoa_GetAll", ds, s, _thang, _maKhoa, _dK);
            // // // //// ds.WriteXmlSchema("crTonKhoa_GetAll.xsd");
            return ds;
        }
        public override DataSet RptVTGetPhieuHuyThuoc_HoidongHuy(string _maphieu, bool qadmin, byte loai)
        {
            DataSet ds = new DataSet();
            string[] s = { "SCRPhieuHuyThuoc_HoidongHuy_RPT" };
            SqlHelper.FillDataset(SQLConnectionData, DatabaseOwner + ObjectQualifier + "spVTKIEMNHAP_GETALL", ds, s, _maphieu, qadmin, loai);
            // // // //// ds.WriteXmlSchema("PhieuHuyThuoc_HoidongHuy.xsd");
            return ds;
        }
        public override DataSet RptVTTonKhoTheoHD(DateTime _tuNgay, DateTime _denNgay, string _maKho, int _loaiBC, string _maNhom, string _maChungLoai, string _maPL, string _dK)
        {
            DataSet ds = new DataSet();
            string[] s = { "CRBCTonKhoTheoHD_RPT" };
            SqlHelper.FillDataset(SQLConnectionData, DatabaseOwner + ObjectQualifier + "SPVTYT_BCNHAPXUATTON", ds, s, _tuNgay, _denNgay, _maKho, _loaiBC, _maNhom, _maChungLoai, _maPL, _dK);
            // // // //// ds.WriteXmlSchema("CRBCTonKhoTheoHD_RPT.xsd");
            return ds;
        }

        public override DataSet BCVTChiTietXuatKhoaPhong(string _ACCOUNT, DateTime _tuNgay, DateTime _denNgay, int _LOAIPHIEU, string _maKho, string _maNhom, string _maChungLoai, string _maPL, string _dK)
        {
            DataSet ds = new DataSet();
            string[] s = { "CRChiTietXuatKhoaPhong_RPt" };
            SqlHelper.FillDataset(SQLConnectionData, DatabaseOwner + ObjectQualifier + "SPVTYT_BCXUATTHUOC", ds, s, _ACCOUNT, _tuNgay, _denNgay, _LOAIPHIEU, _maKho, _maNhom, _maChungLoai, _maPL, _dK);
            // // //// ds.WriteXmlSchema("CRChiTietXuatKhoaPhong_RPt.xsd");
            return ds;
        }
        #endregion


        #region Get List
        //VTPhieuNhap
        public override IDataReader GetVTPhieuNhap_GetAll(Boolean _qadmin, String _maKho, String _mNCC, DateTime _tuNgay, DateTime _denNgay, String _dKien)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spVTPhieuNHAP_GETALL", _qadmin, _maKho, _mNCC, _tuNgay, _denNgay, _dKien));
        }
        public override IDataReader GetAllVTPhieuNhap_Get(String _maVTPhieuNhap, Boolean _qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spVTPhieuNHAP_GET", _maVTPhieuNhap, _qadmin));
        }
        //VTPhieuNhap chi tiet
        public override IDataReader GetVTPhieuNhap_C_GetAll(Boolean _qadmin, String _maVTPhieu)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spVTPhieuNHAP_C_GETALL", _qadmin, _maVTPhieu));
        }
        public override IDataReader GetVTPhieuNhap_C_Get(String _maPN, decimal STT)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spVTPhieuNHAP_C_GET", _maPN, STT));
        }


		//LKPhieuNhap
		public override IDataReader GetLKPhieuNhap_GetAll(Boolean _qadmin, String _maKho, String _mNCC, DateTime _tuNgay, DateTime _denNgay, String _dKien)
		{
			return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spLKPhieuNhap_GETALL", _qadmin, _maKho, _mNCC, _tuNgay, _denNgay, _dKien));
		}
		public override IDataReader GetAllLKPhieuNhap_Get(String _maLKPhieuNhap, Boolean _qadmin)
		{
			return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spLKPhieuNhap_GET", _maLKPhieuNhap, _qadmin));
		}
		public override IDataReader GetAllLKNhapTra(Boolean _qadmin, String _maKho, Byte _loaiLKPhieu, Byte _daPhat, DateTime _tuNgay, DateTime _denNgay, String _dieuKienThem)
		{
			return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spLKNhapTra_GetAll", _qadmin, _maKho, _loaiLKPhieu, _daPhat, _tuNgay, _denNgay, _dieuKienThem));
		}
		//LKPhieuNhap chi tiet
		public override IDataReader GetLKPhieuNhap_C_GetAll(Boolean _qadmin, String _maVTPhieu)
		{
			return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spLKPhieuNhap_C_GETALL", _qadmin, _maVTPhieu));
		}
		public override IDataReader GetLKPhieuNhap_C_Get(String _maPN, decimal STT)
		{
			return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spLKPhieuNhap_C_GET", _maPN, STT));
		}
		public override IDataReader GetAllLKNhapTra_C_TonBN_gets(String MaKho, String MAKHOA, Byte Loai, String dk)
		{
			return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spLKNhapTra_C_TonBN_Gets", MaKho, MAKHOA, Loai, dk));
		}
		public override IDataReader GetLKNhapTra(String _mapx, Boolean _qadmin, byte _loaiLKPhieu, byte _daphat)
		{
			return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spLKNhapTra_Get", _mapx, _qadmin, _loaiLKPhieu, _daphat));
		}
		public override IDataReader GetLKNhapTra_C(String _mapx, Byte _orderNumber)
		{
			return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spLKNhapTra_Get", _mapx, _orderNumber));
		}

        public override IDataReader GetVTPhieuXuat(String _mapx, Boolean _qadmin, byte _loaiVTPhieu, Boolean _daphat)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spVTPhieuXuat_Get", _mapx, _qadmin, _loaiVTPhieu, _daphat));
        }
        public override IDataReader GetAllVTPhieuXuat(Boolean _qadmin, String _maKho, Byte _loaiVTPhieu, Boolean _daPhat, DateTime _tuNgay, DateTime _denNgay, String _dieuKienThem, Boolean _daduyet)
        {
            //return ((IDataReader)SqlHelper.ExecuteReader( ConnectionString, DatabaseOwner + ObjectQualifier + "spVTPhieuXuat_GetAll", _qadmin, _maKho, _loaiVTPhieu, _daPhat, _tuNgay, _denNgay, _dieuKienThem, _daduyet));
            System.Data.SqlClient.SqlCommand cmd = SqlHelper.CreateCommand(SQLConnectionBD, DatabaseOwner + ObjectQualifier + "spVTPhieuXuat_GetAll");

            cmd.CommandTimeout = 18000;
            cmd.CommandType = System.Data.CommandType.StoredProcedure;
            cmd.Parameters.AddWithValue("qadmin ", _qadmin);
            cmd.Parameters.AddWithValue("maKho ", _maKho);
            cmd.Parameters.AddWithValue("loai", _loaiVTPhieu);
            cmd.Parameters.AddWithValue("daPhat", _daPhat);
            cmd.Parameters.AddWithValue("TuNgay", _tuNgay);
            cmd.Parameters.AddWithValue("denNgay", _denNgay);
            cmd.Parameters.AddWithValue("DK", _dieuKienThem);
            cmd.Parameters.AddWithValue("daduyet", _daduyet);
            IDataReader dt;
            dt = (IDataReader)cmd.ExecuteReader(CommandBehavior.CloseConnection); ;
            cmd.Dispose();
            cmd = null;

            // if (SQLConnectionBD.State == System.Data.ConnectionState.Closed)
            //SQLConnectionBD.Close(); SQLConnectionBD.Dispose();
            //if (_sqlConnection.State == System.Data.ConnectionState.Closed)
            {
                //_sqlConnection.Close(); _sqlConnection.Dispose();
                //_sqlConnection = null;
            }
            return dt;
        }
        public override IDataReader GetVTPhieuXuat_C(String _mapx, Byte _orderNumber)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spVTPhieuXuat_Get", _mapx, _orderNumber));
        }

		public override IDataReader GetLKPhieuXuat(String _mapx, Boolean _qadmin, byte _loaiLKPhieu, Boolean _daphat)
		{
			return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spLKPhieuXuat_Get", _mapx, _qadmin, _loaiLKPhieu, _daphat));
		}
		public override IDataReader GetAllLKPhieuXuat(Boolean _qadmin, String _maKho, Byte _loaiLKPhieu, Boolean _daPhat, DateTime _tuNgay, DateTime _denNgay, String _dieuKienThem, Boolean _daduyet)
		{
			//return ((IDataReader)SqlHelper.ExecuteReader( ConnectionString, DatabaseOwner + ObjectQualifier + "spLKPhieuXuat_GetAll", _qadmin, _maKho, _loaiLKPhieu, _daPhat, _tuNgay, _denNgay, _dieuKienThem, _daduyet));
			System.Data.SqlClient.SqlCommand cmd = SqlHelper.CreateCommand(SQLConnectionBD, DatabaseOwner + ObjectQualifier + "spLKPhieuXuat_GetAll");

			cmd.CommandTimeout = 18000;
			cmd.CommandType = System.Data.CommandType.StoredProcedure;
			cmd.Parameters.AddWithValue("qadmin ", _qadmin);
			cmd.Parameters.AddWithValue("maKho ", _maKho);
			cmd.Parameters.AddWithValue("loai", _loaiLKPhieu);
			cmd.Parameters.AddWithValue("daPhat", _daPhat);
			cmd.Parameters.AddWithValue("TuNgay", _tuNgay);
			cmd.Parameters.AddWithValue("denNgay", _denNgay);
			cmd.Parameters.AddWithValue("DK", _dieuKienThem);
			cmd.Parameters.AddWithValue("daduyet", _daduyet);
			IDataReader dt;
			dt = (IDataReader)cmd.ExecuteReader(CommandBehavior.CloseConnection); ;
			cmd.Dispose();
			cmd = null;

			// if (SQLConnectionBD.State == System.Data.ConnectionState.Closed)
			//SQLConnectionBD.Close(); SQLConnectionBD.Dispose();
			//if (_sqlConnection.State == System.Data.ConnectionState.Closed)
			{
				//_sqlConnection.Close(); _sqlConnection.Dispose();
				//_sqlConnection = null;
			}
			return dt;
		}
		public override IDataReader GetLKPhieuXuat_C(String _mapx, Byte _orderNumber)
		{
			return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spLKPhieuXuat_Get", _mapx, _orderNumber));
		}


        public override IDataReader GetVTNhapTra(String _mapx, Boolean _qadmin, byte _loaiVTPhieu, byte _daphat)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spVTNhapTra_Get", _mapx, _qadmin, _loaiVTPhieu, _daphat));
        }

        public override IDataReader GetAllVTNhapTra(Boolean _qadmin, String _maKho, Byte _loaiVTPhieu, Byte _daPhat, DateTime _tuNgay, DateTime _denNgay, String _dieuKienThem)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spVTNhapTra_GetAll", _qadmin, _maKho, _loaiVTPhieu, _daPhat, _tuNgay, _denNgay, _dieuKienThem));
        }
        public override IDataReader GetVTNhapTra_C(String _mapx, Byte _orderNumber)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spVTNhapTra_Get", _mapx, _orderNumber));
        }
        public override IDataReader GetVTXuatTra(String _maPXT, Boolean _qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spVTXuatTra_GET", _maPXT, _qadmin));
        }
        public override IDataReader GetAllVTXuatTra(Boolean _qadmin, String makho, String maNCC, DateTime tungay, DateTime denngay, String dieukienthem)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spVTXuatTra_GetAll", _qadmin, makho, maNCC, tungay, denngay, dieukienthem));
        }
        public override IDataReader GetVTXuatTra_C(String _maPXT, Decimal STT)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spVTXuatTra_C_GET", _maPXT, STT));
        }
        public override IDataReader GetAllVTKiemNhap(String _maVTPhieu, Boolean _qadmin, Byte loai)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spVTKiemNHAP_GETALL", _maVTPhieu, _qadmin, loai));
        }
        public override IDataReader GetVTTonDau(String _makho)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spVTTonDAU_GET", _makho));
        }

        public override IDataReader GetVTTonDauKhoa(String makhoa)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spVTTonDAUKhoa_GET", makhoa));
        }

        public override IDataReader GetVTKiemKe(String _maKK, bool qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spVTKiemKE_GET", _maKK, qadmin));
        }
        public override IDataReader GetAllVTKiemKe(String makho, DateTime tungay, DateTime denngay, String dieukienthem, bool qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spVTKiemKe_GETALL", makho, tungay, denngay, dieukienthem, qadmin));
        }
        public override IDataReader GetVTKiemKe_C(String _maKK, Decimal _sTT)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spVTKiemKE_C_GET", _maKK, _sTT));
        }
        public override IDataReader GetVTKiemKe_HD(String _mAKK, Decimal _sTT)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spVTKiemKE_HD_GET", _mAKK, _sTT));
        }
        public override IDataReader GetVTPhieuDoiThuoc(String _maDThuoc, bool _qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spVTPhieuDoiThuoc_GET", _maDThuoc, _qadmin));
        }
        public override IDataReader GetAllVTPhieuDoiThuoc(String makho, String maNCC, DateTime tungay, DateTime denngay, String dieukienthem, bool qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spVTPhieuDoiThuoc_GETALL", makho, maNCC, tungay, denngay, dieukienthem, qadmin));
        }
        public override IDataReader GetVTPhieuDoiThuoc_C(String _maDThuoc, Decimal _sTT)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spVTPhieuDoiThuoc_C_GET", _maDThuoc, _sTT));
        }
        public override IDataReader GetAllVTTonKhoa(DateTime ngayyclinh, string makhoa, String dk)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spvtTonkhoa_GetAll", ngayyclinh, makhoa, dk));
        }
        public override IDataReader GetsVTTonKhoa(DateTime tuthang, DateTime denthang, string makhoa, String dk)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spvtTonkhoa_Gets", tuthang, denthang, makhoa, dk));
        }
        public override IDataReader GetAllKhambenh_VTTH_BN_gets(DateTime TuNgay, DateTime DenNgay, Boolean Duyet, Boolean Phat, String MaDT, String MaKho, String MAKHOA, Boolean dadung, String dk)
        {
            // return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spKhambenh_VTTH_BN_gets", TuNgay, DenNgay, Duyet, Phat, MaDT, MaKho, MAKHOA, dadung, dk));
            System.Data.SqlClient.SqlCommand cmd = SqlHelper.CreateCommand(SQLConnectionBD, DatabaseOwner + ObjectQualifier + "spKhambenh_VTTH_BN_gets");

            cmd.CommandTimeout = 18000;
            cmd.CommandType = System.Data.CommandType.StoredProcedure;
            cmd.Parameters.AddWithValue("TuNgay", TuNgay);
            cmd.Parameters.AddWithValue("DenNgay", DenNgay);
            cmd.Parameters.AddWithValue("Duyet", Duyet);
            cmd.Parameters.AddWithValue("Phat", Phat);
            cmd.Parameters.AddWithValue("MaDT", MaDT);
            cmd.Parameters.AddWithValue("MaKho", MaKho);
            cmd.Parameters.AddWithValue("MaKhoa", MAKHOA);
            cmd.Parameters.AddWithValue("dadung", dadung);
            cmd.Parameters.AddWithValue("DK", dk);
            IDataReader dt;
            dt = (IDataReader)cmd.ExecuteReader(CommandBehavior.CloseConnection); ;
            cmd.Dispose();
            cmd = null;
            // if (SQLConnectionBD.State == System.Data.ConnectionState.Closed)
            //SQLConnectionBD.Close(); SQLConnectionBD.Dispose();
            //if (_sqlConnection.State == System.Data.ConnectionState.Closed)
            {
                //_sqlConnection.Close(); _sqlConnection.Dispose();
                //_sqlConnection = null;
            }
            return dt;
        }
        public override IDataReader GetAllKhambenh_VTTH_TON_gets(DateTime TuNgay, DateTime DenNgay, Boolean Duyet, Boolean Phat, String MaDT, String MaKho, String MAKHOA, Boolean dadung, String dk)
        {
            //  return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spKhambenh_VTTH_TON_gets", TuNgay, DenNgay, Duyet, Phat, MaDT, MaKho, MAKHOA, dadung, dk));

            System.Data.SqlClient.SqlCommand cmd = SqlHelper.CreateCommand(SQLConnectionBD, DatabaseOwner + ObjectQualifier + "spKhambenh_VTTH_TON_gets");

            cmd.CommandTimeout = 18000;
            cmd.CommandType = System.Data.CommandType.StoredProcedure;
            cmd.Parameters.AddWithValue("TuNgay", TuNgay);
            cmd.Parameters.AddWithValue("DenNgay", DenNgay);
            cmd.Parameters.AddWithValue("Duyet", Duyet);
            cmd.Parameters.AddWithValue("Phat", Phat);
            cmd.Parameters.AddWithValue("MaDT", MaDT);
            cmd.Parameters.AddWithValue("MaKho", MaKho);
            cmd.Parameters.AddWithValue("MaKhoa", MAKHOA);
            cmd.Parameters.AddWithValue("dadung", dadung);
            cmd.Parameters.AddWithValue("DK", dk);
            IDataReader dt;
            dt = (IDataReader)cmd.ExecuteReader(CommandBehavior.CloseConnection); ;
            cmd.Dispose();
            cmd = null;
            //// if (SQLConnectionBD.State == System.Data.ConnectionState.Closed)
            //     //SQLConnectionBD.Close(); SQLConnectionBD.Dispose();
            // //if (_sqlConnection.State == System.Data.ConnectionState.Closed)
            // {
            //     //_sqlConnection.Close(); _sqlConnection.Dispose();
            //     //_sqlConnection = null;
            // }
            return dt;
        }
        public override IDataReader GetAllKhambenh_HoaChat_BN_gets(DateTime TuNgay, DateTime DenNgay, Boolean Duyet, Boolean Phat, String MaDT, String MaKho, String MAKHOA, Boolean dadung, String dk)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spKhambenh_HoaChat_BN_gets", TuNgay, DenNgay, Duyet, Phat, MaDT, MaKho, MAKHOA, dadung, dk));
            //System.Data.SqlClient.SqlCommand cmd = SqlHelper.CreateCommand(SQLConnectionBD, DatabaseOwner + ObjectQualifier + "spKhambenh_HoaChat_BN_gets");

            //cmd.CommandTimeout = 18000;
            //cmd.CommandType = System.Data.CommandType.StoredProcedure;
            //cmd.Parameters.AddWithValue("TuNgay", TuNgay);
            //cmd.Parameters.AddWithValue("DenNgay", DenNgay);
            //cmd.Parameters.AddWithValue("Duyet", Duyet);
            //cmd.Parameters.AddWithValue("Phat", Phat);
            //if (MaDT == null)
            //    cmd.Parameters.AddWithValue("MaDT", "");
            //else
            //    cmd.Parameters.AddWithValue("MaDT", MaDT);
            //if (MaKho == null)
            //    cmd.Parameters.AddWithValue("MaKho", "");
            //else
            //    cmd.Parameters.AddWithValue("MaKho", MaKho);
            //if (MAKHOA == null)
            //    cmd.Parameters.AddWithValue("MaKhoa", "");
            //else
            //    cmd.Parameters.AddWithValue("MaKhoa", MAKHOA);
            //if (dadung == null)
            //    cmd.Parameters.AddWithValue("dadung", false);
            //else
            //    cmd.Parameters.AddWithValue("dadung", dadung);
            //if (dk == null)
            //    cmd.Parameters.AddWithValue("DK", "");
            //else
            //    cmd.Parameters.AddWithValue("DK", dk);
            //IDataReader dt;
            //dt = (IDataReader)cmd.ExecuteReader(CommandBehavior.CloseConnection);;
            //cmd.Dispose();
            //cmd = null;
            // if (SQLConnectionBD.State == System.Data.ConnectionState.Closed)
            //SQLConnectionBD.Close(); SQLConnectionBD.Dispose();
            //if (_sqlConnection.State == System.Data.ConnectionState.Closed)
            {
                //_sqlConnection.Close(); _sqlConnection.Dispose();
                //_sqlConnection = null;
            }
            //return dt;
        }
        public override IDataReader GetAllKhambenh_HoaChat_TON_gets(DateTime TuNgay, DateTime DenNgay, Boolean Duyet, Boolean Phat, String MaDT, String MaKho, String MAKHOA, Boolean dadung, String dk)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spKhambenh_HoaChat_TON_gets", TuNgay, DenNgay, Duyet, Phat, MaDT, MaKho, MAKHOA, dadung, dk));
            // System.Data.SqlClient.SqlCommand cmd = SqlHelper.CreateCommand(SQLConnectionBD, DatabaseOwner + ObjectQualifier + "spKhambenh_HoaChat_TON_gets");

            // cmd.CommandTimeout = 18000;
            // cmd.CommandType = System.Data.CommandType.StoredProcedure;
            // cmd.Parameters.AddWithValue("TuNgay", TuNgay);
            // cmd.Parameters.AddWithValue("DenNgay", DenNgay);
            // cmd.Parameters.AddWithValue("Duyet", Duyet);
            // cmd.Parameters.AddWithValue("Phat", Phat);
            // if (MaDT == null)
            //     cmd.Parameters.AddWithValue("MaDT", "");
            // else
            //     cmd.Parameters.AddWithValue("MaDT", MaDT);
            // if (MaKho == null)
            //     cmd.Parameters.AddWithValue("MaKho", "");
            // else
            //     cmd.Parameters.AddWithValue("MaKho", MaKho);
            // if (MAKHOA == null)
            //     cmd.Parameters.AddWithValue("MaKhoa", "");
            // else
            //     cmd.Parameters.AddWithValue("MaKhoa", MAKHOA);
            // if (dadung == null)
            //     cmd.Parameters.AddWithValue("dadung", false);
            // else
            //     cmd.Parameters.AddWithValue("dadung", dadung);
            // if (dk == null)
            //     cmd.Parameters.AddWithValue("DK", "");
            // else
            //     cmd.Parameters.AddWithValue("DK", dk);
            // IDataReader dt;
            // dt = (IDataReader)cmd.ExecuteReader(CommandBehavior.CloseConnection);;
            // cmd.Dispose();
            // cmd = null;
            //// if (SQLConnectionBD.State == System.Data.ConnectionState.Closed)
            //     //SQLConnectionBD.Close(); SQLConnectionBD.Dispose();
            // //if (_sqlConnection.State == System.Data.ConnectionState.Closed)
            // {
            //     //_sqlConnection.Close(); _sqlConnection.Dispose();
            //     //_sqlConnection = null;
            // }
            // return dt;
        }
        #endregion

        #region Find List
        //VTPhieuNhap
        public override IDataReader FindVTPhieuNhap(string _DK, Boolean _qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spVTPhieuNhap_Finds", _DK, _qadmin));
        }
        public override IDataReader FindVTPhieuDoiThuoc(bool qadmin, string dk)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spVTPhieuDoiThuoc_FINDS", qadmin, dk));
        }
        #endregion

        #region VTPhieuNhap
        // public abstract String InsertVTPhieuNhap(string _maNCC, String _soHD, String _soCT, SmartDate _ngayPNhap, String _maKho, decimal _chietKhau, Boolean _thanhToan, SmartDate _ngayTToan, SmartDate _ngayNhapTT, String _NVNhap, decimal _VTTong, String _ghiChu, Boolean _huy, String _nguoiSD, string _maMay, String _nguoiGiao);
        public override String InsertVTPhieuNhap(string _maNCC, String _soHD, String _soCT, SmartDate _ngayPNhap, String _maKho, decimal _chietKhau, Boolean _thanhToan, SmartDate _ngayTToan, SmartDate _ngayNhapTT, String _NVNhap, decimal _VTTong, String _ghiChu, Boolean _huy, String _nguoiSD, string _maMay, String _nguoiGiao, String _manguon, String _mahinhthuc, string _sohdon, SmartDate _ngayhdon)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spVTPhieuNHAP_CREATE", _maNCC, _soHD, _soCT, _ngayPNhap.DBValue, _maKho, _chietKhau, _thanhToan, _ngayTToan.DBValue, _ngayNhapTT.DBValue, _NVNhap, _VTTong, _ghiChu, _huy, _nguoiSD, _maMay, _nguoiGiao, _manguon, _mahinhthuc, _sohdon, _ngayhdon.DBValue));
        }
        public override void UpdateVTPhieuNhap(String _maPN, string _maNCC, String _soHD, String _soCT, SmartDate _ngayPNhap, String _maKho, decimal _chietKhau, Boolean _thanhToan, SmartDate _ngayTToan, SmartDate _ngayNhapTT, String _NVNhap, decimal _VTTong, String _ghiChu, Boolean _huy, String _nguoiSD, SmartDate _ngaySD1, String _nguoiSD1, String _nguoiGiao, String _manguon, String _mahinhthuc, string _sohdon, SmartDate _ngayhdon)
        {
            System.Data.SqlClient.SqlDataReader dr;
            dr = SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spVTPhieuNHAP_UPDATE", _maPN, _maNCC, _soHD, _soCT, _ngayPNhap.DBValue, _maKho, _chietKhau, _thanhToan, _ngayTToan.DBValue, _ngayNhapTT.DBValue, _NVNhap, _VTTong, _ghiChu, _huy, _nguoiSD, _ngaySD1.DBValue, _nguoiSD1, _nguoiGiao, _manguon, _mahinhthuc, _sohdon, _ngayhdon.DBValue);
            dr.Close();
            dr = null;

        }
        public override void DeleteVTPhieuNhap(String _maPN, SmartDate _ngaySD, string _maMay, String _nguoiSD)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spVTPhieuNHAP_DELETED", _maPN, _ngaySD.DBValue, _maMay, _nguoiSD);
        }
        #endregion

        #region VTPhieuNhap chi tiet

        public override String InsertVTPhieuNhap_C(String _maPN, String _maThuoc, decimal _soluong, SmartDate _hanSD, decimal _donGia, decimal _chietKhau, String _soLo, Boolean _huy, String _ghiChu, string _maMay, String _nguoiSD)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spVTPhieuNHAP_C_CREATE", _maPN, _maThuoc, _soluong, _hanSD.DBValue, _donGia, _chietKhau, _soLo, _huy, _ghiChu, _maMay, _nguoiSD));
        }
        public override void UpdateVTPhieuNhap_C(String _maPN, decimal _sTT, String _maThuoc, decimal _soluong, SmartDate _hanSD, decimal _donGia, decimal _chietKhau, String _soLo, Boolean _huy, String _ghiChu, SmartDate _ngaySD, string _maMay, String _nguoiSD)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spVTPhieuNHAP_C_UPDATE", _maPN, _sTT, _maThuoc, _soluong, _hanSD.DBValue, _donGia, _chietKhau, _soLo, _huy, _ghiChu, _ngaySD.DBValue, _maMay, _nguoiSD);
        }
        public override void DeleteVTPhieuNhap_C(String _maPN, decimal _sTT, String _nguoiSD, String _maMay)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spVTPhieuNHAP_C_DELETED", _maPN, _sTT, _nguoiSD, _maMay);
        }
        #endregion

		#region LKPhieuNhap
		// public abstract String InsertLKPhieuNhap(string _maNCC, String _soHD, String _soCT, SmartDate _ngayPNhap, String _maKho, decimal _chietKhau, Boolean _thanhToan, SmartDate _ngayTToan, SmartDate _ngayNhapTT, String _NVNhap, decimal _VTTong, String _ghiChu, Boolean _huy, String _nguoiSD, string _maMay, String _nguoiGiao);
		public override String InsertLKPhieuNhap(string _maNCC, String _soHD, String _soCT, SmartDate _ngayPNhap, String _maKho, decimal _chietKhau, Boolean _thanhToan, SmartDate _ngayTToan, SmartDate _ngayNhapTT, String _NVNhap, decimal _VTTong, String _ghiChu, Boolean _huy, String _nguoiSD, string _maMay, String _nguoiGiao, String _manguon, String _mahinhthuc, string _sohdon, SmartDate _ngayhdon)
		{
			return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spLKPhieuNhap_CREATE", _maNCC, _soHD, _soCT, _ngayPNhap.DBValue, _maKho, _chietKhau, _thanhToan, _ngayTToan.DBValue, _ngayNhapTT.DBValue, _NVNhap, _VTTong, _ghiChu, _huy, _nguoiSD, _maMay, _nguoiGiao, _manguon, _mahinhthuc, _sohdon, _ngayhdon.DBValue));
		}
		public override void UpdateLKPhieuNhap(String _maPN, string _maNCC, String _soHD, String _soCT, SmartDate _ngayPNhap, String _maKho, decimal _chietKhau, Boolean _thanhToan, SmartDate _ngayTToan, SmartDate _ngayNhapTT, String _NVNhap, decimal _VTTong, String _ghiChu, Boolean _huy, String _nguoiSD, SmartDate _ngaySD1, String _nguoiSD1, String _nguoiGiao, String _manguon, String _mahinhthuc, string _sohdon, SmartDate _ngayhdon)
		{
			System.Data.SqlClient.SqlDataReader dr;
			dr = SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spLKPhieuNhap_UPDATE", _maPN, _maNCC, _soHD, _soCT, _ngayPNhap.DBValue, _maKho, _chietKhau, _thanhToan, _ngayTToan.DBValue, _ngayNhapTT.DBValue, _NVNhap, _VTTong, _ghiChu, _huy, _nguoiSD, _ngaySD1.DBValue, _nguoiSD1, _nguoiGiao, _manguon, _mahinhthuc, _sohdon, _ngayhdon.DBValue);
			dr.Close();
			dr = null;

		}
		public override void DeleteLKPhieuNhap(String _maPN, SmartDate _ngaySD, string _maMay, String _nguoiSD)
		{
			SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spLKPhieuNhap_DELETED", _maPN, _ngaySD.DBValue, _maMay, _nguoiSD);
		}
		#endregion

		#region LKPhieuNhap chi tiet

		public override String InsertLKPhieuNhap_C(String _maPN, String _maThuoc, decimal _soluong, SmartDate _hanSD, decimal _donGia, decimal _chietKhau, String _soLo, Boolean _huy, String _ghiChu, string _maMay, String _nguoiSD)
		{
			return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spLKPhieuNhap_C_CREATE", _maPN, _maThuoc, _soluong, _hanSD.DBValue, _donGia, _chietKhau, _soLo, _huy, _ghiChu, _maMay, _nguoiSD));
		}
		public override void UpdateLKPhieuNhap_C(String _maPN, decimal _sTT, String _maThuoc, decimal _soluong, SmartDate _hanSD, decimal _donGia, decimal _chietKhau, String _soLo, Boolean _huy, String _ghiChu, SmartDate _ngaySD, string _maMay, String _nguoiSD)
		{
			SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spLKPhieuNhap_C_UPDATE", _maPN, _sTT, _maThuoc, _soluong, _hanSD.DBValue, _donGia, _chietKhau, _soLo, _huy, _ghiChu, _ngaySD.DBValue, _maMay, _nguoiSD);
		}
		public override void DeleteLKPhieuNhap_C(String _maPN, decimal _sTT, String _nguoiSD, String _maMay)
		{
			SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spLKPhieuNhap_C_DELETED", _maPN, _sTT, _nguoiSD, _maMay);
		}

		#region Nhap Tra


		public override String InsertLKNhapTra(String _noiNhap, SmartDate _ngayNhap, SmartDate _ngayNhapTT, String _noiXuat, Byte _loaiLKPhieu, String _soCT, String _nvXuat, String _nvNhan, String _ghiChu, String _nguoiLap, Boolean _bnTra, string _maMay, Byte _daPhat)
		{
			return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spLKNhapTra_CREATE", _noiNhap, _ngayNhap.DBValue, _ngayNhapTT.DBValue, _noiXuat, _loaiLKPhieu, _soCT, _nvXuat, _nvNhan, _ghiChu, _nguoiLap, _bnTra, _maMay, _daPhat));
		}
		public override void UpdateLKNhapTra(String _maPX, String _noiXuat, SmartDate _ngayNhap, SmartDate _ngayNhapTT, String _noiNhap, Byte _loaiLKPhieu, String _soCT, String _nvXuat, String _nvNhan, String _ghiChu, Boolean _huy, string _maMay, String _nguoiSD, Byte _daPhat, Boolean _bnTra, Boolean _DADUYET)
		{
			SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spLKNhapTra_UPDATE", _maPX, _noiXuat, _ngayNhap.DBValue, _ngayNhapTT.DBValue, _noiNhap, _loaiLKPhieu, _soCT, _nvXuat, _nvNhan, _ghiChu, _huy, _maMay, _nguoiSD, _daPhat, _bnTra, _DADUYET);
		}
		public override void DeleteLKNhapTra(String _maPX, string _maMay, String _nguoiSD)
		{
			SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spLKNhapTra_DELETED", _maPX, _maMay, _nguoiSD);
		}
		#endregion

		#region Nhap tra chi tiet
		//InsertLKNhapTra_C(String _MaPNT, String _maThuoc, Decimal _soLuong, SmartDate _hanSD,  Decimal _donGia,String _soLo,  Boolean Huy, String _ghiChu,String _maMay, String _nguoiSD);
		public override String InsertLKNhapTra_C(String _maPX, String _maThuoc, Decimal _soLuong, SmartDate _hanSD, Decimal _donGia, String _soLo, Boolean _Huy, String _ghiChu, string _maMay, String _nguoiSD, Decimal _soLuongYC)
		{
			System.Data.SqlClient.SqlDataReader dr;
			dr = SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spLKNhapTra_C_CREATE", _maPX, _maThuoc, _soLuong, _hanSD.DBValue, _donGia, _soLo, _Huy, _ghiChu, _maMay, _nguoiSD, _soLuongYC);
			dr.Close();
			dr = null;
			return "";
		}
		public override void UpdateLKNhapTra_C(String _maPX, Decimal _sTT, String _maThuoc, Decimal _soLuong, SmartDate _hanSD, String _soLo, Decimal _donGia, Decimal _soLuongYC, Decimal _giaBan, Boolean _huy, String _ghiChu, String _nguoiSD, string _maMay)
		{
			SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spLKNhapTra_C_UPDATE", _maPX, _sTT, _maThuoc, _soLuong, _hanSD.DBValue, _soLo, _donGia, _soLuongYC, _giaBan, _huy, _ghiChu, _nguoiSD, _maMay);
		}
		public override void DeleteLKNhapTra_C(String _maPX, Decimal _sTT, String _nguoiSD, string _maMay)
		{
			SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spLKNhapTra_C_DELETED", _maPX, _sTT, _nguoiSD, _maMay);
		}

		#endregion
		#endregion

		#region LKPhieuXuat
		public override String InsertLKPhieuXuat(String _noiXuat, SmartDate _ngayXuat, SmartDate _ngayXuatTT, String _noiNhap, Byte _loaiLKPhieu, String _soCT, String _nvXuat, String _nvNhan, String _ghiChu, Boolean _huy, String _nguoiLap, Boolean _khoaYC, string _maMay, Boolean _daPhat, Boolean _daDuyet, String _doiTuong)
		{
			return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spLKPhieuXUAT_CREATE", _noiXuat, _ngayXuat.DBValue, _ngayXuatTT.DBValue, _noiNhap, _loaiLKPhieu, _soCT, _nvXuat, _nvNhan, _ghiChu, _huy, _nguoiLap, _khoaYC, _maMay, _daPhat, _daDuyet, _doiTuong));
		}
		public override void UpdateLKPhieuXuat(String _maPX, String _noiXuat, SmartDate _ngayXuat, SmartDate _ngayXuatTT, String _noiNhap, Byte _loaiLKPhieu, String _soCT, String _nvXuat, String _nvNhan, String _ghiChu, Boolean _huy, string _maMay, String _nguoiSD, Boolean _daPhat, Boolean _daDuyet, String _doiTuong)
		{
			SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spLKPhieuXUAT_UPDATE", _maPX, _noiXuat, _ngayXuat.DBValue, _ngayXuatTT.DBValue, _noiNhap, _loaiLKPhieu, _soCT, _nvXuat, _nvNhan, _ghiChu, _huy, _maMay, _nguoiSD, _daPhat, _daDuyet, _doiTuong);
		}
		public override void DeleteLKPhieuXuat(String _maPX, string _maMay, String _nguoiSD)
		{
			SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spLKPhieuXUAT_DELETED", _maPX, _maMay, _nguoiSD);
		}
		public override String InsertLKPhieuXuat(String _noiXuat, SmartDate _ngayXuat, SmartDate _ngayXuatTT, String _noiNhap, Byte _loaiLKPhieu, String _soCT, String _nvXuat, String _nvNhan, String _ghiChu, Boolean _huy, String _nguoiLap, Boolean _khoaYC, string _maMay, Boolean _daPhat, Boolean _daDuyet, String _doiTuong, Boolean _KHONGSUA)
		{
			return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spLKPhieuXUAT_CREATE", _noiXuat, _ngayXuat.DBValue, _ngayXuatTT.DBValue, _noiNhap, _loaiLKPhieu, _soCT, _nvXuat, _nvNhan, _ghiChu, _huy, _nguoiLap, _khoaYC, _maMay, _daPhat, _daDuyet, _doiTuong, _KHONGSUA));
		}

		#endregion
		#region LKPhieu Xuat chi tiet

		public override String InsertLKPhieuXuat_C(String _maPX, String _maThuoc, Decimal _soLuong, SmartDate _hanSD, String _soLo, Decimal _donGia, Decimal _soLuongYC, Decimal _giaBan, String _ghiChu, String _nguoiSD, string _maMay)
		{
			System.Data.SqlClient.SqlDataReader dr;
			dr = SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spLKPhieuXUAT_C_CREATE", _maPX, _maThuoc, _soLuong, _hanSD.DBValue, _soLo, _donGia, _soLuongYC, _giaBan, _ghiChu, _nguoiSD, _maMay);
			dr.Close();
			dr = null;
			return "";
		}
		public override void UpdateLKPhieuXuat_C(String _maPX, Decimal _sTT, String _maThuoc, Decimal _soLuong, SmartDate _hanSD, String _soLo, Decimal _donGia, Decimal _soLuongYC, Decimal _giaBan, Boolean _huy, String _ghiChu, String _nguoiSD, string _maMay)
		{
			SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spLKPhieuXUAT_C_UPDATE", _maPX, _sTT, _maThuoc, _soLuong, _hanSD.DBValue, _soLo, _donGia, _soLuongYC, _giaBan, _huy, _ghiChu, _nguoiSD, _maMay);
		}
		public override void DeleteLKPhieuXuat_C(String _maPX, Decimal _sTT, String _nguoiSD, string _maMay)
		{
			SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spLKPhieuXUAT_C_DELETED", _maPX, _sTT, _nguoiSD, _maMay);
		}
		public override String InsertLKPhieuXuat_Xe_C(String _maPX, String _maThuoc, Decimal _soLuong, SmartDate _hanSD, String _soLo, Decimal _donGia, Decimal _soLuongYC, Decimal _giaBan, String _ghiChu, String _nguoiSD, string _maMay, string _maxeoto, Decimal _tuso, Decimal _denso, String _manvql)
		{
			System.Data.SqlClient.SqlDataReader dr;
			dr = SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spLKPhieuXuat_Xe_C_CREATE", _maPX, _maThuoc, _soLuong, _hanSD.DBValue, _soLo, _donGia, _soLuongYC, _giaBan, _ghiChu, _nguoiSD, _maMay, _maxeoto, _tuso, _denso, _manvql);
			dr.Close();
			dr = null;
			return "";
		}
		public override void UpdateLKPhieuXuat_Xe_C(String _maPX, Decimal _sTT, String _maThuoc, Decimal _soLuong, SmartDate _hanSD, String _soLo, Decimal _donGia, Decimal _soLuongYC, Decimal _giaBan, Boolean _huy, String _ghiChu, String _nguoiSD, string _maMay, string _maxeoto, Decimal _tuso, Decimal _denso, String _manvql)
		{
			SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spLKPhieuXuat_Xe_C_UPDATE", _maPX, _sTT, _maThuoc, _soLuong, _hanSD.DBValue, _soLo, _donGia, _soLuongYC, _giaBan, _huy, _ghiChu, _nguoiSD, _maMay, _maxeoto, _tuso, _denso, _manvql);
		}
		public override void DeleteLKPhieuXuat_Xe_C(String _maPX, Decimal _sTT, String _nguoiSD, string _maMay)
		{
			SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spLKPhieuXuat_Xe_C_DELETED", _maPX, _sTT, _nguoiSD, _maMay);
		}
		#endregion

        #region VTPhieuXuat
        public override String InsertVTPhieuXuat(String _noiXuat, SmartDate _ngayXuat, SmartDate _ngayXuatTT, String _noiNhap, Byte _loaiVTPhieu, String _soCT, String _nvXuat, String _nvNhan, String _ghiChu, Boolean _huy, String _nguoiLap, Boolean _khoaYC, string _maMay, Boolean _daPhat, Boolean _daDuyet, String _doiTuong)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spVTPhieuXUAT_CREATE", _noiXuat, _ngayXuat.DBValue, _ngayXuatTT.DBValue, _noiNhap, _loaiVTPhieu, _soCT, _nvXuat, _nvNhan, _ghiChu, _huy, _nguoiLap, _khoaYC, _maMay, _daPhat, _daDuyet, _doiTuong));
        }
        public override void UpdateVTPhieuXuat(String _maPX, String _noiXuat, SmartDate _ngayXuat, SmartDate _ngayXuatTT, String _noiNhap, Byte _loaiVTPhieu, String _soCT, String _nvXuat, String _nvNhan, String _ghiChu, Boolean _huy, string _maMay, String _nguoiSD, Boolean _daPhat, Boolean _daDuyet, String _doiTuong)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spVTPhieuXUAT_UPDATE", _maPX, _noiXuat, _ngayXuat.DBValue, _ngayXuatTT.DBValue, _noiNhap, _loaiVTPhieu, _soCT, _nvXuat, _nvNhan, _ghiChu, _huy, _maMay, _nguoiSD, _daPhat, _daDuyet, _doiTuong);
        }
        public override void DeleteVTPhieuXuat(String _maPX, string _maMay, String _nguoiSD)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spVTPhieuXUAT_DELETED", _maPX, _maMay, _nguoiSD);
        }
        public override String InsertVTPhieuXuat(String _noiXuat, SmartDate _ngayXuat, SmartDate _ngayXuatTT, String _noiNhap, Byte _loaiVTPhieu, String _soCT, String _nvXuat, String _nvNhan, String _ghiChu, Boolean _huy, String _nguoiLap, Boolean _khoaYC, string _maMay, Boolean _daPhat, Boolean _daDuyet, String _doiTuong, Boolean _KHONGSUA)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spVTPhieuXUAT_CREATE", _noiXuat, _ngayXuat.DBValue, _ngayXuatTT.DBValue, _noiNhap, _loaiVTPhieu, _soCT, _nvXuat, _nvNhan, _ghiChu, _huy, _nguoiLap, _khoaYC, _maMay, _daPhat, _daDuyet, _doiTuong, _KHONGSUA));
        }
        #region VTPhieu Xuat chi tiet

        public override String InsertVTPhieuXuat_C(String _maPX, String _maThuoc, Decimal _soLuong, SmartDate _hanSD, String _soLo, Decimal _donGia, Decimal _soLuongYC, Decimal _giaBan, String _ghiChu, String _nguoiSD, string _maMay)
        {
            System.Data.SqlClient.SqlDataReader dr;
            dr = SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spVTPhieuXUAT_C_CREATE", _maPX, _maThuoc, _soLuong, _hanSD.DBValue, _soLo, _donGia, _soLuongYC, _giaBan, _ghiChu, _nguoiSD, _maMay);
            dr.Close();
            dr = null;
            return "";
        }
        public override void UpdateVTPhieuXuat_C(String _maPX, Decimal _sTT, String _maThuoc, Decimal _soLuong, SmartDate _hanSD, String _soLo, Decimal _donGia, Decimal _soLuongYC, Decimal _giaBan, Boolean _huy, String _ghiChu, String _nguoiSD, string _maMay)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spVTPhieuXUAT_C_UPDATE", _maPX, _sTT, _maThuoc, _soLuong, _hanSD.DBValue, _soLo, _donGia, _soLuongYC, _giaBan, _huy, _ghiChu, _nguoiSD, _maMay);
        }
        public override void DeleteVTPhieuXuat_C(String _maPX, Decimal _sTT, String _nguoiSD, string _maMay)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spVTPhieuXUAT_C_DELETED", _maPX, _sTT, _nguoiSD, _maMay);
        }
        public override String InsertVTPhieuXuat_Xe_C(String _maPX, String _maThuoc, Decimal _soLuong, SmartDate _hanSD, String _soLo, Decimal _donGia, Decimal _soLuongYC, Decimal _giaBan, String _ghiChu, String _nguoiSD, string _maMay, string _maxeoto, Decimal _tuso, Decimal _denso, String _manvql)
        {
            System.Data.SqlClient.SqlDataReader dr;
            dr = SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spVTPhieuXuat_Xe_C_CREATE", _maPX, _maThuoc, _soLuong, _hanSD.DBValue, _soLo, _donGia, _soLuongYC, _giaBan, _ghiChu, _nguoiSD, _maMay, _maxeoto, _tuso, _denso, _manvql);
            dr.Close();
            dr = null;
            return "";
        }
        public override void UpdateVTPhieuXuat_Xe_C(String _maPX, Decimal _sTT, String _maThuoc, Decimal _soLuong, SmartDate _hanSD, String _soLo, Decimal _donGia, Decimal _soLuongYC, Decimal _giaBan, Boolean _huy, String _ghiChu, String _nguoiSD, string _maMay, string _maxeoto, Decimal _tuso, Decimal _denso, String _manvql)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spVTPhieuXuat_Xe_C_UPDATE", _maPX, _sTT, _maThuoc, _soLuong, _hanSD.DBValue, _soLo, _donGia, _soLuongYC, _giaBan, _huy, _ghiChu, _nguoiSD, _maMay, _maxeoto, _tuso, _denso, _manvql);
        }
        public override void DeleteVTPhieuXuat_Xe_C(String _maPX, Decimal _sTT, String _nguoiSD, string _maMay)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spVTPhieuXuat_Xe_C_DELETED", _maPX, _sTT, _nguoiSD, _maMay);
        }
        #endregion
        public override IDataReader GetVTPhieuDTNhap(String _maDuTru, bool qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spVTPhieuDTNhap_GET", _maDuTru, qadmin));
        }
        public override IDataReader GetAllVTPhieuDTNhap(Boolean _qadmin, String _maKho, DateTime _tuNgay, DateTime _denNgay, String _dKien)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spVTPhieuDTNhap_GETALL", _qadmin, _maKho, _tuNgay, _denNgay, _dKien));
        }
        public override IDataReader GetVTPhieuDTNhap_C(String _maDuTru, Decimal _sTT)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spVTPhieuDTNhap_C_GET", _maDuTru, _sTT));
        }
        #endregion

        #region Nhap Tra


        public override String InsertVTNhapTra(String _noiNhap, SmartDate _ngayNhap, SmartDate _ngayNhapTT, String _noiXuat, Byte _loaiVTPhieu, String _soCT, String _nvXuat, String _nvNhan, String _ghiChu, String _nguoiLap, Boolean _bnTra, string _maMay, Byte _daPhat)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spVTNhapTra_CREATE", _noiNhap, _ngayNhap.DBValue, _ngayNhapTT.DBValue, _noiXuat, _loaiVTPhieu, _soCT, _nvXuat, _nvNhan, _ghiChu, _nguoiLap, _bnTra, _maMay, _daPhat));
        }
        public override void UpdateVTNhapTra(String _maPX, String _noiXuat, SmartDate _ngayNhap, SmartDate _ngayNhapTT, String _noiNhap, Byte _loaiVTPhieu, String _soCT, String _nvXuat, String _nvNhan, String _ghiChu, Boolean _huy, string _maMay, String _nguoiSD, Byte _daPhat, Boolean _bnTra, Boolean _DADUYET)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spVTNhapTra_UPDATE", _maPX, _noiXuat, _ngayNhap.DBValue, _ngayNhapTT.DBValue, _noiNhap, _loaiVTPhieu, _soCT, _nvXuat, _nvNhan, _ghiChu, _huy, _maMay, _nguoiSD, _daPhat, _bnTra, _DADUYET);
        }
        public override void DeleteVTNhapTra(String _maPX, string _maMay, String _nguoiSD)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spVTNhapTra_DELETED", _maPX, _maMay, _nguoiSD);
        }
        #endregion

        #region Nhap tra chi tiet
        //InsertVTNhapTra_C(String _MaPNT, String _maThuoc, Decimal _soLuong, SmartDate _hanSD,  Decimal _donGia,String _soLo,  Boolean Huy, String _ghiChu,String _maMay, String _nguoiSD);
        public override String InsertVTNhapTra_C(String _maPX, String _maThuoc, Decimal _soLuong, SmartDate _hanSD, Decimal _donGia, String _soLo, Boolean _Huy, String _ghiChu, string _maMay, String _nguoiSD, Decimal _soLuongYC)
        {
            System.Data.SqlClient.SqlDataReader dr;
            dr = SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spVTNhapTra_C_CREATE", _maPX, _maThuoc, _soLuong, _hanSD.DBValue, _donGia, _soLo, _Huy, _ghiChu, _maMay, _nguoiSD, _soLuongYC);
            dr.Close();
            dr = null;
            return "";
        }
        public override void UpdateVTNhapTra_C(String _maPX, Decimal _sTT, String _maThuoc, Decimal _soLuong, SmartDate _hanSD, String _soLo, Decimal _donGia, Decimal _soLuongYC, Decimal _giaBan, Boolean _huy, String _ghiChu, String _nguoiSD, string _maMay)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spVTNhapTra_C_UPDATE", _maPX, _sTT, _maThuoc, _soLuong, _hanSD.DBValue, _soLo, _donGia, _soLuongYC, _giaBan, _huy, _ghiChu, _nguoiSD, _maMay);
        }
        public override void DeleteVTNhapTra_C(String _maPX, Decimal _sTT, String _nguoiSD, string _maMay)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spVTNhapTra_C_DELETED", _maPX, _sTT, _nguoiSD, _maMay);
        }

        #endregion

        #region VTKiem Nhap
        public override String InsertVTKiemNhap(String _maPhieu, String _maNV, String _maCD, Byte _loai, String _ghichu, string _maMay, String _nguoiSD, Byte _vaiTro)
        {//_maPhieu, _maNV, _maCD, _loai,_huy, _ghichu, _maMay, _nguoiSD, _vaitro
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spVTKiemNhap_CREATE", _maPhieu, _maNV, _maCD, _loai, _ghichu, _maMay, _nguoiSD, _vaiTro));
        }
        public override void UpdateVTKiemNhap(String _maPhieu, Byte _sTT, String _maNV, String _maCD, Byte _loai, Boolean _huy, String _ghichu, string _maMay, String _nguoiSD, Byte _vaiTro)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spVTKiemNhap_UPDATE", _maPhieu, _sTT, _maNV, _maCD, _loai, _huy, _ghichu, _maMay, _nguoiSD, _vaiTro);
        }
        public override void DeleteVTKiemNhap(String _maMay, String _nguoiSD, String _maVTPhieu, Byte _sTT)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spVTKiemNHAP_DELETED", _maMay, _nguoiSD, _maVTPhieu, _sTT);
        }


        #endregion

        #region Xuat Tra
        public override String InsertVTXuatTra(String _maNCC, String _soCT, SmartDate _ngayXT, String _makho, Boolean _thanhtoan, SmartDate _ngayTToan, SmartDate _ngayXuatTT, Decimal _VTTong, String _ghichu, string _maMay, String _nguoiLap, SmartDate _ngayLap, String _nVXuat, String _nVNhan, Decimal _vAT, string _sohdon, SmartDate _ngayhdon)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spVTXuatTra_CREATE", _maNCC, _soCT, _ngayXT.DBValue, _makho, _thanhtoan, _ngayTToan.DBValue, _ngayXuatTT.DBValue, _VTTong, _ghichu, _maMay, _nguoiLap, _ngayLap.DBValue, _nVXuat, _nVNhan, _vAT, _sohdon, _ngayhdon.DBValue));
        }
        public override void UpdateVTXuatTra(String _maPXT, String _maNCC, String _soCT, SmartDate _ngayXT, String _makho, Boolean _thanhtoan, SmartDate _ngayTToan, SmartDate _ngayXuatTT, Decimal _VTTong, String _ghichu, Boolean _huy, String _nguoiSD, string _maMay, String _nVXuat, String _nVNhan, Decimal _vAT, string _sohdon, SmartDate _ngayhdon)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spVTXuatTra_UPDATE", _maPXT, _maNCC, _soCT, _ngayXT.DBValue, _makho, _thanhtoan, _ngayTToan.DBValue, _ngayXuatTT.DBValue, _VTTong, _ghichu, _huy, _nguoiSD, _maMay, _nVXuat, _nVNhan, _vAT, _sohdon, _ngayhdon.DBValue);
        }
        public override void DeleteVTXuatTra(String _maMay, String _nguoiSD, String _maPXT)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spVTXuatTra_DELETED", _maMay, _nguoiSD, _maPXT);
        }
        #endregion

        #region Xuat tra chi tiet
        public override String InsertVTXuatTra_C(String _mathuoc, Decimal _soluong, SmartDate _hanSD, Decimal _donGia, String _soLo, String _ghichu, String _nguoiSD, string _maMay, String _maPXT, Decimal _vAT)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spVTXuatTra_C_CREATE", _mathuoc, _soluong, _hanSD.DBValue, _donGia, _soLo, _ghichu, _nguoiSD, _maMay, _maPXT, _vAT));
        }
        public override void UpdateVTXuatTra_C(Decimal _sTT, String _mathuoc, Decimal _soluong, SmartDate _hanSD, Decimal _donGia, String _soLo, Boolean _huy, String _ghichu, String _nguoiSD, string _maMay, String _maPXT, Decimal _vAT)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spVTXuatTra_C_UPDATE", _sTT, _mathuoc, _soluong, _hanSD.DBValue, _donGia, _soLo, _huy, _ghichu, _nguoiSD, _maMay, _maPXT, _vAT);
        }
        public override void DeleteVTXuatTra_C(String _maMay, String _nguoiSD, String _maPXT, Decimal _sTT)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spVTXuatTra_C_DELETED", _maMay, _nguoiSD, _maPXT, _sTT);
        }

        #endregion

        #region VTTon dau Kho

        public override String InsertVTTonDau(SmartDate _ngayVTTon, String _makho, String _nguoiSD, string _maMay)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spVTTonDau_CREATE", _ngayVTTon.DBValue, _makho, _nguoiSD, _maMay));
        }
        public override void UpdateVTTonDau(SmartDate _ngayVTTon, String _makho, String _nguoiSD, string _maMay)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spVTTonDau_UPDATE", _ngayVTTon.DBValue, _makho, _nguoiSD, _maMay);
        }

        #endregion

        #region VTTon dau Khoa

        public override String InsertVTTonDauKhoa(SmartDate _ngayVTTon, String _makhoa, String _nguoiSD, string _maMay)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spVTTonDauKhoa_CREATE", _ngayVTTon.DBValue, _makhoa, _nguoiSD, _maMay));
        }
        public override void UpdateVTTonDauKhoa(SmartDate _ngayVTTon, String _makhoa, String _nguoiSD, string _maMay)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spVTTonDauKhoa_UPDATE", _ngayVTTon.DBValue, _makhoa, _nguoiSD, _maMay);
        }

        #endregion

        #region VTKiem Ke
        public override String InsertVTKiemKe(SmartDate _ngayKK, String _makho, String _nguoiKK, String _nguoiLap, String _ghiChu, Boolean _xuly, string _maMay)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spVTKiemKe_Create", _ngayKK.DBValue, _makho, _nguoiKK, _nguoiLap, _ghiChu, _xuly, _maMay));
        }
        public override void UpdateVTKiemKe(String _maKK, SmartDate _ngayKK, String _makho, String _nguoiKK, String _ghiChu, Boolean _xuly, string _maMay, String _nguoiSD, Boolean _huy)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spVTKiemKe_Update", _maKK, _ngayKK.DBValue, _makho, _nguoiKK, _ghiChu, _xuly, _maMay, _nguoiSD, _huy);
        }
        public override void DeleteVTKiemKe(String _maMay, String _nguoiSD, String _maKK)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spVTKiemKE_DELETED", _maMay, _nguoiSD, _maKK);
        }
        #endregion

        #region VTKiem Ke chi tiet
        public override String InsertVTKiemKe_C(String _maKK, String _maThuoc, Decimal _soLuong, Decimal _dongia, Decimal _sLDC, String _ghiChu, Decimal _sLVTTon, String _nguoiSD, string _maMay)
        {
            System.Data.SqlClient.SqlDataReader dr;
            dr = SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spVTKiemKE_C_CREATE", _maKK, _maThuoc, _soLuong, _dongia, _sLDC, _ghiChu, _sLVTTon, _nguoiSD, _maMay);
            dr.Close();
            dr = null;
            return "";
        }
        public override void UpdateVTKiemKe_C(String _maKK, Decimal _sTT, String _maThuoc, Decimal _soLuong, Decimal _dongia, Decimal _sLDC, String _ghiChu, Decimal _sLVTTon, Boolean _huy, String _nguoiSD, string _maMay)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spVTKiemKE_C_UPDATE", _maKK, _sTT, _maThuoc, _soLuong, _dongia, _sLDC, _ghiChu, _sLVTTon, _huy, _nguoiSD, _maMay);
        }
        public override void DeleteVTKiemKe_C(String _maMay, String _nguoiSD, String _maKK, Decimal _sTT)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spVTKiemKE_C_DELETED", _maMay, _nguoiSD, _maKK, _sTT);
        }

        #endregion

        #region VTKiem Ke chi tiet Han dung
        public override String InsertVTKiemKe_HD(String _mAKK, String _maThuoc, SmartDate _hANDUNG, String _solo, Decimal _sOLUONG, Decimal _sLVTTon, Decimal _sLDC, String _ghichu, String _nguoiSD, string _maMay, Decimal _dongia)
        {
            System.Data.SqlClient.SqlDataReader dr;
            dr = SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spVTKiemKE_HD_CREATE", _mAKK, _maThuoc, _hANDUNG.DBValue, _solo, _sOLUONG, _sLVTTon, _sLDC, _ghichu, _nguoiSD, _maMay, _dongia);
            dr.Close();
            dr = null;
            return "";
        }
        public override void UpdateVTKiemKe_HD(String _mAKK, Decimal _sTT, String _maThuoc, SmartDate _hANDUNG, String _solo, Decimal _sOLUONG, Decimal _sLVTTon, Decimal _sLDC, String _ghichu, Boolean _huy, String _nguoiSD, string _maMay, Decimal _dongia)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spVTKiemKE_HD_UPDATE", _mAKK, _sTT, _maThuoc, _hANDUNG.DBValue, _solo, _sOLUONG, _sLVTTon, _sLDC, _ghichu, _huy, _nguoiSD, _maMay, _dongia);
        }
        public override void DeleteVTKiemKe_HD(String _maMay, String _nguoiSD, String _maKK, Decimal _sTT)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spVTKiemKE_HD_DELETED", _maMay, _nguoiSD, _maKK, _sTT);
        }
        #endregion

        #region VTPhieu Doi Thuoc
        public override String InsertVTPhieuDoiThuoc(String _maNCC, String _soCT, SmartDate _ngayDThuoc, String _makho, String _ghichu, String _nguoiLap, string _maMay)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spVTPhieuDoiThuoc_CREATE", _maNCC, _soCT, _ngayDThuoc.DBValue, _makho, _ghichu, _nguoiLap, _maMay));
        }
        public override void UpdateVTPhieuDoiThuoc(String _maDThuoc, String _maNCC, String _soCT, SmartDate _ngayDThuoc, String _makho, String _ghichu, Boolean _huy, String _nguoiSD, string _maMay)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spVTPhieuDoiThuoc_UPDATE", _maDThuoc, _maNCC, _soCT, _ngayDThuoc.DBValue, _makho, _ghichu, _huy, _nguoiSD, _maMay);
        }
        public override void DeleteVTPhieuDoiThuoc(String _maMay, String _nguoiSD, String _maDThuoc)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spVTPhieuDoiThuoc_DELETED", _maMay, _nguoiSD, _maDThuoc);
        }


        #endregion

        #region VTPhieu Doi Thuoc Chi tiet
        public override String InsertVTPhieuDoiThuoc_C(String _maDThuoc, String _mathuoc, Decimal _soluong, SmartDate _hanSD, SmartDate _hanSDCu, Decimal _donGia, String _soLo, String _soLoCu, String _ghichu, String _nguoiSD, string _maMay)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spVTPhieuDoiThuoc_C_CREATE", _maDThuoc, _mathuoc, _soluong, _hanSD.DBValue, _hanSDCu.DBValue, _donGia, _soLo, _soLoCu, _ghichu, _nguoiSD, _maMay));
        }
        public override void UpdateVTPhieuDoiThuoc_C(String _maDThuoc, Decimal _sTT, String _mathuoc, Decimal _soluong, SmartDate _hanSD, SmartDate _hanSDCu, Decimal _donGia, String _soLo, String _soLoCu, Boolean _huy, String _ghichu, String _nguoiSD, string _maMay)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spVTPhieuDoiThuoc_C_UPDATE", _maDThuoc, _sTT, _mathuoc, _soluong, _hanSD.DBValue, _hanSDCu.DBValue, _donGia, _soLo, _soLoCu, _huy, _ghichu, _nguoiSD, _maMay);
        }
        public override void DeleteVTPhieuDoiThuoc_C(String _maMay, String _nguoiSD, String _maDThuoc, Decimal _sTT)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spVTPhieuDoiThuoc_C_DELETED", _maMay, _nguoiSD, _maDThuoc, _sTT);
        }
        #endregion

        #region Phieu Du tru Nhap
        public override String InsertVTPhieuDTNhap(String _soCT, SmartDate _ngayPhieu, String _makho, String _nguoiDuTru, Decimal _tong, String _ghichu, String _nguoiLap, string _maMay, string _maNCC)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spVTPhieuDTNhap_CREATE", _soCT, _ngayPhieu.DBValue, _makho, _nguoiDuTru, _tong, _ghichu, _nguoiLap, _maMay, _maNCC));
        }
        public override void UpdateVTPhieuDTNhap(String _maDuTru, String _soCT, SmartDate _ngayPhieu, String _makho, String _nguoiDuTru, Decimal _tong, String _ghichu, Boolean _huy, String _nguoiSD, string _maMay, string _maNCC)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spVTPhieuDTNhap_update", _maDuTru, _soCT, _ngayPhieu.DBValue, _makho, _nguoiDuTru, _tong, _ghichu, _huy, _nguoiSD, _maMay, _maNCC);
        }
        public override void DeleteVTPhieuDTNhap(String _maMay, String _nguoiSD, String _maDuTru)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spVTPhieuDTNhap_DELETED", _maMay, _nguoiSD, _maDuTru);
        }

        #endregion

        #region Phieu Du tru Nhap chi tiet
        public override String InsertVTPhieuDTNhap_C(String _maDuTru, String _mathuoc, Decimal _soluong, Decimal _donGia, String _ghichu, String _nguoiSD, string _maMay)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spVTPhieuDTNhap_C_CREATE", _maDuTru, _mathuoc, _soluong, _donGia, _ghichu, _nguoiSD, _maMay));
        }
        public override void UpdateVTPhieuDTNhap_C(String _maDuTru, Decimal _sTT, String _mathuoc, Decimal _soluong, Decimal _donGia, Boolean _huy, String _ghichu, String _nguoiSD, string _maMay)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spVTPhieuDTNhap_C_UPDATE", _maDuTru, _sTT, _mathuoc, _soluong, _donGia, _huy, _ghichu, _nguoiSD, _maMay);
        }
        public override void DeleteVTPhieuDTNhap_C(String _maMay, String _nguoiSD, String _maDuTru, Decimal _sTT)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spVTPhieuDTNhap_C_DELETED", _maMay, _nguoiSD, _maDuTru, _sTT);
        }
        #endregion

        public override void Khambenh_VTTH_DP_Update(String MaSoKham, String STT, Boolean Duyet, Boolean Phat, DateTime NgayP, String NguoiD, String NguoiP, DateTime NgayD, String MaMay, string makx, String MAPX)
        {
            System.Data.SqlClient.SqlDataReader dr;
            dr = SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "[spKhambenh_VTTH_DP_Update]", MaSoKham, STT, Duyet, Phat, NgayP, NguoiD, NguoiP, NgayD, MaMay, makx, MAPX);
            dr.Close();
            dr = null;
        }
        public override void BenhAn_VTTH_DP_Update(String MaBA, int STT, int STTkhoa, Boolean Duyet, Boolean Phat, DateTime NgayP, String NguoiD, String NguoiP, DateTime NgayD, String MaMay, String MAPX)
        {
            System.Data.SqlClient.SqlDataReader dr;
            dr = SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spBenhAn_VTTH_DP_Update", MaBA, STT, STTkhoa, Duyet, Phat, NgayP, NguoiD, NguoiP, NgayD, MaMay, MAPX);
            dr.Close();
            dr = null;
        }
        public override void Khambenh_HoaChat_DP_Update(String MaSoKham, String STT, Boolean Duyet, Boolean Phat, DateTime NgayP, String NguoiD, String NguoiP, DateTime NgayD, String MaMay, string makx, String MAPX)
        {
            System.Data.SqlClient.SqlDataReader dr;
            dr = SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "[spKhambenh_HoaChat_DP_Update]", MaSoKham, STT, Duyet, Phat, NgayP, NguoiD, NguoiP, NgayD, MaMay, makx, MAPX);
            dr.Close();
            dr = null;
        }



        public override void BenhAn_HoaChat_DP_Update(String MaBA, int STT, int STTkhoa, Boolean Duyet, Boolean Phat, DateTime NgayP, String NguoiD, String NguoiP, DateTime NgayD, String MaMay, String MAPX)
        {
            System.Data.SqlClient.SqlDataReader dr;
            dr = SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spBenhAn_HoaChat_DP_Update", MaBA, STT, STTkhoa, Duyet, Phat, NgayP, NguoiD, NguoiP, NgayD, MaMay, MAPX);
            dr.Close();
            dr = null;
        }
        #endregion

        #region Ton Khoa

        public override String InsertVTTonKhoa(String _makhoa, String _mathuoc, SmartDate _thang, Decimal _soDK, Decimal _sLN, Decimal _sLX, Decimal _sLNT, Decimal _sLXT, Decimal _sLDC, Decimal _tonCK, Decimal _giaNhap, String _nguoiSD, string _maMay)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spVTTonKhoa_CREATE", _makhoa, _mathuoc, _thang.DBValue, _soDK, _sLN, _sLX, _sLNT, _sLXT, _sLDC, _tonCK, _giaNhap, _nguoiSD, _maMay));
        }
        public override void UpdateVTTonKhoa(String _makhoa, String _mathuoc, SmartDate _thang, Decimal _soDK, Decimal _sLN, Decimal _sLX, Decimal _sLNT, Decimal _sLXT, Decimal _sLDC, Decimal _tonCK, Decimal _giaNhap, String _nguoiSD, string _maMay)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spVTTonKhoa_UPDATE", _makhoa, _mathuoc, _thang.DBValue, _soDK, _sLN, _sLX, _sLNT, _sLXT, _sLDC, _tonCK, _giaNhap, _nguoiSD, _maMay);
        }
        public override void DeleteVTTonKhoa(String _makhoa, String _mathuoc, SmartDate _thang, String _nguoiSD, string _maMay)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spVTTonKhoa_Deleted", _makhoa, _mathuoc, _thang.DBValue, _nguoiSD, _maMay);
        }
        #endregion

        #region HoaChat
        //crHCPhieuDTNhap_C_GetAll
        #region Reports
        public override IDataReader GetAllHCPhieuXuatCB(Boolean _qadmin, String _maKho, Boolean _daPhat, DateTime _tuNgay, DateTime _denNgay, String _dieuKienThem, Boolean _daduyet)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spHCPHIEUXUATCheBien_GETALL", _qadmin, _maKho, _daPhat, _tuNgay, _denNgay, _dieuKienThem, _daduyet));
        }
        public override DataSet CRHCPhieuLinh_RPTa(DateTime _TUNGAYYC, DateTime _DENNGAYYC, Boolean _Duyet, Boolean _Phat, string _MaDT, string _MaKho, string _MAKHOA, Boolean _DADUNG, string _dk)
        {
            DataSet ds = new DataSet();
            string[] s = { "CRPhieuLinh_RPTa" };
            SqlHelper.FillDataset(ConnectionString, DatabaseOwner + ObjectQualifier + "spKhamBenh_HoaChat_BN_gets", ds, s, _TUNGAYYC, _DENNGAYYC, _Duyet, _Phat, _MaDT, _MaKho, _MAKHOA, _DADUNG, _dk);
            //// //// ds.WriteXmlSchema("CRPhieuLinh_DY.xsd");
            return ds;
        }
        public override DataSet crDMHoachat_GIA_RPT(string _madt, string dk)
        {
            DataSet ds = new DataSet();
            string[] s = { "DMHoachat_GIA_RPT" };
            SqlHelper.FillDataset(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMHoachat_GIA_RPT", ds, s, _madt, dk);
            // // // // //// ds.WriteXmlSchema("DMHoachat_GIA_RPT.xsd");
            return ds;
        }
        public override DataSet crHCPhieuNhap_C_GetAll(Boolean _qadmin, String _maPN)
        {
            DataSet ds = new DataSet();
            string[] s = { "crPhieuNhap_C_GetAll" };
            SqlHelper.FillDataset(ConnectionString, DatabaseOwner + ObjectQualifier + "spHCPhieuNhap_C_GETALL", ds, s, _qadmin, _maPN);
            // // // // //// ds.WriteXmlSchema("crPhieuNhap_C_GetAll.xsd");
            return ds;
        }
        public override DataSet crHCPhieuXuat_C_GetAll(Boolean _qadmin, String _maPX)
        {
            DataSet ds = new DataSet();
            string[] s = { "crPhieuXuat_C_GetAll" };
            SqlHelper.FillDataset(ConnectionString, DatabaseOwner + ObjectQualifier + "spHCPhieuXuat_C_GETALL", ds, s, _qadmin, _maPX);
            // // // // //// ds.WriteXmlSchema("crPhieuXuat_C_GetAll.xsd");
            return ds;
        }
        public override DataSet crHCPhieuNhapTra_C_GetAll(Boolean _qadmin, String _maPNT)
        {
            DataSet ds = new DataSet();
            string[] s = { "crPhieuNhapTra_C_GetAll" };
            SqlHelper.FillDataset(ConnectionString, DatabaseOwner + ObjectQualifier + "spHCNhapTra_C_GETALL", ds, s, _qadmin, _maPNT);
            // // // //// ds.WriteXmlSchema("crPhieuNhapTra_C_GetAll.xsd");
            return ds;
        }
        public override DataSet crHCKiemKe(String _maKK, Boolean _qadmin)
        {
            DataSet ds = new DataSet();
            //string[] s ={ "crKiemKe" };
            //SqlHelper.FillDataset( ConnectionString, DatabaseOwner + ObjectQualifier + "spHCKiemKe_HD_GETALL", ds, s, _maKK, _qadmin);
            //// // // // //// ds.WriteXmlSchema("crKiemKe.xsd");
            //return ds;

            System.Data.SqlClient.SqlCommand cmd = SqlHelper.CreateCommand(SQLConnectionBD, DatabaseOwner + ObjectQualifier + "spHCKiemKe_HD_GETALL");

            cmd.CommandTimeout = 18000;
            cmd.CommandType = System.Data.CommandType.StoredProcedure;
            cmd.Parameters.AddWithValue("QADMIN", _qadmin);
            cmd.Parameters.AddWithValue("MaKK", _maKK);

            System.Data.SqlClient.SqlDataAdapter sqlad = new System.Data.SqlClient.SqlDataAdapter(cmd);

            sqlad.Fill(ds);
            if (ds.Tables.Count > 0)
                ds.Tables[0].TableName = "crKiemKe";
            sqlad.Dispose(); cmd.Dispose(); sqlad = null;
            cmd = null;
            // if (SQLConnectionBD.State == System.Data.ConnectionState.Closed)
            //SQLConnectionBD.Close(); SQLConnectionBD.Dispose();
            //if (_sqlConnection.State == System.Data.ConnectionState.Closed)
            {
                //_sqlConnection.Close(); _sqlConnection.Dispose();
                //_sqlConnection = null;
            }
            return ds;
        }
        public override DataSet crHCKiemKe_HoiDong(String _maPhieu, Boolean _qadmin, Byte _loai)
        {
            DataSet ds = new DataSet();
            //string[] s ={ "crKiemKe_HoiDong" };
            //SqlHelper.FillDataset( ConnectionString, DatabaseOwner + ObjectQualifier + "spHCKIEMNHAP_GETALL", ds, s, _maPhieu, _qadmin, _loai);
            //// // // //// ds.WriteXmlSchema("crKiemKe_HoiDong.xsd");
            //return ds;

            System.Data.SqlClient.SqlCommand cmd = SqlHelper.CreateCommand(SQLConnectionBD, DatabaseOwner + ObjectQualifier + "spHCKIEMNHAP_GETALL");

            cmd.CommandTimeout = 18000;
            cmd.CommandType = System.Data.CommandType.StoredProcedure;
            cmd.Parameters.AddWithValue("MaPhieu", _maPhieu);
            cmd.Parameters.AddWithValue("QADMIN", _qadmin);
            cmd.Parameters.AddWithValue("LOAI", _loai);

            System.Data.SqlClient.SqlDataAdapter sqlad = new System.Data.SqlClient.SqlDataAdapter(cmd);

            sqlad.Fill(ds);
            if (ds.Tables.Count > 0)
                ds.Tables[0].TableName = "crKiemKe_HoiDong";
            sqlad.Dispose(); cmd.Dispose(); sqlad = null;
            cmd = null;
            // if (SQLConnectionBD.State == System.Data.ConnectionState.Closed)
            //SQLConnectionBD.Close(); SQLConnectionBD.Dispose();
            //if (_sqlConnection.State == System.Data.ConnectionState.Closed)
            {
                //_sqlConnection.Close(); _sqlConnection.Dispose();
                //_sqlConnection = null;
            }
            return ds;
        }
        public override DataSet crHCPhieuDTNhap_C_GetAll(Boolean _qadmin, String _maDuTru)
        {
            DataSet ds = new DataSet();
            string[] s = { "crPhieuDTNhap_C_GetAll" };
            SqlHelper.FillDataset(ConnectionString, DatabaseOwner + ObjectQualifier + "spHCPhieuDTNhap_C_GETALL", ds, s, _qadmin, _maDuTru);
            // //// ds.WriteXmlSchema("crPhieuDTNhap_C_GetAll.xsd");
            return ds;
        }
        public override DataSet RptGetHCInPHIEUXUATTRA(Boolean _qadmin, String _maPXT)
        {
            DataSet ds = new DataSet();
            string[] s = { "CRInPHIEUXUATTRA_RPT" };
            SqlHelper.FillDataset(ConnectionString, DatabaseOwner + ObjectQualifier + "spHCXuatTra_C_GETALL ", ds, s, _qadmin, _maPXT);
            // // // //// ds.WriteXmlSchema("CRInPHIEUXUATTRA_RPT.xsd");
            return ds;
        }
        public override DataSet crHCDuoc_TheKho(String _maKho, String _maThuoc, DateTime _tuNgay, DateTime _denNgay)
        {
            DataSet ds = new DataSet();
            string[] s = { "crDuoc_TheKho" };
            SqlHelper.FillDataset(ConnectionString, DatabaseOwner + ObjectQualifier + "SPHOACHAT_THEKHO", ds, s, _maKho, _maThuoc, _tuNgay, _denNgay);
            // // // //// ds.WriteXmlSchema("crDuoc_TheKho.xsd"); 
            return ds;
        }
        public override DataSet RptGetHCBCBCNHAPTRATHUOC(string ACCOUNT, DateTime _TUNGAYYC, DateTime _DENNGAYYC, int LOAIPHIEU, string MAKHO, string MANHOM, string MACHUNGLOAI, string MAPL, string _DK)
        {
            DataSet ds = new DataSet();
            string[] s = { "CRBCNHAPTRATHUOC_RPT" };
            SqlHelper.FillDataset(ConnectionString, DatabaseOwner + ObjectQualifier + "spHOACHAT_BCNHAPTRATHUOC ", ds, s, ACCOUNT, _TUNGAYYC, _DENNGAYYC, LOAIPHIEU, MAKHO, MANHOM, MACHUNGLOAI, MAPL, _DK);
            // // // // //// ds.WriteXmlSchema("CRBCNHAPTRATHUOC_RPT.xsd");
            return ds;
        }
        public override DataSet crHCDuoc_BCNhapThuoc(String _account, DateTime _tuNgay, DateTime _denNgay, Byte _loaiPhieu, String _maKho, String _maNhom, String _maChungLoai, String _maPL, String _dK)
        {
            DataSet ds = new DataSet();
            string[] s = { "crDuoc_BCNhapThuoc" };
            SqlHelper.FillDataset(ConnectionString, DatabaseOwner + ObjectQualifier + "spHOACHAT_BCNHAPTHUOC", ds, s, _account, _tuNgay, _denNgay, _loaiPhieu, _maKho, _maNhom, _maChungLoai, _maPL, _dK);
            // // // //// ds.WriteXmlSchema("crDuoc_BCNhapThuoc.xsd");
            return ds;
        }
        public override DataSet RptGetBCXUATTHUOC_KHOKHOA(string ACCOUNT, DateTime _TUNGAYYC, DateTime _DENNGAYYC, int LOAIPHIEU, string MAKHO, string MANHOM, string MACHUNGLOAI, string MAPL, string _DK)
        {
            DataSet ds = new DataSet();
            //string[] s = { "CRBCXuatthuoc_RPT" };
            //SqlHelper.FillDataset( ConnectionString, DatabaseOwner + ObjectQualifier + "spDUOC_BCXUATTHUOC_KHOKHOA ", ds, s, ACCOUNT, _TUNGAYYC, _DENNGAYYC, LOAIPHIEU, MAKHO, MANHOM, MACHUNGLOAI, MAPL, _DK);
            //ds.WriteXmlSchema("CRBCXuatthuoc_RPT.xsd");
            System.Data.SqlClient.SqlCommand cmd = SqlHelper.CreateCommand(SQLConnectionBD, DatabaseOwner + ObjectQualifier + "spDUOC_BCXUATTHUOC_KHOKHOA");

            cmd.CommandTimeout = 18000;
            cmd.CommandType = System.Data.CommandType.StoredProcedure;
            cmd.Parameters.AddWithValue("ACCOUNT", ACCOUNT);
            cmd.Parameters.AddWithValue("TUNGAY", _TUNGAYYC);
            cmd.Parameters.AddWithValue("DENNGAY", _DENNGAYYC);
            cmd.Parameters.AddWithValue("LOAIPHIEU", LOAIPHIEU);
            cmd.Parameters.AddWithValue("MAKHO", MAKHO);
            cmd.Parameters.AddWithValue("MANHOM", MANHOM);
            cmd.Parameters.AddWithValue("MACHUNGLOAI", MACHUNGLOAI);
            cmd.Parameters.AddWithValue("MAPL", MAPL);
            cmd.Parameters.AddWithValue("DK", _DK);
            System.Data.SqlClient.SqlDataAdapter sqlad = new System.Data.SqlClient.SqlDataAdapter(cmd);

            sqlad.Fill(ds);
            if (ds.Tables.Count > 0)
                //string[] s ={ "" };
                ds.Tables[0].TableName = "CRBCXuatthuoc_RPT";
            sqlad.Dispose(); cmd.Dispose(); sqlad = null;
            cmd = null;
            // if (SQLConnectionBD.State == System.Data.ConnectionState.Closed)
            //SQLConnectionBD.Close(); SQLConnectionBD.Dispose();
            //if (_sqlConnection.State == System.Data.ConnectionState.Closed)
            {
                //_sqlConnection.Close(); _sqlConnection.Dispose();
                //_sqlConnection = null;
            }
            return ds;

        }
        public override DataSet RptGetHCBCXUATTHUOC(string ACCOUNT, DateTime _TUNGAYYC, DateTime _DENNGAYYC, int LOAIPHIEU, string MAKHO, string MANHOM, string MACHUNGLOAI, string MAPL, string _DK)
        {
            DataSet ds = new DataSet();
            string[] s = { "CRBCXuatthuoc_RPT" };
            SqlHelper.FillDataset(ConnectionString, DatabaseOwner + ObjectQualifier + "spHoaChat_BCXUATTHUOC ", ds, s, ACCOUNT, _TUNGAYYC, _DENNGAYYC, LOAIPHIEU, MAKHO, MANHOM, MACHUNGLOAI, MAPL, _DK);
            // // // //// ds.WriteXmlSchema("CRBCXuatthuoc_RPT.xsd");
            return ds;
        }
        public override DataSet RptGetHCBCXUATTHUOC_C(string ACCOUNT, DateTime _TUNGAYYC, DateTime _DENNGAYYC, int LOAIPHIEU, string MAKHO, string MANHOM, string MACHUNGLOAI, string MAPL, string _DK)
        {
            DataSet ds = new DataSet();
            string[] s = { "CRBCXuatthuoc_C_RPT" };
            SqlHelper.FillDataset(ConnectionString, DatabaseOwner + ObjectQualifier + "spHoaChat_BCXUATTHUOC ", ds, s, ACCOUNT, _TUNGAYYC, _DENNGAYYC, LOAIPHIEU, MAKHO, MANHOM, MACHUNGLOAI, MAPL, _DK);
            // // // //// ds.WriteXmlSchema("CRBCXuatthuoc_C_RPT.xsd");
            return ds;
        }
        public override DataSet RptHCBCNXTThuoc_C(DateTime _tuNgay, DateTime _denNgay, string _maKho, int _loaiBC, string _maNhom, string _maChungLoai, string _maPL, string _dK)
        {
            DataSet ds = new DataSet();
            string[] s = { "CRBCNXTThuoc_C_RPT" };
            SqlHelper.FillDataset(ConnectionString, DatabaseOwner + ObjectQualifier + "SPHOACHAT_BCNHAPXUATTON", ds, s, _tuNgay, _denNgay, _maKho, _loaiBC, _maNhom, _maChungLoai, _maPL, _dK);
            // // // //// ds.WriteXmlSchema("CRBCXuatthuoc_C_RPT.xsd");
            return ds;
        }
        public override IDataReader GetAllHCNhapTra_C_TonBN_gets(String MaKho, String MAKHOA, Byte Loai, String dk)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spHCNhapTra_C_TonBN_Gets", MaKho, MAKHOA, Loai, dk));
        }
        public override DataSet crHCPhieuDTNhap_C_BN(String _MaKho, String _MAKHOA, Byte _Loai, String _dk)
        {
            DataSet ds = new DataSet();
            string[] s = { "crPhieuNhapTra_C_BN" };
            SqlHelper.FillDataset(ConnectionString, DatabaseOwner + ObjectQualifier + "spHCNhapTra_C_BN", ds, s, _MaKho, _MAKHOA, _Loai, _dk);
            ////ds.WriteXmlSchema("crPhieuNhapTra_C_BN.xsd");
            return ds;
        }
        public override DataSet RptHCBCNXTThuoc_ToanBV(DateTime _tuNgay, DateTime _denNgay, string _maKho, int _loaiBC, string _maNhom, string _maChungLoai, string _maPL, string _dK)
        {
            DataSet ds = new DataSet();
            string[] s = { "CRBCNXTThuoc_ToanBV_RPT" };
            SqlHelper.FillDataset(ConnectionString, DatabaseOwner + ObjectQualifier + "SPHOACHAT_BCNHAPXUATTON ", ds, s, _tuNgay, _denNgay, _maKho, _loaiBC, _maNhom, _maChungLoai, _maPL, _dK);
            // // // //// ds.WriteXmlSchema("CRBCNXTThuoc_ToanBV_RPT.xsd");
            return ds;
        }
        public override DataSet crHCTonKhoa_GetAll(DateTime _thang, String _maKhoa, String _dK)
        {
            DataSet ds = new DataSet();
            string[] s = { "crTonKhoa_GetAll" };
            SqlHelper.FillDataset(ConnectionString, DatabaseOwner + ObjectQualifier + "spHCTonkhoa_GetAll", ds, s, _thang, _maKhoa, _dK);
            // // // //// ds.WriteXmlSchema("crTonKhoa_GetAll.xsd");
            return ds;
        }

        public override DataSet crDuoc_TheKhoChiTiet(DateTime _TUNGAYYC, DateTime _DENNGAYYC, Boolean _Duyet, Boolean _Phat, string _MaDT, string _MaKho, string _MAKHOA, Boolean _DADUNG, string _dk)
        {
            DataSet ds = new DataSet();
            string[] s = { "crDuoc_TheKhoChiTiet" };
            SqlHelper.FillDataset(ConnectionString, DatabaseOwner + ObjectQualifier + "spKhamBenh_ThuocSD_BN_gets", ds, s, _TUNGAYYC, _DENNGAYYC, _Duyet, _Phat, _MaDT, _MaKho, _MAKHOA, _DADUNG, _dk);
            //// ds.WriteXmlSchema("crDuoc_TheKhoChiTiet.xsd");
            return ds;
        }


        public override DataSet RptHCGetPhieuHuyThuoc_HoidongHuy(string _maphieu, bool qadmin, byte loai)
        {
            DataSet ds = new DataSet();
            string[] s = { "SCRPhieuHuyThuoc_HoidongHuy_RPT" };
            SqlHelper.FillDataset(ConnectionString, DatabaseOwner + ObjectQualifier + "spHCKIEMNHAP_GETALL", ds, s, _maphieu, qadmin, loai);
            // // // //// ds.WriteXmlSchema("PhieuHuyThuoc_HoidongHuy.xsd");
            return ds;
        }

        public override DataSet RptHCTonKhoTheoHD(DateTime _tuNgay, DateTime _denNgay, string _maKho, int _loaiBC, string _maNhom, string _maChungLoai, string _maPL, string _dK)
        {
            DataSet ds = new DataSet();
            string[] s = { "CRBCTonKhoTheoHD_RPT" };
            SqlHelper.FillDataset(ConnectionString, DatabaseOwner + ObjectQualifier + "SPHOACHAT_BCNHAPXUATTON", ds, s, _tuNgay, _denNgay, _maKho, _loaiBC, _maNhom, _maChungLoai, _maPL, _dK);
            // // // //// ds.WriteXmlSchema("CRBCTonKhoTheoHD_RPT.xsd");
            return ds;
        }
        public override DataSet BCHCChiTietXuatKhoaPhong(string _ACCOUNT, DateTime _tuNgay, DateTime _denNgay, int _LOAIPHIEU, string _maKho, string _maNhom, string _maChungLoai, string _maPL, string _dK)
        {
            DataSet ds = new DataSet();
            string[] s = { "CRChiTietXuatKhoaPhong_RPt" };
            SqlHelper.FillDataset(ConnectionString, DatabaseOwner + ObjectQualifier + "spHoaChat_BCXUATTHUOC", ds, s, _ACCOUNT, _tuNgay, _denNgay, _LOAIPHIEU, _maKho, _maNhom, _maChungLoai, _maPL, _dK);
            // // //// ds.WriteXmlSchema("CRChiTietXuatKhoaPhong_RPt.xsd");
            return ds;
        }
        #endregion
        #region Get List
        //HCPhieuNhap

        public override IDataReader GetHCPhieuNhap_GetAll(Boolean _qadmin, String _maKho, String _mNCC, DateTime _tuNgay, DateTime _denNgay, String _dKien)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spHCPhieuNHAP_GETALL", _qadmin, _maKho, _mNCC, _tuNgay, _denNgay, _dKien));
        }
        public override IDataReader GetAllHCPhieuNhap_Get(String _maHCPhieuNhap, Boolean _qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spHCPhieuNHAP_GET", _maHCPhieuNhap, _qadmin));
        }
        //HCPhieuNhap chi tiet
        public override IDataReader GetHCPhieuNhap_C_GetAll(Boolean _qadmin, String _maHCPhieu)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spHCPhieuNHAP_C_GETALL", _qadmin, _maHCPhieu));
        }
        public override IDataReader GetHCPhieuNhap_C_Get(String _maPN, decimal STT)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spHCPhieuNHAP_C_GET", _maPN, STT));
        }
        public override IDataReader GetHCPhieuXuat(String _mapx, Boolean _qadmin, byte _loaiHCPhieu, Boolean _daphat)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spHCPhieuXuat_Get", _mapx, _qadmin, _loaiHCPhieu, _daphat));
        }
        public override IDataReader GetAllHCPhieuXuat(Boolean _qadmin, String _maKho, Byte _loaiHCPhieu, Boolean _daPhat, DateTime _tuNgay, DateTime _denNgay, String _dieuKienThem, Boolean _daduyet)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spHCPhieuXuat_GetAll", _qadmin, _maKho, _loaiHCPhieu, _daPhat, _tuNgay, _denNgay, _dieuKienThem, _daduyet));
        }
        public override IDataReader GetHCPhieuXuat_C(String _mapx, Byte _orderNumber)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spHCPhieuXuat_Get", _mapx, _orderNumber));
        }

        public override IDataReader GetHCNhapTra(String _mapx, Boolean _qadmin, byte _loaiHCPhieu, byte _daphat)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spHCNhapTra_Get", _mapx, _qadmin, _loaiHCPhieu, _daphat));
        }
        public override IDataReader GetAllHCNhapTra(Boolean _qadmin, String _maKho, Byte _loaiHCPhieu, Byte _daPhat, DateTime _tuNgay, DateTime _denNgay, String _dieuKienThem)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spHCNhapTra_GetAll", _qadmin, _maKho, _loaiHCPhieu, _daPhat, _tuNgay, _denNgay, _dieuKienThem));
        }
        public override IDataReader GetHCNhapTra_C(String _mapx, Byte _orderNumber)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spHCNhapTra_Get", _mapx, _orderNumber));
        }
        public override IDataReader GetHCXuatTra(String _maPXT, Boolean _qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spHCXuatTra_GET", _maPXT, _qadmin));
        }
        public override IDataReader GetAllHCXuatTra(Boolean _qadmin, String makho, String maNCC, DateTime tungay, DateTime denngay, String dieukienthem)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spHCXuatTra_GetAll", _qadmin, makho, maNCC, tungay, denngay, dieukienthem));
        }
        public override IDataReader GetHCXuatTra_C(String _maPXT, Decimal STT)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spHCXuatTra_C_GET", _maPXT, STT));
        }
        public override IDataReader GetAllHCKiemNhap(String _maHCPhieu, Boolean _qadmin, Byte loai)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spHCKiemNHAP_GETALL", _maHCPhieu, _qadmin, loai));
        }
        public override IDataReader GetHCTonDau(String _makho)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spHCTonDAU_GET", _makho));
        }

        public override IDataReader GetHCTonDauKhoa(String makhoa)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spHCTonDAUKhoa_GET", makhoa));
        }

        public override IDataReader GetHCKiemKe(String _maKK, bool qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spHCKiemKE_GET", _maKK, qadmin));
        }
        public override IDataReader GetAllHCKiemKe(String makho, DateTime tungay, DateTime denngay, String dieukienthem, bool qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spHCKiemKe_GETALL", makho, tungay, denngay, dieukienthem, qadmin));
        }
        public override IDataReader GetHCKiemKe_C(String _maKK, Decimal _sTT)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spHCKiemKE_C_GET", _maKK, _sTT));
        }
        public override IDataReader GetHCKiemKe_HD(String _mAKK, Decimal _sTT)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spHCKiemKE_HD_GET", _mAKK, _sTT));
        }
        public override IDataReader GetHCPhieuDoiThuoc(String _maDThuoc, bool _qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spHCPhieuDoiThuoc_GET", _maDThuoc, _qadmin));
        }
        public override IDataReader GetAllHCPhieuDoiThuoc(String makho, String maNCC, DateTime tungay, DateTime denngay, String dieukienthem, bool qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spHCPhieuDoiThuoc_GETALL", makho, maNCC, tungay, denngay, dieukienthem, qadmin));
        }
        public override IDataReader GetHCPhieuDoiThuoc_C(String _maDThuoc, Decimal _sTT)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spHCPhieuDoiThuoc_C_GET", _maDThuoc, _sTT));
        }
        public override IDataReader GetAllHCTonKhoa(DateTime ngayyclinh, string makhoa, String dk)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "sphcTonkhoa_GetAll", ngayyclinh, makhoa, dk));
        }
        public override IDataReader GetsHCTonKhoa(DateTime tuthang, DateTime denthang, string makhoa, String dk)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "sphcTonkhoa_Gets", tuthang, denthang, makhoa, dk));
        }
        #endregion

        #region Find List
        //HCPhieuNhap
        public override IDataReader FindHCPhieuNhap(string _DK, Boolean _qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spHCPhieuNhap_Finds", _DK, _qadmin));
        }
        public override IDataReader FindHCPhieuDoiThuoc(bool qadmin, string dk)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spHCPhieuDoiThuoc_FINDS", qadmin, dk));
        }
        #endregion

        #region HCPhieuNhap
        // public abstract String InsertHCPhieuNhap(string _maNCC, String _soHD, String _soCT, SmartDate _ngayPNhap, String _maKho, decimal _chietKhau, Boolean _thanhToan, SmartDate _ngayTToan, SmartDate _ngayNhapTT, String _NVNhap, decimal _HCTong, String _ghiChu, Boolean _huy, String _nguoiSD, string _maMay, String _nguoiGiao);
        public override String InsertHCPhieuNhap(string _maNCC, String _soHD, String _soCT, SmartDate _ngayPNhap, String _maKho, decimal _chietKhau, Boolean _thanhToan, SmartDate _ngayTToan, SmartDate _ngayNhapTT, String _NVNhap, decimal _HCTong, String _ghiChu, Boolean _huy, String _nguoiSD, string _maMay, String _nguoiGiao, String _manguon, String _mahinhthuc, string _sohdon, SmartDate _ngayhdon)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spHCPhieuNHAP_CREATE", _maNCC, _soHD, _soCT, _ngayPNhap.DBValue, _maKho, _chietKhau, _thanhToan, _ngayTToan.DBValue, _ngayNhapTT.DBValue, _NVNhap, _HCTong, _ghiChu, _huy, _nguoiSD, _maMay, _nguoiGiao, _manguon, _mahinhthuc, _sohdon, _ngayhdon.DBValue));
        }
        public override void UpdateHCPhieuNhap(String _maPN, string _maNCC, String _soHD, String _soCT, SmartDate _ngayPNhap, String _maKho, decimal _chietKhau, Boolean _thanhToan, SmartDate _ngayTToan, SmartDate _ngayNhapTT, String _NVNhap, decimal _HCTong, String _ghiChu, Boolean _huy, String _nguoiSD, SmartDate _ngaySD1, String _nguoiSD1, String _nguoiGiao, String _manguon, String _mahinhthuc, string _sohdon, SmartDate _ngayhdon)
        {
            System.Data.SqlClient.SqlDataReader dr;
            dr = SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spHCPhieuNHAP_UPDATE", _maPN, _maNCC, _soHD, _soCT, _ngayPNhap.DBValue, _maKho, _chietKhau, _thanhToan, _ngayTToan.DBValue, _ngayNhapTT.DBValue, _NVNhap, _HCTong, _ghiChu, _huy, _nguoiSD, _ngaySD1.DBValue, _nguoiSD1, _nguoiGiao, _manguon, _mahinhthuc, _sohdon, _ngayhdon.DBValue);
            dr.Close();
            dr = null;

        }
        public override void DeleteHCPhieuNhap(String _maPN, SmartDate _ngaySD, string _maMay, String _nguoiSD)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spHCPhieuNHAP_DELETED", _maPN, _ngaySD.DBValue, _maMay, _nguoiSD);
        }
        #endregion

        #region HCPhieuNhap chi tiet

        public override String InsertHCPhieuNhap_C(String _maPN, String _maThuoc, decimal _soluong, SmartDate _hanSD, decimal _donGia, decimal _chietKhau, String _soLo, Boolean _huy, String _ghiChu, string _maMay, String _nguoiSD)
        {
            System.Data.SqlClient.SqlDataReader dr;
            dr = SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spHCPhieuNHAP_C_CREATE", _maPN, _maThuoc, _soluong, _hanSD.DBValue, _donGia, _chietKhau, _soLo, _huy, _ghiChu, _maMay, _nguoiSD);
            dr.Close();
            dr = null;
            return "";
        }
        public override void UpdateHCPhieuNhap_C(String _maPN, decimal _sTT, String _maThuoc, decimal _soluong, SmartDate _hanSD, decimal _donGia, decimal _chietKhau, String _soLo, Boolean _huy, String _ghiChu, SmartDate _ngaySD, string _maMay, String _nguoiSD)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spHCPhieuNHAP_C_UPDATE", _maPN, _sTT, _maThuoc, _soluong, _hanSD.DBValue, _donGia, _chietKhau, _soLo, _huy, _ghiChu, _ngaySD.DBValue, _maMay, _nguoiSD);
        }
        public override void DeleteHCPhieuNhap_C(String _maPN, decimal _sTT, String _nguoiSD, String _maMay)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spHCPhieuNHAP_C_DELETED", _maPN, _sTT, _nguoiSD, _maMay);
        }
        #endregion

        #region HCPhieuXuat
        public override String InsertHCPhieuXuat(String _noiXuat, SmartDate _ngayXuat, SmartDate _ngayXuatTT, String _noiNhap, Byte _loaiHCPhieu, String _soCT, String _nvXuat, String _nvNhan, String _ghiChu, Boolean _huy, String _nguoiLap, Boolean _khoaYC, string _maMay, Boolean _daPhat, Boolean _daDuyet, string doituong)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spHCPhieuXUAT_CREATE", _noiXuat, _ngayXuat.DBValue, _ngayXuatTT.DBValue, _noiNhap, _loaiHCPhieu, _soCT, _nvXuat, _nvNhan, _ghiChu, _huy, _nguoiLap, _khoaYC, _maMay, _daPhat, _daDuyet, doituong));
        }
        public override void UpdateHCPhieuXuat(String _maPX, String _noiXuat, SmartDate _ngayXuat, SmartDate _ngayXuatTT, String _noiNhap, Byte _loaiHCPhieu, String _soCT, String _nvXuat, String _nvNhan, String _ghiChu, Boolean _huy, string _maMay, String _nguoiSD, Boolean _daPhat, Boolean _daDuyet, string doituong)
        {
            System.Data.SqlClient.SqlDataReader dr;
            dr = SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spHCPhieuXUAT_UPDATE", _maPX, _noiXuat, _ngayXuat.DBValue, _ngayXuatTT.DBValue, _noiNhap, _loaiHCPhieu, _soCT, _nvXuat, _nvNhan, _ghiChu, _huy, _maMay, _nguoiSD, _daPhat, _daDuyet, doituong);
            dr.Close();
            dr = null;

        }
        public override void DeleteHCPhieuXuat(String _maPX, string _maMay, String _nguoiSD)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spHCPhieuXUAT_DELETED", _maPX, _maMay, _nguoiSD);
        }

        #region HCPhieu Xuat chi tiet

        public override String InsertHCPhieuXuat_C(String _maPX, String _maThuoc, Decimal _soLuong, SmartDate _hanSD, String _soLo, Decimal _donGia, Decimal _soLuongYC, Decimal _giaBan, String _ghiChu, String _nguoiSD, string _maMay)
        {
            System.Data.SqlClient.SqlDataReader dr;
            dr = SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spHCPhieuXUAT_C_CREATE", _maPX, _maThuoc, _soLuong, _hanSD.DBValue, _soLo, _donGia, _soLuongYC, _giaBan, _ghiChu, _nguoiSD, _maMay);
            dr.Close();
            dr = null;
            return "";
        }
        public override void UpdateHCPhieuXuat_C(String _maPX, Decimal _sTT, String _maThuoc, Decimal _soLuong, SmartDate _hanSD, String _soLo, Decimal _donGia, Decimal _soLuongYC, Decimal _giaBan, Boolean _huy, String _ghiChu, String _nguoiSD, string _maMay)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spHCPhieuXUAT_C_UPDATE", _maPX, _sTT, _maThuoc, _soLuong, _hanSD.DBValue, _soLo, _donGia, _soLuongYC, _giaBan, _huy, _ghiChu, _nguoiSD, _maMay);
        }
        public override void DeleteHCPhieuXuat_C(String _maPX, Decimal _sTT, String _nguoiSD, string _maMay)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spHCPhieuXUAT_C_DELETED", _maPX, _sTT, _nguoiSD, _maMay);
        }
        public override IDataReader GetHCPhieuDTNhap(String _maDuTru, bool qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spHCPhieuDTNhap_GET", _maDuTru, qadmin));
        }
        public override IDataReader GetAllHCPhieuDTNhap(Boolean _qadmin, String _maKho, DateTime _tuNgay, DateTime _denNgay, String _dKien)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spHCPhieuDTNhap_GETALL", _qadmin, _maKho, _tuNgay, _denNgay, _dKien));
        }
        public override IDataReader GetHCPhieuDTNhap_C(String _maDuTru, Decimal _sTT)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spHCPhieuDTNhap_C_GET", _maDuTru, _sTT));
        }
        #endregion

        #endregion

        #region Nhap Tra


        public override String InsertHCNhapTra(String _noiNhap, SmartDate _ngayNhap, SmartDate _ngayNhapTT, String _noiXuat, Byte _loaiHCPhieu, String _soCT, String _nvXuat, String _nvNhan, String _ghiChu, String _nguoiLap, byte _bnTra, string _maMay, Byte _daPhat, Boolean _daduyet)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spHCNhapTra_CREATE", _noiNhap, _ngayNhap.DBValue, _ngayNhapTT.DBValue, _noiXuat, _loaiHCPhieu, _soCT, _nvXuat, _nvNhan, _ghiChu, _nguoiLap, _bnTra, _maMay, _daPhat, _daduyet));
        }
        public override void UpdateHCNhapTra(String _maPX, String _noiXuat, SmartDate _ngayNhap, SmartDate _ngayNhapTT, String _noiNhap, Byte _loaiHCPhieu, String _soCT, String _nvXuat, String _nvNhan, String _ghiChu, Boolean _huy, string _maMay, String _nguoiSD, Byte _daPhat, byte _bnTra, Boolean _daduyet)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spHCNhapTra_UPDATE", _maPX, _noiXuat, _ngayNhap.DBValue, _ngayNhapTT.DBValue, _noiNhap, _loaiHCPhieu, _soCT, _nvXuat, _nvNhan, _ghiChu, _huy, _maMay, _nguoiSD, _daPhat, _bnTra, _daduyet);
        }
        public override void DeleteHCNhapTra(String _maPX, string _maMay, String _nguoiSD)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spHCNhapTra_DELETED", _maPX, _maMay, _nguoiSD);
        }
        #endregion

        #region Nhap tra chi tiet
        //InsertHCNhapTra_C(String _MaPNT, String _maThuoc, Decimal _soLuong, SmartDate _hanSD,  Decimal _donGia,String _soLo,  Boolean Huy, String _ghiChu,String _maMay, String _nguoiSD);
        public override String InsertHCNhapTra_C(String _maPX, String _maThuoc, Decimal _soLuong, SmartDate _hanSD, Decimal _donGia, String _soLo, Boolean _Huy, String _ghiChu, string _maMay, String _nguoiSD, Decimal _soLuongYC)
        {
            System.Data.SqlClient.SqlDataReader dr;
            dr = SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spHCNhapTra_C_CREATE", _maPX, _maThuoc, _soLuong, _hanSD.DBValue, _donGia, _soLo, _Huy, _ghiChu, _maMay, _nguoiSD, _soLuongYC);
            dr.Close();
            dr = null;
            return "";
        }
        public override void UpdateHCNhapTra_C(String _maPX, Decimal _sTT, String _maThuoc, Decimal _soLuong, SmartDate _hanSD, String _soLo, Decimal _donGia, Decimal _soLuongYC, Decimal _giaBan, Boolean _huy, String _ghiChu, String _nguoiSD, string _maMay)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spHCNhapTra_C_UPDATE", _maPX, _sTT, _maThuoc, _soLuong, _hanSD.DBValue, _soLo, _donGia, _soLuongYC, _giaBan, _huy, _ghiChu, _nguoiSD, _maMay);
        }
        public override void DeleteHCNhapTra_C(String _maPX, Decimal _sTT, String _nguoiSD, string _maMay)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spHCNhapTra_C_DELETED", _maPX, _sTT, _nguoiSD, _maMay);
        }

        #endregion

        #region HCKiem Nhap
        public override String InsertHCKiemNhap(String _maPhieu, String _maNV, String _maCD, Byte _loai, String _ghichu, string _maMay, String _nguoiSD, Byte _vaiTro)
        {//_maPhieu, _maNV, _maCD, _loai,_huy, _ghichu, _maMay, _nguoiSD, _vaitro
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spHCKiemNhap_CREATE", _maPhieu, _maNV, _maCD, _loai, _ghichu, _maMay, _nguoiSD, _vaiTro));
        }
        public override void UpdateHCKiemNhap(String _maPhieu, Byte _sTT, String _maNV, String _maCD, Byte _loai, Boolean _huy, String _ghichu, string _maMay, String _nguoiSD, Byte _vaiTro)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spHCKiemNhap_UPDATE", _maPhieu, _sTT, _maNV, _maCD, _loai, _huy, _ghichu, _maMay, _nguoiSD, _vaiTro);
        }
        public override void DeleteHCKiemNhap(String _maMay, String _nguoiSD, String _maHCPhieu, Byte _sTT)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spHCKiemNHAP_DELETED", _maMay, _nguoiSD, _maHCPhieu, _sTT);
        }


        #endregion

        #region Xuat Tra
        public override String InsertHCXuatTra(String _maNCC, String _soCT, SmartDate _ngayXT, String _makho, Boolean _thanhtoan, SmartDate _ngayTToan, SmartDate _ngayXuatTT, Decimal _HCTong, String _ghichu, string _maMay, String _nguoiLap, SmartDate _ngayLap, String _nVXuat, String _nVNhan, Decimal _vAT, string _sohdon, SmartDate _ngayhdon)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spHCXuatTra_CREATE", _maNCC, _soCT, _ngayXT.DBValue, _makho, _thanhtoan, _ngayTToan.DBValue, _ngayXuatTT.DBValue, _HCTong, _ghichu, _maMay, _nguoiLap, _ngayLap.DBValue, _nVXuat, _nVNhan, _vAT, _sohdon, _ngayhdon.DBValue));
        }
        public override void UpdateHCXuatTra(String _maPXT, String _maNCC, String _soCT, SmartDate _ngayXT, String _makho, Boolean _thanhtoan, SmartDate _ngayTToan, SmartDate _ngayXuatTT, Decimal _HCTong, String _ghichu, Boolean _huy, String _nguoiSD, string _maMay, String _nVXuat, String _nVNhan, Decimal _vAT, string _sohdon, SmartDate _ngayhdon)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spHCXuatTra_UPDATE", _maPXT, _maNCC, _soCT, _ngayXT.DBValue, _makho, _thanhtoan, _ngayTToan.DBValue, _ngayXuatTT.DBValue, _HCTong, _ghichu, _huy, _nguoiSD, _maMay, _nVXuat, _nVNhan, _vAT, _sohdon, _ngayhdon.DBValue);
        }
        public override void DeleteHCXuatTra(String _maMay, String _nguoiSD, String _maPXT)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spHCXuatTra_DELETED", _maMay, _nguoiSD, _maPXT);
        }
        #endregion

        #region Xuat tra chi tiet
        public override String InsertHCXuatTra_C(String _mathuoc, Decimal _soluong, SmartDate _hanSD, Decimal _donGia, String _soLo, String _ghichu, String _nguoiSD, string _maMay, String _maPXT, Decimal _vAT)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spHCXuatTra_C_CREATE", _mathuoc, _soluong, _hanSD.DBValue, _donGia, _soLo, _ghichu, _nguoiSD, _maMay, _maPXT, _vAT));
        }
        public override void UpdateHCXuatTra_C(Decimal _sTT, String _mathuoc, Decimal _soluong, SmartDate _hanSD, Decimal _donGia, String _soLo, Boolean _huy, String _ghichu, String _nguoiSD, string _maMay, String _maPXT, Decimal _vAT)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spHCXuatTra_C_UPDATE", _sTT, _mathuoc, _soluong, _hanSD.DBValue, _donGia, _soLo, _huy, _ghichu, _nguoiSD, _maMay, _maPXT, _vAT);
        }
        public override void DeleteHCXuatTra_C(String _maMay, String _nguoiSD, String _maPXT, Decimal _sTT)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spHCXuatTra_C_DELETED", _maMay, _nguoiSD, _maPXT, _sTT);
        }

        #endregion

        #region HCTon dau Kho

        public override String InsertHCTonDau(SmartDate _ngayHCTon, String _makho, String _nguoiSD, string _maMay)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spHCTonDau_CREATE", _ngayHCTon.DBValue, _makho, _nguoiSD, _maMay));
        }
        public override void UpdateHCTonDau(SmartDate _ngayHCTon, String _makho, String _nguoiSD, string _maMay)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spHCTonDau_UPDATE", _ngayHCTon.DBValue, _makho, _nguoiSD, _maMay);
        }

        #endregion

        #region HCTon dau Khoa

        public override String InsertHCTonDauKhoa(SmartDate _ngayHCTon, String _makhoa, String _nguoiSD, string _maMay)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spHCTonDauKhoa_CREATE", _ngayHCTon.DBValue, _makhoa, _nguoiSD, _maMay));
        }
        public override void UpdateHCTonDauKhoa(SmartDate _ngayHCTon, String _makhoa, String _nguoiSD, string _maMay)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spHCTonDauKhoa_UPDATE", _ngayHCTon.DBValue, _makhoa, _nguoiSD, _maMay);
        }

        #endregion

        #region HCKiem Ke
        public override String InsertHCKiemKe(SmartDate _ngayKK, String _makho, String _nguoiKK, String _nguoiLap, String _ghiChu, Boolean _xuly, string _maMay)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spHCKiemKe_Create", _ngayKK.DBValue, _makho, _nguoiKK, _nguoiLap, _ghiChu, _xuly, _maMay));
        }
        public override void UpdateHCKiemKe(String _maKK, SmartDate _ngayKK, String _makho, String _nguoiKK, String _ghiChu, Boolean _xuly, string _maMay, String _nguoiSD, Boolean _huy)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spHCKiemKe_Update", _maKK, _ngayKK.DBValue, _makho, _nguoiKK, _ghiChu, _xuly, _maMay, _nguoiSD, _huy);
        }
        public override void DeleteHCKiemKe(String _maMay, String _nguoiSD, String _maKK)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spHCKiemKE_DELETED", _maMay, _nguoiSD, _maKK);
        }
        #endregion

        #region HCKiem Ke chi tiet
        public override String InsertHCKiemKe_C(String _maKK, String _maThuoc, Decimal _soLuong, Decimal _dongia, Decimal _sLDC, String _ghiChu, Decimal _sLHCTon, String _nguoiSD, string _maMay)
        {
            System.Data.SqlClient.SqlDataReader dr;
            dr = SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spHCKiemKE_C_CREATE", _maKK, _maThuoc, _soLuong, _dongia, _sLDC, _ghiChu, _sLHCTon, _nguoiSD, _maMay);
            dr.Close();
            dr = null;
            return "";
        }
        public override void UpdateHCKiemKe_C(String _maKK, Decimal _sTT, String _maThuoc, Decimal _soLuong, Decimal _dongia, Decimal _sLDC, String _ghiChu, Decimal _sLHCTon, Boolean _huy, String _nguoiSD, string _maMay)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spHCKiemKE_C_UPDATE", _maKK, _sTT, _maThuoc, _soLuong, _dongia, _sLDC, _ghiChu, _sLHCTon, _huy, _nguoiSD, _maMay);
        }
        public override void DeleteHCKiemKe_C(String _maMay, String _nguoiSD, String _maKK, Decimal _sTT)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spHCKiemKE_C_DELETED", _maMay, _nguoiSD, _maKK, _sTT);
        }

        #endregion

        #region HCKiem Ke chi tiet Han dung
        public override String InsertHCKiemKe_HD(String _mAKK, String _maThuoc, SmartDate _hANDUNG, String _solo, Decimal _sOLUONG, Decimal _sLHCTon, Decimal _sLDC, String _ghichu, String _nguoiSD, string _maMay, Decimal _dongia)
        {
            System.Data.SqlClient.SqlDataReader dr;
            dr = SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spHCKiemKE_HD_CREATE", _mAKK, _maThuoc, _hANDUNG.DBValue, _solo, _sOLUONG, _sLHCTon, _sLDC, _ghichu, _nguoiSD, _maMay, _dongia);
            dr.Close();
            dr = null;
            return "";
        }
        public override void UpdateHCKiemKe_HD(String _mAKK, Decimal _sTT, String _maThuoc, SmartDate _hANDUNG, String _solo, Decimal _sOLUONG, Decimal _sLHCTon, Decimal _sLDC, String _ghichu, Boolean _huy, String _nguoiSD, string _maMay, Decimal _dongia)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spHCKiemKE_HD_UPDATE", _mAKK, _sTT, _maThuoc, _hANDUNG.DBValue, _solo, _sOLUONG, _sLHCTon, _sLDC, _ghichu, _huy, _nguoiSD, _maMay, _dongia);
        }
        public override void DeleteHCKiemKe_HD(String _maMay, String _nguoiSD, String _maKK, Decimal _sTT)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spHCKiemKE_HD_DELETED", _maMay, _nguoiSD, _maKK, _sTT);
        }
        #endregion

        #region HCPhieu Doi Thuoc
        public override String InsertHCPhieuDoiThuoc(String _maNCC, String _soCT, SmartDate _ngayDThuoc, String _makho, String _ghichu, String _nguoiLap, string _maMay)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spHCPhieuDoiThuoc_CREATE", _maNCC, _soCT, _ngayDThuoc.DBValue, _makho, _ghichu, _nguoiLap, _maMay));
        }
        public override void UpdateHCPhieuDoiThuoc(String _maDThuoc, String _maNCC, String _soCT, SmartDate _ngayDThuoc, String _makho, String _ghichu, Boolean _huy, String _nguoiSD, string _maMay)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spHCPhieuDoiThuoc_UPDATE", _maDThuoc, _maNCC, _soCT, _ngayDThuoc.DBValue, _makho, _ghichu, _huy, _nguoiSD, _maMay);
        }
        public override void DeleteHCPhieuDoiThuoc(String _maMay, String _nguoiSD, String _maDThuoc)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spHCPhieuDoiThuoc_DELETED", _maMay, _nguoiSD, _maDThuoc);
        }


        #endregion

        #region HCPhieu Doi Thuoc Chi tiet
        public override String InsertHCPhieuDoiThuoc_C(String _maDThuoc, String _mathuoc, Decimal _soluong, SmartDate _hanSD, SmartDate _hanSDCu, Decimal _donGia, String _soLo, String _soLoCu, String _ghichu, String _nguoiSD, string _maMay)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spHCPhieuDoiThuoc_C_CREATE", _maDThuoc, _mathuoc, _soluong, _hanSD.DBValue, _hanSDCu.DBValue, _donGia, _soLo, _soLoCu, _ghichu, _nguoiSD, _maMay));
        }
        public override void UpdateHCPhieuDoiThuoc_C(String _maDThuoc, Decimal _sTT, String _mathuoc, Decimal _soluong, SmartDate _hanSD, SmartDate _hanSDCu, Decimal _donGia, String _soLo, String _soLoCu, Boolean _huy, String _ghichu, String _nguoiSD, string _maMay)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spHCPhieuDoiThuoc_C_UPDATE", _maDThuoc, _sTT, _mathuoc, _soluong, _hanSD.DBValue, _hanSDCu.DBValue, _donGia, _soLo, _soLoCu, _huy, _ghichu, _nguoiSD, _maMay);
        }
        public override void DeleteHCPhieuDoiThuoc_C(String _maMay, String _nguoiSD, String _maDThuoc, Decimal _sTT)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spHCPhieuDoiThuoc_C_DELETED", _maMay, _nguoiSD, _maDThuoc, _sTT);
        }
        #endregion

        #region Phieu Du tru Nhap
        public override String InsertHCPhieuDTNhap(String _soCT, SmartDate _ngayPhieu, String _makho, String _nguoiDuTru, Decimal _tong, String _ghichu, String _nguoiLap, string _maMay, string _maNCC)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spHCPhieuDTNhap_CREATE", _soCT, _ngayPhieu.DBValue, _makho, _nguoiDuTru, _tong, _ghichu, _nguoiLap, _maMay, _maNCC));
        }
        public override void UpdateHCPhieuDTNhap(String _maDuTru, String _soCT, SmartDate _ngayPhieu, String _makho, String _nguoiDuTru, Decimal _tong, String _ghichu, Boolean _huy, String _nguoiSD, string _maMay, string _maNCC)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spHCPhieuDTNhap_update", _maDuTru, _soCT, _ngayPhieu.DBValue, _makho, _nguoiDuTru, _tong, _ghichu, _huy, _nguoiSD, _maMay, _maNCC);
        }
        public override void DeleteHCPhieuDTNhap(String _maMay, String _nguoiSD, String _maDuTru)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spHCPhieuDTNhap_DELETED", _maMay, _nguoiSD, _maDuTru);
        }

        #endregion

        #region Phieu Du tru Nhap chi tiet
        public override String InsertHCPhieuDTNhap_C(String _maDuTru, String _mathuoc, Decimal _soluong, Decimal _donGia, String _ghichu, String _nguoiSD, string _maMay)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spHCPhieuDTNhap_C_CREATE", _maDuTru, _mathuoc, _soluong, _donGia, _ghichu, _nguoiSD, _maMay));
        }
        public override void UpdateHCPhieuDTNhap_C(String _maDuTru, Decimal _sTT, String _mathuoc, Decimal _soluong, Decimal _donGia, Boolean _huy, String _ghichu, String _nguoiSD, string _maMay)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spHCPhieuDTNhap_C_UPDATE", _maDuTru, _sTT, _mathuoc, _soluong, _donGia, _huy, _ghichu, _nguoiSD, _maMay);
        }
        public override void DeleteHCPhieuDTNhap_C(String _maMay, String _nguoiSD, String _maDuTru, Decimal _sTT)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spHCPhieuDTNhap_C_DELETED", _maMay, _nguoiSD, _maDuTru, _sTT);
        }
        #endregion

        #region Ton Khoa

        public override String InsertHCTonKhoa(String _makhoa, String _mathuoc, SmartDate _thang, Decimal _soDK, Decimal _sLN, Decimal _sLX, Decimal _sLNT, Decimal _sLXT, Decimal _sLDC, Decimal _tonCK, Decimal _giaNhap, String _nguoiSD, string _maMay)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spHCTonKhoa_CREATE", _makhoa, _mathuoc, _thang.DBValue, _soDK, _sLN, _sLX, _sLNT, _sLXT, _sLDC, _tonCK, _giaNhap, _nguoiSD, _maMay));
        }
        public override void UpdateHCTonKhoa(String _makhoa, String _mathuoc, SmartDate _thang, Decimal _soDK, Decimal _sLN, Decimal _sLX, Decimal _sLNT, Decimal _sLXT, Decimal _sLDC, Decimal _tonCK, Decimal _giaNhap, String _nguoiSD, string _maMay)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spHCTonKhoa_UPDATE", _makhoa, _mathuoc, _thang.DBValue, _soDK, _sLN, _sLX, _sLNT, _sLXT, _sLDC, _tonCK, _giaNhap, _nguoiSD, _maMay);
        }
        public override void DeleteHCTonKhoa(String _makhoa, String _mathuoc, SmartDate _thang, String _nguoiSD, string _maMay)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spHCTonKhoa_Deleted", _makhoa, _mathuoc, _thang.DBValue, _nguoiSD, _maMay);
        }
        #endregion


        #endregion


        #region Quan ly Nhan su va Luong

        #region Get List
        public override IDataReader GetNhanVien(String _maNV)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spNHANVIEN_Get", _maNV));
        }
        public override IDataReader GetAllNhanVien(Boolean qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spNhanVien_GetAll", qadmin));
        }
        public override IDataReader GetAllChamCong(DateTime Thang, String maKhoa, String dk, Boolean qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spCHAMCONG_GETALL", Thang, maKhoa, dk, qadmin));
        }
        public override IDataReader GetChamCong(Int32 _sTT, DateTime _thang)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spCHAMCONG_Get", _sTT, _thang));
        }
        public override IDataReader GetHopDong(String _soHD)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spHopDong_GET", _soHD));
        }
        public override IDataReader GetAllHopDong(DateTime _tuNgay, DateTime _denNgay, String _maKhoa, String _dieuKienThem, Boolean _qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spHopDong_GETALL", _tuNgay, _denNgay, _maKhoa, _dieuKienThem, _qadmin));
        }
        public override IDataReader GetLuong_NgoaiGio(DateTime _thang, String _maKhoa, string dk)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spLUONG_NgoaiGio_GET", _thang, _maKhoa, dk));
        }
        public override IDataReader GetLuong_TT(DateTime _thang, String _maKhoa, string dk)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spLUONG_TT_GET", _thang, _maKhoa, dk));
        }
        public override IDataReader GetLuong_BoiDuongPT(DateTime _thang, String _maKhoa, string dk)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spLUONG_BoiDuongPT_GET", _thang, _maKhoa, dk));
        }
        #endregion

        #region Find List
        public override IDataReader FindNhanVien(string _DK, Boolean _qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spNhanVien_Finds", _DK, _qadmin));
        }
        public override IDataReader FindNhanVien_QTCongTac(String _maNV, String _DK, Boolean _qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spNHANVIEN_QTCONGTAC_FINDS", _maNV, _DK, _qadmin));
        }
        public override IDataReader FindNhanVien_QTDaoTao(String _maNV, String _DK, Boolean _qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spNHANVIEN_QTDaoTao_FINDS", _maNV, _DK, _qadmin));
        }
        public override IDataReader FindNhanVien_QTDongBHXH(String _maNV, String _DK, Boolean _qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spNHANVIEN_QTDongBHXH_FINDS", _maNV, _DK, _qadmin));
        }
        public override IDataReader FindNhanVien_QTPhuCap(String _maNV, String _DK, Boolean _qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spNHANVIEN_QTPhuCap_FINDS", _maNV, _DK, _qadmin));
        }
        public override IDataReader FindNhanVien_QTTangLuong(String _maNV, String _DK, Boolean _qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spNHANVIEN_QTTangLuong_FINDS", _maNV, _DK, _qadmin));
        }
        public override IDataReader FindNhanVien_QuanHeGiaDinh(String _maNV, String _DK, Boolean _qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spNHANVIEN_QuanHeGiaDinh_FINDS", _maNV, _DK, _qadmin));
        }
        public override IDataReader FindNhanVien_QTBoiDuong(String _maNV, String _DK, Boolean _qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spNHANVIEN_QTBoiDuong_FINDS", _maNV, _DK, _qadmin));
        }
        public override IDataReader FindNhanVien_KhenThuong(String _maNV, String _DK, Boolean _qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spNHANVIEN_KhenThuong_FINDS", _maNV, _DK, _qadmin));
        }
        public override IDataReader FindNhanVien_KyLuat(String _maNV, String _DK, Boolean _qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spNHANVIEN_KyLuat_FINDS", _maNV, _DK, _qadmin));
        }
        public override IDataReader FindNhanVien_TDNgoaiNgu(String _maNV, String _DK, Boolean _qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spNHANVIEN_TDNgoaiNgu_FINDS", _maNV, _DK, _qadmin));
        }
        public override IDataReader FindNhanVien_QTMGThueThuNhap(String _maNV, String _DK, Boolean _qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spNHANVIEN_QTMGThueThuNhap_FINDS", _maNV, _DK, _qadmin));
        }
        public override IDataReader FindLuong(DateTime Thang, String maKhoa, String dk, Boolean qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spLUONG_FINDS", Thang, maKhoa, dk, qadmin));
        }
        public override IDataReader FindLuong_PT(DateTime Thang, String maKhoa, byte mavaitro, String dk, Boolean qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spLUONG_PT_FINDS", Thang, maKhoa, mavaitro, dk, qadmin));
        }
        public override IDataReader FindLuong_T(DateTime Thang, String maKhoa, String dk, Boolean qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spLUONG_T_FINDS", Thang, maKhoa, dk, qadmin));
        }
        public override IDataReader FindLuong_M2(DateTime Thang, String maKhoa, String dk, Boolean qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spLUONG_M2_FINDS", Thang, maKhoa, dk, qadmin));
        }
        public override IDataReader FindLuong_Truc(DateTime Thang, String maKhoa, String dk, Boolean qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spLUONG_Truc_FINDS", Thang, maKhoa, dk, qadmin));
        }
        public override IDataReader FindLuong_TTTM(DateTime Thang, String maKhoa, byte mavaitro, String dk, Boolean qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spLUONG_TTTM_FINDS", Thang, maKhoa, mavaitro, dk, qadmin));
        }
        public override IDataReader FindLuong_M1(DateTime Thang, String maKhoa, String dk, Boolean qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spLUONG_M1_FINDS", Thang, maKhoa, dk, qadmin));
        }
        public override IDataReader FindLuong_DocHai(DateTime Thang, String maKhoa, String dk)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spLUONG_DocHai_FINDS", Thang, maKhoa, dk));
        }
        public override IDataReader FindLuong_Nghe(DateTime Thang, String maKhoa, String dk, Boolean qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spLUONG_Nghe_FINDS", Thang, maKhoa, dk, qadmin));
        }
        public override IDataReader FindLuong_HoiChan(DateTime Thang, String maKhoa, String dk, Boolean qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spLUONG_HoiChan_FINDS", Thang, maKhoa, dk, qadmin));
        }
        #endregion

        #region Nhan vien
        public override String InsertNhanVien(String _hoten, String _hotenks, Boolean _gioitinh, SmartDate _ngaysinh, String _dienThoai, String _maKhoa, String _noisinh, String _quequan, String _matongiao, String _madantoc, String _chooHT, String _thuongtru, String _soCMND, String _noicap, SmartDate _ngaycap, String _maTPhanGD, String _maTPhanBT, String _maDienCSach, String _soBHXH, Boolean _dongBHXH, SmartDate _tuNgayCM, SmartDate _denNgayCM, SmartDate _tuNgayCMy, SmartDate _denNgayCMy, SmartDate _tuNgayBCK, SmartDate _denNgayBCK, SmartDate _ngaynhapngu, SmartDate _ngayxuatngu, SmartDate _ngayVaoBChe, SmartDate _tuNgayPV, SmartDate _denNgayPV, SmartDate _tNXPhong, SmartDate _dNXPhong, SmartDate _tNDocHai, SmartDate _dNDocHai, SmartDate _tNKhac, SmartDate _dNKhac, String _maChucDanh, String _maChucVu, String _maHocHam, String _maChuyenMon, String _maHocVan, String _maTDChinhTri, String _maTDNgoaiNgu, SmartDate _ngayDang, String _noiKNap, String _nguoiGT, SmartDate _ngayDoan, SmartDate _ngayvaoCQ, String _maSuckhoe, String _maTrangthai, SmartDate _ngaynghiviec, String _lydoNghi, Byte[] _anh, Boolean _tinhLuongHeso, String _maMay, String _nguoiLap, String _maLoaiHD, String _maNVQL, String _maTDTinHoc, String _maChuyenNganh)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spNHANVIEN_Create", _hoten, _hotenks, _gioitinh, _ngaysinh.DBValue, _dienThoai, _maKhoa, _noisinh, _quequan, _matongiao, _madantoc, _chooHT, _thuongtru, _soCMND, _noicap, _ngaycap.DBValue, _maTPhanGD, _maTPhanBT, _maDienCSach, _soBHXH, _dongBHXH, _tuNgayCM.DBValue, _denNgayCM.DBValue, _tuNgayCMy.DBValue, _denNgayCMy.DBValue, _tuNgayBCK.DBValue, _denNgayBCK.DBValue, _ngaynhapngu.DBValue, _ngayxuatngu.DBValue, _ngayVaoBChe.DBValue, _tuNgayPV.DBValue, _denNgayPV.DBValue, _tNXPhong.DBValue, _dNXPhong.DBValue, _tNDocHai.DBValue, _dNDocHai.DBValue, _tNKhac.DBValue, _dNKhac.DBValue, _maChucDanh, _maChucVu, _maHocHam, _maChuyenMon, _maHocVan, _maTDChinhTri, _maTDNgoaiNgu, _ngayDang.DBValue, _noiKNap, _nguoiGT, _ngayDoan.DBValue, _ngayvaoCQ.DBValue, _maSuckhoe, _maTrangthai, _ngaynghiviec.DBValue, _lydoNghi, _anh, _tinhLuongHeso, _maMay, _nguoiLap, _maLoaiHD, _maNVQL, _maTDTinHoc, _maChuyenNganh));
        }
        public override void UpdateNhanVien(String _maNV, String _hoten, String _hotenks, Boolean _gioitinh, SmartDate _ngaysinh, String _dienThoai, String _maKhoa, String _noisinh, String _quequan, String _matongiao, String _madantoc, String _chooHT, String _thuongtru, String _soCMND, String _noicap, SmartDate _ngaycap, String _maTPhanGD, String _maTPhanBT, String _maDienCSach, String _soBHXH, Boolean _dongBHXH, SmartDate _tuNgayCM, SmartDate _denNgayCM, SmartDate _tuNgayCMy, SmartDate _denNgayCMy, SmartDate _tuNgayBCK, SmartDate _denNgayBCK, SmartDate _ngaynhapngu, SmartDate _ngayxuatngu, SmartDate _ngayVaoBChe, SmartDate _tuNgayPV, SmartDate _denNgayPV, SmartDate _tNXPhong, SmartDate _dNXPhong, SmartDate _tNDocHai, SmartDate _dNDocHai, SmartDate _tNKhac, SmartDate _dNKhac, String _maChucDanh, String _maChucVu, String _maHocHam, String _maChuyenMon, String _maHocVan, String _maTDChinhTri, String _maTDNgoaiNgu, SmartDate _ngayDang, String _noiKNap, String _nguoiGT, SmartDate _ngayDoan, SmartDate _ngayvaoCQ, String _maSuckhoe, String _maTrangthai, SmartDate _ngaynghiviec, String _lydoNghi, Byte[] _anh, Boolean _tinhLuongHeso, String _maMay, String _nguoiSD, Boolean _huy, String _maLoaiHD, String _maNVQL, String _maTDTinHoc, String _maChuyenNganh)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spNHANVIEN_UPDATE", _maNV, _hoten, _hotenks, _gioitinh, _ngaysinh.DBValue, _dienThoai, _maKhoa, _noisinh, _quequan, _matongiao, _madantoc, _chooHT, _thuongtru, _soCMND, _noicap, _ngaycap.DBValue, _maTPhanGD, _maTPhanBT, _maDienCSach, _soBHXH, _dongBHXH, _tuNgayCM.DBValue, _denNgayCM.DBValue, _tuNgayCMy.DBValue, _denNgayCMy.DBValue, _tuNgayBCK.DBValue, _denNgayBCK.DBValue, _ngaynhapngu.DBValue, _ngayxuatngu.DBValue, _ngayVaoBChe.DBValue, _tuNgayPV.DBValue, _denNgayPV.DBValue, _tNXPhong.DBValue, _dNXPhong.DBValue, _tNDocHai.DBValue, _dNDocHai.DBValue, _tNKhac.DBValue, _dNKhac.DBValue, _maChucDanh, _maChucVu, _maHocHam, _maChuyenMon, _maHocVan, _maTDChinhTri, _maTDNgoaiNgu, _ngayDang.DBValue, _noiKNap, _nguoiGT, _ngayDoan.DBValue, _ngayvaoCQ.DBValue, _maSuckhoe, _maTrangthai, _ngaynghiviec.DBValue, _lydoNghi, _anh, _tinhLuongHeso, _maMay, _nguoiSD, _huy, _maLoaiHD, _maNVQL, _maTDTinHoc, _maChuyenNganh);
        }
        public override void DeleteNhanVien(String _maMay, String _nguoiSD, String _maNV)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spNHANVIEN_DELETED", _maMay, _nguoiSD, _maNV);
        }

        #endregion

        #region Nhan vien QT Cong tac
        public override String InsertNhanVien_QTCongTac(String _maNV, SmartDate _tungay, String _congviec, String _noiLamviec, String _soHD, String _maMay, String _nguoiSD, String _maLoaiHD, String _maKhoa, SmartDate _denngay)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spNHANVIEN_QTCONGTAC_Create", _maNV, _tungay.DBValue, _congviec, _noiLamviec, _soHD, _maMay, _nguoiSD, _maLoaiHD, _maKhoa, _denngay.DBValue));
        }
        public override void UpdateNhanVien_QTCongTac(String _maNV, Int32 _sTT, SmartDate _tungay, String _congviec, String _noiLamviec, String _soHD, String _maMay, Boolean _huy, String _nguoiSD, String _maLoaiHD, String _maKhoa, SmartDate _denngay)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spNHANVIEN_QTCONGTAC_Update", _maNV, _sTT, _tungay.DBValue, _congviec, _noiLamviec, _soHD, _maMay, _huy, _nguoiSD, _maLoaiHD, _maKhoa, _denngay.DBValue);
        }
        public override void DeleteNhanVien_QTCongTac(String _maMay, String _nguoiSD, String _maNV, Int32 _sTT)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spNHANVIEN_QTCONGTAC_DELETED", _maMay, _nguoiSD, _maNV, _sTT);
        }
        #endregion

        #region Nhan vien QT Dao tao
        public override String InsertNhanVien_QTDaoTao(String _maNV, SmartDate _tungay, SmartDate _denngay, String _maTDDaoTao, String _chuyennganh, String _cosodaotao, String _maQG, String _maHTDaoTao, Int16 _namTotNghiep, String _maMay, String _nguoiSD)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spNhanVien_QTDaoTao_Create", _maNV, _tungay.DBValue, _denngay.DBValue, _maTDDaoTao, _chuyennganh, _cosodaotao, _maQG, _maHTDaoTao, _namTotNghiep, _maMay, _nguoiSD));
        }
        public override void UpdateNhanVien_QTDaoTao(String _maNV, Int32 _sTT, SmartDate _tungay, SmartDate _denngay, String _maTDDaoTao, String _chuyennganh, String _cosodaotao, String _maQG, String _maHTDaoTao, Int16 _namTotNghiep, String _maMay, Boolean _huy, String _nguoiSD)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spNHANVIEN_QTDaoTao_Update", _maNV, _sTT, _tungay.DBValue, _denngay.DBValue, _maTDDaoTao, _chuyennganh, _cosodaotao, _maQG, _maHTDaoTao, _namTotNghiep, _maMay, _huy, _nguoiSD);
        }
        public override void DeleteNhanVien_QTDaoTao(String _maMay, String _nguoiSD, String _maNV, Int32 _sTT)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spNHANVIEN_QTDaoTao_DELETED", _maMay, _nguoiSD, _maNV, _sTT);
        }
        #endregion

        #region Nhan vien QT Dong BHXH
        public override String InsertNhanVien_QTDongBHXH(String _maNV, SmartDate _tuNgay, SmartDate _denNgay, String _maKhoa, Decimal _heSo, Decimal _mucLuong, String _maMay, String _nguoiSD)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spNhanVien_QTdongBHXH_Create", _maNV, _tuNgay.DBValue, _denNgay.DBValue, _maKhoa, _heSo, _mucLuong, _maMay, _nguoiSD));
        }
        public override void UpdateNhanVien_QTDongBHXH(String _maNV, Int32 _sTT, SmartDate _tuNgay, SmartDate _denNgay, String _maKhoa, Decimal _heSo, Decimal _mucLuong, String _maMay, Boolean _huy, String _nguoiSD)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spNHANVIEN_QTdongBHXH_Update", _maNV, _sTT, _tuNgay.DBValue, _denNgay.DBValue, _maKhoa, _heSo, _mucLuong, _maMay, _huy, _nguoiSD);
        }
        public override void DeleteNhanVien_QTDongBHXH(String _maMay, String _nguoiSD, String _maNV, Int32 _sTT)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spNHANVIEN_QTdongBHXH_DELETED", _maMay, _nguoiSD, _maNV, _sTT);
        }
        #endregion

        #region Nhan vien QT Phu cap
        public override String InsertNhanVien_QTPhuCap(String _maNV, SmartDate _tungay, SmartDate _denngay, String _maPC, Decimal _heSo, Decimal _mucLuong, String _maMay, String _nguoiSD)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spNhanVien_QTPhuCap_Create", _maNV, _tungay.DBValue, _denngay.DBValue, _maPC, _heSo, _mucLuong, _maMay, _nguoiSD));
        }
        public override void UpdateNhanVien_QTPhuCap(String _maNV, Int32 _sTT, SmartDate _tungay, SmartDate _denngay, String _maPC, Decimal _heSo, Decimal _mucLuong, Boolean _huy, String _maMay, String _nguoiSD)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spNHANVIEN_QTPhuCap_Update", _maNV, _sTT, _tungay.DBValue, _denngay.DBValue, _maPC, _heSo, _mucLuong, _huy, _maMay, _nguoiSD);
        }
        public override void DeleteNhanVien_QTPhuCap(String _maMay, String _nguoiSD, String _maNV, Int32 _sTT)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spNHANVIEN_QTPhuCap_DELETED", _maMay, _nguoiSD, _maNV, _sTT);
        }
        #endregion

        #region Nhan vien QT Tang Luong
        public override String InsertNhanVien_QTTangLuong(String _maNV, SmartDate _tungay, SmartDate _denngay, String _mangach, Decimal _heSo, Decimal _mucLuong, String _maMay, String _nguoiSD, int _maBac)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spNhanVien_QTTangLuong_Create", _maNV, _tungay.DBValue, _denngay.DBValue, _mangach, _heSo, _mucLuong, _maMay, _nguoiSD, _maBac));
        }
        public override void UpdateNhanVien_QTTangLuong(String _maNV, Int32 _sTT, SmartDate _tungay, SmartDate _denngay, String _mangach, Decimal _heSo, Decimal _mucLuong, Boolean _huy, String _maMay, String _nguoiSD, int _maBac)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spNHANVIEN_QTTangLuong_Update", _maNV, _sTT, _tungay.DBValue, _denngay.DBValue, _mangach, _heSo, _mucLuong, _huy, _maMay, _nguoiSD, _maBac);
        }
        public override void DeleteNhanVien_QTTangLuong(String _maMay, String _nguoiSD, String _maNV, Int32 _sTT)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spNHANVIEN_QTTangLuong_DELETED", _maMay, _nguoiSD, _maNV, _sTT);
        }
        #endregion

        #region Nhan vien Quan he gia dinh
        public override Int32 InsertNhanVien_QuanHeGiaDinh(String _maNV, String _maQHGiaDinh, String _hoten, Int16 _namsinh, String _maNN, String _noilamviec, String _diachi, String _maMay, String _nguoiSD)
        {
            return System.Convert.ToInt32(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spNhanVien_QuanHeGiaDinh_Create", _maNV, _maQHGiaDinh, _hoten, _namsinh, _maNN, _noilamviec, _diachi, _maMay, _nguoiSD));
        }
        public override void UpdateNhanVien_QuanHeGiaDinh(Int32 _sTT, String _maNV, String _maQHGiaDinh, String _hoten, Int16 _namsinh, String _maNN, String _noilamviec, String _diachi, Boolean _huy, String _maMay, String _nguoiSD)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spNHANVIEN_QuanHeGiaDinh_Update", _sTT, _maNV, _maQHGiaDinh, _hoten, _namsinh, _maNN, _noilamviec, _diachi, _huy, _maMay, _nguoiSD);
        }
        public override void DeleteNhanVien_QuanHeGiaDinh(String _maMay, String _nguoiSD, Int32 _sTT, String _maNV)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spNHANVIEN_QuanHeGiaDinh_DELETED", _maMay, _nguoiSD, _sTT, _maNV);
        }
        #endregion

        #region Nhan vien QT Boi duong
        public override String InsertNhanVien_QTBoiDuong(String _maNV, SmartDate _tungay, SmartDate _denngay, String _noidung, String _noiboiduong, String _hinhthuc, String _chungchi, String _maMay, String _nguoiSD)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spNHANVIEN_QTBoiDuong_Create", _maNV, _tungay.DBValue, _denngay.DBValue, _noidung, _noiboiduong, _hinhthuc, _chungchi, _maMay, _nguoiSD));
        }
        public override void UpdateNhanVien_QTBoiDuong(String _maNV, Int32 _sTT, SmartDate _tungay, SmartDate _denngay, String _noiDung, String _noiBoiDuong, String _hinhThuc, String _chungChi, String _maMay, Boolean _huy, String _nguoiSD)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spNHANVIEN_QTBoiDuong_Update", _maNV, _sTT, _tungay.DBValue, _denngay.DBValue, _noiDung, _noiBoiDuong, _hinhThuc, _chungChi, _maMay, _huy, _nguoiSD);
        }
        public override void DeleteNhanVien_QTBoiDuong(String _maMay, String _nguoiSD, String _maNV, Int32 _sTT)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spNHANVIEN_QTBoiDuong_DELETED", _maMay, _nguoiSD, _maNV, _sTT);
        }
        #endregion

        #region Nhan vien khen thuong

        public override String InsertNhanVien_KhenThuong(String _maNV, SmartDate _ngayKT, String _maCapKTKL, String _maHTKhen, String _noiDungKT, String _maMay, String _nguoiSD)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spNHANVIEN_KhenThuong_Create", _maNV, _ngayKT.DBValue, _maCapKTKL, _maHTKhen, _noiDungKT, _maMay, _nguoiSD));
        }
        public override void UpdateNhanVien_KhenThuong(String _maNV, Int32 _sTT, SmartDate _ngayKT, String _maCapKTKL, String _maHTKhen, String _noiDungKT, String _maMay, Boolean _huy, String _nguoiSD)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spNHANVIEN_KhenThuong_Update", _maNV, _sTT, _ngayKT.DBValue, _maCapKTKL, _maHTKhen, _noiDungKT, _maMay, _huy, _nguoiSD);
        }
        public override void DeleteNhanVien_KhenThuong(String _maMay, String _nguoiSD, String _maNV, Int32 _sTT)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spNHANVIEN_KhenThuong_DELETED", _maMay, _nguoiSD, _maNV, _sTT);
        }
        #endregion

        #region Nhan vien ky luat

        public override String InsertNhanVien_KyLuat(String _maNV, SmartDate _ngayKL, String _maCapKTKL, String _maHTKyLuat, String _noiDungKL, String _maMay, String _nguoiSD)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spNHANVIEN_KyLuat_Create", _maNV, _ngayKL.DBValue, _maCapKTKL, _maHTKyLuat, _noiDungKL, _maMay, _nguoiSD));
        }
        public override void UpdateNhanVien_KyLuat(String _maNV, Int32 _sTT, SmartDate _ngayKL, String _maCapKTKL, String _maHTKyLuat, String _noiDungKL, String _maMay, Boolean _huy, String _nguoiSD)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spNHANVIEN_KyLuat_Update", _maNV, _sTT, _ngayKL.DBValue, _maCapKTKL, _maHTKyLuat, _noiDungKL, _maMay, _huy, _nguoiSD);
        }
        public override void DeleteNhanVien_KyLuat(String _maMay, String _nguoiSD, String _maNV, Int32 _sTT)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spNHANVIEN_KyLuat_DELETED", _maMay, _nguoiSD, _maNV, _sTT);
        }
        #endregion

        #region Nhan vien trinh do ngoai ngu

        public override String InsertNhanVien_TDNgoaiNgu(String _maNV, String _maNgoaiNgu, String _maTDNgoaiNgu, String _maMay, String _nguoiSD)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spNhanVien_TDNgoaiNgu_Create", _maNV, _maNgoaiNgu, _maTDNgoaiNgu, _maMay, _nguoiSD));
        }
        public override void UpdateNhanVien_TDNgoaiNgu(Int32 _sTT, String _maNV, String _maNgoaiNgu, String _maTDNgoaiNgu, Boolean _huy, String _maMay, String _nguoiSD)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spNHANVIEN_TDNgoaiNgu_Update", _sTT, _maNV, _maNgoaiNgu, _maTDNgoaiNgu, _huy, _maMay, _nguoiSD);
        }
        public override void DeleteNhanVien_TDNgoaiNgu(String _maMay, String _nguoiSD, Int32 _sTT, String _maNV)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spNHANVIEN_TDNgoaiNgu_DELETED", _maMay, _nguoiSD, _sTT, _maNV);
        }
        #endregion

        #region Nhan vien QT MG thue thu nhap
        public override String InsertNhanVien_QTMGThueThuNhap(String _maNV, SmartDate _tungay, SmartDate _denngay, String _maMG, Decimal _mucLuong, String _namSinh, String _maMay, String _nguoiSD)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spNhanVien_QTMGThueThuNhap_Create", _maNV, _tungay.DBValue, _denngay.DBValue, _maMG, _mucLuong, _namSinh, _maMay, _nguoiSD));
        }
        public override void UpdateNhanVien_QTMGThueThuNhap(String _maNV, Int32 _sTT, SmartDate _tungay, SmartDate _denngay, String _maMG, Decimal _mucLuong, String _namSinh, Boolean _huy, String _maMay, String _nguoiSD)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spNHANVIEN_QTMGThueThuNhap_Update", _maNV, _sTT, _tungay.DBValue, _denngay.DBValue, _maMG, _mucLuong, _namSinh, _huy, _maMay, _nguoiSD);
        }
        public override void DeleteNhanVien_QTMGThueThuNhap(String _maMay, String _nguoiSD, String _maNV, Int32 _sTT)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spNHANVIEN_QTMGThueThuNhap_DELETED", _maMay, _nguoiSD, _maNV, _sTT);
        }
        #endregion


        #region Cham cong


        public override Int32 InsertChamCong(SmartDate _thang, String _maNV, String _makhoa, Decimal _hanhChinh, Decimal _phep, Decimal _om, Decimal _ngoaiGio, Decimal _ngoaiGio7, Decimal _ngoaiGioLe, Decimal _congAnToi, Decimal _congAnTrua, String _maMay, String _nguoiLap, Decimal _lamDem, Decimal _TongCongHC, string _abc, Decimal _xquang, Decimal _ThaiSan, Decimal _NghiBu, Decimal _NghiKhongLuong, Decimal _NganHan, Decimal _DaiHan, Decimal _NuocNgoai, Decimal _HocBongNuocNgoai, Decimal _CongThuc)
        {
            return System.Convert.ToInt32(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spCHAMCONG_CREATE", _thang.DBValue, _maNV, _makhoa, _hanhChinh, _phep, _om, _ngoaiGio, _ngoaiGio7, _ngoaiGioLe, _congAnToi, _congAnTrua, _maMay, _nguoiLap, _lamDem, _TongCongHC, _abc, _xquang, _ThaiSan, _NghiBu, _NghiKhongLuong, _NganHan, _DaiHan, _NuocNgoai, _HocBongNuocNgoai, _CongThuc));
        }
        public override void UpdateChamCong(Int32 _sTT, SmartDate _thang, String _maNV, String _makhoa, Decimal _hanhChinh, Decimal _phep, Decimal _om, Decimal _ngoaiGio, Decimal _ngoaiGio7, Decimal _ngoaiGioLe, Decimal _congAnToi, Decimal _congAnTrua, String _maMay, String _nguoiSD, Boolean _huy, Decimal _lamDem, Decimal _TongCongHC, string _abc, Decimal _xquang, Decimal _ThaiSan, Decimal _NghiBu, Decimal _NghiKhongLuong, Decimal _NganHan, Decimal _DaiHan, Decimal _NuocNgoai, Decimal _HocBongNuocNgoai, Decimal _CongThuc)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spCHAMCONG_UPDATE", _sTT, _thang.DBValue, _maNV, _makhoa, _hanhChinh, _phep, _om, _ngoaiGio, _ngoaiGio7, _ngoaiGioLe, _congAnToi, _congAnTrua, _maMay, _nguoiSD, _huy, _lamDem, _TongCongHC, _abc, _xquang, _ThaiSan, _NghiBu, _NghiKhongLuong, _NganHan, _DaiHan, _NuocNgoai, _HocBongNuocNgoai, _CongThuc);
        }
        public override void DeleteChamCong(String _maMay, String _nguoiSD, string manv, Int32 _sTT, SmartDate _thang)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spCHAMCONG_Deleted", _maMay, _nguoiSD, manv, _sTT, _thang);
        }
        #endregion

        #region Hop dong
        public override String InsertHopDong(String _soHD, String _maNV, String _maKhoa, SmartDate _ngayKy, String _nguoiKy, String _loaiHD, SmartDate _tuNgay, SmartDate _denNgay, String _diaDiem, String _maChucVu, String _tenCongViec, Decimal _mucLuong, SmartDate _thuViecTuNgay, SmartDate _thuViecDenNgay, String _maCheDoLV, String _maThoiGianLV, String _dungCu, String _soNgayNghi, String _phucLoi, String _ghiChu, String _maMay, String _nguoiSD)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spHopDong_CREATE", _soHD, _maNV, _maKhoa, _ngayKy.DBValue, _nguoiKy, _loaiHD, _tuNgay.DBValue, _denNgay.DBValue, _diaDiem, _maChucVu, _tenCongViec, _mucLuong, _thuViecTuNgay.DBValue, _thuViecDenNgay.DBValue, _maCheDoLV, _maThoiGianLV, _dungCu, _soNgayNghi, _phucLoi, _ghiChu, _maMay, _nguoiSD));
        }
        public override void UpdateHopDong(String _soHD, String _maNV, String _maKhoa, SmartDate _ngayKy, String _nguoiKy, String _loaiHD, SmartDate _tuNgay, SmartDate _denNgay, String _diaDiem, String _maChucVu, String _tenCongViec, Decimal _mucLuong, SmartDate _thuViecTuNgay, SmartDate _thuViecDenNgay, String _maCheDoLV, String _maThoiGianLV, String _dungCu, String _soNgayNghi, String _phucLoi, String _ghiChu, String _maMay, String _nguoiSD, Boolean _huy)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spHopDong_UPDATE", _soHD, _maNV, _maKhoa, _ngayKy.DBValue, _nguoiKy, _loaiHD, _tuNgay.DBValue, _denNgay.DBValue, _diaDiem, _maChucVu, _tenCongViec, _mucLuong, _thuViecTuNgay.DBValue, _thuViecDenNgay.DBValue, _maCheDoLV, _maThoiGianLV, _dungCu, _soNgayNghi, _phucLoi, _ghiChu, _maMay, _nguoiSD, _huy);
        }
        public override void DeleteHopDong(String _maMay, String _nguoiSD, String _soHD)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spHopDong_DELETED", _maMay, _nguoiSD, _soHD);
        }
        #endregion

        #region Luong
        public override Int32 InsertLuong(SmartDate _thang,
            String _maNV,
            String _makhoa,
            Decimal _heSoChucVu,
            Decimal _heSo,
            Decimal _heSoLamDem,
            Decimal _heSoNgoaiGio,
            Decimal _heSoNgoaiGio7,
            Decimal _heSoNgoaiGioLe,
            Decimal _donGiaAnTrua,
            Decimal _donGiaAnToi,
            Decimal _dienThoai,
            Decimal _congTac,
            Decimal _donGiaXQuang,
            Decimal _mucLuongCB,
            Decimal _aBC,
            Decimal _thueTNhap,
            String _maMGThueThuNhap,
            Decimal _heSoMGThueThuNhap,
            Decimal _mucTTThue,
            Decimal _luongKhac,
            Decimal _luongKyI,
            Decimal _luongKyII,
            Decimal _luongM2,
            Decimal _luongNghe,
            Decimal _tienlinhdotII,
            String _ghiChu,
            String _maMay,
            String _nguoiLap)
        {
            return System.Convert.ToInt32(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spLUONG_CREATE", _thang.DBValue, _maNV, _makhoa, _heSoChucVu, _heSo, _heSoLamDem, _heSoNgoaiGio, _heSoNgoaiGio7, _heSoNgoaiGioLe, _donGiaAnTrua, _donGiaAnToi, _dienThoai, _congTac, _donGiaXQuang, _mucLuongCB, _aBC, _thueTNhap, _maMGThueThuNhap, _heSoMGThueThuNhap, _mucTTThue, _luongKhac, _luongKyI, _luongKyII, _luongM2, _luongNghe, _tienlinhdotII, _ghiChu, _maMay, _nguoiLap));
        }
        public override void UpdateLuong(Int32 _sTT, SmartDate _thang, String _maNV, String _makhoa, Decimal _heSoChucVu, Decimal _heSo, Decimal _heSoLamDem, Decimal _heSoNgoaiGio, Decimal _heSoNgoaiGio7, Decimal _heSoNgoaiGioLe, Decimal _donGiaAnTrua, Decimal _donGiaAnToi, Decimal _dienThoai, Decimal _congTac, Decimal _donGiaXQuang, Decimal _mucLuongCB, Decimal _aBC, Decimal _thueTNhap, String _maMGThueThuNhap, Decimal _heSoMGThueThuNhap, Decimal _mucTTThue, Decimal _luongKhac, Decimal _luongKyI, Decimal _luongKyII, Decimal _luongM2, Decimal _luongNghe, Decimal _tienlinhdotII, String _ghiChu, String _maMay, String _nguoiSD, Boolean _huy)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spLUONG_UPDATE", _sTT, _thang.DBValue, _maNV, _makhoa, _heSoChucVu, _heSo, _heSoLamDem, _heSoNgoaiGio, _heSoNgoaiGio7, _heSoNgoaiGioLe, _donGiaAnTrua, _donGiaAnToi, _dienThoai, _congTac, _donGiaXQuang, _mucLuongCB, _aBC, _thueTNhap, _maMGThueThuNhap, _heSoMGThueThuNhap, _mucTTThue, _luongKhac, _luongKyI, _luongKyII, _luongM2, _luongNghe, _tienlinhdotII, _ghiChu, _maMay, _nguoiSD, _huy);
        }
        public override void DeleteLuong(String _maMay, String _nguoiSD, Int32 _sTT, SmartDate _thang)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spLUONG_DELETED", _maMay, _nguoiSD, _sTT, _thang);
        }
        #endregion

        #region Luong PT

        public override String InsertLuong_PT(SmartDate _thang, String _maNV, String _makhoa, Byte _vaiTro, Decimal _dBAC, Decimal _dBAP1, Decimal _dBAP2, Decimal _dBBC, Decimal _dBBP1, Decimal _dBBP2, Decimal _dBCC, Decimal _dBCP1, Decimal _dBCP2, Decimal _ic, Decimal _dB1P1, Decimal _kc, Decimal _kP1, Decimal _dONGIADBAC, Decimal _dONGIADBAP1, Decimal _dONGIADBAP2, Decimal _dONGIADBBC, Decimal _dONGIADBBP1, Decimal _dONGIADBBP2, Decimal _dONGIADBCC, Decimal _dONGIADBCP1, Decimal _dONGIADBCP2, Decimal _dONGIAIC, Decimal _dONGIADB1P1, Decimal _dONGIAKC, Decimal _dONGIAKP1, Decimal _tong, String _maMay, String _nguoiLap, Decimal DB1P2, Decimal Kp2, Decimal dongiaDB1P2, Decimal DongiaKp2, Decimal DongiaGMTE, Decimal KTE)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spLuong_PT_CREATE", _thang.DBValue, _maNV, _makhoa, _vaiTro, _dBAC, _dBAP1, _dBAP2, _dBBC, _dBBP1, _dBBP2, _dBCC, _dBCP1, _dBCP2, _ic, _dB1P1, _kc, _kP1, _dONGIADBAC, _dONGIADBAP1, _dONGIADBAP2, _dONGIADBBC, _dONGIADBBP1, _dONGIADBBP2, _dONGIADBCC, _dONGIADBCP1, _dONGIADBCP2, _dONGIAIC, _dONGIADB1P1, _dONGIAKC, _dONGIAKP1, _tong, _maMay, _nguoiLap, DB1P2, Kp2, dongiaDB1P2, DongiaKp2, DongiaGMTE, KTE));
        }
        public override void UpdateLuong_PT(Int32 _sTT, SmartDate _thang, String _maNV, String _makhoa, Byte _vaiTro, Decimal _dBAC, Decimal _dBAP1, Decimal _dBAP2, Decimal _dBBC, Decimal _dBBP1, Decimal _dBBP2, Decimal _dBCC, Decimal _dBCP1, Decimal _dBCP2, Decimal _ic, Decimal _dB1P1, Decimal _kc, Decimal _kP1, Decimal _dONGIADBAC, Decimal _dONGIADBAP1, Decimal _dONGIADBAP2, Decimal _dONGIADBBC, Decimal _dONGIADBBP1, Decimal _dONGIADBBP2, Decimal _dONGIADBCC, Decimal _dONGIADBCP1, Decimal _dONGIADBCP2, Decimal _dONGIAIC, Decimal _dONGIADB1P1, Decimal _dONGIAKC, Decimal _dONGIAKP1, Decimal _tong, String _maMay, String _nguoiSD, Boolean _huy, Decimal DB1P2, Decimal Kp2, Decimal dongiaDB1P2, Decimal DongiaKp2, Decimal DongiaGMTE, Decimal KTE)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spLuong_PT_UPDATE", _sTT, _thang.DBValue, _maNV, _makhoa, _vaiTro, _dBAC, _dBAP1, _dBAP2, _dBBC, _dBBP1, _dBBP2, _dBCC, _dBCP1, _dBCP2, _ic, _dB1P1, _kc, _kP1, _dONGIADBAC, _dONGIADBAP1, _dONGIADBAP2, _dONGIADBBC, _dONGIADBBP1, _dONGIADBBP2, _dONGIADBCC, _dONGIADBCP1, _dONGIADBCP2, _dONGIAIC, _dONGIADB1P1, _dONGIAKC, _dONGIAKP1, _tong, _maMay, _nguoiSD, _huy, DB1P2, Kp2, dongiaDB1P2, DongiaKp2, DongiaGMTE, KTE);
        }
        public override void DeleteLuong_PT(String _maMay, String _nguoiSD, Int32 _sTT, SmartDate _thang)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spLuong_PT_DELETED", _maMay, _nguoiSD, _sTT, _thang);
        }
        #endregion

        #region Luong T


        public override Int32 InsertLuong_T(Int32 _sTT, SmartDate _thang, String _maNV, String _makhoa, Decimal _tienLamDem, Decimal _hoiChan, Decimal _hoiChanNV, Decimal _donGiaHC, Decimal _donGiaHCNV, Decimal _heSoBDPT, Decimal _tongTienPT, Decimal _xQUANGDD, Decimal _tongTienDD, Decimal _heSoM2, Decimal _mucLuongM2, Decimal _ngoaiGio1, Decimal _ngoaiGio2, Decimal _ngoaiGio3, Decimal _ngoaiGio4, Decimal _heSoNgoaiGio, Decimal _aBC, Decimal _heSoTT, Decimal _tTDB, Decimal _tT1, Decimal _tT2, Decimal _tT3, String _maMay, String _nguoiLap)
        {
            return System.Convert.ToInt32(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spLuong_T_CREATE", _sTT, _thang.DBValue, _maNV, _makhoa, _tienLamDem, _hoiChan, _hoiChanNV, _donGiaHC, _donGiaHCNV, _heSoBDPT, _tongTienPT, _xQUANGDD, _tongTienDD, _heSoM2, _mucLuongM2, _ngoaiGio1, _ngoaiGio2, _ngoaiGio3, _ngoaiGio4, _heSoNgoaiGio, _aBC, _heSoTT, _tTDB, _tT1, _tT2, _tT3, _maMay, _nguoiLap));
        }
        public override void UpdateLuong_T(Int32 _sTT, SmartDate _thang, String _maNV, String _makhoa, Decimal _tienLamDem, Decimal _hoiChan, Decimal _hoiChanNV, Decimal _donGiaHC, Decimal _donGiaHCNV, Decimal _heSoBDPT, Decimal _tongTienPT, Decimal _xQUANGDD, Decimal _tongTienDD, Decimal _heSoM2, Decimal _mucLuongM2, Decimal _ngoaiGio1, Decimal _ngoaiGio2, Decimal _ngoaiGio3, Decimal _ngoaiGio4, Decimal _heSoNgoaiGio, Decimal _aBC, Decimal _heSoTT, Decimal _tTDB, Decimal _tT1, Decimal _tT2, Decimal _tT3, String _maMay, String _nguoiSD, Boolean _huy)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spLuong_T_UPDATE", _sTT, _thang.DBValue, _maNV, _makhoa, _tienLamDem, _hoiChan, _hoiChanNV, _donGiaHC, _donGiaHCNV, _heSoBDPT, _tongTienPT, _xQUANGDD, _tongTienDD, _heSoM2, _mucLuongM2, _ngoaiGio1, _ngoaiGio2, _ngoaiGio3, _ngoaiGio4, _heSoNgoaiGio, _aBC, _heSoTT, _tTDB, _tT1, _tT2, _tT3, _maMay, _nguoiSD, _huy);
        }
        public override void DeleteLuong_T(String _maMay, String _nguoiSD, Int32 _sTT, SmartDate _thang)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spLuong_T_DELETED", _maMay, _nguoiSD, _sTT, _thang);
        }
        #endregion

        #region Luong M2

        public override Int32 InsertLuong_M2(SmartDate _thang, String _maNV, String _makhoa, Decimal _heSoChucVu, Decimal _heSoDieuDuong, Decimal _heSoCKCI, Decimal _heSoNT, Decimal _heSoHVK, Decimal _heSoDaiHoc, Decimal _heSoCaoDang, Decimal _heSoTrungCap, Decimal _heSoKhac, Decimal _heSoToTruong, SmartDate _namDiLam, Decimal _heSoThamNien, Decimal _tongSo, String _maMay, String _nguoiLap, Decimal _mucluongcb, Decimal _tong, Decimal _ngaycong)
        {
            return System.Convert.ToInt32(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spLuong_M2_CREATE", _thang.DBValue, _maNV, _makhoa, _heSoChucVu, _heSoDieuDuong, _heSoCKCI, _heSoNT, _heSoHVK, _heSoDaiHoc, _heSoCaoDang, _heSoTrungCap, _heSoKhac, _heSoToTruong, _namDiLam.DBValue, _heSoThamNien, _tongSo, _maMay, _nguoiLap, _mucluongcb, _tong, _ngaycong));
        }
        public override void UpdateLuong_M2(Int32 _sTT, SmartDate _thang, String _maNV, String _makhoa, Decimal _heSoChucVu, Decimal _heSoDieuDuong, Decimal _heSoCKCI, Decimal _heSoNT, Decimal _heSoHVK, Decimal _heSoDaiHoc, Decimal _heSoCaoDang, Decimal _heSoTrungCap, Decimal _heSoKhac, Decimal _heSoToTruong, SmartDate _namDiLam, Decimal _heSoThamNien, Decimal _tongSo, String _maMay, String _nguoiSD, Boolean _huy, Decimal _mucluongcb, Decimal _tong, Decimal _ngaycong)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spLuong_M2_UPDATE", _sTT, _thang.DBValue, _maNV, _makhoa, _heSoChucVu, _heSoDieuDuong, _heSoCKCI, _heSoNT, _heSoHVK, _heSoDaiHoc, _heSoCaoDang, _heSoTrungCap, _heSoKhac, _heSoToTruong, _namDiLam.DBValue, _heSoThamNien, _tongSo, _maMay, _nguoiSD, _huy, _mucluongcb, _tong, _ngaycong);
        }

        public override void DeleteLuong_M2(String _maMay, String _nguoiSD, Int32 _sTT, SmartDate _thang)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spLuong_M2_DELETED", _maMay, _nguoiSD, _sTT, _thang);
        }
        #endregion

        #region Luong Truc

        public override Int32 InsertLuong_Truc(SmartDate _thang,
            String _maNV,
            String _makhoa,
            Decimal _ngayThuongHSCC,
            Decimal _donGiaNTHSCC,
            Decimal _ngayNghiHSCC,
            Decimal _donGiaNNHSCC,
            Decimal _ngayLeHSCC,
            Decimal _donGiaNLHSCC,
            Decimal _qCCTNBHSCC,
            Decimal _donGiaQCCTNBHSCC,
            Decimal _cocIHSCC,
            Decimal _donGiaCocIHSCC,
            Decimal _cocIIHSCC,
            Decimal _donGiaCocIIHSCC,
            Decimal _dDHSCC,
            Decimal _donGiaDDHSCC,
            Decimal _nD1142002HSCC,
            Decimal _donGiaND1142002HSCC,
            Decimal _ngayThuongCM,
            Decimal _donGiaNTCM,
            Decimal _ngayNghiCM,
            Decimal _donGiaNNCM,
            Decimal _ngayLeCM,
            Decimal _donGiaNLCM,
            Decimal _qCCTNBCM,
            Decimal _donGiaQCCTNBCM,
            Decimal _cocICM,
            Decimal _donGiaCocICM,
            Decimal _cocIICM,
            Decimal _donGiaCocIICM,
            Decimal _dDCM,
            Decimal _donGiaDDCM,
            Decimal _ngayThuongLD,
            Decimal _donGiaNTLD,
            Decimal _ngayNghiLD,
            Decimal _donGiaNNLD,
            Decimal _ngayLeLD,
            Decimal _donGiaNLLD,
            String _maMay,
            String _nguoiLap,
            Decimal _tong)
        {
            return System.Convert.ToInt32(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spLuong_Truc_CREATE", _thang.DBValue,
                _maNV,
                _makhoa,
                _ngayThuongHSCC,
                _donGiaNTHSCC,
                _ngayNghiHSCC,
                _donGiaNNHSCC,
                _ngayLeHSCC,
                _donGiaNLHSCC,
                _qCCTNBHSCC,
                _donGiaQCCTNBHSCC,
                _cocIHSCC,
                _donGiaCocIHSCC,
                _cocIIHSCC,
                _donGiaCocIIHSCC,
                _dDHSCC,
                _donGiaDDHSCC,
                _nD1142002HSCC,
                _donGiaND1142002HSCC,
                _ngayThuongCM,
                _donGiaNTCM,
                _ngayNghiCM,
                _donGiaNNCM,
                _ngayLeCM,
                _donGiaNLCM,
                _qCCTNBCM,
                _donGiaQCCTNBCM,
                 _cocICM,
                _donGiaCocICM,
                _cocIICM,
                _donGiaCocIICM,
                _dDCM,
                _donGiaDDCM,
                _ngayThuongLD,
                _donGiaNTLD,
                _ngayNghiLD,
                _donGiaNNLD,
                _ngayLeLD,
                _donGiaNLLD,
                _maMay,
                _nguoiLap,
                _tong));
        }
        public override void UpdateLuong_Truc(Int32 _sTT,
            SmartDate _thang,
            String _maNV,
            String _makhoa,
            Decimal _ngayThuongHSCC,
            Decimal _donGiaNTHSCC,
            Decimal _ngayNghiHSCC,
            Decimal _donGiaNNHSCC,
            Decimal _ngayLeHSCC,
            Decimal _donGiaNLHSCC,
            Decimal _qCCTNBHSCC,
            Decimal _donGiaQCCTNBHSCC,
            Decimal _cocIHSCC,
            Decimal _donGiaCocIHSCC,
            Decimal _cocIIHSCC,
            Decimal _donGiaCocIIHSCC,
            Decimal _dDHSCC,
            Decimal _donGiaDDHSCC,
            Decimal _nD1142002HSCC,
            Decimal _donGiaND1142002HSCC,
            Decimal _ngayThuongCM,
            Decimal _donGiaNTCM,
            Decimal _ngayNghiCM,
            Decimal _donGiaNNCM,
            Decimal _ngayLeCM,
            Decimal _donGiaNLCM,
            Decimal _qCCTNBCM,
            Decimal _donGiaQCCTNBCM,
            Decimal _cocICM,
            Decimal _donGiaCocICM,
            Decimal _cocIICM,
            Decimal _donGiaCocIICM,
            Decimal _dDCM,
            Decimal _donGiaDDCM,
            Decimal _ngayThuongLD,
            Decimal _donGiaNTLD,
            Decimal _ngayNghiLD,
            Decimal _donGiaNNLD,
            Decimal _ngayLeLD,
            Decimal _donGiaNLLD,
            String _maMay,
            String _nguoiSD,
            Boolean _huy,
            Decimal _tong)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spLuong_Truc_UPDATE", _sTT,
                     _thang.DBValue,
                     _maNV,
                     _makhoa,
                     _ngayThuongHSCC,
                     _donGiaNTHSCC,
                     _ngayNghiHSCC,
                     _donGiaNNHSCC,
                     _ngayLeHSCC,
                     _donGiaNLHSCC,
                     _qCCTNBHSCC,
                     _donGiaQCCTNBHSCC,
                     _cocIHSCC,
                     _donGiaCocIHSCC,
                     _cocIIHSCC,
                     _donGiaCocIIHSCC,
                     _dDHSCC,
                     _donGiaDDHSCC,
                     _nD1142002HSCC,
                     _donGiaND1142002HSCC,
                     _ngayThuongCM,
                     _donGiaNTCM,
                     _ngayNghiCM,
                     _donGiaNNCM,
                     _ngayLeCM,
                     _donGiaNLCM,
                     _qCCTNBCM,
                     _donGiaQCCTNBCM,
                     _cocICM,
                     _donGiaCocICM,
                     _cocIICM,
                     _donGiaCocIICM,
                     _dDCM,
                     _donGiaDDCM,
                     _ngayThuongLD,
                     _donGiaNTLD,
                     _ngayNghiLD,
                     _donGiaNNLD,
                     _ngayLeLD,
                     _donGiaNLLD,
                     _maMay,
                     _nguoiSD,
                     _huy,
                     _tong);
        }
        public override void DeleteLuong_Truc(String _maMay, String _nguoiSD, Int32 _sTT, SmartDate _thang)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spLuong_Truc_DELETED", _maMay, _nguoiSD, _sTT, _thang);
        }
        #endregion


        #region Luong TTTM
        public override String InsertLuong_TTTM(SmartDate _thang, String _maNV, String _makhoa, Byte _vaiTro, Decimal _dBAC, Decimal _dBAP1, Decimal _dBAP2, Decimal _dBBC, Decimal _dBBP1, Decimal _dBBP2, Decimal _dBCC, Decimal _dBCP1, Decimal _dBCP2, Decimal _ic, Decimal _dB1P1, Decimal _kc, Decimal _kP1, Decimal _dONGIADBAC, Decimal _dONGIADBAP1, Decimal _dONGIADBAP2, Decimal _dONGIADBBC, Decimal _dONGIADBBP1, Decimal _dONGIADBBP2, Decimal _dONGIADBCC, Decimal _dONGIADBCP1, Decimal _dONGIADBCP2, Decimal _dONGIAIC, Decimal _dONGIADB1P1, Decimal _dONGIAKC, Decimal _dONGIAKP1, Decimal _tong, String _maMay, String _nguoiLap, Decimal DB1P2, Decimal Kp2, Decimal dongiaDB1P2, Decimal DongiaKp2)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spLuong_TTTM_CREATE", _thang.DBValue, _maNV, _makhoa, _vaiTro, _dBAC, _dBAP1, _dBAP2, _dBBC, _dBBP1, _dBBP2, _dBCC, _dBCP1, _dBCP2, _ic, _dB1P1, _kc, _kP1, _dONGIADBAC, _dONGIADBAP1, _dONGIADBAP2, _dONGIADBBC, _dONGIADBBP1, _dONGIADBBP2, _dONGIADBCC, _dONGIADBCP1, _dONGIADBCP2, _dONGIAIC, _dONGIADB1P1, _dONGIAKC, _dONGIAKP1, _tong, _maMay, _nguoiLap, DB1P2, Kp2, dongiaDB1P2, DongiaKp2));
        }
        public override void UpdateLuong_TTTM(Int32 _sTT, SmartDate _thang, String _maNV, String _makhoa, Byte _vaiTro, Decimal _dBAC, Decimal _dBAP1, Decimal _dBAP2, Decimal _dBBC, Decimal _dBBP1, Decimal _dBBP2, Decimal _dBCC, Decimal _dBCP1, Decimal _dBCP2, Decimal _ic, Decimal _dB1P1, Decimal _kc, Decimal _kP1, Decimal _dONGIADBAC, Decimal _dONGIADBAP1, Decimal _dONGIADBAP2, Decimal _dONGIADBBC, Decimal _dONGIADBBP1, Decimal _dONGIADBBP2, Decimal _dONGIADBCC, Decimal _dONGIADBCP1, Decimal _dONGIADBCP2, Decimal _dONGIAIC, Decimal _dONGIADB1P1, Decimal _dONGIAKC, Decimal _dONGIAKP1, Decimal _tong, String _maMay, String _nguoiSD, Boolean _huy, Decimal DB1P2, Decimal Kp2, Decimal dongiaDB1P2, Decimal DongiaKp2)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spLuong_TTTM_UPDATE", _sTT, _thang.DBValue, _maNV, _makhoa, _vaiTro, _dBAC, _dBAP1, _dBAP2, _dBBC, _dBBP1, _dBBP2, _dBCC, _dBCP1, _dBCP2, _ic, _dB1P1, _kc, _kP1, _dONGIADBAC, _dONGIADBAP1, _dONGIADBAP2, _dONGIADBBC, _dONGIADBBP1, _dONGIADBBP2, _dONGIADBCC, _dONGIADBCP1, _dONGIADBCP2, _dONGIAIC, _dONGIADB1P1, _dONGIAKC, _dONGIAKP1, _tong, _maMay, _nguoiSD, _huy, DB1P2, Kp2, dongiaDB1P2, DongiaKp2);
        }
        public override void DeleteLuong_TTTM(String _maMay, String _nguoiSD, Int32 _sTT, SmartDate _thang)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spLuong_TTTM_DELETED", _maMay, _nguoiSD, _sTT, _thang);
        }
        #endregion

        #region Luong Ngoai Gio
        public override String InsertLuong_NgoaiGio(SmartDate _thang, String _maKhoa, SmartDate _ngay1, SmartDate _ngay2, SmartDate _ngay3, SmartDate _ngay4, SmartDate _ngay5, String _maPC1, String _maPC2, String _maPC3, String _maPC4, Decimal _heSo1, Decimal _heSo2, Decimal _heSo3, Decimal _heSo4, Decimal _tien1, Decimal _tien2, Decimal _tien3, Decimal _tien4, Decimal _tien5, Decimal _tong, String _ghiChu, String _maMay, String _nguoiLap)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spLUONG_NgoaiGio_CREATE", _thang.DBValue, _maKhoa, _ngay1.DBValue, _ngay2.DBValue, _ngay3.DBValue, _ngay4.DBValue, _ngay5.DBValue, _maPC1, _maPC2, _maPC3, _maPC4, _heSo1, _heSo2, _heSo3, _heSo4, _tien1, _tien2, _tien3, _tien4, _tien5, _tong, _ghiChu, _maMay, _nguoiLap));
        }
        public override void UpdateLuong_NgoaiGio(SmartDate _thang, String _maKhoa, SmartDate _ngay1, SmartDate _ngay2, SmartDate _ngay3, SmartDate _ngay4, SmartDate _ngay5, String _maPC1, String _maPC2, String _maPC3, String _maPC4, Decimal _heSo1, Decimal _heSo2, Decimal _heSo3, Decimal _heSo4, Decimal _tien1, Decimal _tien2, Decimal _tien3, Decimal _tien4, Decimal _tien5, Decimal _tong, String _ghiChu, String _maMay, String _nguoiSD, Boolean _huy)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spLUONG_NgoaiGio_UPDATE", _thang.DBValue, _maKhoa, _ngay1.DBValue, _ngay2.DBValue, _ngay3.DBValue, _ngay4.DBValue, _ngay5.DBValue, _maPC1, _maPC2, _maPC3, _maPC4, _heSo1, _heSo2, _heSo3, _heSo4, _tien1, _tien2, _tien3, _tien4, _tien5, _tong, _ghiChu, _maMay, _nguoiSD, _huy);
        }

        public override void DeleteLuong_NgoaiGio(String _maMay, String _nguoiSD, SmartDate _thang, String _maKhoa)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spLUONG_NgoaiGio_DELETED", _maMay, _nguoiSD, _thang, _maKhoa);
        }
        #endregion

        #region Luong ngoai gio nhan vien
        public override String InsertLuong_NgoaiGio_NV(SmartDate _thang, String _maNV, String _maKhoa, String _maPC, Decimal _tongTuan1, Decimal _tongTuan2, Decimal _tongTuan3, Decimal _tongTuan4, Decimal _tongTuan5, Decimal _tong, String _ghiChu, String _maMay, String _nguoiLap)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spLUONG_NgoaiGio_NV_CREATE", _thang.DBValue, _maNV, _maKhoa, _maPC, _tongTuan1, _tongTuan2, _tongTuan3, _tongTuan4, _tongTuan5, _tong, _ghiChu, _maMay, _nguoiLap));
        }
        public override void UpdateLuong_NgoaiGio_NV(Int32 _sTT, SmartDate _thang, String _maNV, String _maKhoa, String _maPC, Decimal _tongTuan1, Decimal _tongTuan2, Decimal _tongTuan3, Decimal _tongTuan4, Decimal _tongTuan5, Decimal _tong, String _ghiChu, String _maMay, String _nguoiSD, Boolean _huy)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spLUONG_NgoaiGio_NV_UPDATE", _sTT, _thang.DBValue, _maNV, _maKhoa, _maPC, _tongTuan1, _tongTuan2, _tongTuan3, _tongTuan4, _tongTuan5, _tong, _ghiChu, _maMay, _nguoiSD, _huy);
        }
        public override void DeleteLuong_NgoaiGio_NV(String _maMay, String _nguoiSD, Int32 _sTT, SmartDate _thang)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spLUONG_NgoaiGio_NV_DELETED", _maMay, _nguoiSD, _sTT, _thang);
        }
        #endregion

        #region Luong M1

        public override Int32 InsertLuong_M1(SmartDate _thang, String _maNV, String _makhoa, Decimal _heSoChucVu, Decimal _heSo, Decimal _bHXH, Decimal _bHYT, Decimal _congDoan, Decimal _mucLuongCB, Decimal _tong, String _ghiChu, String _maMay, String _nguoiLap)
        {
            return System.Convert.ToInt32(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spLuong_M1_CREATE", _thang.DBValue, _maNV, _makhoa, _heSoChucVu, _heSo, _bHXH, _bHYT, _congDoan, _mucLuongCB, _tong, _ghiChu, _maMay, _nguoiLap));
        }
        public override void UpdateLuong_M1(Int32 _sTT, SmartDate _thang, String _maNV, String _makhoa, Decimal _heSoChucVu, Decimal _heSo, Decimal _bHXH, Decimal _bHYT, Decimal _congDoan, Decimal _mucLuongCB, Decimal _tong, String _ghiChu, String _maMay, String _nguoiSD, Boolean _huy)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spLuong_M1_UPDATE", _sTT, _thang.DBValue, _maNV, _makhoa, _heSoChucVu, _heSo, _bHXH, _bHYT, _congDoan, _mucLuongCB, _tong, _ghiChu, _maMay, _nguoiSD, _huy);
        }

        public override void DeleteLuong_M1(String _maMay, String _nguoiSD, Int32 _sTT, SmartDate _thang)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spLuong_M1_DELETED", _maMay, _nguoiSD, _sTT, _thang);
        }
        #endregion

        #region Luong Doc Hai
        public override Int32 InsertLuong_DocHai(SmartDate _thang, String _maNV, String _makhoa, String _maPCDocHai, Decimal _heSoDocHai, Decimal _ngayCong, String _maPCHienVat, Decimal _donGiaHienVat, String _maPCTrachNhiem, Decimal _heSoTrachNhiem, Decimal _mucLuongCB, Decimal _mucLuongDocHai, Decimal _tong, String _ghiChu, String _maMay, String _nguoiLap, Decimal _ngayCongDocHai)
        {
            return System.Convert.ToInt32(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spLuong_DocHai_CREATE", _thang.DBValue, _maNV, _makhoa, _maPCDocHai, _heSoDocHai, _ngayCong, _maPCHienVat, _donGiaHienVat, _maPCTrachNhiem, _heSoTrachNhiem, _mucLuongCB, _mucLuongDocHai, _tong, _ghiChu, _maMay, _nguoiLap, _ngayCongDocHai));
        }
        public override void UpdateLuong_DocHai(Int32 _sTT, SmartDate _thang, String _maNV, String _makhoa, String _maPCDocHai, Decimal _heSoDocHai, Decimal _ngayCong, String _maPCHienVat, Decimal _donGiaHienVat, String _maPCTrachNhiem, Decimal _heSoTrachNhiem, Decimal _mucLuongCB, Decimal _mucLuongDocHai, Decimal _tong, String _ghiChu, String _maMay, String _nguoiSD, Boolean _huy, Decimal _ngayCongDocHai)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spLuong_DocHai_UPDATE", _sTT, _thang.DBValue, _maNV, _makhoa, _maPCDocHai, _heSoDocHai, _ngayCong, _maPCHienVat, _donGiaHienVat, _maPCTrachNhiem, _heSoTrachNhiem, _mucLuongCB, _mucLuongDocHai, _tong, _ghiChu, _maMay, _nguoiSD, _huy, _ngayCongDocHai);
        }

        public override void DeleteLuong_DocHai(String _maMay, String _nguoiSD, Int32 _sTT, SmartDate _thang)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spLuong_DocHai_DELETED", _maMay, _nguoiSD, _sTT, _thang);
        }
        #endregion

        #region Luong Nghe

        public override Int32 InsertLuong_Nghe(SmartDate _thang, String _maNV, String _makhoa, Decimal _heSoNghe2, String _maPCNghe1, String _maPCNghe2, Decimal _heSoNghe1, Decimal _ngayNghe1, Decimal _ngayNghe2, Decimal _heSo, Decimal _heSoChucVu, Decimal _heSoVK, Decimal _mucLuongCB, Decimal _tong, String _ghiChu, String _maMay, String _nguoiLap)
        {
            return System.Convert.ToInt32(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spLUONG_Nghe_CREATE", _thang.DBValue, _maNV, _makhoa, _heSoNghe2, _maPCNghe1, _maPCNghe2, _heSoNghe1, _ngayNghe1, _ngayNghe2, _heSo, _heSoChucVu, _heSoVK, _mucLuongCB, _tong, _ghiChu, _maMay, _nguoiLap));
        }
        public override void UpdateLuong_Nghe(Int32 _sTT, SmartDate _thang, String _maNV, String _makhoa, Decimal _heSoNghe2, String _maPCNghe1, String _maPCNghe2, Decimal _heSoNghe1, Decimal _ngayNghe1, Decimal _ngayNghe2, Decimal _heSo, Decimal _heSoChucVu, Decimal _heSoVK, Decimal _mucLuongCB, Decimal _tong, String _ghiChu, String _maMay, String _nguoiSD, Boolean _huy)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spLUONG_Nghe_UPDATE", _sTT, _thang.DBValue, _maNV, _makhoa, _heSoNghe2, _maPCNghe1, _maPCNghe2, _heSoNghe1, _ngayNghe1, _ngayNghe2, _heSo, _heSoChucVu, _heSoVK, _mucLuongCB, _tong, _ghiChu, _maMay, _nguoiSD, _huy);
        }

        public override void DeleteLuong_Nghe(String _maMay, String _nguoiSD, Int32 _sTT, SmartDate _thang)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spLUONG_Nghe_DELETED", _maMay, _nguoiSD, _sTT, _thang);
        }
        #endregion
        #region Luong TT
        public override String InsertLuong_TT(SmartDate _thang, String _maKhoa, Decimal _db, Decimal _i, Decimal _ii, Decimal _iII, Decimal _dONGIADBBS, Decimal _dONGIADBDD, Decimal _dONGIAIBS, Decimal _dONGIAIDD, Decimal _dONGIAIIBS, Decimal _dONGIAIIDD, Decimal _dONGIAIIIBS, Decimal _dONGIAIIIDD, Decimal _tong, String _ghiChu, String _maMay, String _nguoiLap)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spLuong_TT_CREATE", _thang.DBValue, _maKhoa, _db, _i, _ii, _iII, _dONGIADBBS, _dONGIADBDD, _dONGIAIBS, _dONGIAIDD, _dONGIAIIBS, _dONGIAIIDD, _dONGIAIIIBS, _dONGIAIIIDD, _tong, _ghiChu, _maMay, _nguoiLap));
        }
        public override void UpdateLuong_TT(SmartDate _thang, String _maKhoa, Decimal _db, Decimal _i, Decimal _ii, Decimal _iII, Decimal _dONGIADBBS, Decimal _dONGIADBDD, Decimal _dONGIAIBS, Decimal _dONGIAIDD, Decimal _dONGIAIIBS, Decimal _dONGIAIIDD, Decimal _dONGIAIIIBS, Decimal _dONGIAIIIDD, Decimal _tong, String _ghiChu, String _maMay, String _nguoiSD, Boolean _huy)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spLuong_TT_UPDATE", _thang.DBValue, _maKhoa, _db, _i, _ii, _iII, _dONGIADBBS, _dONGIADBDD, _dONGIAIBS, _dONGIAIDD, _dONGIAIIBS, _dONGIAIIDD, _dONGIAIIIBS, _dONGIAIIIDD, _tong, _ghiChu, _maMay, _nguoiSD, _huy);
        }

        public override void DeleteLuong_TT(String _maMay, String _nguoiSD, string _makhoa, SmartDate _thang)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spLuong_TT_DELETED", _maMay, _nguoiSD, _makhoa, _thang);
        }
        #endregion

        #region Luong TT Nhan vien
        public override string InsertLuong_TT_NV(SmartDate _thang, String _maNV, String _maKhoa, Decimal _heSo, Decimal _tongDB, Decimal _tongI, Decimal _tongII, Decimal _tongIII, Decimal _tong, String _ghiChu, String _maMay, String _nguoiLap)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spLuong_TT_NV_CREATE", _thang.DBValue, _maNV, _maKhoa, _heSo, _tongDB, _tongI, _tongII, _tongIII, _tong, _ghiChu, _maMay, _nguoiLap));
        }
        public override void UpdateLuong_TT_NV(Int32 _sTT, SmartDate _thang, String _maNV, String _maKhoa, Decimal _heSo, Decimal _tongDB, Decimal _tongI, Decimal _tongII, Decimal _tongIII, Decimal _tong, String _ghiChu, String _maMay, String _nguoiSD, Boolean _huy)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spLuong_TT_NV_UPDATE", _sTT, _thang.DBValue, _maNV, _maKhoa, _heSo, _tongDB, _tongI, _tongII, _tongIII, _tong, _ghiChu, _maMay, _nguoiSD, _huy);
        }
        public override void DeleteLuong_TT_NV(String _maMay, String _nguoiSD, string _makhoa, SmartDate _thang)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spLuong_TT_NV_DELETED", _maMay, _nguoiSD, _makhoa, _thang);
        }
        #endregion

        #region Luong hoi chan
        public override Int32 InsertLuong_HoiChan(SmartDate _thang, String _maNV, String _makhoa, Byte _vaiTro, Decimal _NgoaiVien, Decimal _chuTri, Decimal _thuKy, Decimal _bacSy, Decimal _dd, Decimal _nVien, Decimal _dONGIANgoaiVien, Decimal _dONGIAChuTri, Decimal _dONGIAThuKy, Decimal _dONGIABacSy, Decimal _dONGIADD, Decimal _dONGIANVien, Decimal _tong, String _ghiChu, String _maMay, String _nguoiLap)
        {
            return System.Convert.ToInt32(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spLuong_HoiChan_CREATE", _thang.DBValue, _maNV, _makhoa, _vaiTro, _NgoaiVien, _chuTri, _thuKy, _bacSy, _dd, _nVien, _dONGIANgoaiVien, _dONGIAChuTri, _dONGIAThuKy, _dONGIABacSy, _dONGIADD, _dONGIANVien, _tong, _ghiChu, _maMay, _nguoiLap));
        }
        public override void UpdateLuong_HoiChan(Int32 _sTT, SmartDate _thang, String _maNV, String _makhoa, Byte _vaiTro, Decimal _NgoaiVien, Decimal _chuTri, Decimal _thuKy, Decimal _bacSy, Decimal _dd, Decimal _nVien, Decimal _dONGIANgoaiVien, Decimal _dONGIAChuTri, Decimal _dONGIAThuKy, Decimal _dONGIABacSy, Decimal _dONGIADD, Decimal _dONGIANVien, Decimal _tong, String _ghiChu, String _maMay, String _nguoiSD, Boolean _huy)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spLuong_HoiChan_UPDATE", _sTT, _thang.DBValue, _maNV, _makhoa, _vaiTro, _NgoaiVien, _chuTri, _thuKy, _bacSy, _dd, _nVien, _dONGIANgoaiVien, _dONGIAChuTri, _dONGIAThuKy, _dONGIABacSy, _dONGIADD, _dONGIANVien, _tong, _ghiChu, _maMay, _nguoiSD, _huy);
        }

        public override void DeleteLuong_HoiChan(String _maMay, String _nguoiSD, Int32 _sTT, SmartDate _thang)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spLuong_HoiChan_DELETED", _maMay, _nguoiSD, _sTT, _thang);
        }
        #endregion


        #region Luong boi duong phau thuat
        public override String InsertLuong_BoiDuongPT(SmartDate _thang, String _maKhoa, Decimal _heSo, Decimal _tong, String _ghiChu, String _maMay, String _nguoiLap)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spLuong_BoiDuongPT_CREATE", _thang.DBValue, _maKhoa, _heSo, _tong, _ghiChu, _maMay, _nguoiLap));
        }
        public override void UpdateLuong_BoiDuongPT(SmartDate _thang, String _maKhoa, Decimal _heSo, Decimal _tong, String _ghiChu, String _maMay, String _nguoiSD, Boolean _huy)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spLuong_BoiDuongPT_UPDATE", _thang.DBValue, _maKhoa, _heSo, _tong, _ghiChu, _maMay, _nguoiSD, _huy);
        }

        public override void DeleteLuong_BoiDuongPT(String _maMay, String _nguoiSD, SmartDate _thang, String _maKhoa)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spLUONG_BoiDuongPT_DELETED", _maMay, _nguoiSD, _thang, _maKhoa);
        }
        #endregion

        #region Luong boi duong phau thuat nhan vien
        public override String InsertLuong_BoiDuongPT_NV(SmartDate _thang, String _maNV, String _maKhoa, Decimal _heSo, Decimal _tong, String _ghiChu, String _maMay, String _nguoiLap)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spLuong_BoiDuongPT_NV_CREATE", _thang.DBValue, _maNV, _maKhoa, _heSo, _tong, _ghiChu, _maMay, _nguoiLap));
        }
        public override void UpdateLuong_BoiDuongPT_NV(Int32 _sTT, SmartDate _thang, String _maNV, String _maKhoa, Decimal _heSo, Decimal _tong, String _ghiChu, String _maMay, String _nguoiSD, Boolean _huy)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spLuong_BoiDuongPT_NV_UPDATE", _sTT, _thang.DBValue, _maNV, _maKhoa, _heSo, _tong, _ghiChu, _maMay, _nguoiSD, _huy);
        }
        public override void DeleteLuong_BoiDuongPT_NV(String _maMay, String _nguoiSD, Int32 _sTT, SmartDate _thang)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spLUONG_BoiDuongPT_NV_DELETED", _maMay, _nguoiSD, _sTT, _thang);
        }
        #endregion
        #region Luong xoa

        public override void DeleteLuong_Master(String _maMay, String _nguoiSD, String _LoaiLuong, string _Makhoa, DateTime _thang)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spLUONG_Master_DELETED", _maMay, _nguoiSD, _LoaiLuong, _Makhoa, _thang);
        }
        #endregion
        #endregion

        #region Thiet bi Y te

        #region Get List
        public override IDataReader GetTBPhieuNhap(String _maPN, bool qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spTBPHIEUNHAP_GET", _maPN, qadmin));
        }
        public override IDataReader GetAllTBPhieuNhap(Boolean _qadmin, String _maKho, String _mNCC, DateTime _tuNgay, DateTime _denNgay, String _dKien)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spTBPHIEUNHAP_GETALL", _qadmin, _maKho, _mNCC, _tuNgay, _denNgay, _dKien));
        }
        public override IDataReader GetTBPhieuNhap_C(String _maPN, String _maTBC, bool qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spTBPHIEUNHAP_C_GET", _maPN, _maTBC, qadmin));
        }
        public override IDataReader GetTBPhieuNhap_KP(String _maPN, String _maTBC, int STT)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spTBPHIEUNHAP_KP_GET", _maPN, _maTBC, STT));
        }
        public override IDataReader GetTBPhieuXuat(String maPX, bool qadmin, byte loai, bool daphat)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spTBPHIEUXUAT_GET", maPX, qadmin, loai, daphat));
        }
        public override IDataReader GetAllTBPhieuXuat(bool qadmin, String _maKho, byte _loai, Boolean _daphat, DateTime _tuNgay, DateTime _denNgay, String _dKien, Boolean _daduyet)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spTBPHIEUXUAT_GETALL", qadmin, _maKho, _loai, _daphat, _tuNgay, _denNgay, _dKien, _daduyet));
        }
        public override IDataReader GetTBPhieuXuat_C(String _maPX, Decimal _sTT)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spTBPHIEUXUAT_GET", _maPX, _sTT));
        }
        public override IDataReader GetTBKiemKe_Khoa(String _maKK, bool qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spTBKIEMKE_KHOA_GET", _maKK, qadmin));
        }
        public override IDataReader GetAllTBKiemKe_Khoa(String _maKhoa, DateTime _tuNgay, DateTime _denNgay, String _dKien, bool qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spTBKIEMKE_KHOA_GETALL", _maKhoa, _tuNgay, _denNgay, _dKien, qadmin));
        }
        public override IDataReader GetTBKiemKe_Khoa_C(String _mAKK, Decimal _sTT)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spTBKIEMKE_KHOA_C_GET", _mAKK, _sTT));
        }
        public override IDataReader GetTBKiemKe(String _maKK, bool qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spTBKIEMKE_GET", _maKK, qadmin));
        }
        public override IDataReader GetAllTBKiemKe(String _maKhoa, DateTime _tuNgay, DateTime _denNgay, String _dKien, bool qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spTBKIEMKE_GETALL", _maKhoa, _tuNgay, _denNgay, _dKien, qadmin));
        }
        public override IDataReader GetTBKiemKe_C(String _mAKK, Decimal _sTT)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spTBKIEMKE_C_GET", _mAKK, _sTT));
        }
        public override IDataReader GetTBXuatTra(String _maPXT, Boolean _qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spTBXuatTra_GET", _maPXT, _qadmin));
        }
        public override IDataReader GetAllTBXuatTra(Boolean _qadmin, String makho, String maNCC, DateTime tungay, DateTime denngay, String dieukienthem)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spTBXuatTra_GetAll", _qadmin, makho, maNCC, tungay, denngay, dieukienthem));
        }
        public override IDataReader GetTBXuatTra_C(String _maPXT, Decimal STT)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spTBXuatTra_C_GET", _maPXT, STT));
        }
        public override IDataReader GetTBNhapTra(Boolean _qadmin, String _mapnt, byte _loai, byte _daphat, String _dk)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spTBNhapTra_Get", _qadmin, _mapnt, _loai, _daphat, _dk));
        }
        public override IDataReader GetAllTBNhapTra(Boolean _qadmin, String _maKho, Byte _loaiPhieu, Byte _daphat, DateTime _tuNgay, DateTime _denNgay, String _dieuKienThem)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spTBNhapTra_GetAll", _qadmin, _maKho, _loaiPhieu, _daphat, _tuNgay, _denNgay, _dieuKienThem));
        }

		public override IDataReader GetTBVTKiemKe(String _maKK, bool qadmin)
		{
			return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spTBVTKiemKe_GET", _maKK, qadmin));
		}
		public override IDataReader GetAllTBVTKiemKe(String makho, DateTime tungay, DateTime denngay, String dieukienthem, bool qadmin)
		{
			return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spTBVTKiemKe_GETALL", makho, tungay, denngay, dieukienthem, qadmin));
		}
		public override IDataReader GetTBVTKiemKe_C(String _maKK, Decimal _sTT)
		{
			return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spTBVTKiemKe_C_GET", _maKK, _sTT));
		}
		public override IDataReader GetTBVTKiemKe_HD(String _mAKK, Decimal _sTT)
		{
			return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spTBVTKiemKe_HD_GET", _mAKK, _sTT));
		}

		public override IDataReader GetTBVTPhieuNhap_GetAll(Boolean _qadmin, String _maKho, String _mNCC, DateTime _tuNgay, DateTime _denNgay, String _dKien)
		{
			return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spTBVTPhieuNhap_GETALL", _qadmin, _maKho, _mNCC, _tuNgay, _denNgay, _dKien));
		}
		public override IDataReader GetAllTBVTPhieuNhap_Get(String _maTBVTPhieuNhap, Boolean _qadmin)
		{
			return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spTBVTPhieuNhap_GET", _maTBVTPhieuNhap, _qadmin));
		}
		//TBVTPhieuNhap chi tiet
		public override IDataReader GetTBVTPhieuNhap_C_GetAll(Boolean _qadmin, String _maVTPhieu)
		{
			return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spTBVTPhieuNhap_C_GETALL", _qadmin, _maVTPhieu));
		}
		public override IDataReader GetTBVTPhieuNhap_C_Get(String _maPN, decimal STT)
		{
			return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spTBVTPhieuNhap_C_GET", _maPN, STT));
		}
		

        #endregion

		public override DataSet crTBVTPhieuXuat_C_GetAll(Boolean _qadmin, String _maPX)
		{
			DataSet ds = new DataSet("crPhieuXuat_C_GetAll");
			string[] s = { "crPhieuXuat_C_GetAll" };
			SqlHelper.FillDataset(ConnectionString, DatabaseOwner + ObjectQualifier + "spTBVTPhieuXuat_C_GETALL", ds, s, _qadmin, _maPX);
			// // // //// ds.WriteXmlSchema("crPhieuXuat_C_GetAll.xsd");
			// System.Data.SqlClient.SqlCommand cmd = SqlHelper.CreateCommand(SQLConnectionBD, DatabaseOwner + ObjectQualifier + "spTBVTPhieuXuat_C_GETALL");

			// cmd.CommandTimeout = 18000;
			// cmd.CommandType = System.Data.CommandType.StoredProcedure;
			// cmd.Parameters.AddWithValue("QADMIN", _qadmin);
			// cmd.Parameters.AddWithValue("MAPX", _maPX);

			// System.Data.SqlClient.SqlDataAdapter sqlad = new System.Data.SqlClient.SqlDataAdapter(cmd);

			// sqlad.Fill(ds);
			// if (ds.Tables.Count > 0)
			//     ds.Tables[0].TableName = "crPhieuXuat_C_GetAll";
			//sqlad.Dispose(); cmd.Dispose(); sqlad = null;
			// cmd = null;
			//// if (SQLConnectionBD.State == System.Data.ConnectionState.Closed)
			//     //SQLConnectionBD.Close(); SQLConnectionBD.Dispose();
			// //if (_sqlConnection.State == System.Data.ConnectionState.Closed)
			// {
			//     //_sqlConnection.Close(); _sqlConnection.Dispose();
			//     //_sqlConnection = null;
			// }
			return ds;

		}


		#region get TBVTPhieuXuat
		public override IDataReader GetTBVTPhieuXuat(String _mapx, Boolean _qadmin, byte _loaiVTPhieu, Boolean _daphat)
		{
			return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spTBVTPhieuXuat_Get", _mapx, _qadmin, _loaiVTPhieu, _daphat));
		}
		public override IDataReader GetAllTBVTPhieuXuat(Boolean _qadmin, String _maKho, Byte _loaiVTPhieu, Boolean _daPhat, DateTime _tuNgay, DateTime _denNgay, String _dieuKienThem, Boolean _daduyet)
		{
			//return ((IDataReader)SqlHelper.ExecuteReader( ConnectionString, DatabaseOwner + ObjectQualifier + "spTBVTPhieuXuat_GetAll", _qadmin, _maKho, _loaiVTPhieu, _daPhat, _tuNgay, _denNgay, _dieuKienThem, _daduyet));
			System.Data.SqlClient.SqlCommand cmd = SqlHelper.CreateCommand(SQLConnectionBD, DatabaseOwner + ObjectQualifier + "spTBVTPhieuXuat_GetAll");

			cmd.CommandTimeout = 18000;
			cmd.CommandType = System.Data.CommandType.StoredProcedure;
			cmd.Parameters.AddWithValue("qadmin ", _qadmin);
			cmd.Parameters.AddWithValue("maKho ", _maKho);
			cmd.Parameters.AddWithValue("loai", _loaiVTPhieu);
			cmd.Parameters.AddWithValue("daPhat", _daPhat);
			cmd.Parameters.AddWithValue("TuNgay", _tuNgay);
			cmd.Parameters.AddWithValue("denNgay", _denNgay);
			cmd.Parameters.AddWithValue("DK", _dieuKienThem);
			cmd.Parameters.AddWithValue("daduyet", _daduyet);
			IDataReader dt;
			dt = (IDataReader)cmd.ExecuteReader(CommandBehavior.CloseConnection); ;
			cmd.Dispose();
			cmd = null;

			// if (SQLConnectionBD.State == System.Data.ConnectionState.Closed)
			//SQLConnectionBD.Close(); SQLConnectionBD.Dispose();
			//if (_sqlConnection.State == System.Data.ConnectionState.Closed)
			{
				//_sqlConnection.Close(); _sqlConnection.Dispose();
				//_sqlConnection = null;
			}
			return dt;
		}
		public override IDataReader GetTBVTPhieuXuat_C(String _mapx, Byte _orderNumber)
		{
			return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spTBVTPhieuXuat_Get", _mapx, _orderNumber));
		}
		#endregion

		#region TBVTPhieuXuat
		public override String InsertTBVTPhieuXuat(String _noiXuat, SmartDate _ngayXuat, SmartDate _ngayXuatTT, String _noiNhap, Byte _loaiVTPhieu, String _soCT, String _nvXuat, String _nvNhan, String _ghiChu, Boolean _huy, String _nguoiLap, Boolean _khoaYC, string _maMay, Boolean _daPhat, Boolean _daDuyet, String _doiTuong)
		{
			return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spTBVTPhieuXuat_CREATE", _noiXuat, _ngayXuat.DBValue, _ngayXuatTT.DBValue, _noiNhap, _loaiVTPhieu, _soCT, _nvXuat, _nvNhan, _ghiChu, _huy, _nguoiLap, _khoaYC, _maMay, _daPhat, _daDuyet, _doiTuong));
		}
		public override void UpdateTBVTPhieuXuat(String _maPX, String _noiXuat, SmartDate _ngayXuat, SmartDate _ngayXuatTT, String _noiNhap, Byte _loaiVTPhieu, String _soCT, String _nvXuat, String _nvNhan, String _ghiChu, Boolean _huy, string _maMay, String _nguoiSD, Boolean _daPhat, Boolean _daDuyet, String _doiTuong)
		{
			SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spTBVTPhieuXuat_UPDATE", _maPX, _noiXuat, _ngayXuat.DBValue, _ngayXuatTT.DBValue, _noiNhap, _loaiVTPhieu, _soCT, _nvXuat, _nvNhan, _ghiChu, _huy, _maMay, _nguoiSD, _daPhat, _daDuyet, _doiTuong);
		}
		public override void DeleteTBVTPhieuXuat(String _maPX, string _maMay, String _nguoiSD)
		{
			SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spTBVTPhieuXuat_DELETED", _maPX, _maMay, _nguoiSD);
		}
		public override String InsertTBVTPhieuXuat(String _noiXuat, SmartDate _ngayXuat, SmartDate _ngayXuatTT, String _noiNhap, Byte _loaiVTPhieu, String _soCT, String _nvXuat, String _nvNhan, String _ghiChu, Boolean _huy, String _nguoiLap, Boolean _khoaYC, string _maMay, Boolean _daPhat, Boolean _daDuyet, String _doiTuong, Boolean _KHONGSUA)
		{
			return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spTBVTPhieuXuat_CREATE", _noiXuat, _ngayXuat.DBValue, _ngayXuatTT.DBValue, _noiNhap, _loaiVTPhieu, _soCT, _nvXuat, _nvNhan, _ghiChu, _huy, _nguoiLap, _khoaYC, _maMay, _daPhat, _daDuyet, _doiTuong, _KHONGSUA));
		}

		public override String InsertTBVTPhieuXuat_C(String _maPX, Boolean IsNgoaiKho, String _maThuoc, Decimal _soLuong, SmartDate _hanSD, String _soLo, Decimal _donGia, Decimal _soLuongYC, Decimal _giaBan, String _ghiChu, String _nguoiSD, string _maMay)
		{
			System.Data.SqlClient.SqlDataReader dr;
			dr = SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spTBVTPhieuXuat_C_CREATE", _maPX, IsNgoaiKho, _maThuoc, _soLuong, _hanSD.DBValue, _soLo, _donGia, _soLuongYC, _giaBan, _ghiChu, _nguoiSD, _maMay);
			dr.Close();
			dr = null;
			return "";
		}
		public override void UpdateTBVTPhieuXuat_C(String _maPX, Decimal _sTT, String _maThuoc, Decimal _soLuong, SmartDate _hanSD, String _soLo, Decimal _donGia, Decimal _soLuongYC, Decimal _giaBan, Boolean _huy, String _ghiChu, String _nguoiSD, string _maMay)
		{
			SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spTBVTPhieuXuat_C_UPDATE", _maPX, _sTT, _maThuoc, _soLuong, _hanSD.DBValue, _soLo, _donGia, _soLuongYC, _giaBan, _huy, _ghiChu, _nguoiSD, _maMay);
		}
		public override void DeleteTBVTPhieuXuat_C(String _maPX, Decimal _sTT, String _nguoiSD, string _maMay)
		{
			SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spTBVTPhieuXuat_C_DELETED", _maPX, _sTT, _nguoiSD, _maMay);
		}

		#endregion


        #region Find List


        #endregion

        #region Thiet bi Phieu nhap
        public override String InsertTBPhieuNhap(String _maNCC, String _soHD, String _soCT, String _soHDon, String _makho, Boolean _thanhtoan, SmartDate _ngayTToan, SmartDate _ngayNhapTT, String _nVNhap, Decimal _vAT, Decimal _tong, String _ghichu, String _nguoiLap, String _nguoigiao, String _maMay, String _maHinhThuc, String _maNguon, SmartDate _ngayHDon, SmartDate _ngayPnhap)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spTBPHIEUNHAP_CREATE", _maNCC, _soHD, _soCT, _soHDon, _makho, _thanhtoan, _ngayTToan.DBValue, _ngayNhapTT.DBValue, _nVNhap, _vAT, _tong, _ghichu, _nguoiLap, _nguoigiao, _maMay, _maHinhThuc, _maNguon, _ngayHDon.DBValue, _ngayPnhap.DBValue));
        }
        public override void UpdateTBPhieuNhap(String _maPN, String _maNCC, String _soHD, String _soCT, String _soHDon, String _makho, Boolean _thanhtoan, SmartDate _ngayTToan, SmartDate _ngayNhapTT, String _nVNhap, Decimal _vAT, Decimal _tong, String _ghichu, Boolean _huy, String _nguoiSD, String _nguoigiao, String _maMay, String _maHinhThuc, String _maNguon, SmartDate _ngayHDon, SmartDate _ngayPnhap)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spTBPHIEUNHAP_UPDATE", _maPN, _maNCC, _soHD, _soCT, _soHDon, _makho, _thanhtoan, _ngayTToan.DBValue, _ngayNhapTT.DBValue, _nVNhap, _vAT, _tong, _ghichu, _huy, _nguoiSD, _nguoigiao, _maMay, _maHinhThuc, _maNguon, _ngayHDon.DBValue, _ngayPnhap.DBValue);
        }
        public override void DeleteTBPhieuNhap(String _maMay, String _nguoiSD, String _maPN)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spTBPHIEUNHAP_DELETED", _maMay, _nguoiSD, _maPN);
        }
        #endregion

        #region Thiet bi Phieu nhap Chi tiet
        public override String InsertTBPhieuNhap_C(String _maPN, String _maTB, Boolean _tBKem, Decimal _vat, Decimal _chatLuong, Decimal _soluong, String _serialNo, String _model, Decimal _donGia, Decimal _nguyenTe, Decimal _tyGia, String _ghichu, String _nguoiSD, String _maMay, String _maTrangThai, int _SuDungDN, SmartDate _NamSX, string _MaNSX, String _TenQG, int KhauHao)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spTBPHIEUNHAP_C_CREATE", _maPN, _maTB, _tBKem, _vat, _chatLuong, _soluong, _serialNo, _model, _donGia, _nguyenTe, _tyGia, _ghichu, _nguoiSD, _maMay, _maTrangThai, _SuDungDN, _NamSX.DBValue, _MaNSX, _TenQG, KhauHao));
        }
        public override void UpdateTBPhieuNhap_C(String _maPN, String _maTBC, String _maTB, Boolean _tBKem, Decimal _vat, Decimal _chatLuong, Decimal _soluong, String _serialNo, String _model, Decimal _donGia, Decimal _nguyenTe, Decimal _tyGia, Boolean _huy, String _ghichu, String _nguoiSD, String _maMay, String _maTrangThai, int _SuDungDN, SmartDate _NamSX, string _MaNSX, String _TenQG, int KhauHao)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spTBPHIEUNHAP_C_UPDATE", _maPN, _maTBC, _maTB, _tBKem, _vat, _chatLuong, _soluong, _serialNo, _model, _donGia, _nguyenTe, _tyGia, _huy, _ghichu, _nguoiSD, _maMay, _maTrangThai, _SuDungDN, _NamSX.DBValue, _MaNSX, _TenQG, KhauHao);
        }
        public override void DeleteTBPhieuNhap_C(String _maMay, String _nguoiSD, String _maPN, String _maTBC)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spTBPHIEUNHAP_C_DELETED", _maMay, _nguoiSD, _maPN, _maTBC);
        }


        #endregion

        #region Thiet bi Phieu nhap Chi tiet

        public override int InsertTBPhieuNhap_KP(String _maPN, String _maTBC, String _maTB, String _maNguon, Decimal _soTien, String _ghichu, String _nguoiSD, String _maMay)
        {
            return System.Convert.ToInt32(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spTBPHIEUNHAP_KP_CREATE", _maPN, _maTBC, _maTB, _maNguon, _soTien, _ghichu, _nguoiSD, _maMay));
        }
        public override void UpdateTBPhieuNhap_KP(String _maPN, String _maTBC, Int32 _sTT, String _maTB, String _maNguon, Decimal _soTien, Boolean _huy, String _ghichu, String _nguoiSD, String _maMay)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spTBPHIEUNHAP_KP_UPDATE", _maPN, _maTBC, _sTT, _maTB, _maNguon, _soTien, _huy, _ghichu, _nguoiSD, _maMay);
        }
        public override void DeleteTBPhieuNhap_KP(String _maMay, String _nguoiSD, String _maPN, String _maTBC, int STT)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spTBPHIEUNHAP_KP_DELETED", _maMay, _nguoiSD, _maPN, _maTBC, STT);
        }
        #endregion

        public override int InsertTBLinhkien_C(String _maTBC, String _MaLK, Decimal _sOLUONG, String _serialNo, String _model, int _sudungDN, String _ghichu)
        {
            return System.Convert.ToInt32(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spTBThietbi_linhkien_CREATE", _maTBC, _MaLK, _sOLUONG, _serialNo, _model, _sudungDN, _ghichu));
        }

        public override void UpdateTBLinhkien_C(Decimal _sTT, String _maTBC, String _malk, Decimal _sOLUONG, String _serialNo, String _model, int _sudungDN, String _ghichu, bool _Huy)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spTBThietbi_linhkien_UPDATE", _sTT, _maTBC, _malk, _sOLUONG, _serialNo, _model, _sudungDN, _ghichu, _Huy);
        }
        public override void DeleteTBLinhKien_C(String _maTBC, Decimal _sTT)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spTBThietbi_linhkien_DELETED", _maTBC, _sTT);
        }

        public override IDataReader GetTBLinhkien_C(String _maTBC, Decimal STT)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spTBLINHKIEN_GET", _maTBC, STT));
        }
        public override IDataReader GetTBLinhkien_CALL(String _maTBC)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spTBThietbi_Linhkien_GETALL", 0, _maTBC));
        }

        #region Thiet bi Phieu Xuat


        public override String InsertTBPhieuXuat(String _noixuat, SmartDate _ngayxuat, SmartDate _ngayxuatTT, String _noinhap, Byte _loaiphieu, String _soQD, String _nVXuat, String _nVNhan, String _ghichu, String _nguoiLap, String _maMay, Boolean _daDuyet, Boolean _daPhat, Boolean _noiBo)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spTBPHIEUXUAT_CREATE", _noixuat, _ngayxuat.DBValue, _ngayxuatTT.DBValue, _noinhap, _loaiphieu, _soQD, _nVXuat, _nVNhan, _ghichu, _nguoiLap, _maMay, _daDuyet, _daPhat, _noiBo));
        }
        public override void UpdateTBPhieuXuat(String _maPX, String _noixuat, SmartDate _ngayxuat, SmartDate _ngayxuatTT, String _noinhap, Byte _loaiphieu, String _soQD, String _nVXuat, String _nVNhan, String _ghichu, Boolean _huy, String _nguoiSD, String _maMay, Boolean _daDuyet, Boolean _daPhat, Boolean _noiBo)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spTBPHIEUXUAT_UPDATE", _maPX, _noixuat, _ngayxuat.DBValue, _ngayxuatTT.DBValue, _noinhap, _loaiphieu, _soQD, _nVXuat, _nVNhan, _ghichu, _huy, _nguoiSD, _maMay, _daDuyet, _daPhat, _noiBo);
        }
        public override void UpdateTBPhieuXuat1(String _maPX, String _NguoiNhap)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spTBPHIEUXUAT_UPDATETENNV", _maPX, _NguoiNhap);
        }
        public override void DeleteTBPhieuXuat(String _maMay, String _nguoiSD, String _maPX)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spTBPHIEUXUAT_DELETED", _maMay, _nguoiSD, _maPX);
        }



        #endregion

        #region Thiet bi Phieu Xuat Chi tiet


        public override String InsertTBPhieuXuat_C(String _maPX, String _maTBC, Decimal _soluong, Decimal _dongia, Decimal _sLyc, String _ghiChuX, String _ghiChuN, String _noiDung, String _nguoiSD, String _maMay, String _maTTN, String _maTTX, String _mapnt, String _serialNo, String _model)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spTBPHIEUXUAT_C_CREATE", _maPX, _maTBC, _soluong, _dongia, _sLyc, _ghiChuX, _ghiChuN, _noiDung, _nguoiSD, _maMay, _maTTN, _maTTX, _mapnt, _serialNo, _model));
        }
        public override void UpdateTBPhieuXuat_C(String _maPX, Decimal _sTT, String _maTBC, Decimal _soluong, Decimal _dongia, Decimal _sLyc, Boolean _huy, String _ghiChuX, String _ghiChuN, String _noiDung, String _nguoiSD, String _maMay, String _maTTN, String _maTTX, String _mapnt, String _serialNo, String _model)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spTBPHIEUXUAT_C_UPDATE", _maPX, _sTT, _maTBC, _soluong, _dongia, _sLyc, _huy, _ghiChuX, _ghiChuN, _noiDung, _nguoiSD, _maMay, _maTTN, _maTTX, _mapnt, _serialNo, _model);
        }
        public override void DeleteTBPhieuXuat_C(String _maMay, String _nguoiSD, String _maPX, Decimal _sTT)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spTBPHIEUXUAT_C_DELETED", _maMay, _nguoiSD, _maPX, _sTT);
        }

        #endregion

        #region Thiet bi Kiem ke khoa

        public override String InsertTBKiemKe_Khoa(SmartDate _ngayKK, String _makhoa, String _nguoiKK, String _nguoiLap, String _ghiChu, Boolean _xuly, String _maMay, string _nguoiSD)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spTBKIEMKE_KHOA_Create", _ngayKK.DBValue, _makhoa, _nguoiKK, _nguoiLap, _ghiChu, _xuly, _maMay, _nguoiSD));
        }
        public override void UpdateTBKiemKe_Khoa(String _maKK, SmartDate _ngayKK, String _makhoa, String _nguoiKK, String _ghiChu, Boolean _xuly, String _maMay, String _nguoiSD, Boolean _huy)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spTBKIEMKE_KHOA_UPDATE", _maKK, _ngayKK.DBValue, _makhoa, _nguoiKK, _ghiChu, _xuly, _maMay, _nguoiSD, _huy);
        }
        public override void DeleteTBKiemKe_Khoa(String _maMay, String _nguoiSD, String _maKK)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spTBKIEMKE_KHOA_DELETED", _maMay, _nguoiSD, _maKK);
        }

        #endregion

        #region Thiet bi Kiem ke khoa Chi tiet

        public override String InsertTBKiemKe_Khoa_C(String _mAKK, String _maTBC, Decimal _sOLUONG, Decimal _donGia, Decimal _sLSUACHUA, Decimal _sLBAODUONG, Decimal _sLXINTHANHLY, Decimal _sLSUACHUADC, Decimal _sLBAODUONGDC, Decimal _sLXINTHANHLYDC, Decimal _sLDC, String _ghichu, String _nguoiSD, String _maMay, int _sudungDN, String _SerialNo, String _Model, SmartDate _ngaybaoduong, SmartDate _nGAYBDSD, int _namSanxuat)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spTBKIEMKE_KHOA_C_CREATE", _mAKK, _maTBC, _sOLUONG, _donGia, _sLSUACHUA, _sLBAODUONG, _sLXINTHANHLY, _sLSUACHUADC, _sLBAODUONGDC, _sLXINTHANHLYDC, _sLDC, _ghichu, _nguoiSD, _maMay, _sudungDN, _SerialNo, _Model, _ngaybaoduong.DBValue, _nGAYBDSD.DBValue, (SmartDate.Parse("31/12/" + _namSanxuat.ToString())).DBValue));
        }
        public override void UpdateTBKiemKe_Khoa_C(String _mAKK, Decimal _sTT, String _maTBC, Decimal _sOLUONG, Decimal _donGia, Decimal _sLSUACHUA, Decimal _sLBAODUONG, Decimal _sLXINTHANHLY, Decimal _sLSUACHUADC, Decimal _sLBAODUONGDC, Decimal _sLXINTHANHLYDC, Decimal _sLDC, String _ghichu, Boolean _huy, String _nguoiSD, String _maMay, int _sudungDN, String _SerialNo, String _Model, SmartDate _ngaybaoduong, SmartDate _nGAYBDSD, int _namSanxuat)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spTBKIEMKE_KHOA_C_UPDATE", _mAKK, _sTT, _maTBC, _sOLUONG, _donGia, _sLSUACHUA, _sLBAODUONG, _sLXINTHANHLY, _sLSUACHUADC, _sLBAODUONGDC, _sLXINTHANHLYDC, _sLDC, _ghichu, _huy, _nguoiSD, _maMay, _sudungDN, _SerialNo, _Model, _ngaybaoduong.DBValue, _nGAYBDSD.DBValue, (SmartDate.Parse("31/12/" + _namSanxuat.ToString())).DBValue);
        }
        public override void DeleteTBKiemKe_Khoa_C(String _maMay, String _nguoiSD, String _mAKK, Decimal _sTT)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spTBKIEMKE_KHOA_C_DELETED", _maMay, _nguoiSD, _mAKK, _sTT);
        }
        #endregion

        #region Thiet bi Kiem ke

        public override String InsertTBKiemKe(SmartDate _ngayKK, String _makhoa, String _nguoiKK, String _nguoiLap, String _ghiChu, Boolean _xuly, String _maMay, string _nguoiSD)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spTBKIEMKE_Create", _ngayKK.DBValue, _makhoa, _nguoiKK, _nguoiLap, _ghiChu, _xuly, _maMay, _nguoiSD));
        }
        public override void UpdateTBKiemKe(String _maKK, SmartDate _ngayKK, String _makhoa, String _nguoiKK, String _ghiChu, Boolean _xuly, String _maMay, String _nguoiSD, Boolean _huy)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spTBKIEMKE_UPDATE", _maKK, _ngayKK.DBValue, _makhoa, _nguoiKK, _ghiChu, _xuly, _maMay, _nguoiSD, _huy);
        }
        public override void DeleteTBKiemKe(String _maMay, String _nguoiSD, String _maKK)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spTBKIEMKE_DELETED", _maMay, _nguoiSD, _maKK);
        }

		public override String InsertTBVTKiemKe(SmartDate _ngayKK, String _makho, String _nguoiKK, String _nguoiLap, String _ghiChu, Boolean _xuly, string _maMay)
		{
			return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spTBVTKiemKe_Create", _ngayKK.DBValue, _makho, _nguoiKK, _nguoiLap, _ghiChu, _xuly, _maMay));
		}
		public override void UpdateTBVTKiemKe(String _maKK, SmartDate _ngayKK, String _makho, String _nguoiKK, String _ghiChu, Boolean _xuly, string _maMay, String _nguoiSD, Boolean _huy)
		{
			SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spTBVTKiemKe_Update", _maKK, _ngayKK.DBValue, _makho, _nguoiKK, _ghiChu, _xuly, _maMay, _nguoiSD, _huy);
		}
		public override void DeleteTBVTKiemKe(String _maMay, String _nguoiSD, String _maKK)
		{
			SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spTBVTKiemKe_DELETED", _maMay, _nguoiSD, _maKK);
		}

		public override String InsertTBVTKiemKe_C(String _maKK, String _maThuoc, Decimal _soLuong, Decimal _dongia, Decimal _sLDC, String _ghiChu, Decimal _sLVTTon, String _nguoiSD, string _maMay)
		{
			System.Data.SqlClient.SqlDataReader dr;
			dr = SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spTBVTKiemKe_C_CREATE", _maKK, _maThuoc, _soLuong, _dongia, _sLDC, _ghiChu, _sLVTTon, _nguoiSD, _maMay);
			dr.Close();
			dr = null;
			return "";
		}
		public override void UpdateTBVTKiemKe_C(String _maKK, Decimal _sTT, String _maThuoc, Decimal _soLuong, Decimal _dongia, Decimal _sLDC, String _ghiChu, Decimal _sLVTTon, Boolean _huy, String _nguoiSD, string _maMay)
		{
			SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spTBVTKiemKe_C_UPDATE", _maKK, _sTT, _maThuoc, _soLuong, _dongia, _sLDC, _ghiChu, _sLVTTon, _huy, _nguoiSD, _maMay);
		}
		public override void DeleteTBVTKiemKe_C(String _maMay, String _nguoiSD, String _maKK, Decimal _sTT)
		{
			SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spTBVTKiemKe_C_DELETED", _maMay, _nguoiSD, _maKK, _sTT);
		}

		public override String InsertTBVTKiemKe_HD(String _mAKK, String _maThuoc, SmartDate _hANDUNG, String _solo, Decimal _sOLUONG, Decimal _sLVTTon, Decimal _sLDC, String _ghichu, String _nguoiSD, string _maMay, Decimal _dongia)
		{
			System.Data.SqlClient.SqlDataReader dr;
			dr = SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spTBVTKiemKe_HD_CREATE", _mAKK, _maThuoc, _hANDUNG.DBValue, _solo, _sOLUONG, _sLVTTon, _sLDC, _ghichu, _nguoiSD, _maMay, _dongia);
			dr.Close();
			dr = null;
			return "";
		}
		public override void UpdateTBVTKiemKe_HD(String _mAKK, Decimal _sTT, String _maThuoc, SmartDate _hANDUNG, String _solo, Decimal _sOLUONG, Decimal _sLVTTon, Decimal _sLDC, String _ghichu, Boolean _huy, String _nguoiSD, string _maMay, Decimal _dongia)
		{
			SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spTBVTKiemKe_HD_UPDATE", _mAKK, _sTT, _maThuoc, _hANDUNG.DBValue, _solo, _sOLUONG, _sLVTTon, _sLDC, _ghichu, _huy, _nguoiSD, _maMay, _dongia);
		}
		public override void DeleteTBVTKiemKe_HD(String _maMay, String _nguoiSD, String _maKK, Decimal _sTT)
		{
			SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spTBVTKiemKe_HD_DELETED", _maMay, _nguoiSD, _maKK, _sTT);
		}

        #endregion

        #region Thiet bi Kiem ke  Chi tiet

        public override String InsertTBKiemKe_C(String _mAKK, String _maTBC, Decimal _sOLUONG, Decimal _donGia, Decimal _sLSUACHUA, Decimal _sLBAODUONG, Decimal _sLXINTHANHLY, Decimal _sLSUACHUADC, Decimal _sLBAODUONGDC, Decimal _sLXINTHANHLYDC, Decimal _sLDC, String _ghichu, Decimal _soLuong, String _nguoiSD, String _maMay, int _sudungDN, String _SerialNo, String _Model, SmartDate _ngaybaoduong, int _namSanxuat)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spTBKIEMKE_C_CREATE", _mAKK, _maTBC, _sOLUONG, _donGia, _sLSUACHUA, _sLSUACHUADC, _sLBAODUONG, _sLBAODUONGDC, _sLXINTHANHLY, _sLXINTHANHLYDC, _sLDC, _ghichu, _soLuong, _nguoiSD, _maMay, _sudungDN, _SerialNo, _Model, _ngaybaoduong.DBValue, (SmartDate.Parse("31/12/" + _namSanxuat.ToString()).DBValue)));
        }
        public override void UpdateTBKiemKe_C(String _mAKK, Decimal _sTT, String _maTBC, Decimal _sOLUONG, Decimal _donGia, Decimal _sLSUACHUA, Decimal _sLBAODUONG, Decimal _sLXINTHANHLY, Decimal _sLSUACHUADC, Decimal _sLBAODUONGDC, Decimal _sLXINTHANHLYDC, Decimal _sLDC, String _ghichu, Boolean _huy, String _nguoiSD, String _maMay, int _sudungDN, String _SerialNo, String _Model, SmartDate _ngaybaoduong, int _namSanxuat)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spTBKIEMKE_C_UPDATE", _mAKK, _sTT, _maTBC, _sOLUONG, _donGia, _sLSUACHUA,
                 _sLBAODUONG, _sLXINTHANHLY, _sLXINTHANHLYDC, _sLSUACHUADC, _sLBAODUONGDC, _sLDC, _ghichu, _huy, _nguoiSD, _maMay, _sudungDN, _SerialNo, _Model, _ngaybaoduong.DBValue, (SmartDate.Parse("31/12/" + _namSanxuat.ToString()).DBValue));
        }
        public override void DeleteTBKiemKe_C(String _maMay, String _nguoiSD, String _mAKK, Decimal _sTT)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spTBKIEMKE_C_DELETED", _maMay, _nguoiSD, _mAKK, _sTT);
        }
        #endregion
        #region thiet bi Xuat Tra
        public override String InsertTBXuatTra(string _maNCC, string _soCT, SmartDate _ngayXT, string _makho, Boolean _thanhtoan, SmartDate _ngayTToan, SmartDate _ngayXuatTT, Decimal _tong, string _ghichu, string _maMay, string _nguoiLap, SmartDate _ngayLap, string _nVXuat, string _nVNhan, Decimal _vAT)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spTBXuatTra_CREATE", _maNCC, _soCT, _ngayXT.DBValue, _makho, _thanhtoan, _ngayTToan.DBValue, _ngayXuatTT.DBValue, _tong, _ghichu, _maMay, _nguoiLap, _ngayLap.DBValue, _nVXuat, _nVNhan, _vAT));
        }
        public override void UpdateTBXuatTra(String _maPXT, String _maNCC, String _soCT, SmartDate _ngayXT, String _makho, Boolean _thanhtoan, SmartDate _ngayTToan, SmartDate _ngayXuatTT, Decimal _tong, String _ghichu, Boolean _huy, String _nguoiSD, string _maMay, String _nVXuat, String _nVNhan, Decimal _vAT)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spTBXuatTra_UPDATE", _maPXT, _maNCC, _soCT, _ngayXT.DBValue, _makho, _thanhtoan, _ngayTToan.DBValue, _ngayXuatTT.DBValue, _tong, _ghichu, _huy, _nguoiSD, _maMay, _nVXuat, _nVNhan, _vAT);
        }
        public override void DeleteTBXuatTra(String _maMay, String _nguoiSD, String _maPXT)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spTBXuatTra_DELETED", _maMay, _nguoiSD, _maPXT);
        }
        #endregion

        #region thiet bi Xuat tra chi tiet
        public override String InsertTBXuatTra_C(String _matbc, Decimal _soluong, string _model, Decimal _donGia, String _serialno, String _ghichu, String _nguoiSD, string _maMay, String _maPXT, Decimal _vAT)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spTBXuatTra_C_CREATE", _matbc, _soluong, _model, _donGia, _serialno, _ghichu, _nguoiSD, _maMay, _maPXT, _vAT));
        }
        public override void UpdateTBXuatTra_C(Decimal _sTT, String _matbc, Decimal _soluong, string _model, Decimal _donGia, String _serialno, Boolean _huy, String _ghichu, String _nguoiSD, string _maMay, String _maPXT, Decimal _vAT)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spTBXuatTra_C_UPDATE", _sTT, _matbc, _soluong, _model, _donGia, _serialno, _huy, _ghichu, _nguoiSD, _maMay, _maPXT, _vAT);
        }
        public override void DeleteTBXuatTra_C(String _maMay, String _nguoiSD, String _maPXT, Decimal _sTT)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spTBXuatTra_C_DELETED", _maMay, _nguoiSD, _maPXT, _sTT);
        }

        #endregion
        #region Nhap Tra


        public override String InsertTBNhapTra(String _noiNhap, SmartDate _ngayNhap, SmartDate _ngayNhapTT, String _noiXuat, Byte _loaiPhieu, String _soCT, String _nvXuat, String _nvNhan, String _ghiChu, String _nguoiLap, string _maMay, string _mapx)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spTBNhapTra_CREATE", _noiNhap, _ngayNhap.DBValue, _ngayNhapTT.DBValue, _noiXuat, _loaiPhieu, _soCT, _nvXuat, _nvNhan, _ghiChu, _nguoiLap, _maMay, _mapx));
        }

        public override void UpdateTBNhapTra(String _maPX, String _noiXuat, SmartDate _ngayNhap, SmartDate _ngayNhapTT, String _noiNhap, Byte _loaiPhieu, String _soCT, String _nvXuat, String _nvNhan, String _ghiChu, Boolean _huy, string _maMay, String _nguoiSD)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spTBNhapTra_UPDATE", _maPX, _noiXuat, _ngayNhap.DBValue, _ngayNhapTT.DBValue, _noiNhap, _loaiPhieu, _soCT, _nvXuat, _nvNhan, _ghiChu, _huy, _maMay, _nguoiSD);
        }
        public override void DeleteTBNhapTra(String _maPX, string _maMay, String _nguoiSD)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spTBNhapTra_DELETED", _maPX, _maMay, _nguoiSD);
        }
        #endregion
        #region report
        public override DataSet CRSuachuaTB_RPT(DateTime _TuNgay, DateTime _DenNgay, int _LoaiPhieu, string _MaKho, string _MaNhom, string _MaChungLoai, string _Dk)
        {
            DataSet ds = new DataSet();
            string[] s = { "CRSuachua_RPT" };
            SqlHelper.FillDataset(ConnectionString, DatabaseOwner + ObjectQualifier + "spTB_BCSUACHUA_THANHLY", ds, s, _TuNgay, _DenNgay, _LoaiPhieu, _MaKho, _MaNhom, _MaChungLoai, _Dk);
            //  ds.WriteXmlSchema("CRSuachua_RPT.xsd");
            return ds;
        }
		public override DataSet crTBVTKiemKe(String _maKK, Boolean _qadmin)
		{
			DataSet ds = new DataSet("crKiemKe");
			string[] s = { "crKiemKe" };
			SqlHelper.FillDataset(ConnectionString, DatabaseOwner + ObjectQualifier + "spTBVTKiemKe_HD_GETALL", ds, s, _maKK, _qadmin);
			if (ds.Tables.Count > 0)
				ds.Tables[0].TableName = "crKiemKe";
			return ds;
		}
		public override DataSet crTBVTKiemKe_HoiDong(String _maPhieu, Boolean _qadmin, Byte _loai)
		{
			DataSet ds = new DataSet();
			string[] s = { "crKiemKe_HoiDong" };
			SqlHelper.FillDataset(ConnectionString, DatabaseOwner + ObjectQualifier + "spVTKIEMNHAP_GETALL", ds, s, _maPhieu, _qadmin, _loai);
			if (ds.Tables.Count > 0)
				ds.Tables[0].TableName = "crKiemKe_HoiDong";
			return ds;
		}
		public override DataSet crTBVTPhieuNhap_C_GetAll(Boolean _qadmin, String _maPN)
		{
			DataSet ds = new DataSet("crPhieuNhap_C_GetAll");
			string[] s = { "crPhieuNhap_C_GetAll" };
			SqlHelper.FillDataset(ConnectionString, DatabaseOwner + ObjectQualifier + "spTBVTPhieuNhap_C_GETALL", ds, s, _qadmin, _maPN);
			if (ds.Tables.Count > 0)
				ds.Tables[0].TableName = "crPhieuNhap_C_GetAll";
			return ds;

		}


		#endregion
        #endregion

        #region Ke Hoach Tong Hop

        #region Get List
        public override IDataReader GetBC_DMBenhTat(String _maBenhID) //lay benh tat theo Id
        {            //chuoi ket noi  //thu tuc         //gia tri cua tham so cho thu tuc              
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spBC_DMBenhTat_Get", _maBenhID));
        }
        public override IDataReader GetAllBC_DMBenhTat()//lay tat ca BC_DMBenhTat
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spBC_DMBenhTat_GetAll"));
        }
        public override IDataReader GetsBC_DMBenhTatByID(string id) //lay danh muc benh tat theo maTinh
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spBC_DMBenhTat_GetsByID", id));
        }
        public override IDataReader GetBC_DMKhoa(String _makhoa)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spBC_DMKhoa_Get", _makhoa));
        }
        public override IDataReader GetAllBC_DMKhoa(Boolean qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spBC_DMKhoa_GetAll", qadmin));
        }
        public override IDataReader GetAllBC_ChuyenMon(DateTime tuthang, DateTime denthang, string makhoa, String dk, bool qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spBC_ChuyenMon_GETs", tuthang, denthang, makhoa, dk, qadmin));

        }
        public override IDataReader GetBC_ChuyenMon_C(String _maKhoa, SmartDate _thang, String _ma)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spBC_ChuyenMon_C_GET", _maKhoa, _thang.DBValue, _ma));

        }

        public override IDataReader GetBC_ChuyenMon(String _maKhoa, SmartDate _thang)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spBC_ChuyenMon_GET", _maKhoa, _thang.DBValue));

        }
        public override IDataReader GetBC_ChuyenMonPK(String _maKhoa, SmartDate _thang)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spBC_ChuyenMonPK_GET", _maKhoa, _thang.DBValue));

        }
        public override IDataReader GetAllBC_LichTruc(SmartDate _tuthang, SmartDate _denthang, String _maKhoa, String dk, bool qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spBC_LichTruc_GETAll", _tuthang.DBValue, _denthang.DBValue, _maKhoa, dk, qadmin));

        }
        public override IDataReader GetAllBC_ChuyenMonCLS(String _maKhoa, SmartDate _thang, String dk, bool qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spBC_ChuyenMonCLS_GETAll", _maKhoa, _thang.DBValue, dk, qadmin));

        }
        public override IDataReader GetBC_ChuyenMonCLS(String _maKhoa, SmartDate _thang, String ma)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spBC_ChuyenMonCLS_GET", _maKhoa, _thang.DBValue, ma));

        }
        public override IDataReader GetAllBC_ChuyenMonPT(String _maKhoa, SmartDate _thang, String dk, bool qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spBC_ChuyenMonPT_GETAll", _maKhoa, _thang.DBValue, dk, qadmin));

        }
        public override IDataReader GetBC_ChuyenMonPT(String _maKhoa, SmartDate _thang, String ma)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spBC_ChuyenMonPT_GET", _maKhoa, _thang.DBValue, ma));

        }
        public override IDataReader GetAllBC_KeHoachBV(String _nam, String dk, bool qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spBC_KeHoachBV_GETAll", _nam, dk, qadmin));

        }
        public override IDataReader GetBC_KeHoachBV(String _maKhoa, String _nam, String ma)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spBC_KeHoachBV_GET", _maKhoa, _nam, ma));

        }
        public override IDataReader GetAllBC_KeHoachKhoa(String _nam, String dk, bool qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spBC_KeHoachKhoa_GETAll", _nam, dk, qadmin));

        }
        public override IDataReader GetBC_KeHoachKhoa(String _maKhoa, String _nam, String ma)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spBC_KeHoachKhoa_GET", _maKhoa, _nam, ma));

        }
        public override IDataReader GetAllBC_MacBenh(DateTime tuthang, DateTime denthang, string makhoa, String dk, bool qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spBC_MacBenh_GETs", tuthang, denthang, makhoa, dk, qadmin));

        }
        public override IDataReader GetAllBC_MacBenh(String _maKhoa, SmartDate _thang, String dk, bool qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spBC_MacBenh_GETAll", _maKhoa, _thang.DBValue, dk, qadmin));

        }
        public override IDataReader GetAllBC_ChuyenMonNgay(DateTime tuthang, DateTime denthang, string makhoa, String dk, bool qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spBC_ChuyenMonNgay_GETs", tuthang, denthang, makhoa, dk, qadmin));

        }
        public override IDataReader GetBC_ChuyenMonNgay(String _maKhoa, SmartDate _thang)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spBC_ChuyenMonNgay_GET", _maKhoa, _thang.DBValue));

        }
        public override IDataReader GetAllBC_ChuyenMonNgay_C(String _maKhoa, SmartDate _thang, String dk, bool qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spBC_ChuyenMonNgay_C_GETAll", _maKhoa, _thang.DBValue, dk, qadmin));

        }

        public override IDataReader GetBC_MacBenh(String _maKhoa, SmartDate _thang, String ma)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spBC_MacBenh_GET", _maKhoa, _thang.DBValue, ma));

        }
        public override IDataReader GetAllBC_THChuyenMon(SmartDate tuthang, SmartDate denthang, String dk, bool qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spBC_THChuyenMon_GETAll", tuthang.DBValue, denthang.DBValue, dk, qadmin));

        }
        public override IDataReader GetBC_THChuyenMon(DateTime tuthang, DateTime denthang, byte loaibc, String dk)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spBC_THChuyenMon_GETs", tuthang, denthang, loaibc, dk));

        }
        public override IDataReader GetBC_THChuyenMon(string _mabc)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spBC_THChuyenMon_GET", _mabc));

        }
        public override IDataReader GetAllBC_HDSucKhoe(String maBC, String dk, bool qadmin)
        {
           // return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spBC_HDSucKhoe_GETALL", maBC, dk, qadmin));
            System.Data.SqlClient.SqlCommand cmd = SqlHelper.CreateCommand(SQLConnectionData, DatabaseOwner + ObjectQualifier + "spBC_HDSucKhoe_GETALL");

            cmd.CommandTimeout = 18000;
            cmd.CommandType = System.Data.CommandType.StoredProcedure;
            cmd.Parameters.AddWithValue("MABC ", maBC);
            cmd.Parameters.AddWithValue("DK", dk);
            cmd.Parameters.AddWithValue("QADMIN", qadmin);

            IDataReader dt;
            dt = (IDataReader)cmd.ExecuteReader(CommandBehavior.CloseConnection); ;
            cmd.Dispose();
            cmd = null;
            return dt;
        }
        public override IDataReader GetAllBC_DanhMuc_CM( String dk, bool qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spBC_DanhMuc_CM_FINDS",  dk, qadmin));
        }
        public override IDataReader GetAllBC_DuocBV(String maBC, String dk, bool qadmin)
        {
          //  return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spBC_DuocBV_GETALL", maBC, dk, qadmin));

            System.Data.SqlClient.SqlCommand cmd = SqlHelper.CreateCommand(SQLConnectionData, DatabaseOwner + ObjectQualifier + "spBC_DuocBV_GETALL");

            cmd.CommandTimeout = 18000;
            cmd.CommandType = System.Data.CommandType.StoredProcedure;
            cmd.Parameters.AddWithValue("MABC ", maBC);
            cmd.Parameters.AddWithValue("DK", dk);
            cmd.Parameters.AddWithValue("QADMIN", qadmin);

            IDataReader dt;
            dt = (IDataReader)cmd.ExecuteReader(CommandBehavior.CloseConnection); ;
            cmd.Dispose();
            cmd = null;
            return dt;
        }
        public override IDataReader GetAllBC_HDCanLamSang(String maBC, String dk, bool qadmin)
        {
            //return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spBC_HDCanLamSang_GETALL", maBC, dk, qadmin));
            System.Data.SqlClient.SqlCommand cmd = SqlHelper.CreateCommand(SQLConnectionData, DatabaseOwner + ObjectQualifier + "spBC_HDCanLamSang_GETALL");

            cmd.CommandTimeout = 18000;
            cmd.CommandType = System.Data.CommandType.StoredProcedure;
            cmd.Parameters.AddWithValue("MABC ", maBC);
            cmd.Parameters.AddWithValue("DK", dk);
            cmd.Parameters.AddWithValue("QADMIN", qadmin);

            IDataReader dt;
            dt = (IDataReader)cmd.ExecuteReader(CommandBehavior.CloseConnection); ;
            cmd.Dispose();
            cmd = null;
            return dt;
        
        }

        public override IDataReader GetAllBC_HDChiDaoTuyenA(String maBC, String dk, bool qadmin)
        {
          //  return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spBC_HDChiDaoTuyenA_GETALL", maBC, dk, qadmin));
            System.Data.SqlClient.SqlCommand cmd = SqlHelper.CreateCommand(SQLConnectionData, DatabaseOwner + ObjectQualifier + "spBC_HDChiDaoTuyenA_GETALL");

            cmd.CommandTimeout = 18000;
            cmd.CommandType = System.Data.CommandType.StoredProcedure;
            cmd.Parameters.AddWithValue("MABC ", maBC);
            cmd.Parameters.AddWithValue("DK", dk);
            cmd.Parameters.AddWithValue("QADMIN", qadmin);

            IDataReader dt;
            dt = (IDataReader)cmd.ExecuteReader(CommandBehavior.CloseConnection); ;
            cmd.Dispose();
            cmd = null;
            return dt;
        }
        public override IDataReader GetAllBC_HDChiDaoTuyenB(String maBC, String dk, bool qadmin)
        {
          //  return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spBC_HDChiDaoTuyenB_GETALL", maBC, dk, qadmin));
            System.Data.SqlClient.SqlCommand cmd = SqlHelper.CreateCommand(SQLConnectionData, DatabaseOwner + ObjectQualifier + "spBC_HDChiDaoTuyenB_GETALL");

            cmd.CommandTimeout = 18000;
            cmd.CommandType = System.Data.CommandType.StoredProcedure;
            cmd.Parameters.AddWithValue("MABC ", maBC);
            cmd.Parameters.AddWithValue("DK", dk);
            cmd.Parameters.AddWithValue("QADMIN", qadmin);

            IDataReader dt;
            dt = (IDataReader)cmd.ExecuteReader(CommandBehavior.CloseConnection); ;
            cmd.Dispose();
            cmd = null;
            return dt;
        }
        public override IDataReader GetAllBC_HDDieuTri(String maBC, String dk, bool qadmin)
        {
           // return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spBC_HDDieuTri_GETALL", maBC, dk, qadmin));
            System.Data.SqlClient.SqlCommand cmd = SqlHelper.CreateCommand(SQLConnectionData, DatabaseOwner + ObjectQualifier + "spBC_HDDieuTri_GETALL");
          
            cmd.CommandTimeout = 18000;
            cmd.CommandType = System.Data.CommandType.StoredProcedure;
            cmd.Parameters.AddWithValue("MABC ", maBC);

            cmd.Parameters.AddWithValue("DK", dk);
            cmd.Parameters.AddWithValue("QADMIN", qadmin);

            IDataReader dt;
            dt = (IDataReader)cmd.ExecuteReader(CommandBehavior.CloseConnection); ;
            cmd.Dispose();
            cmd = null;
            return dt;
        }

        public override DataSet CRAllBC_HDDieuTri_Hue(string NOITTOAN, DateTime TuNgay, DateTime DenNgay, string MAKHOA, string DK, Boolean Admin)
		{
			DataSet ds = new DataSet("Hoatdongdieutri");
            string[] s = { };
            SqlHelper.FillDataset(ConnectionString, DatabaseOwner + ObjectQualifier + "BC_HDKHAMBENH_NGAY_GETs", ds, s, NOITTOAN, TuNgay, DenNgay, MAKHOA, DK, Admin);
			//ds.WriteXmlSchema("I:\\CRTinhhinhdieutriHue.xsd");

			//System.Data.SqlClient.SqlCommand cmd = SqlHelper.CreateCommand(SQLConnectionBD, DatabaseOwner + ObjectQualifier + "BC_HDKHAMBENH_NGAY_GETs");

			//cmd.CommandTimeout = 18000;
			//cmd.CommandType = System.Data.CommandType.StoredProcedure;
			//cmd.Parameters.AddWithValue("NOITTOAN", NOITTOAN);
			//cmd.Parameters.AddWithValue("NgayBC", NgayBC);
			//cmd.Parameters.AddWithValue("MAKHOA", MAKHOA);
			//cmd.Parameters.AddWithValue("DK", DK);
			//cmd.Parameters.AddWithValue("ADMIN", Admin);

			//System.Data.SqlClient.SqlDataAdapter sqlad = new System.Data.SqlClient.SqlDataAdapter(cmd);

			//sqlad.Fill(ds);
			//if (ds.Tables.Count > 0)
			//{
			//	ds.Tables[0].TableName = "CRTinhhinhkhambenh";
			//	ds.Tables[1].TableName = "CRTinhhinhdieutringoaitru";
			//	ds.Tables[2].TableName = "CRTinhhinhdieutrinoitru";
			//}
			//sqlad.Dispose(); cmd.Dispose(); sqlad = null;
			//cmd = null;
			//if (_sqlConnection.State != System.Data.ConnectionState.Closed)
			//{
			//	_sqlConnection.Close(); _sqlConnection.Dispose();
			//	_sqlConnection = null;
			//}
			return ds;
		}
        public override DataSet CRAllBC_NGAYBENHTATTV_GETs(String NOITTOAN, DateTime TuNgay, DateTime DenNgay, string MAKHOA, string DK, Boolean Admin)
        {
            DataSet ds = new DataSet("crBaoCaoBenhTatNgay");
            string[] s = { "crBaoCaoBenhTatNgay" };
            SqlHelper.FillDataset(ConnectionString, DatabaseOwner + ObjectQualifier + "BC_NGAYBENHTATTV_GETs", ds, s, NOITTOAN, TuNgay, DenNgay, MAKHOA, DK, Admin);
          //  ds.WriteXmlSchema("I:\\CRTinhhinhdieutriHue.xsd");
            return ds;
        }
        public override DataSet CRALLBC_NGAYBENHNHAN_GEST(String NOITTOAN, DateTime TuNgay, DateTime DenNgay, string MAKHOA, string DK, Boolean Admin)
        {
            DataSet ds = new DataSet("BC_NGAYBENHNHAN_GEST");
            string[] s = { "BC_NGAYBENHNHAN_GEST" };
            SqlHelper.FillDataset(ConnectionString, DatabaseOwner + ObjectQualifier + "BC_NGAYBENHNHAN_GEST", ds, s, NOITTOAN, TuNgay, DenNgay, MAKHOA, DK, Admin);
           // ds.WriteXmlSchema("D:\\BC_NGAYBENHNHAN_GEST.xsd");
            return ds;
        }
        public override IDataReader GetAllBC_HDKhamBenh(String maBC, String dk, bool qadmin)
        {
          //  return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spBC_HDKhamBenh_GETALL", maBC, dk, qadmin));
            System.Data.SqlClient.SqlCommand cmd = SqlHelper.CreateCommand(SQLConnectionData, DatabaseOwner + ObjectQualifier + "spBC_HDKhamBenh_GETALL");

            cmd.CommandTimeout = 18000;
            cmd.CommandType = System.Data.CommandType.StoredProcedure;
            cmd.Parameters.AddWithValue("MABC ", maBC);
            cmd.Parameters.AddWithValue("DK", dk);
            cmd.Parameters.AddWithValue("QADMIN", qadmin);

            IDataReader dt;
            dt = (IDataReader)cmd.ExecuteReader(CommandBehavior.CloseConnection); ;
            cmd.Dispose();
            cmd = null;
            return dt;
        }

        public override IDataReader GetAllBC_HDKhamBenhYH(String maBC, String dk, bool qadmin)
        {
            //  return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spBC_HDKhamBenh_GETALL", maBC, dk, qadmin));
            System.Data.SqlClient.SqlCommand cmd = SqlHelper.CreateCommand(SQLConnectionData, DatabaseOwner + ObjectQualifier + "spBC_HDKhamBenh_GETALL");

            cmd.CommandTimeout = 18000;
            cmd.CommandType = System.Data.CommandType.StoredProcedure;
            cmd.Parameters.AddWithValue("MABC ", maBC);
            cmd.Parameters.AddWithValue("DK", dk);
            cmd.Parameters.AddWithValue("QADMIN", qadmin);

            IDataReader dt;
            dt = (IDataReader)cmd.ExecuteReader(CommandBehavior.CloseConnection); ;
            cmd.Dispose();
            cmd = null;
            return dt;
        }

        public override DataTable GetsBC_HDKhamBenh(DateTime tuthang, DateTime denthang, String dk, bool qadmin)
        {
            //  return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spBC_HDKhamBenh_GETALL", maBC, dk, qadmin));
            System.Data.SqlClient.SqlCommand cmd = SqlHelper.CreateCommand(SQLConnectionData, DatabaseOwner + ObjectQualifier + "spBC_HDKhamBenh_GETS");

            cmd.CommandTimeout = 18000;
            cmd.CommandType = System.Data.CommandType.StoredProcedure;
            cmd.Parameters.AddWithValue("TuNgay ", tuthang);
            cmd.Parameters.AddWithValue("DenNgay ", denthang);
            cmd.Parameters.AddWithValue("DK", dk);
            cmd.Parameters.AddWithValue("QADMIN", qadmin);

            DataSet   ds = new DataSet ();

            System.Data.SqlClient.SqlDataAdapter sqlad = new System.Data.SqlClient.SqlDataAdapter(cmd);

            sqlad.Fill(ds);
            if (ds.Tables.Count > 0)
                ds.Tables[0].TableName = "CRPhieuLinh_RPTa";
            sqlad.Dispose(); cmd.Dispose(); sqlad = null;
            cmd = null;

            if (ds.Tables.Count > 0)
                return ds.Tables[0];
            else
                return (DataTable ) null;
        }
        public override IDataReader GetAllBC_HDPhauThuat(String maBC, String dk, bool qadmin)
        {
           // return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spBC_HDPhauThuat_GETALL", maBC, dk, qadmin));
            System.Data.SqlClient.SqlCommand cmd = SqlHelper.CreateCommand(SQLConnectionData, DatabaseOwner + ObjectQualifier + "spBC_HDPhauThuat_GETALL");

            cmd.CommandTimeout = 18000;
            cmd.CommandType = System.Data.CommandType.StoredProcedure;
            cmd.Parameters.AddWithValue("MABC ", maBC);
            cmd.Parameters.AddWithValue("DK", dk);
            cmd.Parameters.AddWithValue("QADMIN", qadmin);

            IDataReader dt;
            dt = (IDataReader)cmd.ExecuteReader(CommandBehavior.CloseConnection); ;
            cmd.Dispose();
            cmd = null;
            return dt;
        }
        public override IDataReader GetAllBC_HDTaiChinh(String maBC, String dk, bool qadmin)
        {
           // return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spBC_HDTaiChinh_GETALL", maBC, dk, qadmin));
            System.Data.SqlClient.SqlCommand cmd = SqlHelper.CreateCommand(SQLConnectionData, DatabaseOwner + ObjectQualifier + "spBC_HDTaiChinh_GETALL");

            cmd.CommandTimeout = 18000;
            cmd.CommandType = System.Data.CommandType.StoredProcedure;
            cmd.Parameters.AddWithValue("MABC ", maBC);
            cmd.Parameters.AddWithValue("DK", dk);
            cmd.Parameters.AddWithValue("QADMIN", qadmin);

            IDataReader dt;
            dt = (IDataReader)cmd.ExecuteReader(CommandBehavior.CloseConnection); ;
            cmd.Dispose();
            cmd = null;
            return dt;
        
        }
        public override IDataReader GetAllBC_HDTaiChinhBH(String maBC, String dk, bool qadmin)
        {
          //  return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spBC_HDTaiChinhBH_GETALL", maBC, dk, qadmin));
            System.Data.SqlClient.SqlCommand cmd = SqlHelper.CreateCommand(SQLConnectionData, DatabaseOwner + ObjectQualifier + "spBC_HDTaiChinhBH_GETALL");

            cmd.CommandTimeout = 18000;
            cmd.CommandType = System.Data.CommandType.StoredProcedure;
            cmd.Parameters.AddWithValue("MABC ", maBC);
            cmd.Parameters.AddWithValue("DK", dk);
            cmd.Parameters.AddWithValue("QADMIN", qadmin);

            IDataReader dt;
            dt = (IDataReader)cmd.ExecuteReader(CommandBehavior.CloseConnection); ;
            cmd.Dispose();
            cmd = null;
            return dt;
        
        }
        public override IDataReader GetAllBC_HDTaiChinhKhThu(String maBC, String dk, bool qadmin)
        {
           // return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spBC_HDTaiChinhKhThu_GETALL", maBC, dk, qadmin));
            System.Data.SqlClient.SqlCommand cmd = SqlHelper.CreateCommand(SQLConnectionData, DatabaseOwner + ObjectQualifier + "spBC_HDTaiChinhKhThu_GETALL");

            cmd.CommandTimeout = 18000;
            cmd.CommandType = System.Data.CommandType.StoredProcedure;
            cmd.Parameters.AddWithValue("MABC ", maBC);
            cmd.Parameters.AddWithValue("DK", dk);
            cmd.Parameters.AddWithValue("QADMIN", qadmin);

            IDataReader dt;
            dt = (IDataReader)cmd.ExecuteReader(CommandBehavior.CloseConnection); ;
            cmd.Dispose();
            cmd = null;
            return dt;
        }
        public override IDataReader GetBC_Master(String _maBC, String _loaiBC)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spBC_Master_GET", _maBC, _loaiBC));
        }
        public override IDataReader GetAllBC_Master(string loaiBC, string dk, bool qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spBC_Master_GETAll", loaiBC, dk, qadmin));
        }
        public override IDataReader GetAllBC_DanhMuc(string dk, bool qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spBC_DANHMUC_GETALL", dk, qadmin));
        }
        public override IDataReader GetAllBC_DanhMucPL(string dk, bool qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spBC_DANHMUCPL_GETALL", dk, qadmin));
        }
        public override IDataReader GetAllBC_THCanBo(String maBC, String dk, bool qadmin)
        {
           // return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spBC_THCanBo_GETALL", maBC, dk, qadmin));
            System.Data.SqlClient.SqlCommand cmd = SqlHelper.CreateCommand(SQLConnectionData, DatabaseOwner + ObjectQualifier + "spBC_THCanBo_GETALL");

            cmd.CommandTimeout = 18000;
            cmd.CommandType = System.Data.CommandType.StoredProcedure;
            cmd.Parameters.AddWithValue("MABC ", maBC);
            cmd.Parameters.AddWithValue("DK", dk);
            cmd.Parameters.AddWithValue("QADMIN", qadmin);

            IDataReader dt;
            dt = (IDataReader)cmd.ExecuteReader(CommandBehavior.CloseConnection); ;
            cmd.Dispose();
            cmd = null;
            return dt;
        }
        public override IDataReader GetAllBC_THTuVong(String maBC, String dk, bool qadmin)
        {
           // return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spBC_THTuVong_GETALL", maBC, dk, qadmin));
            System.Data.SqlClient.SqlCommand cmd = SqlHelper.CreateCommand(SQLConnectionData, DatabaseOwner + ObjectQualifier + "spBC_THTuVong_GETALL");

            cmd.CommandTimeout = 18000;
            cmd.CommandType = System.Data.CommandType.StoredProcedure;
            cmd.Parameters.AddWithValue("MABC ", maBC);
            cmd.Parameters.AddWithValue("DK", dk);
            cmd.Parameters.AddWithValue("QADMIN", qadmin);

            IDataReader dt;
            dt = (IDataReader)cmd.ExecuteReader(CommandBehavior.CloseConnection); ;
            cmd.Dispose();
            cmd = null;
            return dt;
        }
        public override IDataReader GetAllBC_THTuVong(DateTime _tuNgay, DateTime _denNgay, String dk)
        {
            //return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spBC_THTuVong_GETs", _tuNgay, _denNgay, dk, false));
            System.Data.SqlClient.SqlCommand cmd = SqlHelper.CreateCommand(SQLConnectionData, DatabaseOwner + ObjectQualifier + "spBC_THTuVong_GETs");

            cmd.CommandTimeout = 18000;
            cmd.CommandType = System.Data.CommandType.StoredProcedure;
            cmd.Parameters.AddWithValue("tungay ", _tuNgay);
            cmd.Parameters.AddWithValue("denngay", _denNgay);
            cmd.Parameters.AddWithValue("DK", dk);

            IDataReader dt;
            dt = (IDataReader)cmd.ExecuteReader(CommandBehavior.CloseConnection); ;
            cmd.Dispose();
            cmd = null;
            return dt;
        }
        public override IDataReader GetAllBC_KHTH(String Nam, String dk, bool qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "BC_KHTH_Finds", Nam, dk, qadmin));
        }
        public override IDataReader GetBC_KHTH(String MaBC)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "BC_KHTH_Gets", MaBC));
        }
        public override IDataReader GetAllBC_TrangThietBiYTe(String maBC, String dk, bool qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spBC_TrangThietBiYTe_GETALL", maBC, dk, qadmin));
        }
        public override IDataReader GetAllBC_KeHoach(String maBC, String dk, bool qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spBC_KeHoach_GETALL", maBC, dk, qadmin));
        }


        #endregion
        #endregion

        #region Find List
        public override IDataReader FindBC_DMKhoa(String _DK, Boolean qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spBC_DMKhoa_Finds", _DK, qadmin));
        }
        public override IDataReader FindBC_DMBenhTat(string _DK)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spBC_DMBenhTat_Finds", _DK));
        }
        #endregion
        #region BC_DMBenhTat
        public override String InsertBC_DMBenhTat(String _maICD, String _tenBenh, String _tenBenhICD, String _maNhom, String _maVN, string _maMay, String _nguoiSD, string _idparent, string _tenta, Boolean _khongsd, string mabhxh, string _maNhomICD)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spBC_DMBenhTat_CREATE", _maICD, _tenBenh, _tenBenhICD, _maNhom, _maVN, _maMay, _nguoiSD, _idparent, _tenta, _khongsd, mabhxh, _maNhomICD));
        }
        public override void UpdateBC_DMBenhTat(String _maBenhID, String _maICD, String _tenBenh, String _tenBenhICD, String _maNhom, String _maVN, Byte _cap, string _maMay, String _nguoiSD, string _tenta, Boolean _khongsd, string mabhxh, string _maNhomICD)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spBC_DMBenhTat_UPDATE", _maBenhID, _maICD, _tenBenh, _tenBenhICD, _maNhom, _maVN, _cap, _maMay, _nguoiSD, _tenta, _khongsd, mabhxh, _maNhomICD);
        }
        public override void DeleteBC_DMBenhTat(String _maMay, String _nguoiSD, String _maBenhID)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spBC_DMBenhTat_DELETED", _maMay, _nguoiSD, _maBenhID);
        }
        #endregion
        #region BC_DMKhoa
        public override String InsertBC_DMKhoa(String _tenKhoa, Byte _loai, Decimal _sogiuong, string _machuyenkhoa, string _maMay, String _nguoiSD, string _idparent, string _tenta, string diadiem, string ghichu, Boolean khonghd, string maNhom)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spBC_DMKhoa_CREATE", _tenKhoa, _loai, _sogiuong, _machuyenkhoa, _maMay, _nguoiSD, _idparent, _tenta, diadiem, ghichu, khonghd, maNhom));
        }
        public override void UpdateBC_DMKhoa(string _maKhoa, String _tenKhoa, Byte _loai, Byte _cap, Decimal _sogiuong, string _machuyenkhoa, string _maMay, String _nguoiSD, String _tenta, bool huy, string diadiem, string ghichu, Boolean khonghd, string maNhom)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spBC_DMKhoa_UPDATE", _maKhoa, _tenKhoa, _loai, _cap, _sogiuong, _machuyenkhoa, _maMay, _nguoiSD, _tenta, huy, diadiem, ghichu, khonghd, maNhom);
        }
        public override void DeleteBC_DMKhoa(String _maMay, String _nguoiSD, String _maKhoa)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spBC_DMKhoa_Deleted", _maMay, _nguoiSD, _maKhoa);
        }
        #endregion
        #region Bao cao chuyen mon phong kham
        public override String InsertBC_ChuyenMonPK(String _maKhoa, SmartDate _thang, Int32 _lanCapCuu, Int32 _lankhamChuanDoanUB, Int32 _lanKhamULanh, Int32 _lanKhamMacMoi, Int32 _lanBenhThuong, Int32 _lanKBH, Int32 _lanKBHNguoiNgheo, Int32 _lanKBHNgoaiTinh, Int32 _lanKKhongThe, Int32 _lanKNguoiNgheoCoDon, Int32 _lanKTE6BH, Int32 _lanKTE6ND, Int32 _lanKTE15, Int32 _lanKTEMienVF6, Int32 _lanKMienKhac, Int32 _lanKNguoiGia60BH, Int32 _lanKNguoiGia60DV, Int32 _lanKNuocNgoai, Int32 _luotCapCuu, Int32 _luotkhamChuanDoanUB, Int32 _luotKhamULanh, Int32 _luotKhamMacMoi, Int32 _luotBenhThuong, Int32 _luotKBH, Int32 _luotKBHNguoiNgheo, Int32 _luotKBHNgoaiTinh, Int32 _luotKKhongThe, Int32 _luotKNguoiNgheoCoDon, Int32 _luotKTE6BH, Int32 _luotKTE6ND, Int32 _luotKTE15, Int32 _luotKTEMienVF6, Int32 _luotKMienKhac, Int32 _luotKNguoiGia60BH, Int32 _luotKNguoiGia60DV, Int32 _luotKNuocNgoai, Int32 _dTNgoaiTru, Int32 _dTKham, Int32 _dTVao, Int32 _tSBenhAn, Int32 _ra, Int32 _ngayDT, Int32 _macMoi, Int32 _tSTT, Int32 _tTSinhThiet, Int32 _tTSoiTMH, Int32 _tTSoiCTC, Int32 _tTTieuPhau, Int32 _tTPhongkham, Int32 _tTNoiTru, Int32 _tSNBChuyenVien, Int32 _tSTuVong, Int32 _tuVongNL, Int32 _tuVongTE, Int32 _tSVaoVienNT, Int32 _vaoVienCC, Int32 _nguoigia90, Int32 _saiSotChuyenMon, Int32 _phanUngCoHai, String _dacBiet, String _nguoiSD, String _maMay, Int32 _tTTieuPhauBH, Int32 _tTTieuPhauND)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spBC_ChuyenMonPK_CREATE", _maKhoa, _thang.DBValue, _lanCapCuu, _lankhamChuanDoanUB, _lanKhamULanh, _lanKhamMacMoi, _lanBenhThuong, _lanKBH, _lanKBHNguoiNgheo, _lanKBHNgoaiTinh, _lanKKhongThe, _lanKNguoiNgheoCoDon, _lanKTE6BH, _lanKTE6ND, _lanKTE15, _lanKTEMienVF6, _lanKMienKhac, _lanKNguoiGia60BH, _lanKNguoiGia60DV, _lanKNuocNgoai, _luotCapCuu, _luotkhamChuanDoanUB, _luotKhamULanh, _luotKhamMacMoi, _luotBenhThuong, _luotKBH, _luotKBHNguoiNgheo, _luotKBHNgoaiTinh, _luotKKhongThe, _luotKNguoiNgheoCoDon, _luotKTE6BH, _luotKTE6ND, _luotKTE15, _luotKTEMienVF6, _luotKMienKhac, _luotKNguoiGia60BH, _luotKNguoiGia60DV, _luotKNuocNgoai, _dTNgoaiTru, _dTKham, _dTVao, _tSBenhAn, _ra, _ngayDT, _macMoi, _tSTT, _tTSinhThiet, _tTSoiTMH, _tTSoiCTC, _tTTieuPhau, _tTPhongkham, _tTNoiTru, _tSNBChuyenVien, _tSTuVong, _tuVongNL, _tuVongTE, _tSVaoVienNT, _vaoVienCC, _nguoigia90, _saiSotChuyenMon, _phanUngCoHai, _dacBiet, _nguoiSD, _maMay, _tTTieuPhauBH, _tTTieuPhauND));
        }
        public override void UpdateBC_ChuyenMonPK(String _maKhoa, SmartDate _thang, Int32 _lanCapCuu, Int32 _lankhamChuanDoanUB, Int32 _lanKhamULanh, Int32 _lanKhamMacMoi, Int32 _lanBenhThuong, Int32 _lanKBH, Int32 _lanKBHNguoiNgheo, Int32 _lanKBHNgoaiTinh, Int32 _lanKKhongThe, Int32 _lanKNguoiNgheoCoDon, Int32 _lanKTE6BH, Int32 _lanKTE6ND, Int32 _lanKTE15, Int32 _lanKTEMienVF6, Int32 _lanKMienKhac, Int32 _lanKNguoiGia60BH, Int32 _lanKNguoiGia60DV, Int32 _lanKNuocNgoai, Int32 _luotCapCuu, Int32 _luotkhamChuanDoanUB, Int32 _luotKhamULanh, Int32 _luotKhamMacMoi, Int32 _luotBenhThuong, Int32 _luotKBH, Int32 _luotKBHNguoiNgheo, Int32 _luotKBHNgoaiTinh, Int32 _luotKKhongThe, Int32 _luotKNguoiNgheoCoDon, Int32 _luotKTE6BH, Int32 _luotKTE6ND, Int32 _luotKTE15, Int32 _luotKTEMienVF6, Int32 _luotKMienKhac, Int32 _luotKNguoiGia60BH, Int32 _luotKNguoiGia60DV, Int32 _luotKNuocNgoai, Int32 _dTNgoaiTru, Int32 _dTKham, Int32 _dTVao, Int32 _tSBenhAn, Int32 _ra, Int32 _ngayDT, Int32 _macMoi, Int32 _tSTT, Int32 _tTSinhThiet, Int32 _tTSoiTMH, Int32 _tTSoiCTC, Int32 _tTTieuPhau, Int32 _tTPhongkham, Int32 _tTNoiTru, Int32 _tSNBChuyenVien, Int32 _tSTuVong, Int32 _tuVongNL, Int32 _tuVongTE, Int32 _tSVaoVienNT, Int32 _vaoVienCC, Int32 _nguoigia90, Int32 _saiSotChuyenMon, Int32 _phanUngCoHai, String _dacBiet, String _nguoiSD, Boolean _huy, String _maMay, Int32 _tTTieuPhauBH, Int32 _tTTieuPhauND)
        {
            SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spBC_ChuyenMonPK_Update", _maKhoa, _thang.DBValue, _lanCapCuu, _lankhamChuanDoanUB, _lanKhamULanh, _lanKhamMacMoi, _lanBenhThuong, _lanKBH, _lanKBHNguoiNgheo, _lanKBHNgoaiTinh, _lanKKhongThe, _lanKNguoiNgheoCoDon, _lanKTE6BH, _lanKTE6ND, _lanKTE15, _lanKTEMienVF6, _lanKMienKhac, _lanKNguoiGia60BH, _lanKNguoiGia60DV, _lanKNuocNgoai, _luotCapCuu, _luotkhamChuanDoanUB, _luotKhamULanh, _luotKhamMacMoi, _luotBenhThuong, _luotKBH, _luotKBHNguoiNgheo, _luotKBHNgoaiTinh, _luotKKhongThe, _luotKNguoiNgheoCoDon, _luotKTE6BH, _luotKTE6ND, _luotKTE15, _luotKTEMienVF6, _luotKMienKhac, _luotKNguoiGia60BH, _luotKNguoiGia60DV, _luotKNuocNgoai, _dTNgoaiTru, _dTKham, _dTVao, _tSBenhAn, _ra, _ngayDT, _macMoi, _tSTT, _tTSinhThiet, _tTSoiTMH, _tTSoiCTC, _tTTieuPhau, _tTPhongkham, _tTNoiTru, _tSNBChuyenVien, _tSTuVong, _tuVongNL, _tuVongTE, _tSVaoVienNT, _vaoVienCC, _nguoigia90, _saiSotChuyenMon, _phanUngCoHai, _dacBiet, _nguoiSD, _huy, _maMay, _tTTieuPhauBH, _tTTieuPhauND);
        }
        public override void DeleteBC_ChuyenMonPK(String _maKhoa, SmartDate _thang, String _nguoiSD, String _maMay)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spBC_ChuyenMonPK_Deleted", _maKhoa, _thang.DBValue, _nguoiSD, _maMay);
        }

        #endregion
        #region Bao cao chuyen mon
        public override String InsertBC_ChuyenMon(String _maKhoa, SmartDate _thang, Decimal _tTCcuu, Decimal _tTLoai1, Decimal _tTLoai2, Decimal _tTLoai3, Decimal _tTTruyenHC, Decimal _tongBNDTHC, Decimal _tongNgayDTHC, Decimal _tongBNDTNoiT, Decimal _tongNgayDTNoiT, Decimal _ngaySDung, Decimal _ngayDTTB, Decimal _giuongBenhTH, Decimal _congsuatSD, Decimal _tongBNNgoaitinhVV, Decimal _tongBNNgoaitinhVVBH, Decimal _tongBNNgoaitinhVVND, Decimal _tongNgayBNNgoaiT, String _dacBiet, Decimal _pTLoaiDB, Decimal _pTLoai1A, Decimal _pTLoai1B, Decimal _pTLoai1C, Decimal _pTLoai2A, Decimal _pTLoai2B, Decimal _pTLoai2C, Decimal _pTLoai3, Decimal _pTNgoaiTinh, Decimal _pTTuVong, Decimal _pTTaiBien, Decimal _pTTPPhongK, Decimal _tTSoiCTC, Decimal _tTSoiTMH, Decimal _tTBamST, Decimal _tTSoiDDDT, Decimal _saiSotChuyenMon, Decimal _phanUngCoHai, Decimal _SoNgay, Decimal _KeHoach, Decimal _ThucTe, String _nguoiSD, String _maMay)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spBC_ChuyenMon_CREATE", _maKhoa, _thang.DBValue, _tTCcuu, _tTLoai1, _tTLoai2, _tTLoai3, _tTTruyenHC, _tongBNDTHC, _tongNgayDTHC, _tongBNDTNoiT, _tongNgayDTNoiT, _ngaySDung, _ngayDTTB, _giuongBenhTH, _congsuatSD, _tongBNNgoaitinhVV, _tongBNNgoaitinhVVBH, _tongBNNgoaitinhVVND, _tongNgayBNNgoaiT, _dacBiet, _pTLoaiDB, _pTLoai1A, _pTLoai1B, _pTLoai1C, _pTLoai2A, _pTLoai2B, _pTLoai2C, _pTLoai3, _pTNgoaiTinh, _pTTuVong, _pTTaiBien, _pTTPPhongK, _tTSoiCTC, _tTSoiTMH, _tTBamST, _tTSoiDDDT, _saiSotChuyenMon, _phanUngCoHai, _SoNgay, _KeHoach, _ThucTe, _nguoiSD, _maMay));
        }
        public override void UpdateBC_ChuyenMon(String _maKhoa, SmartDate _thang, Decimal _tTCcuu, Decimal _tTLoai1, Decimal _tTLoai2, Decimal _tTLoai3, Decimal _tTTruyenHC, Decimal _tongBNDTHC, Decimal _tongNgayDTHC, Decimal _tongBNDTNoiT, Decimal _tongNgayDTNoiT, Decimal _ngaySDung, Decimal _ngayDTTB, Decimal _giuongBenhTH, Decimal _congsuatSD, Decimal _tongBNNgoaitinhVV, Decimal _tongBNNgoaitinhVVBH, Decimal _tongBNNgoaitinhVVND, Decimal _tongNgayBNNgoaiT, String _dacBiet, Decimal _pTLoaiDB, Decimal _pTLoai1A, Decimal _pTLoai1B, Decimal _pTLoai1C, Decimal _pTLoai2A, Decimal _pTLoai2B, Decimal _pTLoai2C, Decimal _pTLoai3, Decimal _pTNgoaiTinh, Decimal _pTTuVong, Decimal _pTTaiBien, Decimal _pTTPPhongK, Decimal _tTSoiCTC, Decimal _tTSoiTMH, Decimal _tTBamST, Decimal _tTSoiDDDT, Decimal _saiSotChuyenMon, Decimal _phanUngCoHai, Decimal _SoNgay, Decimal _KeHoach, Decimal _ThucTe, Boolean _huy, String _nguoiSD, String _maMay)
        {
            SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spBC_ChuyenMon_Update", _maKhoa, _thang.DBValue, _tTCcuu, _tTLoai1, _tTLoai2, _tTLoai3, _tTTruyenHC, _tongBNDTHC, _tongNgayDTHC, _tongBNDTNoiT, _tongNgayDTNoiT, _ngaySDung, _ngayDTTB, _giuongBenhTH, _congsuatSD, _tongBNNgoaitinhVV, _tongBNNgoaitinhVVBH, _tongBNNgoaitinhVVND, _tongNgayBNNgoaiT, _dacBiet, _pTLoaiDB, _pTLoai1A, _pTLoai1B, _pTLoai1C, _pTLoai2A, _pTLoai2B, _pTLoai2C, _pTLoai3, _pTNgoaiTinh, _pTTuVong, _pTTaiBien, _pTTPPhongK, _tTSoiCTC, _tTSoiTMH, _tTBamST, _tTSoiDDDT, _saiSotChuyenMon, _phanUngCoHai, _SoNgay, _KeHoach, _ThucTe, _huy, _nguoiSD, _maMay);
        }
        public override void DeleteBC_ChuyenMon(String _maKhoa, SmartDate _thang, String _nguoiSD, String _maMay)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spBC_ChuyenMon_Deleted", _maKhoa, _thang.DBValue, _nguoiSD, _maMay);
        }

        #endregion
        #region Bao cao chuyen mon_c
        public override String InsertBC_ChuyenMon_C(String _maKhoa, SmartDate _thang, String _ma, Int32 _bh, Int32 _khongThe, Int32 _tongSo, Int32 _tE5, Int32 _tE15, Int32 _mien, Int32 _ngheo, Int32 _cc, Int32 _gia60, Int32 _nuocNgoai, String _ghichu, String _nguoiSD, String _maMay)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spBC_ChuyenMon_C_CREATE", _maKhoa, _thang.DBValue, _ma, _bh, _khongThe, _tongSo, _tE5, _tE15, _mien, _ngheo, _cc, _gia60, _nuocNgoai, _ghichu, _nguoiSD, _maMay));
        }
        public override void UpdateBC_ChuyenMon_C(String _maKhoa, SmartDate _thang, String _ma, Int32 _bh, Int32 _khongThe, Int32 _tongSo, Int32 _tE5, Int32 _tE15, Int32 _mien, Int32 _ngheo, Int32 _cc, Int32 _gia60, Int32 _nuocNgoai, String _ghichu, String _nguoiSD, Boolean _huy, String _maMay)
        {
            SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spBC_ChuyenMon_C_Update", _maKhoa, _thang.DBValue, _ma, _bh, _khongThe, _tongSo, _tE5, _tE15, _mien, _ngheo, _cc, _gia60, _nuocNgoai, _ghichu, _nguoiSD, _huy, _maMay);
        }
        public override void DeleteBC_ChuyenMon_C(String _maKhoa, SmartDate _thang, String _ma, String _nguoiSD, String _maMay)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spBC_ChuyenMon_C_Deleted", _maKhoa, _thang.DBValue, _ma, _nguoiSD, _maMay);
        }

        #endregion

        #region Bao cao lich trực
        public override String InsertBC_LichTruc(SmartDate _thang,String _maKhoa,  String _ma, string _Ngay1, string _Ngay2, string _Ngay3, string _Ngay4, string _Ngay5, string _Ngay6, string _Ngay7, string _Ngay8, string _Ngay9, string _Ngay10, string _Ngay11, string _Ngay12, string _Ngay13, string _Ngay14, string _Ngay15, string _Ngay16, string _Ngay17, string _Ngay18, string _Ngay19, string _Ngay20, string _Ngay21, string _Ngay22, string _Ngay23, string _Ngay24, string _Ngay25, string _Ngay26, string _Ngay27, string _Ngay28, string _Ngay29, string _Ngay30, string _Ngay31, String _maMay, String _nguoiSD)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spBC_LichTruc_CREATE",_thang.DBValue, _maKhoa,  _ma, _Ngay1, _Ngay2, _Ngay3, _Ngay4, _Ngay5, _Ngay6, _Ngay7, _Ngay8, _Ngay9, _Ngay10, _Ngay11, _Ngay12, _Ngay13, _Ngay14, _Ngay15, _Ngay16, _Ngay17, _Ngay18, _Ngay19, _Ngay20, _Ngay21, _Ngay22, _Ngay23, _Ngay24, _Ngay25, _Ngay26, _Ngay27, _Ngay28, _Ngay29, _Ngay30, _Ngay31, _maMay, _nguoiSD));
        }
        public override void UpdateBC_LichTruc(SmartDate _thang,String _maKhoa,  String _ma, string _Ngay1, string _Ngay2, string _Ngay3, string _Ngay4, string _Ngay5, string _Ngay6, string _Ngay7, string _Ngay8, string _Ngay9, string _Ngay10, string _Ngay11, string _Ngay12, string _Ngay13, string _Ngay14, string _Ngay15, string _Ngay16, string _Ngay17, string _Ngay18, string _Ngay19, string _Ngay20, string _Ngay21, string _Ngay22, string _Ngay23, string _Ngay24, string _Ngay25, string _Ngay26, string _Ngay27, string _Ngay28, string _Ngay29, string _Ngay30, string _Ngay31, String _maMay, Boolean _huy, String _nguoiSD)
        {
            SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spBC_LichTruc_Update", _thang.DBValue,_maKhoa,  _ma,  _Ngay1, _Ngay2, _Ngay3, _Ngay4, _Ngay5, _Ngay6, _Ngay7, _Ngay8, _Ngay9, _Ngay10, _Ngay11, _Ngay12, _Ngay13, _Ngay14, _Ngay15, _Ngay16, _Ngay17, _Ngay18, _Ngay19, _Ngay20, _Ngay21, _Ngay22, _Ngay23, _Ngay24, _Ngay25, _Ngay26, _Ngay27, _Ngay28, _Ngay29, _Ngay30, _Ngay31 ,_nguoiSD, _huy, _maMay);
        }
        public override void DeleteBC_LichTruc(String _maKhoa, SmartDate _thang, String _ma, String _nguoiSD, String _maMay)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spBC_LichTruc_Deleted", _maKhoa, _thang.DBValue, _ma, _nguoiSD, _maMay);
        }

        #endregion
        #region Bao cao chuyen moncls
        public override String InsertBC_ChuyenMonCLS(String _maKhoa, SmartDate _thang, String _ma, Int32 _xNBenhNhan, Int32 _xNTongSo, Int32 _xNBaoHiem, Int32 _xNVienPhi, Int32 _xNMien, Int32 _xNNoiTru, Int32 _xNNgoaiTru, Int32 _tBTongSo, Int32 _tBBaoHiem, Int32 _tBVienPhi, Int32 _tBMien, Int32 _tBNoiTru, Int32 _tBNgoaiTru, String _nguoiSD, String _maMay)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spBC_ChuyenMonCLS_CREATE", _maKhoa, _thang.DBValue, _ma, _xNBenhNhan, _xNTongSo, _xNBaoHiem, _xNVienPhi, _xNMien, _xNNoiTru, _xNNgoaiTru, _tBTongSo, _tBBaoHiem, _tBVienPhi, _tBMien, _tBNoiTru, _tBNgoaiTru, _nguoiSD, _maMay));
        }
        public override void UpdateBC_ChuyenMonCLS(String _maKhoa, SmartDate _thang, String _ma, Int32 _xNBenhNhan, Int32 _xNTongSo, Int32 _xNBaoHiem, Int32 _xNVienPhi, Int32 _xNMien, Int32 _xNNoiTru, Int32 _xNNgoaiTru, Int32 _tBTongSo, Int32 _tBBaoHiem, Int32 _tBVienPhi, Int32 _tBMien, Int32 _tBNoiTru, Int32 _tBNgoaiTru, String _nguoiSD, Boolean _huy, String _maMay)
        {
            SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spBC_ChuyenMonCLS_Update", _maKhoa, _thang.DBValue, _ma, _xNBenhNhan, _xNTongSo, _xNBaoHiem, _xNVienPhi, _xNMien, _xNNoiTru, _xNNgoaiTru, _tBTongSo, _tBBaoHiem, _tBVienPhi, _tBMien, _tBNoiTru, _tBNgoaiTru, _nguoiSD, _huy, _maMay);
        }
        public override void DeleteBC_ChuyenMonCLS(String _maKhoa, SmartDate _thang, String _ma, String _nguoiSD, String _maMay)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spBC_ChuyenMonCLS_Deleted", _maKhoa, _thang.DBValue, _ma, _nguoiSD, _maMay);
        }

        #endregion

        #region Bao cao chuyen mon ngay
        public override String InsertBC_ChuyenMonNgay(String _maKhoa, SmartDate _thang, Decimal _DTCu, Decimal _DTVao, Decimal _DTRa, Decimal _TSBenhAn, String _dacBiet, Decimal _saiSotChuyenMon, Decimal _phanUngCoHai, Decimal _CVNoiTru, Decimal _TuVong, Decimal _VaoVien, Decimal _RaVien, Decimal _ChuyenKhoa, Decimal _XuatVien, Decimal _PhauThuat, String _nguoiSD, String _maMay)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spBC_ChuyenMonNgay_CREATE", _maKhoa, _thang.DBValue, _DTCu, _DTVao, _DTRa, _TSBenhAn, _dacBiet, _saiSotChuyenMon, _phanUngCoHai, _CVNoiTru, _TuVong, _VaoVien, _RaVien, _ChuyenKhoa, _XuatVien, _PhauThuat, _nguoiSD, _maMay));
        }
        public override void UpdateBC_ChuyenMonNgay(String _maKhoa, SmartDate _thang, Decimal _DTCu, Decimal _DTVao, Decimal _DTRa, Decimal _TSBenhAn, String _dacBiet, Decimal _saiSotChuyenMon, Decimal _phanUngCoHai, Decimal _CVNoiTru, Decimal _TuVong, Decimal _VaoVien, Decimal _RaVien, Decimal _ChuyenKhoa, Decimal _XuatVien, Decimal _PhauThuat, Boolean _huy, String _nguoiSD, String _maMay)
        {
            SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spBC_ChuyenMonNgay_Update", _maKhoa, _thang.DBValue, _DTCu, _DTVao, _DTRa, _TSBenhAn, _dacBiet, _saiSotChuyenMon, _phanUngCoHai, _CVNoiTru, _TuVong, _VaoVien, _RaVien, _ChuyenKhoa, _XuatVien, _PhauThuat, _huy, _nguoiSD, _maMay);
        }
        public override void DeleteBC_ChuyenMonNgay(String _maKhoa, SmartDate _thang, String _nguoiSD, String _maMay)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spBC_ChuyenMonNgay_Deleted", _maKhoa, _thang.DBValue, _nguoiSD, _maMay);
        }

        #endregion

        #region Bao cao chuyen mon ngay c
        public override String InsertBC_ChuyenMonNgay_C(String _maKhoa, SmartDate _thang, String _ma, Int32 _SoLuong, String _nguoiSD, String _maMay)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spBC_ChuyenMonNgay_C_CREATE", _maKhoa, _thang.DBValue, _ma, _SoLuong, _nguoiSD, _maMay));
        }
        public override void UpdateBC_ChuyenMonNgay_C(String _maKhoa, SmartDate _thang, String _ma, Int32 _SoLuong, String _nguoiSD, Boolean _huy, String _maMay)
        {
            SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spBC_ChuyenMonNgay_C_Update", _maKhoa, _thang.DBValue, _ma, _SoLuong, _nguoiSD, _huy, _maMay);
        }
        public override void DeleteBC_ChuyenMonNgay_C(String _maKhoa, SmartDate _thang, String _ma, String _nguoiSD, String _maMay)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spBC_ChuyenMonNgay_C_Deleted", _maKhoa, _thang.DBValue, _ma, _nguoiSD, _maMay);
        }

        #endregion


        #region Bao cao chuyen mon pt
        public override String InsertBC_ChuyenMonPT(String _maKhoa, SmartDate _thang, String _ma, Int32 _tongso, Int32 _KeHoach, Int32 _Uac, Int32 _CapCuu, Int32 _TBGayMe, Int32 _TBNhiemKhuan, Int32 _TBKhac, Int32 _TVTrenBan, Int32 _TV24, String _nguoiSD, String _maMay)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spBC_ChuyenMonPT_CREATE", _maKhoa, _thang.DBValue, _ma, _tongso, _KeHoach, _Uac, _CapCuu, _TBGayMe, _TBNhiemKhuan, _TBKhac, _TVTrenBan, _TV24, _nguoiSD, _maMay));
        }
        public override void UpdateBC_ChuyenMonPT(String _maKhoa, SmartDate _thang, String _ma, Int32 _tongso, Int32 _KeHoach, Int32 _Uac, Int32 _CapCuu, Int32 _TBGayMe, Int32 _TBNhiemKhuan, Int32 _TBKhac, Int32 _TVTrenBan, Int32 _TV24, String _nguoiSD, Boolean _huy, String _maMay)
        {
            SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spBC_ChuyenMonPT_Update", _maKhoa, _thang.DBValue, _ma, _tongso, _KeHoach, _Uac, _CapCuu, _TBGayMe, _TBNhiemKhuan, _TBKhac, _TVTrenBan, _TV24, _nguoiSD, _huy, _maMay);
        }
        public override void DeleteBC_ChuyenMonPT(String _maKhoa, SmartDate _thang, String _ma, String _nguoiSD, String _maMay)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spBC_ChuyenMonPT_Deleted", _maKhoa, _thang.DBValue, _ma, _nguoiSD, _maMay);
        }

        #endregion
        #region Bao cao mac benh
        public override String InsertBC_MacBenh(String _maKhoa, SmartDate _thang, String _maQH, Int32 _dauMatMoi, Int32 _dauMatCu, Int32 _phoiMoi, Int32 _phoiCu, Int32 _vuMoi, Int32 _vuCu, Int32 _tieuHoaMoi, Int32 _tieuHoaCu, Int32 _hachMoi, Int32 _hachCu, Int32 _phuMoi, Int32 _phuCu, Int32 _khacMoi, Int32 _khacCu, Int32 _tongSo, Int32 _moiMac, Int32 _ulanh, String _nguoiSD, String _maMay)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spBC_MacBenh_CREATE", _maKhoa, _thang.DBValue, _maQH, _dauMatMoi, _dauMatCu, _phoiMoi, _phoiCu, _vuMoi, _vuCu, _tieuHoaMoi, _tieuHoaCu, _hachMoi, _hachCu, _phuMoi, _phuCu, _khacMoi, _khacCu, _tongSo, _moiMac, _ulanh, _nguoiSD, _maMay));
        }
        public override void UpdateBC_MacBenh(String _maKhoa, SmartDate _thang, String _maQH, Int32 _dauMatMoi, Int32 _dauMatCu, Int32 _phoiMoi, Int32 _phoiCu, Int32 _vuMoi, Int32 _vuCu, Int32 _tieuHoaMoi, Int32 _tieuHoaCu, Int32 _hachMoi, Int32 _hachCu, Int32 _phuMoi, Int32 _phuCu, Int32 _khacMoi, Int32 _khacCu, Int32 _tongSo, Int32 _moiMac, Int32 _ulanh, String _nguoiSD, Boolean _huy, String _maMay)
        {
            SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spBC_MacBenh_Update", _maKhoa, _thang.DBValue, _maQH, _dauMatMoi, _dauMatCu, _phoiMoi, _phoiCu, _vuMoi, _vuCu, _tieuHoaMoi, _tieuHoaCu, _hachMoi, _hachCu, _phuMoi, _phuCu, _khacMoi, _khacCu, _tongSo, _moiMac, _ulanh, _nguoiSD, _huy, _maMay);
        }
        public override void DeleteBC_MacBenh(String _maKhoa, SmartDate _thang, String _maQH, String _nguoiSD, String _maMay)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spBC_MacBenh_Deleted", _maKhoa, _thang.DBValue, _maQH, _nguoiSD, _maMay);
        }

        #endregion

        #region Bao cao ke hoach
        public override String InsertBC_KeHoachBV(String _nam, Decimal _ma, Decimal _kHThang1, Decimal _tTThang1, Decimal _kHThang2, Decimal _tTThang2, Decimal _kHThang3, Decimal _tTThang3, Decimal _kHThang4, Decimal _tTThang4, Decimal _kHThang5, Decimal _tTThang5, Decimal _kHThang6, Decimal _tTThang6, Decimal _kHThang7, Decimal _tTThang7, Decimal _kHThang8, Decimal _tTThang8, Decimal _kHThang9, Decimal _tTThang9, Decimal _kHThang10, Decimal _tTThang10, Decimal _kHThang11, Decimal _tTThang11, Decimal _kHThang12, Decimal _tTThang12, String _nguoiSD, String _maMay)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spBC_KeHoachBV_CREATE", _nam, _ma, _kHThang1, _tTThang1, _kHThang2, _tTThang2, _kHThang3, _tTThang3, _kHThang4, _tTThang4, _kHThang5, _tTThang5, _kHThang6, _tTThang6, _kHThang7, _tTThang7, _kHThang8, _tTThang8, _kHThang9, _tTThang9, _kHThang10, _tTThang10, _kHThang11, _tTThang11, _kHThang12, _tTThang12, _nguoiSD, _maMay));
        }
        public override void UpdateBC_KeHoachBV(String _nam, Decimal _ma, Decimal _kHThang1, Decimal _tTThang1, Decimal _kHThang2, Decimal _tTThang2, Decimal _kHThang3, Decimal _tTThang3, Decimal _kHThang4, Decimal _tTThang4, Decimal _kHThang5, Decimal _tTThang5, Decimal _kHThang6, Decimal _tTThang6, Decimal _kHThang7, Decimal _tTThang7, Decimal _kHThang8, Decimal _tTThang8, Decimal _kHThang9, Decimal _tTThang9, Decimal _kHThang10, Decimal _tTThang10, Decimal _kHThang11, Decimal _tTThang11, Decimal _kHThang12, Decimal _tTThang12, String _nguoiSD, Boolean _huy, String _maMay)
        {
            SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spBC_KeHoachBV_Update", _nam, _ma, _kHThang1, _tTThang1, _kHThang2, _tTThang2, _kHThang3, _tTThang3, _kHThang4, _tTThang4, _kHThang5, _tTThang5, _kHThang6, _tTThang6, _kHThang7, _tTThang7, _kHThang8, _tTThang8, _kHThang9, _tTThang9, _kHThang10, _tTThang10, _kHThang11, _tTThang11, _kHThang12, _tTThang12, _nguoiSD, _huy, _maMay);
        }
        public override void DeleteBC_KeHoachBV(String _nam, Decimal _ma, String _nguoiSD, String _maMay)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spBC_KeHoachBV_Delete", _nam, _ma, _nguoiSD, _maMay);
        }

        #endregion
        #region Bao cao ke hoach
        public override String InsertBC_KeHoachKhoa(String _nam, string _ma, Decimal _kHThang1, Decimal _tTThang1, Decimal _kHThang2, Decimal _tTThang2, Decimal _kHThang3, Decimal _tTThang3, Decimal _kHThang4, Decimal _tTThang4, Decimal _kHThang5, Decimal _tTThang5, Decimal _kHThang6, Decimal _tTThang6, Decimal _kHThang7, Decimal _tTThang7, Decimal _kHThang8, Decimal _tTThang8, Decimal _kHThang9, Decimal _tTThang9, Decimal _kHThang10, Decimal _tTThang10, Decimal _kHThang11, Decimal _tTThang11, Decimal _kHThang12, Decimal _tTThang12, String _nguoiSD, String _maMay)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spBC_KeHoachKhoa_CREATE", _nam, _ma, _kHThang1, _tTThang1, _kHThang2, _tTThang2, _kHThang3, _tTThang3, _kHThang4, _tTThang4, _kHThang5, _tTThang5, _kHThang6, _tTThang6, _kHThang7, _tTThang7, _kHThang8, _tTThang8, _kHThang9, _tTThang9, _kHThang10, _tTThang10, _kHThang11, _tTThang11, _kHThang12, _tTThang12, _nguoiSD, _maMay));
        }
        public override void UpdateBC_KeHoachKhoa(String _nam, string _ma, Decimal _kHThang1, Decimal _tTThang1, Decimal _kHThang2, Decimal _tTThang2, Decimal _kHThang3, Decimal _tTThang3, Decimal _kHThang4, Decimal _tTThang4, Decimal _kHThang5, Decimal _tTThang5, Decimal _kHThang6, Decimal _tTThang6, Decimal _kHThang7, Decimal _tTThang7, Decimal _kHThang8, Decimal _tTThang8, Decimal _kHThang9, Decimal _tTThang9, Decimal _kHThang10, Decimal _tTThang10, Decimal _kHThang11, Decimal _tTThang11, Decimal _kHThang12, Decimal _tTThang12, String _nguoiSD, Boolean _huy, String _maMay)
        {
            SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spBC_KeHoachKhoa_Update", _nam, _ma, _kHThang1, _tTThang1, _kHThang2, _tTThang2, _kHThang3, _tTThang3, _kHThang4, _tTThang4, _kHThang5, _tTThang5, _kHThang6, _tTThang6, _kHThang7, _tTThang7, _kHThang8, _tTThang8, _kHThang9, _tTThang9, _kHThang10, _tTThang10, _kHThang11, _tTThang11, _kHThang12, _tTThang12, _nguoiSD, _huy, _maMay);
        }
        public override void DeleteBC_KeHoachKhoa(String _nam, string _ma, String _nguoiSD, String _maMay)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spBC_KeHoachKhoa_Delete", _nam, _ma, _nguoiSD, _maMay);
        }

        #endregion

        #region Bao cao chuyen mon phong kham
        public override void InsertBC_THChuyenMon(SmartDate _tuNgay, SmartDate _denNgay, Byte _loaiBC, Int32 _giuongKH, Int32 _giuongTT, Int32 _solanKham_KKB, Int32 _solanKham_PhuongXa, Int32 _solanKham_KhuVuc, Int32 _solanKham_DuPhong, Int32 _solanKhamCC, Int32 _solanKhamCC_DUOI6TUOI, Int32 _solanKhamCC_NGOAITINH, Int32 _solanKhamCC_BH, Int32 _solanKhamCC_YC, Int32 _solanKhamCC_NN, Int32 _solanKhamCC_MF, Int32 _solanKhamCC_TE, Int32 _songuoikham_KKB, Int32 _songuoikham_NN, Int32 _songuoikham_DUOI6TUOI, Int32 _songuoikham_NBNgoaiTinh, Int32 _songuoiKham_PhuongXa, Int32 _songuoiKham_KhuVuc, Int32 _songuoiKham_DuPhong, Int32 _songuoiDTNgoaitru, Int32 _songayDTNgoaitru, Int32 _tainanGiaothong, Int32 _tainanGiaothong_NBTuVong, Int32 _tainanGiaothong_PHAUTHUATCHANTHUONG, Int32 _tainanGiaothong_PHAUTHUATCHINHHINH, Int32 _tainanSinhhoat, Int32 _tainanLaodong, Int32 _phauThuat_KH, Int32 _phauThuat_CC, Int32 _tHUTHUAT_KH, Int32 _tHUTHUAT_CC, Int32 _cHUYENVIEN_NOITRU, Int32 _cHUYENVIEN_NGOAITRU, Int32 _tUVONG_NGUOILON, Int32 _tUVONG_DUOI5TUOI, Int32 _tUVONG_TREN5TUOI, Int32 _tUVONG_NOITRU, Int32 _tUVONG_KKB, Int32 _cHETTRUOC24H_NGUOILON, Int32 _cHETTRUOC24H_DUOI5TUOI, Int32 _cHETTRUOC24H_TU5DEN15TUOI, Int32 _cHETTRUOC24H_NOITRU, Int32 _cHETTRUOC24H_KKB, Int32 _tIEUBANXETNGHIEM, Int32 _cHANDOANHINHANH, Int32 _chieuXQ, Int32 _chupXQ, Int32 _sIEUAM, Int32 _scanner, Int32 _xQKhac, Int32 _sIEUAMKHAC, Int32 _tHAMDOCHUCNANG, Int32 _dIENTIM, Int32 _dienNao, Int32 _noiSoi, Int32 _tDCNKhac, Int32 _sOBENHANDAKIEMTRA, Int32 _sONGUOIBENHDAUKY, Int32 _sONGUOIBENHVAOVIEN, Int32 _sONGUOIBENHVAOVIEN_BH, Int32 _sONGUOIBENHVAOVIEN_KHONGBH, Int32 _sONGUOIBENHVAOVIEN_NGUOINGHEO, Int32 _sONGUOIBENHVAOVIEN_DUOI6TUOI, Int32 _sONGUOIBENHVAOVIEN_6DEN15TUOI, Int32 _sONGUOIBENHVAOVIEN_NGOAITINH, Int32 _sONGUOIBENHRAVIEN, Int32 _sONGUOIBENHCONLAI, Int32 _sONGUOIBENHCONLAI_BH, Int32 _sONGUOIBENHCONLAI_KHONGBH, Int32 _sONGUOIBENHCONLAI_DUOI6TUOI, Int32 _sONGUOIBENHCONLAI_TU6DEN15TUOI, Int32 _tONGSONGAYDIEUTRI, Int32 _tONGSONGAYDIEUTRI_RAVIEN, Decimal _tONGGIUONG, Int32 _sXH_Cu, Int32 _sXH_Vao, Int32 _sXH_CVien, Int32 _sXH_Ra, Int32 _sXH_TVong, Int32 _sXH_HienCo, Int32 _sXH_TichLuy, Int32 _tCC_Cu, Int32 _tCC_Vao, Int32 _tCC_CVien, Int32 _tCC_Ra, Int32 _tCC_TVong, Int32 _tCC_HienCo, Int32 _tCC_TichLuy, Int32 _khac_Cu, Int32 _khac_Vao, Int32 _khac_CVien, Int32 _khac_Ra, Int32 _khac_TVong, Int32 _khac_HienCo, Int32 _khac_TichLuy, Int32 _khac_Cu1, Int32 _khac_Vao1, Int32 _khac_CVien1, Int32 _khac_Ra1, Int32 _khac_TVong1, Int32 _khac_HienCo1, Int32 _khac_TichLuy1, Decimal _benhAnKT_Tot, Decimal _benhAnKT_Kha, Decimal _benhAnKT_TB, Decimal _benhAnKT_Kem, Decimal _donThuocKT_Tot, Decimal _donThuocKT_Kha, Decimal _donThuocKT_TB, Decimal _donThuocKT_Kem, String _tacHaiThuoc, String _taiBien, String _dacBiet, String _cacHDCM, String _deNghiSoYT, String _ghiChu, String _nguoiSD, String _maMay)
        {
            SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spBC_THChuyenMon_CREATE", _tuNgay.DBValue, _denNgay.DBValue, _loaiBC, _giuongKH, _giuongTT, _solanKham_KKB, _solanKham_PhuongXa, _solanKham_KhuVuc, _solanKham_DuPhong, _solanKhamCC, _solanKhamCC_DUOI6TUOI, _solanKhamCC_NGOAITINH, _solanKhamCC_BH, _solanKhamCC_YC, _solanKhamCC_NN, _solanKhamCC_MF, _solanKhamCC_TE, _songuoikham_KKB, _songuoikham_NN, _songuoikham_DUOI6TUOI, _songuoikham_NBNgoaiTinh, _songuoiKham_PhuongXa, _songuoiKham_KhuVuc, _songuoiKham_DuPhong, _songuoiDTNgoaitru, _songayDTNgoaitru, _tainanGiaothong, _tainanGiaothong_NBTuVong, _tainanGiaothong_PHAUTHUATCHANTHUONG, _tainanGiaothong_PHAUTHUATCHINHHINH, _tainanSinhhoat, _tainanLaodong, _phauThuat_KH, _phauThuat_CC, _tHUTHUAT_KH, _tHUTHUAT_CC, _cHUYENVIEN_NOITRU, _cHUYENVIEN_NGOAITRU, _tUVONG_NGUOILON, _tUVONG_DUOI5TUOI, _tUVONG_TREN5TUOI, _tUVONG_NOITRU, _tUVONG_KKB, _cHETTRUOC24H_NGUOILON, _cHETTRUOC24H_DUOI5TUOI, _cHETTRUOC24H_TU5DEN15TUOI, _cHETTRUOC24H_NOITRU, _cHETTRUOC24H_KKB, _tIEUBANXETNGHIEM, _cHANDOANHINHANH, _chieuXQ, _chupXQ, _sIEUAM, _scanner, _xQKhac, _sIEUAMKHAC, _tHAMDOCHUCNANG, _dIENTIM, _dienNao, _noiSoi, _tDCNKhac, _sOBENHANDAKIEMTRA, _sONGUOIBENHDAUKY, _sONGUOIBENHVAOVIEN, _sONGUOIBENHVAOVIEN_BH, _sONGUOIBENHVAOVIEN_KHONGBH, _sONGUOIBENHVAOVIEN_NGUOINGHEO, _sONGUOIBENHVAOVIEN_DUOI6TUOI, _sONGUOIBENHVAOVIEN_6DEN15TUOI, _sONGUOIBENHVAOVIEN_NGOAITINH, _sONGUOIBENHRAVIEN, _sONGUOIBENHCONLAI, _sONGUOIBENHCONLAI_BH, _sONGUOIBENHCONLAI_KHONGBH, _sONGUOIBENHCONLAI_DUOI6TUOI, _sONGUOIBENHCONLAI_TU6DEN15TUOI, _tONGSONGAYDIEUTRI, _tONGSONGAYDIEUTRI_RAVIEN, _tONGGIUONG, _sXH_Cu, _sXH_Vao, _sXH_CVien, _sXH_Ra, _sXH_TVong, _sXH_HienCo, _sXH_TichLuy, _tCC_Cu, _tCC_Vao, _tCC_CVien, _tCC_Ra, _tCC_TVong, _tCC_HienCo, _tCC_TichLuy, _khac_Cu, _khac_Vao, _khac_CVien, _khac_Ra, _khac_TVong, _khac_HienCo, _khac_TichLuy, _khac_Cu1, _khac_Vao1, _khac_CVien1, _khac_Ra1, _khac_TVong1, _khac_HienCo1, _khac_TichLuy1, _benhAnKT_Tot, _benhAnKT_Kha, _benhAnKT_TB, _benhAnKT_Kem, _donThuocKT_Tot, _donThuocKT_Kha, _donThuocKT_TB, _donThuocKT_Kem, _tacHaiThuoc, _taiBien, _dacBiet, _cacHDCM, _deNghiSoYT, _ghiChu, _nguoiSD, _maMay);
        }
        public override void UpdateBC_THChuyenMon(string _mabc, SmartDate _tuNgay, SmartDate _denNgay, Byte _loaiBC, Int32 _giuongKH, Int32 _giuongTT, Int32 _solanKham_KKB, Int32 _solanKham_PhuongXa, Int32 _solanKham_KhuVuc, Int32 _solanKham_DuPhong, Int32 _solanKhamCC, Int32 _solanKhamCC_DUOI6TUOI, Int32 _solanKhamCC_NGOAITINH, Int32 _solanKhamCC_BH, Int32 _solanKhamCC_YC, Int32 _solanKhamCC_NN, Int32 _solanKhamCC_MF, Int32 _solanKhamCC_TE, Int32 _songuoikham_KKB, Int32 _songuoikham_NN, Int32 _songuoikham_DUOI6TUOI, Int32 _songuoikham_NBNgoaiTinh, Int32 _songuoiKham_PhuongXa, Int32 _songuoiKham_KhuVuc, Int32 _songuoiKham_DuPhong, Int32 _songuoiDTNgoaitru, Int32 _songayDTNgoaitru, Int32 _tainanGiaothong, Int32 _tainanGiaothong_NBTuVong, Int32 _tainanGiaothong_PHAUTHUATCHANTHUONG, Int32 _tainanGiaothong_PHAUTHUATCHINHHINH, Int32 _tainanSinhhoat, Int32 _tainanLaodong, Int32 _phauThuat_KH, Int32 _phauThuat_CC, Int32 _tHUTHUAT_KH, Int32 _tHUTHUAT_CC, Int32 _cHUYENVIEN_NOITRU, Int32 _cHUYENVIEN_NGOAITRU, Int32 _tUVONG_NGUOILON, Int32 _tUVONG_DUOI5TUOI, Int32 _tUVONG_TREN5TUOI, Int32 _tUVONG_NOITRU, Int32 _tUVONG_KKB, Int32 _cHETTRUOC24H_NGUOILON, Int32 _cHETTRUOC24H_DUOI5TUOI, Int32 _cHETTRUOC24H_TU5DEN15TUOI, Int32 _cHETTRUOC24H_NOITRU, Int32 _cHETTRUOC24H_KKB, Int32 _tIEUBANXETNGHIEM, Int32 _cHANDOANHINHANH, Int32 _chieuXQ, Int32 _chupXQ, Int32 _sIEUAM, Int32 _scanner, Int32 _xQKhac, Int32 _sIEUAMKHAC, Int32 _tHAMDOCHUCNANG, Int32 _dIENTIM, Int32 _dienNao, Int32 _noiSoi, Int32 _tDCNKhac, Int32 _sOBENHANDAKIEMTRA, Int32 _sONGUOIBENHDAUKY, Int32 _sONGUOIBENHVAOVIEN, Int32 _sONGUOIBENHVAOVIEN_BH, Int32 _sONGUOIBENHVAOVIEN_KHONGBH, Int32 _sONGUOIBENHVAOVIEN_NGUOINGHEO, Int32 _sONGUOIBENHVAOVIEN_DUOI6TUOI, Int32 _sONGUOIBENHVAOVIEN_6DEN15TUOI, Int32 _sONGUOIBENHVAOVIEN_NGOAITINH, Int32 _sONGUOIBENHRAVIEN, Int32 _sONGUOIBENHCONLAI, Int32 _sONGUOIBENHCONLAI_BH, Int32 _sONGUOIBENHCONLAI_KHONGBH, Int32 _sONGUOIBENHCONLAI_DUOI6TUOI, Int32 _sONGUOIBENHCONLAI_TU6DEN15TUOI, Int32 _tONGSONGAYDIEUTRI, Int32 _tONGSONGAYDIEUTRI_RAVIEN, Decimal _tONGGIUONG, Int32 _sXH_Cu, Int32 _sXH_Vao, Int32 _sXH_CVien, Int32 _sXH_Ra, Int32 _sXH_TVong, Int32 _sXH_HienCo, Int32 _sXH_TichLuy, Int32 _tCC_Cu, Int32 _tCC_Vao, Int32 _tCC_CVien, Int32 _tCC_Ra, Int32 _tCC_TVong, Int32 _tCC_HienCo, Int32 _tCC_TichLuy, Int32 _khac_Cu, Int32 _khac_Vao, Int32 _khac_CVien, Int32 _khac_Ra, Int32 _khac_TVong, Int32 _khac_HienCo, Int32 _khac_TichLuy, Int32 _khac_Cu1, Int32 _khac_Vao1, Int32 _khac_CVien1, Int32 _khac_Ra1, Int32 _khac_TVong1, Int32 _khac_HienCo1, Int32 _khac_TichLuy1, Decimal _benhAnKT_Tot, Decimal _benhAnKT_Kha, Decimal _benhAnKT_TB, Decimal _benhAnKT_Kem, Decimal _donThuocKT_Tot, Decimal _donThuocKT_Kha, Decimal _donThuocKT_TB, Decimal _donThuocKT_Kem, String _tacHaiThuoc, String _taiBien, String _dacBiet, String _cacHDCM, String _deNghiSoYT, String _ghiChu, String _nguoiSD, Boolean _huy, String _maMay)
        {
            SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spBC_THChuyenMon_Update", _mabc, _tuNgay.DBValue, _denNgay.DBValue, _loaiBC, _giuongKH, _giuongTT, _solanKham_KKB, _solanKham_PhuongXa, _solanKham_KhuVuc, _solanKham_DuPhong, _solanKhamCC, _solanKhamCC_DUOI6TUOI, _solanKhamCC_NGOAITINH, _solanKhamCC_BH, _solanKhamCC_YC, _solanKhamCC_NN, _solanKhamCC_MF, _solanKhamCC_TE, _songuoikham_KKB, _songuoikham_NN, _songuoikham_DUOI6TUOI, _songuoikham_NBNgoaiTinh, _songuoiKham_PhuongXa, _songuoiKham_KhuVuc, _songuoiKham_DuPhong, _songuoiDTNgoaitru, _songayDTNgoaitru, _tainanGiaothong, _tainanGiaothong_NBTuVong, _tainanGiaothong_PHAUTHUATCHANTHUONG, _tainanGiaothong_PHAUTHUATCHINHHINH, _tainanSinhhoat, _tainanLaodong, _phauThuat_KH, _phauThuat_CC, _tHUTHUAT_KH, _tHUTHUAT_CC, _cHUYENVIEN_NOITRU, _cHUYENVIEN_NGOAITRU, _tUVONG_NGUOILON, _tUVONG_DUOI5TUOI, _tUVONG_TREN5TUOI, _tUVONG_NOITRU, _tUVONG_KKB, _cHETTRUOC24H_NGUOILON, _cHETTRUOC24H_DUOI5TUOI, _cHETTRUOC24H_TU5DEN15TUOI, _cHETTRUOC24H_NOITRU, _cHETTRUOC24H_KKB, _tIEUBANXETNGHIEM, _cHANDOANHINHANH, _chieuXQ, _chupXQ, _sIEUAM, _scanner, _xQKhac, _sIEUAMKHAC, _tHAMDOCHUCNANG, _dIENTIM, _dienNao, _noiSoi, _tDCNKhac, _sOBENHANDAKIEMTRA, _sONGUOIBENHDAUKY, _sONGUOIBENHVAOVIEN, _sONGUOIBENHVAOVIEN_BH, _sONGUOIBENHVAOVIEN_KHONGBH, _sONGUOIBENHVAOVIEN_NGUOINGHEO, _sONGUOIBENHVAOVIEN_DUOI6TUOI, _sONGUOIBENHVAOVIEN_6DEN15TUOI, _sONGUOIBENHVAOVIEN_NGOAITINH, _sONGUOIBENHRAVIEN, _sONGUOIBENHCONLAI, _sONGUOIBENHCONLAI_BH, _sONGUOIBENHCONLAI_KHONGBH, _sONGUOIBENHCONLAI_DUOI6TUOI, _sONGUOIBENHCONLAI_TU6DEN15TUOI, _tONGSONGAYDIEUTRI, _tONGSONGAYDIEUTRI_RAVIEN, _tONGGIUONG, _sXH_Cu, _sXH_Vao, _sXH_CVien, _sXH_Ra, _sXH_TVong, _sXH_HienCo, _sXH_TichLuy, _tCC_Cu, _tCC_Vao, _tCC_CVien, _tCC_Ra, _tCC_TVong, _tCC_HienCo, _tCC_TichLuy, _khac_Cu, _khac_Vao, _khac_CVien, _khac_Ra, _khac_TVong, _khac_HienCo, _khac_TichLuy, _khac_Cu1, _khac_Vao1, _khac_CVien1, _khac_Ra1, _khac_TVong1, _khac_HienCo1, _khac_TichLuy1, _benhAnKT_Tot, _benhAnKT_Kha, _benhAnKT_TB, _benhAnKT_Kem, _donThuocKT_Tot, _donThuocKT_Kha, _donThuocKT_TB, _donThuocKT_Kem, _tacHaiThuoc, _taiBien, _dacBiet, _cacHDCM, _deNghiSoYT, _ghiChu, _nguoiSD, _huy, _maMay);
        }
        public override void DeleteBC_THChuyenMon(string _mabc, String _nguoiSD, String _maMay)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spBC_THChuyenMon_Deleted", _mabc, _nguoiSD, _maMay);
        }

        #endregion
        #region Bao cao hoat dong suc khoe

        public override String InsertBC_HDSucKhoe(String _maBC, String _ma, Int32 _soLuong, String _nguoiSD, String _maMay)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spBC_HDSUCKHOE_CREATE", _maBC, _ma, _soLuong, _nguoiSD, _maMay));
        }
        public override void UpdateBC_HDSucKhoe(String _maBC, String _ma, Int32 _soLuong, String _nguoiSD, bool _huy, String _maMay)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spBC_HDSucKhoe_Update", _maBC, _ma, _soLuong, _nguoiSD, _huy, _maMay);
        }
        public override void DeleteBC_HDSucKhoe(String _maMay, String _nguoiSD, String _maBC, String _ma)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spBC_HDSucKhoe_Deleted", _maMay, _nguoiSD, _maBC, _ma);
        }

        #endregion

        #region Bao cao duoc benh vien

        public override String InsertBC_DuocBV(String _maBC, String _ma, String _donvi, Decimal _soLuong, Decimal _ti_le, String _nguoiSD, String _maMay)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spBC_DuocBV_CREATE", _maBC, _ma, _donvi, _soLuong,_ti_le , _nguoiSD, _maMay));
        }
        public override void UpdateBC_DuocBV(String _maBC, String _ma, String _donvi, Decimal _soLuong, Decimal _ti_le, String _nguoiSD, Boolean _huy, String _maMay)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spBC_DuocBV_Update", _maBC, _ma, _donvi, _soLuong,_ti_le, _nguoiSD, _huy, _maMay);
        }
        public override void DeleteBC_DuocBV(String _maMay, String _nguoiSD, String _maBC, String _ma)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spBC_DuocBV_Deleted", _maMay, _nguoiSD, _maBC, _ma);
        }

        #endregion

        #region Bao cao noi dung bao cao khth

        public override String InsertBC_KHTH(SmartDate _tuNgay, SmartDate _denNgay, string _tieuDeBC, int _soLanKham_PX, int _soLanKham_DP, int _soNguoiKham_KV, int _soNguoiKham_PX, int _soNguoiKham_DP, string _tacHaiThuoc, string _bcChitiet, string _cacHDCM, string _deNghiSoYT, string _taiBien, int _benhAnKT_Tot, int _benhAnKT_Kha, int _benhAnKT_TB, int _benhAnKT_Kem, int _donThuocKT_Tot, int _donThuocKT_Kha, int _donThuocKT_TB, int _donThuocKT_Kem, string _maMay, string _nguoiSD)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "BC_KHTH_CREATE", _tuNgay.DBValue, _denNgay.DBValue, _tieuDeBC, _soLanKham_PX, _soLanKham_DP, _soNguoiKham_KV, _soNguoiKham_PX, _soNguoiKham_DP, _tacHaiThuoc, _bcChitiet, _cacHDCM, _deNghiSoYT, _taiBien, _benhAnKT_Tot, _benhAnKT_Kha, _benhAnKT_TB, _benhAnKT_Kem, _donThuocKT_Tot, _donThuocKT_Kha, _donThuocKT_TB, _donThuocKT_Kem, _maMay, _nguoiSD));
        }
        public override void UpdateBC_KHTH(String _maBC, SmartDate _tuNgay, SmartDate _denNgay, string _tieuDeBC, int _soLanKham_PX, int _soLanKham_DP, int _soNguoiKham_KV, int _soNguoiKham_PX, int _soNguoiKham_DP, string _tacHaiThuoc, string _bcChitiet, string _cacHDCM, string _deNghiSoYT, string _taiBien, int _benhAnKT_Tot, int _benhAnKT_Kha, int _benhAnKT_TB, int _benhAnKT_Kem, int _donThuocKT_Tot, int _donThuocKT_Kha, int _donThuocKT_TB, int _donThuocKT_Kem, Boolean _huy, string _maMay, string _nguoiSD)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "BC_KHTH_Update", _maBC, _tuNgay.DBValue, _denNgay.DBValue, _tieuDeBC, _soLanKham_PX, _soLanKham_DP, _soNguoiKham_KV, _soNguoiKham_PX, _soNguoiKham_DP, _tacHaiThuoc, _bcChitiet, _cacHDCM, _deNghiSoYT, _taiBien, _benhAnKT_Tot, _benhAnKT_Kha, _benhAnKT_TB, _benhAnKT_Kem, _donThuocKT_Tot, _donThuocKT_Kha, _donThuocKT_TB, _donThuocKT_Kem, _huy, _maMay, _nguoiSD);
        }
        public override void DeleteBC_KHTH(String _maMay, String _nguoiSD, String _maBC)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "BC_KHTH_DELETED", _maMay, _nguoiSD, _maBC);
        }

        #endregion

        #region Bao cao Hoat dong can lam sang

        public override String InsertBC_HDCanLamSang(String _maBC, String _maLH, String _maChungloai, String _donVi, String _ma, Int32 _tongSo, Int32 _noiTru, String _nguoiSD, String _maMay)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spBC_HDCanLamSang_CREATE", _maBC, _maLH, _maChungloai, _donVi, _ma, _tongSo, _noiTru, _nguoiSD, _maMay));
        }
        public override void UpdateBC_HDCanLamSang(String _maBC, String _maLH, String _maChungloai, String _donVi, String _ma, Int32 _tongSo, Int32 _noiTru, String _nguoiSD, Boolean _huy, String _maMay)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spBC_HDCanLamSang_Update", _maBC, _maLH, _maChungloai, _donVi, _ma, _tongSo, _noiTru, _nguoiSD, _huy, _maMay);
        }
        public override void DeleteBC_HDCanLamSang(String _maMay, String _nguoiSD, String _maBC, String _ma)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spBC_HDCanLamSang_Deleted", _maMay, _nguoiSD, _maBC, _ma);
        }

        #endregion

        #region Bao Cao Ke Hoach
        public override string InsertBC_KeHoach(string _maBC, string _ma, Decimal _Nam, Decimal _quy1, Decimal _quy2, Decimal _quy3, Decimal _quy4, string _nguoiSD, string _maMay)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spBC_KeHoach_CREATE", _maBC, _ma, _Nam, _quy1, _quy2, _quy3, _quy4, _nguoiSD, _maMay));

        }
        public override void UpdateBC_KeHoach(string _maBC, string _ma, Decimal _Nam, Decimal _quy1, Decimal _quy2, Decimal _quy3, Decimal _quy4, string _nguoiSD, Boolean _huy, string _maMay)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spBC_KeHoach_Update", _maBC, _ma, _Nam, _quy1, _quy2, _quy3, _quy4, _nguoiSD, _huy, _maMay);
        }
        public override void DeleteBC_KeHoach(string _maBC, string _ma, string _nguoiSD, string _maMay)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spBC_KeHoach_Deleted", _maBC, _ma, _nguoiSD, _maMay);
        }
        #endregion

        #region Bao cao hoat dong chi dao tuyen A

        public override String InsertBC_HDChiDaoTuyenA(String _maBC, String _ma, String _donvi, Decimal _soLuong, String _nguoiSD, String _maMay)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spBC_HDChiDaoTuyenA_CREATE", _maBC, _ma, _donvi, _soLuong, _nguoiSD, _maMay));
        }
        public override void UpdateBC_HDChiDaoTuyenA(String _maBC, String _ma, String _donvi, Decimal _soLuong, String _nguoiSD, Boolean _huy, String _maMay)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spBC_HDChiDaoTuyenA_Update", _maBC, _ma, _donvi, _soLuong, _nguoiSD, _huy, _maMay);
        }
        public override void DeleteBC_HDChiDaoTuyenA(String _maMay, String _nguoiSD, String _maBC, String _ma)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spBC_HDChiDaoTuyenA_Deleted", _maMay, _nguoiSD, _maBC, _ma);
        }

        #endregion

        #region Bao cao hoat dong chi dao tuyen B


        public override String InsertBC_HDChiDaoTuyenB(String _maBC, String _tenDeTai, decimal _kinhPhi, Int32 _sLCapNN, Int32 _sLCapBo, Int32 _sLCapCoSo, String _nguoiSD, String _maMay)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spBC_HDChiDaoTuyenB_CREATE", _maBC, _tenDeTai, _kinhPhi, _sLCapNN, _sLCapBo, _sLCapCoSo, _nguoiSD, _maMay));
        }
        public override void UpdateBC_HDChiDaoTuyenB(String _maBC, Int32 _sTT, String _tenDeTai, decimal _kinhPhi, Int32 _sLCapNN, Int32 _sLCapBo, Int32 _sLCapCoSo, String _nguoiSD, Boolean _huy, String _maMay)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spBC_HDChiDaoTuyenB_Update", _maBC, _sTT, _tenDeTai, _kinhPhi, _sLCapNN, _sLCapBo, _sLCapCoSo, _nguoiSD, _huy, _maMay);
        }
        public override void DeleteBC_HDChiDaoTuyenB(String _maMay, String _nguoiSD, String _maBC, Int32 _sTT)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spBC_HDChiDaoTuyenB_Deleted", _maMay, _nguoiSD, _maBC, _sTT);
        }
        #endregion

        #region Bao cao hoat dong dieu tri


        public override String InsertBC_HDDieuTri(String _maBC, String _maKhoa, Int32 _soGiuong, Int32 _songuoiDK, Int32 _nguoiBenh, Int32 _nguoiBenhTre, Int32 _nguoiBenhCC, Int32 _soNgayDT, Int32 _nguoiBenhTV, Int32 _nguoiBenhTVTre, Int32 _nguoiBenhTVTruoc, Int32 _nguoiBenhBH, Int32 _soNguoiCK, String _maMay, String _nguoiSD)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spBC_HDDIEUTRI_CREATE", _maBC, _maKhoa, _soGiuong, _songuoiDK, _nguoiBenh, _nguoiBenhTre, _nguoiBenhCC, _soNgayDT, _nguoiBenhTV, _nguoiBenhTVTre, _nguoiBenhTVTruoc, _nguoiBenhBH, _soNguoiCK, _maMay, _nguoiSD));
        }
        public override void UpdateBC_HDDieuTri(String _maBC, String _maKhoa, Int32 _soGiuong, Int32 _songuoiDK, Int32 _nguoiBenh, Int32 _nguoiBenhTre, Int32 _nguoiBenhCC, Int32 _soNgayDT, Int32 _nguoiBenhTV, Int32 _nguoiBenhTVTre, Int32 _nguoiBenhTVTruoc, Int32 _nguoiBenhBH, Int32 _soNguoiCK, String _maMay, Boolean _huy, String _nguoiSD)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spBC_HDDieuTri_Update", _maBC, _maKhoa, _soGiuong, _songuoiDK, _nguoiBenh, _nguoiBenhTre, _nguoiBenhCC, _soNgayDT, _nguoiBenhTV, _nguoiBenhTVTre, _nguoiBenhTVTruoc, _nguoiBenhBH, _soNguoiCK, _maMay, _huy, _nguoiSD);
        }
        public override void DeleteBC_HDDieuTri(String _maMay, String _nguoiSD, String _maBC, String _maKhoa)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spBC_HDDieuTri_Deleted", _maMay, _nguoiSD, _maBC, _maKhoa);
        }
        #endregion

        #region Bao cao hoat dong kham benh

        public override String InsertBC_HDKhamBenh(String _maBC, String _maKhoa, Int32 _soLanBH, Int32 _soLanVP, Int32 _soLanKThu, Int32 _soLanCC, Int32 _soNguoiVV, Int32 _soNguoiCV, Int32 _soNguoiDT, Int32 _soNgayDT, String _maMay, String _nguoiSD)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spBC_HDKhamBenh_CREATE", _maBC, _maKhoa, _soLanBH, _soLanVP, _soLanKThu, _soLanCC, _soNguoiVV, _soNguoiCV, _soNguoiDT, _soNgayDT, _maMay, _nguoiSD));
        }
        public override void UpdateBC_HDKhamBenh(String _maBC, String _maKhoa, Int32 _soLanBH, Int32 _soLanVP, Int32 _soLanKThu, Int32 _soLanCC, Int32 _soNguoiVV, Int32 _soNguoiCV, Int32 _soNguoiDT, Int32 _soNgayDT, String _maMay, Boolean _huy, String _nguoiSD)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spBC_HDKhamBenh_Update", _maBC, _maKhoa, _soLanBH, _soLanVP, _soLanKThu, _soLanCC, _soNguoiVV, _soNguoiCV, _soNguoiDT, _soNgayDT, _maMay, _huy, _nguoiSD);
        }
        public override void DeleteBC_HDKhamBenh(String _maMay, String _nguoiSD, String _maBC, String _maKhoa)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spBC_HDKhamBenh_Deleted", _maMay, _nguoiSD, _maBC, _maKhoa);
        }
        #endregion

        #region Bao cao hoat dong kham benh

        public override String InsertBC_HDKhamBenhYH(String _maBC, String _maKhoa, Int32 _soLanBH, Int32 _soLanYH, Int32 _soLan6, Int32 _soLanVP, Int32 _soLanKThu, Int32 _soLanCC, Int32 _soNguoiVV, Int32 _soNguoiCV, Int32 _soNguoiDT, Int32 _soNguoiYH, Int32 _soNguoi6, Int32 _soNgayDT, String _maMay, String _nguoiSD)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spBC_HDKhamBenhYH_CREATE", _maBC, _maKhoa, _soLanBH, _soLanVP, _soLanKThu, _soLanCC, _soNguoiVV, _soNguoiCV, _soNguoiDT, _soNguoiYH,  _soNguoi6,  _soNgayDT, _maMay, _nguoiSD));
        }
        public override void UpdateBC_HDKhamBenhYH(String _maBC, String _maKhoa, Int32 _soLanBH, Int32 _soLanYH, Int32 _soLan6, Int32 _soLanVP, Int32 _soLanKThu, Int32 _soLanCC, Int32 _soNguoiVV, Int32 _soNguoiCV, Int32 _soNguoiDT, Int32 _soNguoiYH, Int32 _soNguoi6,  Int32 _soNgayDT, String _maMay, Boolean _huy, String _nguoiSD)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spBC_HDKhamBenhYH_Update", _maBC, _maKhoa, _soLanBH, _soLanVP, _soLanKThu, _soLanCC, _soNguoiVV, _soNguoiCV, _soNguoiDT, _soNguoiYH, _soNguoi6, _soNgayDT, _maMay, _huy, _nguoiSD);
        }
        public override void DeleteBC_HDKhamBenhYH(String _maMay, String _nguoiSD, String _maBC, String _maKhoa)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spBC_HDKhamBenhYH_Deleted", _maMay, _nguoiSD, _maBC, _maKhoa);
        }
        #endregion

        #region Bao cao hoat dong phau thua




        public override String InsertBC_HDPhauThuat(String _maBC, String _maLH, String _maChungloai, Int32 _TongSoTheo, Int32 _theoKH, Int32 _theoCC, Int32 _taiBienHS, Int32 _taiBienNK, Int32 _taiBienK, Int32 _tuVongPT, Int32 _tuVongTrong24, String _maMay, String _nguoiSD, String _ma)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spBC_HDPhauThuat_CREATE", _maBC, _maLH, _maChungloai, _TongSoTheo, _theoKH, _theoCC, _taiBienHS, _taiBienNK, _taiBienK, _tuVongPT, _tuVongTrong24, _maMay, _nguoiSD, _ma));
        }
        public override void UpdateBC_HDPhauThuat(String _maBC, String _maLH, String _maChungloai, Int32 _TongSoTheo, Int32 _theoKH, Int32 _theoCC, Int32 _taiBienHS, Int32 _taiBienNK, Int32 _taiBienK, Int32 _tuVongPT, Int32 _tuVongTrong24, String _maMay, Boolean _huy, String _nguoiSD, String _ma)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spBC_HDPhauThuat_Update", _maBC, _maLH, _maChungloai, _TongSoTheo, _theoKH, _theoCC, _taiBienHS, _taiBienNK, _taiBienK, _tuVongPT, _tuVongTrong24, _maMay, _huy, _nguoiSD, _ma);
        }
        public override void DeleteBC_HDPhauThuat(String _maMay, String _nguoiSD, String _maBC, String _ma)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spBC_HDPhauThuat_Deleted", _maMay, _nguoiSD, _maBC, _ma);
        }
        #endregion


        #region Bao cao hoat dong Tai chinh

        public override String InsertBC_HDTaiChinh(String _maBC, String _ma, Decimal _sotien, String _nguoiSD, String _maMay)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spBC_HDTaiChinh_CREATE", _maBC, _ma, _sotien, _nguoiSD, _maMay));
        }
        public override void UpdateBC_HDTaiChinh(String _maBC, String _ma, Decimal _sotien, String _nguoiSD, bool _huy, String _maMay)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spBC_HDTaiChinh_Update", _maBC, _ma, _sotien, _nguoiSD, _huy, _maMay);
        }
        public override void DeleteBC_HDTaiChinh(String _maMay, String _nguoiSD, String _maBC, String _ma)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spBC_HDTaiChinh_Deleted", _maMay, _nguoiSD, _maBC, _ma);
        }

        #endregion

        #region Bao cao hoat dong Tai chinh BH

        public override String InsertBC_HDTaiChinhBH(String _maBC, String _ma, Decimal _vienphi, Decimal _BHYT, String _nguoiSD, String _maMay)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spBC_HDTaiChinhBH_CREATE", _maBC, _ma, _vienphi, _BHYT, _nguoiSD, _maMay));
        }
        public override void UpdateBC_HDTaiChinhBH(String _maBC, String _ma, Decimal _vienphi, Decimal _BHYT, String _nguoiSD, bool _huy, String _maMay)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spBC_HDTaiChinhBH_Update", _maBC, _ma, _vienphi, _BHYT, _nguoiSD, _huy, _maMay);
        }
        public override void DeleteBC_HDTaiChinhBH(String _maMay, String _nguoiSD, String _maBC, String _ma)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spBC_HDTaiChinhBH_Deleted", _maMay, _nguoiSD, _maBC, _ma);
        }

        #endregion

        #region Bao cao hoat dong Tai chinh kh thu


        public override String InsertBC_HDTaiChinhKhThu(String _maBC, String _ma, Int32 _soNguoiTT, Decimal _soTienTT, Int32 _soNguoiNT, Decimal _soTienNT, Int32 _soNguoiTE, Decimal _soTienTE, String _nguoiSD, String _maMay)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spBC_HDTaiChinhKhThu_CREATE", _maBC, _ma, _soNguoiTT, _soTienTT, _soNguoiNT, _soTienNT, _soNguoiTE, _soTienTE, _nguoiSD, _maMay));
        }
        public override void UpdateBC_HDTaiChinhKhThu(String _maBC, String _ma, Int32 _soNguoiTT, Decimal _soTienTT, Int32 _soNguoiNT, Decimal _soTienNT, Int32 _soNguoiTE, Decimal _soTienTE, String _nguoiSD, Boolean _huy, String _maMay)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spBC_HDTaiChinhKhThu_Update", _maBC, _ma, _soNguoiTT, _soTienTT, _soNguoiNT, _soTienNT, _soNguoiTE, _soTienTE, _nguoiSD, _huy, _maMay);
        }
        public override void DeleteBC_HDTaiChinhKhThu(String _maMay, String _nguoiSD, String _maBC, String _ma)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spBC_HDTaiChinhKhThu_Deleted", _maMay, _nguoiSD, _maBC, _ma);
        }
        #endregion

        #region Bao cao Master



        public override String InsertBC_Master(String _loaiBC, SmartDate _ngayBC, SmartDate _tuNgay, SmartDate _denNgay, String _nguoiLap, String _maMay)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spBC_Master_CREATE", _loaiBC, _ngayBC.DBValue, _tuNgay.DBValue, _denNgay.DBValue, _nguoiLap, _maMay));
        }
        public override void UpdateBC_Master(String _maBC, String _loaiBC, SmartDate _ngayBC, SmartDate _tuNgay, SmartDate _denNgay, String _nguoiSD, String _maMay, Boolean _huy)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spBC_Master_Update", _maBC, _loaiBC, _ngayBC.DBValue, _tuNgay.DBValue, _denNgay.DBValue, _nguoiSD, _maMay, _huy);
        }
        public override void DeleteBC_Master(String _maMay, String _nguoiSD, String _maBC, String _loaiBC)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spBC_Master_Deleted", _maMay, _nguoiSD, _maBC, _loaiBC);
        }
        #endregion

        #region Bao cao Danh muc
        public override String InsertBC_DanhMuc(String _donVi, String _maLoai, String _loaiBC, String _ten, String _nguoiSD, String _maMay)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spBC_DanhMuc_CREATE", _donVi, _maLoai, _loaiBC, _ten, _nguoiSD, _maMay));
        }
        public override void UpdateBC_DanhMuc(String _ma, String _donVi, String _maLoai, String _loaiBC, String _ten, String _nguoiSD, Boolean _huy, String _maMay)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spBC_DanhMuc_Update", _ma, _donVi, _maLoai, _loaiBC, _ten, _nguoiSD, _huy, _maMay);
        }
        public override void DeleteBC_DanhMuc(String _maMay, String _nguoiSD, String _ma)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spBC_DanhMuc_Deleted", _maMay, _nguoiSD, _ma);
        }



        #endregion

        #region Bao cao Danh muc Phan Loai
        public override String InsertBC_DanhMucPL(String _loaiBC, String _ten, String _nguoiSD, String _maMay)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spBC_DanhMucPL_CREATE", _loaiBC, _ten, _nguoiSD, _maMay));
        }
        public override void UpdateBC_DanhMucPL(String _maLoai, String _loaiBC, String _ten, String _nguoiSD, Boolean _huy, String _maMay)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spBC_DanhMucPL_Update", _maLoai, _loaiBC, _ten, _nguoiSD, _huy, _maMay);
        }
        public override void DeleteBC_DanhMucPL(String _maMay, String _nguoiSD, String _ma)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spBC_DanhMucPL_Deleted", _maMay, _nguoiSD, _ma);
        }



        #endregion

        #region Bao cao Tong hop can bo
        public override String InsertBC_THCanBo(String _maBC, String _maKhoa, Int32 _cBNu, Int32 _giaoSu, Int32 _tienSy, Int32 _thacSy, Int32 _cKII, Int32 _cKI, Int32 _bacSy, Int32 _duocSyDH, Int32 _khacDH, Int32 _yTaDH, Int32 _ysy, Int32 _kTVien, Int32 _duocSyTH, Int32 _yTaTH, Int32 _nuHoSinhTH, Int32 _khacTH, Int32 _yTaSH, Int32 _nuHoSinhSH, Int32 _duocTaSH, Int32 _cBKhac, Int32 _hDTrongQuy, Int32 _hDNgoaiQuy, String _nguoiSD, String _maMay)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spBC_THCanBo_CREATE", _maBC, _maKhoa, _cBNu, _giaoSu, _tienSy, _thacSy, _cKII, _cKI, _bacSy, _duocSyDH, _khacDH, _yTaDH, _ysy, _kTVien, _duocSyTH, _yTaTH, _nuHoSinhTH, _khacTH, _yTaSH, _nuHoSinhSH, _duocTaSH, _cBKhac, _hDTrongQuy, _hDNgoaiQuy, _nguoiSD, _maMay));
        }
        public override void UpdateBC_THCanBo(String _maBC, String _maKhoa, Int32 _cBNu, Int32 _giaoSu, Int32 _tienSy, Int32 _thacSy, Int32 _cKII, Int32 _cKI, Int32 _bacSy, Int32 _duocSyDH, Int32 _khacDH, Int32 _yTaDH, Int32 _ysy, Int32 _kTVien, Int32 _duocSyTH, Int32 _yTaTH, Int32 _nuHoSinhTH, Int32 _khacTH, Int32 _yTaSH, Int32 _nuHoSinhSH, Int32 _duocTaSH, Int32 _cBKhac, Int32 _hDTrongQuy, Int32 _hDNgoaiQuy, String _nguoiSD, Boolean _huy, String _maMay)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spBC_THCanBo_Update", _maBC, _maKhoa, _cBNu, _giaoSu, _tienSy, _thacSy, _cKII, _cKI, _bacSy, _duocSyDH, _khacDH, _yTaDH, _ysy, _kTVien, _duocSyTH, _yTaTH, _nuHoSinhTH, _khacTH, _yTaSH, _nuHoSinhSH, _duocTaSH, _cBKhac, _hDTrongQuy, _hDNgoaiQuy, _nguoiSD, _huy, _maMay);
        }
        public override void DeleteBC_THCanBo(String _maMay, String _nguoiSD, String _maBC, String _maKhoa)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spBC_THCanBo_Deleted", _maMay, _nguoiSD, _maBC, _maKhoa);
        }



        #endregion

        #region Bao cao Tong hop tu vong
        public override String InsertBC_THTuVong(String _maBC, String _maBenh, Int32 _soLanKChung, Int32 _soLanKTreEm, Int32 _soKTuVong, Int32 _soNguoiDT, Int32 _soNguoiTV, Int32 _ngayDT, Int32 _soNguoiDTTE, Int32 _soNguoiTVTE, Int32 _ngayDTTE, Int32 _soNguoiDTTE4, Int32 _soNguoiTVTE4, Int32 _ngayDTTE4, String _nguoiSD, String _maMay)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spBC_THTuVong_CREATE", _maBC, _maBenh, _soLanKChung, _soLanKTreEm, _soKTuVong, _soNguoiDT, _soNguoiTV, _ngayDT, _soNguoiDTTE, _soNguoiTVTE, _ngayDTTE, _soNguoiDTTE4, _soNguoiTVTE4, _ngayDTTE4, _nguoiSD, _maMay));
        }
        public override void UpdateBC_THTuVong(String _maBC, String _maBenh, Int32 _soLanKChung, Int32 _soLanKTreEm, Int32 _soKTuVong, Int32 _soNguoiDT, Int32 _soNguoiTV, Int32 _ngayDT, Int32 _soNguoiDTTE, Int32 _soNguoiTVTE, Int32 _ngayDTTE, Int32 _soNguoiDTTE4, Int32 _soNguoiTVTE4, Int32 _ngayDTTE4, String _nguoiSD, Boolean _huy, String _maMay)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spBC_THTuVong_Update", _maBC, _maBenh, _soLanKChung, _soLanKTreEm, _soKTuVong, _soNguoiDT, _soNguoiTV, _ngayDT, _soNguoiDTTE, _soNguoiTVTE, _ngayDTTE, _soNguoiDTTE4, _soNguoiTVTE4, _ngayDTTE4, _nguoiSD, _huy, _maMay);
        }
        public override void DeleteBC_THTuVong(String _maMay, String _nguoiSD, String _maBC, String _maBenh)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spBC_THTuVong_Deleted", _maMay, _nguoiSD, _maBC, _maBenh);
        }



        #endregion

        #region Bao cao Trang thiet bi Y te
        public override String InsertBC_TrangThietBiYTe(String _maBC, String _maTB, Int32 _soLuong, Int32 _sLSuDung, Int32 _sLDangSuaChua, Int32 _sLHong, Int32 _sLNguonNN, Int32 _sLNguonVT, Decimal _dongia, Int32 _sLDungtot, Int32 _sLkhac, Int32 _sLXuatCM, Int32 _sLXuatHong, Int32 _sLXuatMat, Int32 _sLNguonK, String _nguoiSD, String _maMay)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spBC_TrangThietBiYTe_CREATE", _maBC, _maTB, _soLuong, _sLSuDung, _sLDangSuaChua, _sLHong, _sLNguonNN, _sLNguonVT, _sLNguonK, _nguoiSD, _maMay, _dongia, _sLDungtot, _sLkhac, _sLXuatCM, _sLXuatHong, _sLXuatMat));
        }
        public override void UpdateBC_TrangThietBiYTe(String _maBC, String _maTB, Int32 _soLuong, Int32 _sLSuDung, Int32 _sLDangSuaChua, Int32 _sLHong, Int32 _sLNguonNN, Int32 _sLNguonVT, Decimal _dongia, Int32 _sLDungtot, Int32 _sLkhac, Int32 _sLXuatCM, Int32 _sLXuatHong, Int32 _sLXuatMat, Int32 _sLNguonK, String _nguoiSD, Boolean _huy, String _maMay)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spBC_TrangThietBiYTe_Update", _maBC, _maTB, _soLuong, _sLSuDung, _sLDangSuaChua, _sLHong, _sLNguonNN, _sLNguonVT, _sLNguonK, _nguoiSD, _huy, _maMay, _dongia, _sLDungtot, _sLkhac, _sLXuatCM, _sLXuatHong, _sLXuatMat);
        }
        public override void DeleteBC_TrangThietBiYTe(String _maMay, String _nguoiSD, String _maBC, String _maTB)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spBC_TrangThietBiYTe_Deleted", _maMay, _nguoiSD, _maBC, _maTB);
        }



        #endregion

        #region Bao cao chup XQ DD
        public override DataSet crBC_CHUPXQDD(DateTime _tuNgay, DateTime _denNgay, Byte _loai, string _dK)
        {
            DataSet ds = new DataSet();
            string[] s = { "crBC_CHUPXQDD" };
            SqlHelper.FillDataset(ConnectionString, DatabaseOwner + ObjectQualifier + "SPBC_CHUPXQDD", ds, s, _tuNgay, _denNgay, _loai, _dK);
            ////// ds.WriteXmlSchema("crBC_CHUPXQDD.xsd");
            return ds;
        }
        #endregion


        #region Officer

        #region Get List
        public override IDataReader GetAccount(String _account)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spACCOUNT_Get", _account));
        }
        #endregion
        public override IDataReader GetRoles(String _account, String _maRole)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spROLES_Get", _account, _maRole));
        }
        #region Find List
        public override IDataReader FindAccountList(string manv, string dk)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spACCOUNT_FINDS", manv, dk));
        }
        #endregion

        #region Account
        public override String InsertAccount(String _maNV, String _account, String _password, String _maKhoaLS, String _maKhoaCLS, String _maKho, Boolean _allMaKho, Boolean _allMaKhoaCLS, Boolean _allMaKhoaLS, String _quyenDTuong, Boolean _allQuyenDTuong, string _maMay, String _nguoiSD, Boolean _qadmin, Boolean _qsgia)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spAccount_CREATE", _maNV, _account, _password, _maKhoaLS, _maKhoaCLS, _maKho, _allMaKho, _allMaKhoaCLS, _allMaKhoaLS, _quyenDTuong, _allQuyenDTuong, _maMay, _nguoiSD, _qadmin, _qsgia));
        }
        public override void UpdateAccount(String _maNV, String _account, String _password, String _maKhoaLS, String _maKhoaCLS, String _maKho, Boolean _allMaKho, Boolean _allMaKhoaCLS, Boolean _allMaKhoaLS, String _quyenDTuong, Boolean _allQuyenDTuong, string _maMay, Boolean _huy, String _nguoiSD, Boolean _qadmin, Boolean _qsgia, String _accountold)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spACCOUNT_UPDATE", _maNV, _account, _password, _maKhoaLS, _maKhoaCLS, _maKho, _allMaKho, _allMaKhoaCLS, _allMaKhoaLS, _quyenDTuong, _allQuyenDTuong, _maMay, _huy, _nguoiSD, _qadmin, _qsgia, _accountold);
        }
        public override void DeleteAccount(String _maMay, String _nguoiSD, String _maNV, String _account)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spACCOUNT_DELETED", _maMay, _nguoiSD, _maNV, _account);
        }

        #endregion
        #region Roles
        public override String InsertRoles(String _account, String _maRole, string _maMay, String _nguoiSD)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spRoles_CREATE", _account, _maRole, _maMay, _nguoiSD));
        }
        public override void UpdateRoles(String _account, String _maRole, String _maRoleOld, string _maMay, Boolean _huy, String _nguoiSD)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spROLES_UPDATE", _account, _maRole, _maRoleOld, _maMay, _huy, _nguoiSD);
        }
        public override void DeleteRoles(String _maMay, String _nguoiSD, String _account, String _maRole)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spROLES_DELETED", _maMay, _nguoiSD, _account, _maRole);
        }

        #endregion
        #endregion

        #region Security
        public override IDataReader Login(string UserName, string Password)
        {
            return (IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spACCOUNT_Get", UserName);

        }
        public override IDataReader GetPermission(string UserName, string FormName)
        {
            return (IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spGetPermissionByUserName", UserName, FormName);
        }
        public override IDataReader GetPermission(int roleId, string formName)
        {
            return (IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spRoleForm_GET", roleId, formName);
        }
        #endregion

        #region Employee
        public override IDataReader GetEmployee(int IdEmployee)
        {
            return (IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spEmployee_Get", IdEmployee);
        }
        public override void InsertEmployee(string _FirstName, string _LastName, DateTime _Birthday, bool _Sex, int _IdEmployeeType, int _IdLocation, int _IdHV, int _IdCV)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spEmployee_Create", _FirstName, _LastName, _Birthday, _Sex, _IdEmployeeType, _IdLocation, _IdHV, _IdCV);
        }
        public override void UpdateEmployee(int _IdEmployee, string _FirstName, string _LastName, DateTime _Birthday, bool _Sex, int _IdEmployeeType, int _IdLocation, int _IdHV, int _IdCV)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spEmployee_Update", _IdEmployee, _FirstName, _LastName, _Birthday, _Sex, _IdEmployeeType, _IdLocation, _IdHV, _IdCV);
        }
        public override void DeleteEmployee(int IdEmployee)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spEmployee_Delete", IdEmployee);
        }
        public override IDataReader GetEmployeeList(int IdLocation)
        {
            return (IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spEmployee_Gets", IdLocation);
        }
        #endregion

        #region User Role

        public override IDataReader GetRole(int IdRole)
        {
            return (IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spRole_Get", IdRole);
        }
        public override int InsertRole(string RoleName, string Description)
        {
            return System.Convert.ToInt32(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spRole_Create", RoleName, Description));
        }
        public override void UpdateRole(int IdRole, string RoleName, string Description)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spRole_Update", IdRole, RoleName, Description);
        }
        public override void DeleteRole(int IdRole)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spRole_Delete", IdRole);
        }
        public override IDataReader GetRoleList()
        {
            return (IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spRole_Gets");
        }
        public override IDataReader GetRoleByUserList(string IdEmployee)
        {
            return (IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spRole_GetByUser", IdEmployee);
        }
        public override IDataReader GetRoleForms(int IdRole)
        {
            return (IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spGetPermissionByIdRole", IdRole);
        }
        public override void InsertRoleForm(int _IdRole, int _IdForm, bool _CanCreate, bool _CanRead, bool _CanUpdate, bool _CanDelete)
        {
            SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spRoleForm_Create", _IdRole, _IdForm, _CanCreate, _CanUpdate, _CanDelete, _CanRead);
        }
        public override void UpdateRoleForm(int _IdRole, int _IdForm, bool _CanCreate, bool _CanRead, bool _CanUpdate, bool _CanDelete)
        {
            SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spRoleForm_Update", _IdRole, _IdForm, _CanCreate, _CanUpdate, _CanDelete, _CanRead);
        }
        public override void DeleteRoleForm(int _IdRole, int _IdForm)
        {
            SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spRoleForm_Delete", _IdRole, _IdForm);
        }
        public override IDataReader GetUsers()
        {
            return (IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spUsers_Gets");
        }
        public override IDataReader GetUser(int idUser)
        {
            return (IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spUsers_Get", idUser);
        }
        public override int InsertUser(string _UserName, string _Password, int _IdEmployee)
        {
            return System.Convert.ToInt32(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spUsers_Create", _UserName, _Password, _IdEmployee));
        }
        public override void UpdateUser(int _IdUser, string _UserName, string _Password, int _IdEmployee)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spUsers_Update", _IdUser, _UserName, _Password, _IdEmployee);
        }
        public override void DeleteUser(int _IdUser)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spUsers_Delete", _IdUser);
        }
        public override void DeleteAllRole(int IdUser)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spUser_Role_Delete", IdUser);
        }
        public override void AssignRole(int IdUser, int idRole)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spUser_Role_Create", IdUser, idRole);
        }
        public override void AssignWorkingSpace(int IdUser, int IdLocation)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spUser_AssignLocation", IdUser, IdLocation);
        }
        public override void RemoveWorkingSpace(int IdUser, int IdLocation)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spUser_RemoveLocation", IdUser, IdLocation);
        }
        public override void RemoveRoleFromUser(int IdUser, int IdRole)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spUser_RemoveRole", IdUser, IdRole);
        }
        public override void DeleteAllFormPermission(int _IdRole)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spRole_ClearPermission", _IdRole);
        }
        #endregion

        #region Employee Type
        public override void InsertEmployeeType(string EmployeeTypeName)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spEmployeeType_Create", EmployeeTypeName);
        }
        public override void UpdateEmployeeType(int IdEmployeeType, string EmployeeTypeName)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spEmployeeType_Update", IdEmployeeType, EmployeeTypeName);
        }
        public override void DeleteEmployeeType(int IdEmployeeType)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spEmployeeType_Delete", IdEmployeeType);
        }
        public override IDataReader GetEmployeeTypeList()
        {
            return (IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spEmployeeType_Gets");
        }
        #endregion

        #region Huy.VQ

        public override void AddWorkflowToRole(int idRole, int idWorkflow)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spRole_Workflow_Create", idRole, idWorkflow);
        }
        public override void RemoveWorkflowFromRole(int idRole, int idWorkflow)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spRole_Workflow_Delete", idRole, idWorkflow);
        }
        public override IDataReader GetWorkflow(int idWorkflow)
        {
            return (IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spWorkflow_GET", idWorkflow);
        }
        public override IDataReader GetWorkflows()
        {
            return (IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spWorkflow_GETs");
        }
        public override IDataReader CheckRoleForm(int idRole, string className, string workflowName, string assemblyName)
        {
            return (IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spRole_Workflow_CHECK", idRole, workflowName, className, assemblyName);
        }
        public override void InsertWorkflow(string _WorkflowName, string _ClassName, string _AssemblyName, string _Description)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spWorkflow_Create", _WorkflowName, _ClassName, _AssemblyName, _Description);
        }

        #endregion

        #region QuyenRole
        public override void InsertQuyenRole(String _maMN, String _maRole, Byte _quyenMN, string _maMay, String _nguoiSD)
        {

            //return System.Convert.ToString(SqlHelper.ExecuteReader( ConnectionString, DatabaseOwner + ObjectQualifier + "spQuyenRole_Create", _maMN, _maRole, _quyenMN, _maMay, _nguoiSD));
            // System.Data.SqlClient.SqlTransaction tran = ConnectionString.BeginTransaction();
            System.Data.SqlClient.SqlDataReader dr;
            dr = SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spQuyenRole_Create", _maMN, _maRole, _quyenMN, _maMay, _nguoiSD);
            dr.Close();
            //SqlHelper.ExecuteReader(tran, DatabaseOwner + ObjectQualifier + "sp_TinhTon", ngayyclinh, MaKho);
            //tran.Commit();  
            //SqlHelper .ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "sp_TinhTon", ngayyclinh, MaKho );
            //object st = new string[5] { _maMN, _maRole, _quyenMN.ToString()  , _maMay, _nguoiSD };

            //System.Data.SqlClient.SqlCommand cmd = SqlHelper.ExecuteReader( ConnectionString, DatabaseOwner + ObjectQualifier + "spQuyenRole_Create", _maMN, _maRole, _quyenMN.ToString(), _maMay, _nguoiSD);
            //cmd.CommandTimeout = 18000;
            //cmd.ExecuteNonQuery();

            //  tran.Commit();

        }

        public override String UpdateQuyenRole(String _maMN, String _maRole, Byte _quyenMN, string _maMay, Boolean _huy, String _nguoiSD)
        {
            System.Data.SqlClient.SqlDataReader dr;
            dr = SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spQuyenRole_Update", _maMN, _maRole, _quyenMN, _maMay, _huy, _nguoiSD);
            dr.Close();
            return "";
        }
        public override void DeleteQuyenRole(String _maMN, String _maRole, string _maMay, String _nguoiSD)
        {
            System.Data.SqlClient.SqlDataReader dr;
            dr = SqlHelper.ExecuteReader(SQLConnectionBD, DatabaseOwner + ObjectQualifier + "spQuyenRole_Deleted", _maMN, _maRole, _maMay, _nguoiSD);
            dr.Close();
        }

        #endregion

        #region VANPHONGPHAM
        #region Get List
        //VPPPhieuNhap
        public override IDataReader GetVPPPhieuNhap_GetAll(Boolean _qadmin, String _maKho, String _mNCC, DateTime _tuNgay, DateTime _denNgay, String _dKien)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spVPPPhieuNHAP_GETALL", _qadmin, _maKho, _mNCC, _tuNgay, _denNgay, _dKien));
        }
        public override IDataReader GetAllVPPPhieuNhap_Get(String _maVTPhieuNhap, Boolean _qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spVPPPhieuNHAP_GET", _maVTPhieuNhap, _qadmin));
        }
        //VTPhieuNhap chi tiet
        public override IDataReader GetVPPPhieuNhap_C_GetAll(Boolean _qadmin, String _maVTPhieu)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spVPPPhieuNHAP_C_GETALL", _qadmin, _maVTPhieu));
        }
        public override IDataReader GetVPPPhieuNhap_C_Get(String _maPN, decimal STT)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spVPPPhieuNHAP_C_GET", _maPN, STT));
        }
        public override IDataReader GetVPPPhieuXuat(String _mapx, Boolean _qadmin, byte _loaiVTPhieu, Boolean _daphat)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spVPPPhieuXuat_Get", _mapx, _qadmin, _loaiVTPhieu, _daphat));
        }
        public override IDataReader GetAllVPPPhieuXuat(Boolean _qadmin, String _maKho, Byte _loaiVTPhieu, Boolean _daPhat, DateTime _tuNgay, DateTime _denNgay, String _dieuKienThem, Boolean _daduyet)
        {
            //return ((IDataReader)SqlHelper.ExecuteReader( ConnectionString, DatabaseOwner + ObjectQualifier + "spVTPhieuXuat_GetAll", _qadmin, _maKho, _loaiVTPhieu, _daPhat, _tuNgay, _denNgay, _dieuKienThem, _daduyet));
            System.Data.SqlClient.SqlCommand cmd = SqlHelper.CreateCommand(SQLConnectionBD, DatabaseOwner + ObjectQualifier + "spVPPPhieuXuat_GetAll");

            cmd.CommandTimeout = 18000;
            cmd.CommandType = System.Data.CommandType.StoredProcedure;
            cmd.Parameters.AddWithValue("qadmin ", _qadmin);
            cmd.Parameters.AddWithValue("maKho ", _maKho);
            cmd.Parameters.AddWithValue("loai", _loaiVTPhieu);
            cmd.Parameters.AddWithValue("daPhat", _daPhat);
            cmd.Parameters.AddWithValue("TuNgay", _tuNgay);
            cmd.Parameters.AddWithValue("denNgay", _denNgay);
            cmd.Parameters.AddWithValue("DK", _dieuKienThem);
            cmd.Parameters.AddWithValue("daduyet", _daduyet);
            IDataReader dt;
            dt = (IDataReader)cmd.ExecuteReader(CommandBehavior.CloseConnection); ;
            cmd.Dispose();
            cmd = null;
            // if (SQLConnectionBD.State == System.Data.ConnectionState.Closed)
            //SQLConnectionBD.Close(); SQLConnectionBD.Dispose();
            //if (_sqlConnection.State == System.Data.ConnectionState.Closed)
            {
                //_sqlConnection.Close(); _sqlConnection.Dispose();
                //_sqlConnection = null;
            }
            return dt;
        }
        public override IDataReader GetVPPPhieuXuat_C(String _mapx, Byte _orderNumber)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spVPPPhieuXuat_Get", _mapx, _orderNumber));
        }

        public override IDataReader GetVPPNhapTra(String _mapx, Boolean _qadmin, byte _loaiVTPhieu, byte _daphat)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spVPPNhapTra_Get", _mapx, _qadmin, _loaiVTPhieu, _daphat));
        }
        public override IDataReader GetAllVPPNhapTra(Boolean _qadmin, String _maKho, Byte _loaiVTPhieu, Byte _daPhat, DateTime _tuNgay, DateTime _denNgay, String _dieuKienThem)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spVPPNhapTra_GetAll", _qadmin, _maKho, _loaiVTPhieu, _daPhat, _tuNgay, _denNgay, _dieuKienThem));
        }
        public override IDataReader GetVPPNhapTra_C(String _mapx, Byte _orderNumber)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spVPPNhapTra_Get", _mapx, _orderNumber));
        }
        public override IDataReader GetVPPXuatTra(String _maPXT, Boolean _qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spVPPXuatTra_GET", _maPXT, _qadmin));
        }
        public override IDataReader GetAllVPPXuatTra(Boolean _qadmin, String makho, String maNCC, DateTime tungay, DateTime denngay, String dieukienthem)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spVPPXuatTra_GetAll", _qadmin, makho, maNCC, tungay, denngay, dieukienthem));
        }
        public override IDataReader GetVPPXuatTra_C(String _maPXT, Decimal STT)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spVPPXuatTra_C_GET", _maPXT, STT));
        }
        public override IDataReader GetAllVPPKiemNhap(String _maVTPhieu, Boolean _qadmin, Byte loai)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spVPPKiemNHAP_GETALL", _maVTPhieu, _qadmin, loai));
        }
        public override IDataReader GetVPPTonDau(String _makho)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spVPPTonDAU_GET", _makho));
        }

        public override IDataReader GetVPPTonDauKhoa(String makhoa)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spVPPTonDAUKhoa_GET", makhoa));
        }

        public override IDataReader GetVPPKiemKe(String _maKK, bool qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spVPPKiemKE_GET", _maKK, qadmin));
        }
        public override IDataReader GetAllVPPKiemKe(String makho, DateTime tungay, DateTime denngay, String dieukienthem, bool qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spVPPKiemKe_GETALL", makho, tungay, denngay, dieukienthem, qadmin));
        }
        public override IDataReader GetVPPKiemKe_C(String _maKK, Decimal _sTT)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spVPPKiemKE_C_GET", _maKK, _sTT));
        }
        public override IDataReader GetVPPKiemKe_HD(String _mAKK, Decimal _sTT)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spVPPKiemKE_HD_GET", _mAKK, _sTT));
        }
        public override IDataReader GetVPPPhieuDoiThuoc(String _maDThuoc, bool _qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spVPPPhieuDoiThuoc_GET", _maDThuoc, _qadmin));
        }
        public override IDataReader GetAllVPPPhieuDoiThuoc(String makho, String maNCC, DateTime tungay, DateTime denngay, String dieukienthem, bool qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spVPPPhieuDoiThuoc_GETALL", makho, maNCC, tungay, denngay, dieukienthem, qadmin));
        }
        public override IDataReader GetVPPPhieuDoiThuoc_C(String _maDThuoc, Decimal _sTT)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spVPPPhieuDoiThuoc_C_GET", _maDThuoc, _sTT));
        }
        public override IDataReader GetAllVPPTonKhoa(DateTime ngayyclinh, string makhoa, String dk)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spVPPTonkhoa_GetAll", ngayyclinh, makhoa, dk));
        }
        public override IDataReader GetsVPPTonKhoa(DateTime tuthang, DateTime denthang, string makhoa, String dk)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spVPPTonkhoa_Gets", tuthang, denthang, makhoa, dk));
        }
        #endregion
        #region VPPFind List

        public override IDataReader FindVPPPhieuNhap(string _DK, Boolean _qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spVPPPhieuNhap_Finds", _DK, _qadmin));
        }
        public override IDataReader FindVPPPhieuDoiThuoc(bool qadmin, string dk)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spVPPPhieuDoiThuoc_FINDS", qadmin, dk));
        }
        #endregion
        #region VPPPhieuNhap
        // public abstract String InsertVTPhieuNhap(string _maNCC, String _soHD, String _soCT, SmartDate _ngayPNhap, String _maKho, decimal _chietKhau, Boolean _thanhToan, SmartDate _ngayTToan, SmartDate _ngayNhapTT, String _NVNhap, decimal _VTTong, String _ghiChu, Boolean _huy, String _nguoiSD, string _maMay, String _nguoiGiao);
        public override String InsertVPPPhieuNhap(string _maNCC, String _soHD, String _soCT, SmartDate _ngayPNhap, String _maKho, decimal _chietKhau, Boolean _thanhToan, SmartDate _ngayTToan, SmartDate _ngayNhapTT, String _NVNhap, decimal _VTTong, String _ghiChu, Boolean _huy, String _nguoiSD, string _maMay, String _nguoiGiao, String _manguon, String _mahinhthuc, string _sohdon, SmartDate _ngayhdon)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spVPPPhieuNHAP_CREATE", _maNCC, _soHD, _soCT, _ngayPNhap.DBValue, _maKho, _chietKhau, _thanhToan, _ngayTToan.DBValue, _ngayNhapTT.DBValue, _NVNhap, _VTTong, _ghiChu, _huy, _nguoiSD, _maMay, _nguoiGiao, _manguon, _mahinhthuc, _sohdon, _ngayhdon.DBValue));
        }
        public override void UpdateVPPPhieuNhap(String _maPN, string _maNCC, String _soHD, String _soCT, SmartDate _ngayPNhap, String _maKho, decimal _chietKhau, Boolean _thanhToan, SmartDate _ngayTToan, SmartDate _ngayNhapTT, String _NVNhap, decimal _VTTong, String _ghiChu, Boolean _huy, String _nguoiSD, SmartDate _ngaySD1, String _nguoiSD1, String _nguoiGiao, String _manguon, String _mahinhthuc, string _sohdon, SmartDate _ngayhdon)
        {
            System.Data.SqlClient.SqlDataReader dr;
            dr = SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spVPPPhieuNHAP_UPDATE", _maPN, _maNCC, _soHD, _soCT, _ngayPNhap.DBValue, _maKho, _chietKhau, _thanhToan, _ngayTToan.DBValue, _ngayNhapTT.DBValue, _NVNhap, _VTTong, _ghiChu, _huy, _nguoiSD, _ngaySD1.DBValue, _nguoiSD1, _nguoiGiao, _manguon, _mahinhthuc, _sohdon, _ngayhdon.DBValue);
            dr.Close();
            dr = null;

        }
        public override void DeleteVPPPhieuNhap(String _maPN, SmartDate _ngaySD, string _maMay, String _nguoiSD)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spVPPPhieuNHAP_DELETED", _maPN, _ngaySD.DBValue, _maMay, _nguoiSD);
        }
        #endregion

        #region VPPPhieuNhap chi tiet

        public override String InsertVPPPhieuNhap_C(String _maPN, String _maThuoc, decimal _soluong, SmartDate _hanSD, decimal _donGia, decimal _chietKhau, String _soLo, Boolean _huy, String _ghiChu, string _maMay, String _nguoiSD)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spVPPPhieuNHAP_C_CREATE", _maPN, _maThuoc, _soluong, _hanSD.DBValue, _donGia, _chietKhau, _soLo, _huy, _ghiChu, _maMay, _nguoiSD));
        }
        public override void UpdateVPPPhieuNhap_C(String _maPN, decimal _sTT, String _maThuoc, decimal _soluong, SmartDate _hanSD, decimal _donGia, decimal _chietKhau, String _soLo, Boolean _huy, String _ghiChu, SmartDate _ngaySD, string _maMay, String _nguoiSD)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spVPPPhieuNHAP_C_UPDATE", _maPN, _sTT, _maThuoc, _soluong, _hanSD.DBValue, _donGia, _chietKhau, _soLo, _huy, _ghiChu, _ngaySD.DBValue, _maMay, _nguoiSD);
        }
        public override void DeleteVPPPhieuNhap_C(String _maPN, decimal _sTT, String _nguoiSD, String _maMay)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spVPPPhieuNHAP_C_DELETED", _maPN, _sTT, _nguoiSD, _maMay);
        }
        #endregion

        #region VPPPhieuXuat
        public override String InsertVPPPhieuXuat(String _noiXuat, SmartDate _ngayXuat, SmartDate _ngayXuatTT, String _noiNhap, Byte _loaiVTPhieu, String _soCT, String _nvXuat, String _nvNhan, String _ghiChu, Boolean _huy, String _nguoiLap, Boolean _khoaYC, string _maMay, Boolean _daPhat, Boolean _daDuyet, String _doiTuong)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spVPPPhieuXUAT_CREATE", _noiXuat, _ngayXuat.DBValue, _ngayXuatTT.DBValue, _noiNhap, _loaiVTPhieu, _soCT, _nvXuat, _nvNhan, _ghiChu, _huy, _nguoiLap, _khoaYC, _maMay, _daPhat, _daDuyet, _doiTuong));
        }
        public override void UpdateVPPPhieuXuat(String _maPX, String _noiXuat, SmartDate _ngayXuat, SmartDate _ngayXuatTT, String _noiNhap, Byte _loaiVTPhieu, String _soCT, String _nvXuat, String _nvNhan, String _ghiChu, Boolean _huy, string _maMay, String _nguoiSD, Boolean _daPhat, Boolean _daDuyet, String _doiTuong)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spVPPPhieuXUAT_UPDATE", _maPX, _noiXuat, _ngayXuat.DBValue, _ngayXuatTT.DBValue, _noiNhap, _loaiVTPhieu, _soCT, _nvXuat, _nvNhan, _ghiChu, _huy, _maMay, _nguoiSD, _daPhat, _daDuyet, _doiTuong);
        }
        public override void DeleteVPPPhieuXuat(String _maPX, string _maMay, String _nguoiSD)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spVPPPhieuXUAT_DELETED", _maPX, _maMay, _nguoiSD);
        }
        #endregion
        #region VPPPhieu Xuat chi tiet

        public override String InsertVPPPhieuXuat_C(String _maPX, String _maThuoc, Decimal _soLuong, SmartDate _hanSD, String _soLo, Decimal _donGia, Decimal _soLuongYC, Decimal _giaBan, String _ghiChu, String _nguoiSD, string _maMay)
        {
            System.Data.SqlClient.SqlDataReader dr;
            dr = SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spVPPPhieuXUAT_C_CREATE", _maPX, _maThuoc, _soLuong, _hanSD.DBValue, _soLo, _donGia, _soLuongYC, _giaBan, _ghiChu, _nguoiSD, _maMay);
            dr.Close();
            dr = null;
            return "";
        }
        public override void UpdateVPPPhieuXuat_C(String _maPX, Decimal _sTT, String _maThuoc, Decimal _soLuong, SmartDate _hanSD, String _soLo, Decimal _donGia, Decimal _soLuongYC, Decimal _giaBan, Boolean _huy, String _ghiChu, String _nguoiSD, string _maMay)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spVPPPhieuXUAT_C_UPDATE", _maPX, _sTT, _maThuoc, _soLuong, _hanSD.DBValue, _soLo, _donGia, _soLuongYC, _giaBan, _huy, _ghiChu, _nguoiSD, _maMay);
        }
        public override void DeleteVPPPhieuXuat_C(String _maPX, Decimal _sTT, String _nguoiSD, string _maMay)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spVPPPhieuXUAT_C_DELETED", _maPX, _sTT, _nguoiSD, _maMay);
        }

        #endregion
        public override IDataReader GetVPPPhieuDTNhap(String _maDuTru, bool qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spVPPPhieuDTNhap_GET", _maDuTru, qadmin));
        }
        public override IDataReader GetAllVPPPhieuDTNhap(Boolean _qadmin, String _maKho, DateTime _tuNgay, DateTime _denNgay, String _dKien)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spVPPPhieuDTNhap_GETALL", _qadmin, _maKho, _tuNgay, _denNgay, _dKien));
        }
        public override IDataReader GetVPPPhieuDTNhap_C(String _maDuTru, Decimal _sTT)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spVPPPhieuDTNhap_C_GET", _maDuTru, _sTT));
        }


        #region VPPNhap Tra


        public override String InsertVPPNhapTra(String _noiNhap, SmartDate _ngayNhap, SmartDate _ngayNhapTT, String _noiXuat, Byte _loaiVTPhieu, String _soCT, String _nvXuat, String _nvNhan, String _ghiChu, String _nguoiLap, Boolean _bnTra, string _maMay, Byte _daPhat)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spVPPNhapTra_CREATE", _noiNhap, _ngayNhap.DBValue, _ngayNhapTT.DBValue, _noiXuat, _loaiVTPhieu, _soCT, _nvXuat, _nvNhan, _ghiChu, _nguoiLap, _bnTra, _maMay, _daPhat));
        }
        public override void UpdateVPPNhapTra(String _maPX, String _noiXuat, SmartDate _ngayNhap, SmartDate _ngayNhapTT, String _noiNhap, Byte _loaiVTPhieu, String _soCT, String _nvXuat, String _nvNhan, String _ghiChu, Boolean _huy, string _maMay, String _nguoiSD, Byte _daPhat, Boolean _bnTra, Boolean _DADUYET)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spVPPNhapTra_UPDATE", _maPX, _noiXuat, _ngayNhap.DBValue, _ngayNhapTT.DBValue, _noiNhap, _loaiVTPhieu, _soCT, _nvXuat, _nvNhan, _ghiChu, _huy, _maMay, _nguoiSD, _daPhat, _bnTra, _DADUYET);
        }
        public override void DeleteVPPNhapTra(String _maPX, string _maMay, String _nguoiSD)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spVPPNhapTra_DELETED", _maPX, _maMay, _nguoiSD);
        }
        #endregion

        #region VPPNhap tra chi tiet
        //InsertVPPNhapTra_C(String _MaPNT, String _maThuoc, Decimal _soLuong, SmartDate _hanSD,  Decimal _donGia,String _soLo,  Boolean Huy, String _ghiChu,String _maMay, String _nguoiSD);
        public override String InsertVPPNhapTra_C(String _maPX, String _maThuoc, Decimal _soLuong, SmartDate _hanSD, Decimal _donGia, String _soLo, Boolean _Huy, String _ghiChu, string _maMay, String _nguoiSD, Decimal _soLuongYC)
        {
            System.Data.SqlClient.SqlDataReader dr;
            dr = SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spVPPNhapTra_C_CREATE", _maPX, _maThuoc, _soLuong, _hanSD.DBValue, _donGia, _soLo, _Huy, _ghiChu, _maMay, _nguoiSD, _soLuongYC);
            dr.Close();
            dr = null;
            return "";
        }
        public override void UpdateVPPNhapTra_C(String _maPX, Decimal _sTT, String _maThuoc, Decimal _soLuong, SmartDate _hanSD, String _soLo, Decimal _donGia, Decimal _soLuongYC, Decimal _giaBan, Boolean _huy, String _ghiChu, String _nguoiSD, string _maMay)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spVPPNhapTra_C_UPDATE", _maPX, _sTT, _maThuoc, _soLuong, _hanSD.DBValue, _soLo, _donGia, _soLuongYC, _giaBan, _huy, _ghiChu, _nguoiSD, _maMay);
        }
        public override void DeleteVPPNhapTra_C(String _maPX, Decimal _sTT, String _nguoiSD, string _maMay)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spVPPNhapTra_C_DELETED", _maPX, _sTT, _nguoiSD, _maMay);
        }

        #endregion

        #region VPPKiem Nhap
        public override String InsertVPPKiemNhap(String _maPhieu, String _maNV, String _maCD, Byte _loai, String _ghichu, string _maMay, String _nguoiSD, Byte _vaiTro)
        {//_maPhieu, _maNV, _maCD, _loai,_huy, _ghichu, _maMay, _nguoiSD, _vaitro
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spVPPKiemNhap_CREATE", _maPhieu, _maNV, _maCD, _loai, _ghichu, _maMay, _nguoiSD, _vaiTro));
        }
        public override void UpdateVPPKiemNhap(String _maPhieu, Byte _sTT, String _maNV, String _maCD, Byte _loai, Boolean _huy, String _ghichu, string _maMay, String _nguoiSD, Byte _vaiTro)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spVPPKiemNhap_UPDATE", _maPhieu, _sTT, _maNV, _maCD, _loai, _huy, _ghichu, _maMay, _nguoiSD, _vaiTro);
        }
        public override void DeleteVPPKiemNhap(String _maMay, String _nguoiSD, String _maVTPhieu, Byte _sTT)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spVPPKiemNHAP_DELETED", _maMay, _nguoiSD, _maVTPhieu, _sTT);
        }


        #endregion

        #region VPPXuat Tra
        public override String InsertVPPXuatTra(String _maNCC, String _soCT, SmartDate _ngayXT, String _makho, Boolean _thanhtoan, SmartDate _ngayTToan, SmartDate _ngayXuatTT, Decimal _VTTong, String _ghichu, string _maMay, String _nguoiLap, SmartDate _ngayLap, String _nVXuat, String _nVNhan, Decimal _vAT, string _sohdon, SmartDate _ngayhdon)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spVPPXuatTra_CREATE", _maNCC, _soCT, _ngayXT.DBValue, _makho, _thanhtoan, _ngayTToan.DBValue, _ngayXuatTT.DBValue, _VTTong, _ghichu, _maMay, _nguoiLap, _ngayLap.DBValue, _nVXuat, _nVNhan, _vAT, _sohdon, _ngayhdon.DBValue));
        }
        public override void UpdateVPPXuatTra(String _maPXT, String _maNCC, String _soCT, SmartDate _ngayXT, String _makho, Boolean _thanhtoan, SmartDate _ngayTToan, SmartDate _ngayXuatTT, Decimal _VTTong, String _ghichu, Boolean _huy, String _nguoiSD, string _maMay, String _nVXuat, String _nVNhan, Decimal _vAT, string _sohdon, SmartDate _ngayhdon)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spVPPXuatTra_UPDATE", _maPXT, _maNCC, _soCT, _ngayXT.DBValue, _makho, _thanhtoan, _ngayTToan.DBValue, _ngayXuatTT.DBValue, _VTTong, _ghichu, _huy, _nguoiSD, _maMay, _nVXuat, _nVNhan, _vAT, _sohdon, _ngayhdon.DBValue);
        }
        public override void DeleteVPPXuatTra(String _maMay, String _nguoiSD, String _maPXT)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spVPPXuatTra_DELETED", _maMay, _nguoiSD, _maPXT);
        }
        #endregion

        #region VPPXuat tra chi tiet

        public override String InsertVPPXuatTra_C(String _mathuoc, Decimal _soluong, SmartDate _hanSD, Decimal _donGia, String _soLo, String _ghichu, String _nguoiSD, string _maMay, String _maPXT, Decimal _vAT)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spVPPXuatTra_C_CREATE", _mathuoc, _soluong, _hanSD.DBValue, _donGia, _soLo, _ghichu, _nguoiSD, _maMay, _maPXT, _vAT));
        }
        public override void UpdateVPPXuatTra_C(Decimal _sTT, String _mathuoc, Decimal _soluong, SmartDate _hanSD, Decimal _donGia, String _soLo, Boolean _huy, String _ghichu, String _nguoiSD, string _maMay, String _maPXT, Decimal _vAT)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spVPPXuatTra_C_UPDATE", _sTT, _mathuoc, _soluong, _hanSD.DBValue, _donGia, _soLo, _huy, _ghichu, _nguoiSD, _maMay, _maPXT, _vAT);
        }
        public override void DeleteVPPXuatTra_C(String _maMay, String _nguoiSD, String _maPXT, Decimal _sTT)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spVPPXuatTra_C_DELETED", _maMay, _nguoiSD, _maPXT, _sTT);
        }

        #endregion

        #region VPPTon dau Kho

        public override String InsertVPPTonDau(SmartDate _ngayVTTon, String _makho, String _nguoiSD, string _maMay)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spVPPTonDau_CREATE", _ngayVTTon.DBValue, _makho, _nguoiSD, _maMay));
        }
        public override void UpdateVPPTonDau(SmartDate _ngayVTTon, String _makho, String _nguoiSD, string _maMay)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spVPPTonDau_UPDATE", _ngayVTTon.DBValue, _makho, _nguoiSD, _maMay);
        }

        #endregion

        #region VPPTon dau Khoa

        public override String InsertVPPTonDauKhoa(SmartDate _ngayVTTon, String _makhoa, String _nguoiSD, string _maMay)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spVPPTonDauKhoa_CREATE", _ngayVTTon.DBValue, _makhoa, _nguoiSD, _maMay));
        }
        public override void UpdateVPPTonDauKhoa(SmartDate _ngayVTTon, String _makhoa, String _nguoiSD, string _maMay)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spVPPTonDauKhoa_UPDATE", _ngayVTTon.DBValue, _makhoa, _nguoiSD, _maMay);
        }

        #endregion

        #region VPPKiem Ke
        public override String InsertVPPKiemKe(SmartDate _ngayKK, String _makho, String _nguoiKK, String _nguoiLap, String _ghiChu, Boolean _xuly, string _maMay)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spVPPKiemKe_Create", _ngayKK.DBValue, _makho, _nguoiKK, _nguoiLap, _ghiChu, _xuly, _maMay));
        }
        public override void UpdateVPPKiemKe(String _maKK, SmartDate _ngayKK, String _makho, String _nguoiKK, String _ghiChu, Boolean _xuly, string _maMay, String _nguoiSD, Boolean _huy)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spVPPKiemKe_Update", _maKK, _ngayKK.DBValue, _makho, _nguoiKK, _ghiChu, _xuly, _maMay, _nguoiSD, _huy);
        }
        public override void DeleteVPPKiemKe(String _maMay, String _nguoiSD, String _maKK)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spVPPKiemKE_DELETED", _maMay, _nguoiSD, _maKK);
        }
        #endregion

        #region VPPKiem Ke chi tiet
        public override String InsertVPPKiemKe_C(String _maKK, String _maThuoc, Decimal _soLuong, Decimal _dongia, Decimal _sLDC, String _ghiChu, Decimal _sLVTTon, String _nguoiSD, string _maMay)
        {
            System.Data.SqlClient.SqlDataReader dr;
            dr = SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spVPPKiemKE_C_CREATE", _maKK, _maThuoc, _soLuong, _dongia, _sLDC, _ghiChu, _sLVTTon, _nguoiSD, _maMay);
            dr.Close();
            dr = null;
            return "";
        }
        public override void UpdateVPPKiemKe_C(String _maKK, Decimal _sTT, String _maThuoc, Decimal _soLuong, Decimal _dongia, Decimal _sLDC, String _ghiChu, Decimal _sLVTTon, Boolean _huy, String _nguoiSD, string _maMay)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spVPPKiemKE_C_UPDATE", _maKK, _sTT, _maThuoc, _soLuong, _dongia, _sLDC, _ghiChu, _sLVTTon, _huy, _nguoiSD, _maMay);
        }
        public override void DeleteVPPKiemKe_C(String _maMay, String _nguoiSD, String _maKK, Decimal _sTT)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spVPPKiemKE_C_DELETED", _maMay, _nguoiSD, _maKK, _sTT);
        }

        #endregion

        #region VPPKiem Ke chi tiet Han dung
        public override String InsertVPPKiemKe_HD(String _mAKK, String _maThuoc, SmartDate _hANDUNG, String _solo, Decimal _sOLUONG, Decimal _sLVTTon, Decimal _sLDC, String _ghichu, String _nguoiSD, string _maMay, Decimal _donGia)
        {
            System.Data.SqlClient.SqlDataReader dr;
            dr = SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spVPPKiemKE_HD_CREATE", _mAKK, _maThuoc, _hANDUNG.DBValue, _solo, _sOLUONG, _sLVTTon, _sLDC, _ghichu, _nguoiSD, _maMay, _donGia);
            dr.Close();
            dr = null;
            return "";
        }
        public override void UpdateVPPKiemKe_HD(String _mAKK, Decimal _sTT, String _maThuoc, SmartDate _hANDUNG, String _solo, Decimal _sOLUONG, Decimal _sLVTTon, Decimal _sLDC, String _ghichu, Boolean _huy, String _nguoiSD, string _maMay, Decimal _donGia)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spVPPKiemKE_HD_UPDATE", _mAKK, _sTT, _maThuoc, _hANDUNG.DBValue, _solo, _sOLUONG, _sLVTTon, _sLDC, _ghichu, _huy, _nguoiSD, _maMay, _donGia);
        }
        public override void DeleteVPPKiemKe_HD(String _maMay, String _nguoiSD, String _maKK, Decimal _sTT)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spVPPKiemKE_HD_DELETED", _maMay, _nguoiSD, _maKK, _sTT);
        }
        #endregion

        #region VPP Phieu Du tru Nhap
        public override String InsertVPPPhieuDTNhap(String _soCT, SmartDate _ngayPhieu, String _makho, String _nguoiDuTru, Decimal _tong, String _ghichu, String _nguoiLap, string _maMay, string _maNCC)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spVPPPhieuDTNhap_CREATE", _soCT, _ngayPhieu.DBValue, _makho, _nguoiDuTru, _tong, _ghichu, _nguoiLap, _maMay, _maNCC));
        }
        public override void UpdateVPPPhieuDTNhap(String _maDuTru, String _soCT, SmartDate _ngayPhieu, String _makho, String _nguoiDuTru, Decimal _tong, String _ghichu, Boolean _huy, String _nguoiSD, string _maMay, string _maNCC)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spVPPPhieuDTNhap_update", _maDuTru, _soCT, _ngayPhieu.DBValue, _makho, _nguoiDuTru, _tong, _ghichu, _huy, _nguoiSD, _maMay, _maNCC);
        }
        public override void DeleteVPPPhieuDTNhap(String _maMay, String _nguoiSD, String _maDuTru)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spVPPPhieuDTNhap_DELETED", _maMay, _nguoiSD, _maDuTru);
        }

        #endregion

        #region VPP Phieu Du tru Nhap chi tiet
        public override String InsertVPPPhieuDTNhap_C(String _maDuTru, String _mathuoc, Decimal _soluong, Decimal _donGia, String _ghichu, String _nguoiSD, string _maMay)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spVPPPhieuDTNhap_C_CREATE", _maDuTru, _mathuoc, _soluong, _donGia, _ghichu, _nguoiSD, _maMay));
        }
        public override void UpdateVPPPhieuDTNhap_C(String _maDuTru, Decimal _sTT, String _mathuoc, Decimal _soluong, Decimal _donGia, Boolean _huy, String _ghichu, String _nguoiSD, string _maMay)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spVPPPhieuDTNhap_C_UPDATE", _maDuTru, _sTT, _mathuoc, _soluong, _donGia, _huy, _ghichu, _nguoiSD, _maMay);
        }
        public override void DeleteVPPPhieuDTNhap_C(String _maMay, String _nguoiSD, String _maDuTru, Decimal _sTT)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spVPPPhieuDTNhap_C_DELETED", _maMay, _nguoiSD, _maDuTru, _sTT);
        }
        #endregion
        #region ReportVPP
        public override DataSet CRVPPPhieuLinh_RPTa(DateTime _TUNGAYYC, DateTime _DENNGAYYC, Boolean _Duyet, Boolean _Phat, string _MaDT, string _MaKho, string _MAKHOA, Boolean _DADUNG, string _dk)
        {
            DataSet ds = new DataSet("CRPhieuLinh_RPTa");
            //string[] s = { "CRPhieuLinh_RPTa" };
            //SqlHelper.FillDataset(ConnectionString, DatabaseOwner + ObjectQualifier + "spKhamBenh_VTTH_BN_gets", ds, s, _TUNGAYYC, _DENNGAYYC, _Duyet, _Phat, _MaDT, _MaKho, _MAKHOA, _DADUNG, _dk);
            // // ds.WriteXmlSchema("CRVPPPhieuLinh_DY.xsd");
            System.Data.SqlClient.SqlCommand cmd = SqlHelper.CreateCommand(SQLConnectionBD, DatabaseOwner + ObjectQualifier + "spKhamBenh_VTTH_BN_gets");

            cmd.CommandTimeout = 18000;
            cmd.CommandType = System.Data.CommandType.StoredProcedure;
            cmd.Parameters.AddWithValue("TuNgay", _TUNGAYYC);
            cmd.Parameters.AddWithValue("DenNgay", _DENNGAYYC);
            cmd.Parameters.AddWithValue("Duyet", _Duyet);
            cmd.Parameters.AddWithValue("Phat", _Phat);
            cmd.Parameters.AddWithValue("MaDT", _MaDT);
            cmd.Parameters.AddWithValue("MaKho", _MaKho);
            cmd.Parameters.AddWithValue("MAKHOA", _MAKHOA);
            cmd.Parameters.AddWithValue("DADUNG", _DADUNG);
            cmd.Parameters.AddWithValue("dk", _dk);

            System.Data.SqlClient.SqlDataAdapter sqlad = new System.Data.SqlClient.SqlDataAdapter(cmd);

            sqlad.Fill(ds);
            if (ds.Tables.Count > 0)
                ds.Tables[0].TableName = "CRPhieuLinh_RPTa";
            sqlad.Dispose(); cmd.Dispose(); sqlad = null;
            cmd = null;
            // if (SQLConnectionBD.State == System.Data.ConnectionState.Closed)
            //SQLConnectionBD.Close(); SQLConnectionBD.Dispose();
            //if (_sqlConnection.State == System.Data.ConnectionState.Closed)
            {
                //_sqlConnection.Close(); _sqlConnection.Dispose();
                //_sqlConnection = null;
            }
            return ds;

        }
        public override DataSet crVPPPhieuNhap_C_GetAll(Boolean _qadmin, String _maPN)
        {
            DataSet ds = new DataSet("crPhieuNhap_C_GetAll");
            //string[] s ={ "crPhieuNhap_C_GetAll" };
            //SqlHelper.FillDataset( ConnectionString, DatabaseOwner + ObjectQualifier + "SPVPPPhieuNhap_C_GETALL", ds, s, _qadmin, _maPN);
            //// // // //// ds.WriteXmlSchema("crPhieuNhap_C_GetAll.xsd");
            System.Data.SqlClient.SqlCommand cmd = SqlHelper.CreateCommand(SQLConnectionBD, DatabaseOwner + ObjectQualifier + "SPVPPPhieuNhap_C_GETALL");

            cmd.CommandTimeout = 18000;
            cmd.CommandType = System.Data.CommandType.StoredProcedure;
            cmd.Parameters.AddWithValue("QADMIN", _qadmin);
            cmd.Parameters.AddWithValue("MAPN", _maPN);

            System.Data.SqlClient.SqlDataAdapter sqlad = new System.Data.SqlClient.SqlDataAdapter(cmd);

            sqlad.Fill(ds);
            if (ds.Tables.Count > 0)
                ds.Tables[0].TableName = "crPhieuNhap_C_GetAll";
            sqlad.Dispose(); cmd.Dispose(); sqlad = null;
            cmd = null;
            // if (SQLConnectionBD.State == System.Data.ConnectionState.Closed)
            //SQLConnectionBD.Close(); SQLConnectionBD.Dispose();
            //if (_sqlConnection.State == System.Data.ConnectionState.Closed)
            {
                //_sqlConnection.Close(); _sqlConnection.Dispose();
                //_sqlConnection = null;
            }
            return ds;

        }
        public override DataSet crVPPPhieuNhapTra_C_GetAll(Boolean _qadmin, String _maPNT)
        {
            DataSet ds = new DataSet("crPhieuNhapTra_C_GetAll");
            //string[] s ={ "crPhieuNhapTra_C_GetAll" };
            //SqlHelper.FillDataset( ConnectionString, DatabaseOwner + ObjectQualifier + "SPVPPNhapTra_C_GETALL", ds, s, _qadmin, _maPNT);
            //// // // //// ds.WriteXmlSchema("crPhieuNhapTra_C_GetAll.xsd");
            System.Data.SqlClient.SqlCommand cmd = SqlHelper.CreateCommand(SQLConnectionBD, DatabaseOwner + ObjectQualifier + "SPVPPNhapTra_C_GETALL");

            cmd.CommandTimeout = 18000;
            cmd.CommandType = System.Data.CommandType.StoredProcedure;
            cmd.Parameters.AddWithValue("QADMIN", _qadmin);
            cmd.Parameters.AddWithValue("MAPNT", _maPNT);

            System.Data.SqlClient.SqlDataAdapter sqlad = new System.Data.SqlClient.SqlDataAdapter(cmd);

            sqlad.Fill(ds);
            if (ds.Tables.Count > 0)
                ds.Tables[0].TableName = "crPhieuNhapTra_C_GetAll";
            sqlad.Dispose(); cmd.Dispose(); sqlad = null;
            cmd = null;
            // if (SQLConnectionBD.State == System.Data.ConnectionState.Closed)
            //SQLConnectionBD.Close(); SQLConnectionBD.Dispose();
            //if (_sqlConnection.State == System.Data.ConnectionState.Closed)
            {
                //_sqlConnection.Close(); _sqlConnection.Dispose();
                //_sqlConnection = null;
            }
            return ds;

        }
        public override DataSet crVPPPhieuXuat_C_GetAll(Boolean _qadmin, String _maPX)
        {
            DataSet ds = new DataSet("crPhieuXuat_C_GetAll");
            //string[] s ={ "crPhieuXuat_C_GetAll" };
            //SqlHelper.FillDataset( ConnectionString, DatabaseOwner + ObjectQualifier + "SPVPPPhieuXuat_C_GETALL", ds, s, _qadmin, _maPX);
            // // // //// ds.WriteXmlSchema("crPhieuXuat_C_GetAll.xsd");
            System.Data.SqlClient.SqlCommand cmd = SqlHelper.CreateCommand(SQLConnectionBD, DatabaseOwner + ObjectQualifier + "SPVPPPhieuXuat_C_GETALL");

            cmd.CommandTimeout = 18000;
            cmd.CommandType = System.Data.CommandType.StoredProcedure;
            cmd.Parameters.AddWithValue("QADMIN", _qadmin);
            cmd.Parameters.AddWithValue("MAPX", _maPX);

            System.Data.SqlClient.SqlDataAdapter sqlad = new System.Data.SqlClient.SqlDataAdapter(cmd);

            sqlad.Fill(ds);
            if (ds.Tables.Count > 0)
                ds.Tables[0].TableName = "crPhieuXuat_C_GetAll";
            sqlad.Dispose(); cmd.Dispose(); sqlad = null;
            cmd = null;
            // if (SQLConnectionBD.State == System.Data.ConnectionState.Closed)
            //SQLConnectionBD.Close(); SQLConnectionBD.Dispose();
            //if (_sqlConnection.State == System.Data.ConnectionState.Closed)
            {
                //_sqlConnection.Close(); _sqlConnection.Dispose();
                //_sqlConnection = null;
            }
            return ds;

        }
        public override DataSet RptVPPGetInPHIEUXUATTRA(Boolean _qadmin, String _maPXT)
        {
            DataSet ds = new DataSet();
            string[] s = { "CRInPHIEUXUATTRA_RPT" };
            SqlHelper.FillDataset(ConnectionString, DatabaseOwner + ObjectQualifier + "SPVPPXuatTra_C_GETALL ", ds, s, _qadmin, _maPXT);
            // // // //// ds.WriteXmlSchema("CRInPHIEUXUATTRA_RPT.xsd");
            return ds;
        }
        public override DataSet crVPPPhieuDoiThuoc_C_GetAll(Boolean _qadmin, String _maDThuoc)
        {
            DataSet ds = new DataSet();
            string[] s = { "crPhieuDoiThuoc_C_GetAll" };
            SqlHelper.FillDataset(ConnectionString, DatabaseOwner + ObjectQualifier + "SPVPPPhieuDoiThuoc_C_GETALL", ds, s, _qadmin, _maDThuoc);
            // // // //// ds.WriteXmlSchema("crPhieuDoiThuoc_C_GetAll.xsd");
            return ds;
        }

        public override DataSet crVPPKiemKe(String _maKK, Boolean _qadmin)
        {
            DataSet ds = new DataSet("crKiemKe");
            //string[] s ={ "crKiemKe" };
            //SqlHelper.FillDataset( ConnectionString, DatabaseOwner + ObjectQualifier + "SPVPPKIEMKE_HD_GETALL", ds, s, _maKK, _qadmin);
            //// // // //// ds.WriteXmlSchema("crKiemKe.xsd");
            //return ds;

            System.Data.SqlClient.SqlCommand cmd = SqlHelper.CreateCommand(SQLConnectionBD, DatabaseOwner + ObjectQualifier + "SPVPPKIEMKE_HD_GETALL");

            cmd.CommandTimeout = 18000;
            cmd.CommandType = System.Data.CommandType.StoredProcedure;
            cmd.Parameters.AddWithValue("QADMIN", _qadmin);
            cmd.Parameters.AddWithValue("MaKK", _maKK);

            System.Data.SqlClient.SqlDataAdapter sqlad = new System.Data.SqlClient.SqlDataAdapter(cmd);

            sqlad.Fill(ds);
            if (ds.Tables.Count > 0)
                ds.Tables[0].TableName = "crKiemKe";
            sqlad.Dispose(); cmd.Dispose(); sqlad = null;
            cmd = null;
            // if (SQLConnectionBD.State == System.Data.ConnectionState.Closed)
            //SQLConnectionBD.Close(); SQLConnectionBD.Dispose();
            //if (_sqlConnection.State == System.Data.ConnectionState.Closed)
            {
                //_sqlConnection.Close(); _sqlConnection.Dispose();
                //_sqlConnection = null;
            }
            return ds;
        }
        public override DataSet crVPPKiemKe_HoiDong(String _maPhieu, Boolean _qadmin, Byte _loai)
        {
            DataSet ds = new DataSet();
            //string[] s ={ "crKiemKe_HoiDong" };
            //SqlHelper.FillDataset( ConnectionString, DatabaseOwner + ObjectQualifier + "SPVPPKIEMNHAP_GETALL", ds, s, _maPhieu, _qadmin, _loai);
            //// // // //// ds.WriteXmlSchema("crKiemKe_HoiDong.xsd");
            //return ds;

            System.Data.SqlClient.SqlCommand cmd = SqlHelper.CreateCommand(SQLConnectionBD, DatabaseOwner + ObjectQualifier + "SPVPPKIEMNHAP_GETALL");

            cmd.CommandTimeout = 18000;
            cmd.CommandType = System.Data.CommandType.StoredProcedure;
            cmd.Parameters.AddWithValue("MaPhieu", _maPhieu);
            cmd.Parameters.AddWithValue("QADMIN", _qadmin);
            cmd.Parameters.AddWithValue("LOAI", _loai);

            System.Data.SqlClient.SqlDataAdapter sqlad = new System.Data.SqlClient.SqlDataAdapter(cmd);

            sqlad.Fill(ds);
            if (ds.Tables.Count > 0)
                ds.Tables[0].TableName = "crKiemKe_HoiDong";
            sqlad.Dispose(); cmd.Dispose(); sqlad = null;
            cmd = null;
            // if (SQLConnectionBD.State == System.Data.ConnectionState.Closed)
            //SQLConnectionBD.Close(); SQLConnectionBD.Dispose();
            //if (_sqlConnection.State == System.Data.ConnectionState.Closed)
            {
                //_sqlConnection.Close(); _sqlConnection.Dispose();
                //_sqlConnection = null;
            }
            return ds;
        }
        public override DataSet crVPPPhieuDTNhap_C_GetAll(Boolean _qadmin, String _maDuTru)
        {
            DataSet ds = new DataSet();
            string[] s = { "crPhieuDTNhap_C_GetAll" };
            SqlHelper.FillDataset(ConnectionString, DatabaseOwner + ObjectQualifier + "SPVPPPhieuDTNhap_C_GETALL", ds, s, _qadmin, _maDuTru);
            // // // //// ds.WriteXmlSchema("crPhieuDTNhap_C_GetAll.xsd");
            return ds;
        }

        public override DataSet crVPPDuoc_TheKho(String _maKho, String _maThuoc, DateTime _tuNgay, DateTime _denNgay)
        {
            DataSet ds = new DataSet();
            string[] s = { "crDuoc_TheKho" };
            SqlHelper.FillDataset(ConnectionString, DatabaseOwner + ObjectQualifier + "SPVPPYT_THEKHO", ds, s, _maKho, _maThuoc, _tuNgay, _denNgay);
            // // // //// ds.WriteXmlSchema("crDuoc_TheKho.xsd"); 
            return ds;
        }
        public override DataSet RptGetVPPBCNhapTraTHUOC(string ACCOUNT, DateTime _TUNGAYYC, DateTime _DENNGAYYC, int LOAIPHIEU, string MAKHO, string MANHOM, string MACHUNGLOAI, string MAPL, string _DK)
        {
            DataSet ds = new DataSet();
            string[] s = { "CRBCNHAPTRATHUOC_RPT" };
            SqlHelper.FillDataset(ConnectionString, DatabaseOwner + ObjectQualifier + "SPVPPYT_BCNHAPTRATHUOC ", ds, s, ACCOUNT, _TUNGAYYC, _DENNGAYYC, LOAIPHIEU, MAKHO, MANHOM, MACHUNGLOAI, MAPL, _DK);
            // // // // //// ds.WriteXmlSchema("CRBCNHAPTRATHUOC_RPT.xsd");
            return ds;
        }
        public override DataSet crVPPDuoc_BCNhapThuoc(String _account, DateTime _tuNgay, DateTime _denNgay, Byte _loaiPhieu, String _maKho, String _maNhom, String _maChungLoai, String _maPL, String _dK)
        {
            DataSet ds = new DataSet();
            string[] s = { "crDuoc_BCNhapThuoc" };
            SqlHelper.FillDataset(ConnectionString, DatabaseOwner + ObjectQualifier + "SPVPPYT_BCNHAPTHUOC", ds, s, _account, _tuNgay, _denNgay, _loaiPhieu, _maKho, _maNhom, _maChungLoai, _maPL, _dK);
            // // // //// ds.WriteXmlSchema("crDuoc_BCNhapThuoc.xsd");
            return ds;
        }
        public override DataSet RptGetVPPBCXUATTHUOC(string ACCOUNT, DateTime _TUNGAYYC, DateTime _DENNGAYYC, int LOAIPHIEU, string MAKHO, string MANHOM, string MACHUNGLOAI, string MAPL, string _DK)
        {
            DataSet ds = new DataSet();

            System.Data.SqlClient.SqlCommand cmd = SqlHelper.CreateCommand(SQLConnectionBD, DatabaseOwner + ObjectQualifier + "SPVPPYT_BCXUATTHUOC");
            cmd.CommandTimeout = 18000;
            cmd.CommandType = System.Data.CommandType.StoredProcedure;
            cmd.Parameters.AddWithValue("ACCOUNT", ACCOUNT);
            cmd.Parameters.AddWithValue("TUNGAY", _TUNGAYYC);
            cmd.Parameters.AddWithValue("DENNGAY", _DENNGAYYC);
            cmd.Parameters.AddWithValue("LOAIPHIEU", LOAIPHIEU);
            cmd.Parameters.AddWithValue("MAKHO", MAKHO);
            cmd.Parameters.AddWithValue("MANHOM", MANHOM);
            cmd.Parameters.AddWithValue("MACHUNGLOAI", MACHUNGLOAI);
            cmd.Parameters.AddWithValue("MAPL", MAPL);
            cmd.Parameters.AddWithValue("DK", _DK);
            System.Data.SqlClient.SqlDataAdapter sqlad = new System.Data.SqlClient.SqlDataAdapter(cmd);

            sqlad.Fill(ds);
            if (ds.Tables.Count > 0)
                //string[] s ={ "" };
                ds.Tables[0].TableName = "CRBCXuatthuoc_RPT";
            sqlad.Dispose(); cmd.Dispose(); sqlad = null;
            cmd = null;
            // if (SQLConnectionBD.State == System.Data.ConnectionState.Closed)
            //SQLConnectionBD.Close(); SQLConnectionBD.Dispose();
            //if (_sqlConnection.State == System.Data.ConnectionState.Closed)
            {
                //_sqlConnection.Close(); _sqlConnection.Dispose();
                //_sqlConnection = null;
            }
            return ds;
        }

        public override DataSet RptGetBCNhapTraVPPKhoa(string ACCOUNT, DateTime _TUNGAYYC, DateTime _DENNGAYYC, int LOAIPHIEU, string MAKHO, string MANHOM, string MACHUNGLOAI, string MAPL, string _DK)
        {
            DataSet ds = new DataSet("CRBCXuatthuoc_RPT");
            //string[] s = { "CRBCXuatthuoc_RPT" };
            //SqlHelper.FillDataset( ConnectionString, DatabaseOwner + ObjectQualifier + "spDUOC_BCXUATTHUOC ", ds, s, ACCOUNT, _TUNGAYYC, _DENNGAYYC, LOAIPHIEU, MAKHO, MANHOM, MACHUNGLOAI, MAPL, _DK);
            //// ds.WriteXmlSchema("CRBCXuatthuocKhoa_RPT.xsd");
            //  // ds.WriteXmlSchema("CRBCXuatthuocKhoa_RPT.xsd");
            System.Data.SqlClient.SqlCommand cmd = SqlHelper.CreateCommand(SQLConnectionBD, DatabaseOwner + ObjectQualifier + "SPVPPYT_BCNHAPTRATHUOC");

            cmd.CommandTimeout = 18000;
            cmd.CommandType = System.Data.CommandType.StoredProcedure;
            cmd.Parameters.AddWithValue("ACCOUNT", ACCOUNT);
            cmd.Parameters.AddWithValue("TUNGAY", _TUNGAYYC);
            cmd.Parameters.AddWithValue("DENNGAY", _DENNGAYYC);
            cmd.Parameters.AddWithValue("LOAIPHIEU", LOAIPHIEU);
            cmd.Parameters.AddWithValue("MAKHO", MAKHO);
            cmd.Parameters.AddWithValue("MANHOM", MANHOM);
            cmd.Parameters.AddWithValue("MACHUNGLOAI", MACHUNGLOAI);
            cmd.Parameters.AddWithValue("MAPL", MAPL);
            cmd.Parameters.AddWithValue("DK", _DK);
            System.Data.SqlClient.SqlDataAdapter sqlad = new System.Data.SqlClient.SqlDataAdapter(cmd);

            sqlad.Fill(ds);
            if (ds.Tables.Count > 0)
                //string[] s ={ "" };
                ds.Tables[0].TableName = "CRBCXuatthuoc_RPT";
            sqlad.Dispose(); cmd.Dispose(); sqlad = null;
            cmd = null;
            // if (SQLConnectionBD.State == System.Data.ConnectionState.Closed)
            //SQLConnectionBD.Close(); SQLConnectionBD.Dispose();
            //if (_sqlConnection.State == System.Data.ConnectionState.Closed)
            {
                //_sqlConnection.Close(); _sqlConnection.Dispose();
                //_sqlConnection = null;
            }
            return ds;

        }
        public override DataSet RptGetVPPBCXUATTHUOC_C(string ACCOUNT, DateTime _TUNGAYYC, DateTime _DENNGAYYC, int LOAIPHIEU, string MAKHO, string MANHOM, string MACHUNGLOAI, string MAPL, string _DK)
        {
            DataSet ds = new DataSet();
            string[] s = { "CRBCXuatthuoc_C_RPT" };
            SqlHelper.FillDataset(ConnectionString, DatabaseOwner + ObjectQualifier + "SPVPPYT_BCXUATTHUOC ", ds, s, ACCOUNT, _TUNGAYYC, _DENNGAYYC, LOAIPHIEU, MAKHO, MANHOM, MACHUNGLOAI, MAPL, _DK);
            // // // //// ds.WriteXmlSchema("CRBCXuatthuoc_C_RPT.xsd");
            return ds;
        }
        public override DataSet RptVPPBCNXTThuoc_C(DateTime _tuNgay, DateTime _denNgay, string _maKho, int _loaiBC, string _maNhom, string _maChungLoai, string _maPL, string _dK)
        {
            DataSet ds = new DataSet();
            string[] s = { "CRBCNXTThuoc_C_RPT" };
            SqlHelper.FillDataset(ConnectionString, DatabaseOwner + ObjectQualifier + "SPVPPYT_BCNHAPXUATTON", ds, s, _tuNgay, _denNgay, _maKho, _loaiBC, _maNhom, _maChungLoai, _maPL, _dK);
            // // // //// ds.WriteXmlSchema("CRBCXuatthuoc_C_RPT.xsd");
            return ds;
        }

        public override DataSet RptVPPBCNXTThuoc_ToanBV(DateTime _tuNgay, DateTime _denNgay, string _maKho, int _loaiBC, string _maNhom, string _maChungLoai, string _maPL, string _dK)
        {
            DataSet ds = new DataSet();
            string[] s = { "CRBCNXTThuoc_ToanBV_RPT" };
            SqlHelper.FillDataset(ConnectionString, DatabaseOwner + ObjectQualifier + "SPVPPYT_BCNHAPXUATTON ", ds, s, _tuNgay, _denNgay, _maKho, _loaiBC, _maNhom, _maChungLoai, _maPL, _dK);
            // // // //// ds.WriteXmlSchema("CRBCNXTThuoc_ToanBV_RPT.xsd");
            return ds;
        }
        public override DataSet crVPPTonKhoa_GetAll(DateTime _thang, String _maKhoa, String _dK)
        {
            DataSet ds = new DataSet();
            string[] s = { "crTonKhoa_GetAll" };
            SqlHelper.FillDataset(ConnectionString, DatabaseOwner + ObjectQualifier + "SPVPPTonkhoa_GetAll", ds, s, _thang, _maKhoa, _dK);
            // // // //// ds.WriteXmlSchema("crTonKhoa_GetAll.xsd");
            return ds;
        }
        public override DataSet RptVPPGetPhieuHuyThuoc_HoidongHuy(string _maphieu, bool qadmin, byte loai)
        {
            DataSet ds = new DataSet();
            string[] s = { "SCRPhieuHuyThuoc_HoidongHuy_RPT" };
            SqlHelper.FillDataset(ConnectionString, DatabaseOwner + ObjectQualifier + "SPVPPKIEMNHAP_GETALL", ds, s, _maphieu, qadmin, loai);
            // // // //// ds.WriteXmlSchema("PhieuHuyThuoc_HoidongHuy.xsd");
            return ds;
        }
        public override DataSet RptVPPTonKhoTheoHD(DateTime _tuNgay, DateTime _denNgay, string _maKho, int _loaiBC, string _maNhom, string _maChungLoai, string _maPL, string _dK)
        {
            DataSet ds = new DataSet();
            string[] s = { "CRBCTonKhoTheoHD_RPT" };
            SqlHelper.FillDataset(ConnectionString, DatabaseOwner + ObjectQualifier + "SPVPPYT_BCNHAPXUATTON", ds, s, _tuNgay, _denNgay, _maKho, _loaiBC, _maNhom, _maChungLoai, _maPL, _dK);
            // // // //// ds.WriteXmlSchema("CRBCTonKhoTheoHD_RPT.xsd");
            return ds;
        }

        public override DataSet BCVPPChiTietXuatKhoaPhong(string _ACCOUNT, DateTime _tuNgay, DateTime _denNgay, int _LOAIPHIEU, string _maKho, string _maNhom, string _maChungLoai, string _maPL, string _dK)
        {
            DataSet ds = new DataSet();
            string[] s = { "CRChiTietXuatKhoaPhong_RPt" };
            SqlHelper.FillDataset(ConnectionString, DatabaseOwner + ObjectQualifier + "SPVPPYT_BCXUATTHUOC", ds, s, _ACCOUNT, _tuNgay, _denNgay, _LOAIPHIEU, _maKho, _maNhom, _maChungLoai, _maPL, _dK);
            // // //// ds.WriteXmlSchema("CRChiTietXuatKhoaPhong_RPt.xsd");
            return ds;
        }


        #endregion
        public override void VPP_TinhTon(DateTime ngayyclinh, String MaKho)
        {
            //SqlHelper.ExecuteReader( ConnectionString, DatabaseOwner + ObjectQualifier + "sp_VTTinhTon", ngayyclinh, MaKho);
            System.Data.SqlClient.SqlCommand cmd = SqlHelper.CreateCommand(SQLConnectionBD, DatabaseOwner + ObjectQualifier + "sp_VPPTinhTon");
            cmd.CommandType = System.Data.CommandType.StoredProcedure;


            cmd.Parameters.AddWithValue("thang", ngayyclinh);

            cmd.Parameters.AddWithValue("makho", MaKho);
            cmd.CommandTimeout = 18000;
            cmd.ExecuteNonQuery();
            // if (SQLConnectionBD.State == System.Data.ConnectionState.Closed)
            //SQLConnectionBD.Close(); SQLConnectionBD.Dispose();
            ////if (_sqlConnection.State == System.Data.ConnectionState.Closed)
            //{
            //    //_sqlConnection.Close(); _sqlConnection.Dispose();
            //    //_sqlConnection = null;
            //}
            cmd.Dispose();
            cmd = null;
        }
        #endregion
        #region VPPTon Khoa

        public override String InsertVPPTonKhoa(String _makhoa, String _mathuoc, SmartDate _thang, Decimal _soDK, Decimal _sLN, Decimal _sLX, Decimal _sLNT, Decimal _sLXT, Decimal _sLDC, Decimal _tonCK, Decimal _giaNhap, String _nguoiSD, string _maMay, Decimal _TonKK)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spVPPTonKhoa_CREATE", _makhoa, _mathuoc, _thang.DBValue, _soDK, _sLN, _sLX, _sLNT, _sLXT, _sLDC, _tonCK, _giaNhap, _nguoiSD, _maMay, _TonKK));
        }
        public override void UpdateVPPTonKhoa(String _makhoa, String _mathuoc, SmartDate _thang, Decimal _soDK, Decimal _sLN, Decimal _sLX, Decimal _sLNT, Decimal _sLXT, Decimal _sLDC, Decimal _tonCK, Decimal _giaNhap, String _nguoiSD, string _maMay, Decimal _TonKK)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spVPPTonKhoa_UPDATE", _makhoa, _mathuoc, _thang.DBValue, _soDK, _sLN, _sLX, _sLNT, _sLXT, _sLDC, _tonCK, _giaNhap, _nguoiSD, _maMay, _TonKK);
        }

        #endregion
        #region DMVPP_Gia
        public override void InsertDMVPP_Gia(String _maDT, String _maVT, Decimal _donGiaBH, Decimal _donGiaThuT, Decimal _donGiaPhauT, Decimal _donGiaCLS, Decimal _giaChenhlech, Boolean _aDChenhlech, Boolean _DTBH, Byte _aDPhongMo, Decimal _donGia1, Decimal _giaChenhlech1, DateTime _ngay1, String _ghichu, string _maMay, String _nguoiLap)
        {
            //return System.Convert.ToString(SqlHelper.ExecuteScalar( SQLConnectionBD, DatabaseOwner + ObjectQualifier + "spDMVPP_Gia_CREATE", _maDT, _maVT, _donGiaBH, _donGiaThuT, _donGiaPhauT, _donGiaCLS, _giaChenhlech, _aDChenhlech, _DTBH, _aDPhongMo, _donGia1, _giaChenhlech1, _ngay1, _ghichu, _maMay, _nguoiLap));
            System.Data.SqlClient.SqlDataReader dr;
            dr = SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMVPP_Gia_CREATE", _maDT, _maVT, _donGiaBH, _donGiaThuT, _donGiaPhauT, _donGiaCLS, _giaChenhlech, _aDChenhlech, _DTBH, _aDPhongMo, _donGia1, _giaChenhlech1, _ngay1, _ghichu, _maMay, _nguoiLap);
            dr.Close();
        }
        public override void UpdateDMVPP_Gia(String _maDT, Decimal _STT, String _maVT, Decimal _donGiaBH, Decimal _donGiaThuT, Decimal _donGiaPhauT, Decimal _donGiaCLS, Decimal _giaChenhlech, Boolean _aDChenhlech, Boolean _DTBH, Byte _aDPhongMo, String _ghichu, string _maMay, String _nguoisd, Boolean _huy)
        {
            //SqlHelper.ExecuteNonQuery( SQLConnectionBD, DatabaseOwner + ObjectQualifier + "spDMVPP_Gia_UPDATE", _maDT, _STT, _maVT, _donGiaBH, _donGiaThuT, _donGiaPhauT, _donGiaCLS, _giaChenhlech, _aDChenhlech, _DTBH, _aDPhongMo, _ghichu, _maMay, _nguoisd, _huy);
            System.Data.SqlClient.SqlDataReader dr;
            dr = SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMVPP_Gia_UPDATE", _maDT, _STT, _maVT, _donGiaBH, _donGiaThuT, _donGiaPhauT, _donGiaCLS, _giaChenhlech, _aDChenhlech, _DTBH, _aDPhongMo, _ghichu, _maMay, _nguoisd, _huy);
            dr.Close();
        }
        public override void DeleteDMVPP_Gia(String _maMay, String _nguoiSD, String _maDT, Decimal stt)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMVPP_Gia_DELETED", _maMay, _nguoiSD, _maDT, stt);
        }
        #endregion
        #region DMVPP_KhoKhoa
        public override String InsertDMVPP_KhoKhoa(String _makho, String _makhoa, String _maVT, String _nguoiSD, string _maMay)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMVPP_KhoKhoa_Create", _makho, _makhoa, _maVT, _nguoiSD, _maMay));
        }
        public override void UpdateDMVPP_KhoKhoa(String _makho, Decimal _sTT, String _makhoa, String _maVT, Boolean _huy, String _nguoiSD, string _maMay)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMVPP_KhoKhoa_Update", _makho, _sTT, _makhoa, _maVT, _huy, _nguoiSD, _maMay);
        }
        public override void DeleteDMVPP_KhoKhoa(String _maMay, String _nguoiSD, String _makho, Decimal _sTT, String _makhoa)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMVPP_KhoKhoa_Deleted", _maMay, _nguoiSD, _makho, _sTT, _makhoa);
        }
        #endregion
        #region DMVPP_KhoKhoaG


        public override IDataReader GetAllVPPTonKhoaH(DateTime tuthang, DateTime denthang, string makhoa, String dk)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spVPPTONKHOA_GETHS", tuthang, denthang, makhoa, dk));
        }
        //public override String InsertDMVPP_KhoKhoaG(String _makho, String _makhoa, String _maVT, String _nguoiSD, string _maMay)
        //{
        //    return System.Convert.ToString(SqlHelper.ExecuteScalar( ConnectionString, DatabaseOwner + ObjectQualifier + "spDMVPP_KhoKhoaG_Create", _makho, _makhoa, _maVT, _nguoiSD, _maMay));
        //}
        //public override void UpdateDMVPP_KhoKhoaG(String _makho, Decimal _sTT, String _makhoa, String _maVT, Boolean _huy, String _nguoiSD, string _maMay)
        //{
        //    SqlHelper.ExecuteNonQuery( ConnectionString, DatabaseOwner + ObjectQualifier + "spDMVPP_KhoKhoaG_Update", _makho, _sTT, _makhoa, _maVT, _huy, _nguoiSD, _maMay);
        //}
        //public override void DeleteDMVPP_KhoKhoaG(String _maMay, String _nguoiSD, String _makho, Decimal _sTT, String _makhoa)
        //{
        //    SqlHelper.ExecuteNonQuery( ConnectionString, DatabaseOwner + ObjectQualifier + "spDMVPP_KhoKhoaG_Deleted", _maMay, _nguoiSD, _makho, _sTT, _makhoa);
        //}
        #endregion
        #region DMVPP

        #region GetList
        public override IDataReader GetDMVPP(String _maVT)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMVPP_GET", _maVT));
        }
        public override IDataReader GetAllDMVPP(Boolean _qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMVPP_GetAll", _qadmin));
        }

        public override IDataReader GetDMVPP_Gia(String madt, String maVT)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMVPP_Gia_Get", madt, maVT));
        }
        public override IDataReader GetAllDMVPP_Gia(String mdt, Boolean qadmin, String DK)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMVPP_Gia_GetAll", mdt, qadmin, DK));
        }
        public override IDataReader GetDMVPP_KhoKhoa(String _makho, Decimal _sTT, String _makhoa)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMVPP_KhoKhoa_GET", _makho, _sTT, _makhoa));
        }
        public override IDataReader GetAllDMVPP_KhoKhoa(String makho, String makhoa, Boolean qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMVPP_KhoKhoa_GETALL", makho, makhoa, qadmin));
        }
        public override IDataReader GetDMVPP_KhoKhoaG(String _makho, Decimal _sTT, String _makhoa)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMVPP_KhoKhoaG_GET", _makho, _sTT, _makhoa));
        }
        public override IDataReader GetAllDMVPP_KhoKhoaG(String makho, String makhoa, Boolean qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMVPP_KhoKhoaG_GETALL", makho, makhoa, qadmin));
        }
        public override IDataReader GetDMVPPKhoa(String maKhoa, String maDT, String MaVT, byte loai)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMVPP_TON_GETKHOA", maKhoa, maDT, MaVT, loai));
        }
        public override IDataReader GetAllDMVPPKhoa(String maKhoa, String maDT, String DK, byte loai)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMVPP_TON_GETSKHOA", maKhoa, maDT, DK, loai));
        }
        public override IDataReader GetAllDMVPPKhoaG(String maKhoa, String maDT, String DK, byte loai)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMVPP_TON_GETSKHOAG", maKhoa, maDT, DK, loai));
        }
        public override IDataReader GetDMVPPTonKho(String maKho, DateTime ngayyclinh, String MaVT)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMVPP_TON_GETKHO", maKho, ngayyclinh, MaVT));
        }
        public override IDataReader GetAllDMVPPTonKho(String maKho, DateTime Thang, String DK)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMVPP_TON_GETSKHO", maKho, Thang, DK));
        }
        public override IDataReader GetDMVPPTonKhoHD(String maKho, DateTime ngayyclinh, String MaVT)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMVPP_TONHD_GETKHO", maKho, ngayyclinh, MaVT, "", null));
        }
        public override IDataReader GetAllDMVPPTonKhoHD(String maKho, DateTime Thang, String DK)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMVPP_TONHD_GETSKHO", maKho, Thang, DK, "", null));
        }
        public override IDataReader GetDMVPPTonKhoHD(String maKho, DateTime ngayyclinh, String MaVT, string solo, DateTime hansd)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMVPP_TONHD_GETKHO", maKho, ngayyclinh, MaVT, solo, hansd));
        }
        public override IDataReader GetAllDMVPPTonKhoHD(String maKho, DateTime Thang, String DK, string solo, DateTime hansd)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMVPP_TONHD_GETSKHO", maKho, Thang, DK, solo, hansd));
        }
        #endregion

        #region Find List
        public override IDataReader FindDMVPP(string _DK, Boolean _qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMVPP_Finds", _DK, _qadmin));
        }


        #endregion
        #region DMNVTYT
        public override String InsertDMVPP(String _maNhom, String _maChungLoai, String _tenTM, String _tenTA, String _maNSX, Decimal _nguong, String _maDVT, Boolean _apDungGoi, Boolean _handung, String _khoban, String _khophat, Boolean _vTThuT, Boolean _vTPhauT, Boolean _vTCLS, Boolean _vTDuoc, Boolean _vTBan, Boolean _duyetNgoaiT, Boolean _duyetNoiT, String _ghichu, string _maMay, String _nguoiLap, Boolean _vTNoiT, String _maLH, String _hamluong, String _madvthl, Boolean KhongSD, String _maql, string _quycach, String _madvt2, Decimal _quydoi)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMVPP_CREATE", _maNhom, _maChungLoai, _tenTM, _tenTA, _maNSX, _nguong, _maDVT, _apDungGoi, _handung, _khoban, _khophat, _vTThuT, _vTPhauT, _vTCLS, _vTDuoc, _vTBan, _duyetNgoaiT, _duyetNoiT, _ghichu, _maMay, _nguoiLap, _vTNoiT, _maLH, _hamluong, _madvthl, KhongSD, _maql, _quycach, _madvt2, _quydoi));
        }
        public override void UpdateDMVPP(String _maVT, String _maNhom, String _maChungLoai, String _tenTM, String _tenTA, String _maNSX, Decimal _nguong, String _maDVT, Boolean _apDungGoi, Boolean _handung, String _khoban, String _khophat, Boolean _vTThuT, Boolean _vTPhauT, Boolean _vTCLS, Boolean _vTDuoc, Boolean _vTBan, Boolean _duyetNgoaiT, Boolean _duyetNoiT, String _ghichu, string _maMay, Boolean _huy, String _nguoiSD, Boolean _vTNoiT, String _maLH, String _hamluong, String _madvthl, Boolean KhongSD, String _maql, string _quycach, String _madvt2, Decimal _quydoi)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMVPP_UPDATE", _maVT, _maNhom, _maChungLoai, _tenTM, _tenTA, _maNSX, _nguong, _maDVT, _apDungGoi, _handung, _khoban, _khophat, _vTThuT, _vTPhauT, _vTCLS, _vTDuoc, _vTBan, _duyetNgoaiT, _duyetNoiT, _ghichu, _maMay, _huy, _nguoiSD, _vTNoiT, _maLH, _hamluong, _madvthl, KhongSD, _maql, _quycach, _madvt2, _quydoi);
        }
        public override void DeleteDMVPP(String _maMay, String _nguoiSD, String _maVT)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMVPP_DELETED", _maMay, _nguoiSD, _maVT);
        }
        #endregion

        #region ExcSql
        public override void ExcSQL(String _sql)
        {
            // SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spExcSQL", _sql);
            System.Data.SqlClient.SqlCommand cmd;
           
                cmd = SqlHelper.CreateCommand(SQLConnectionData, DatabaseOwner + ObjectQualifier + "spExcSQL");
            cmd.CommandType = System.Data.CommandType.StoredProcedure;

            cmd.Parameters.AddWithValue("sql", _sql);

            cmd.CommandTimeout = 18000;
            cmd.ExecuteNonQuery();
            cmd.Dispose();
            cmd = null;
        }
        public override void ExcSQL(String _sql,byte loaikq)
        {
           // SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spExcSQL", _sql);
            System.Data.SqlClient.SqlCommand cmd ;
            if (loaikq ==1)
                cmd = SqlHelper.CreateCommand(SQLConnectionDataChuyenBN, DatabaseOwner + ObjectQualifier + "spExcSQL");
            else
                cmd  = SqlHelper.CreateCommand(SQLConnectionData, DatabaseOwner + ObjectQualifier + "spExcSQL");
            cmd.CommandType = System.Data.CommandType.StoredProcedure;

            cmd.Parameters.AddWithValue("sql", _sql);

            cmd.CommandTimeout = 18000;
            cmd.ExecuteNonQuery();
            cmd.Dispose();
            cmd = null;
        }
        public override string ExcSQLString(String _sql)
        {
            // SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spExcSQL", _sql);
            System.Data.SqlClient.SqlCommand cmd;

            cmd = SqlHelper.CreateCommand(SQLConnectionData, DatabaseOwner + ObjectQualifier + "spExcSQL");
            cmd.CommandType = System.Data.CommandType.StoredProcedure;

            cmd.Parameters.AddWithValue("sql", _sql);

            cmd.CommandTimeout = 18000;
            IDataReader reader = (IDataReader)cmd.ExecuteReader(CommandBehavior.CloseConnection);
            string kq = "";
            while (reader.Read())
            {
                kq = reader[0].ToString(); //get Value of ppassword Column
            }

            cmd.Dispose();
            cmd = null;

            return kq;
        }
        #endregion
        #region NhapDVKhoa
        public override void NhapDVKhoa(String _maba, String _mabn, String _madt, DateTime _ngayvv)
        {
            SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spNhapDVKhoa_create", _maba, _mabn, _madt, _ngayvv);
        }
        #endregion
        #endregion

        #region CNK
        #region Reports
        public override DataSet CRNKPhieuLinh_RPTa(DateTime _TUNGAYYC, DateTime _DENNGAYYC, Boolean _Duyet, Boolean _Phat, string _MaDT, string _MaKho, string _MAKHOA, Boolean _DADUNG, string _dk)
        {
            DataSet ds = new DataSet();
            string[] s = { "CRPhieuLinh_RPTa" };
            SqlHelper.FillDataset(ConnectionString, DatabaseOwner + ObjectQualifier + "spKhambenh_CNK_BN_gets", ds, s, _TUNGAYYC, _DENNGAYYC, _Duyet, _Phat, _MaDT, _MaKho, _MAKHOA, _DADUNG, _dk);
            // ds.WriteXmlSchema("CRNKPhieuLinh_DY.xsd");
            return ds;
        }
        public override DataSet crNKPhieuNhap_C_GetAll(Boolean _qadmin, String _maPN)
        {
            DataSet ds = new DataSet();
            string[] s = { "crPhieuNhap_C_GetAll" };
            SqlHelper.FillDataset(ConnectionString, DatabaseOwner + ObjectQualifier + "spNKPhieuNhap_C_GETALL", ds, s, _qadmin, _maPN);
            //ds.WriteXmlSchema("crPhieuNhap_C_GetAll.xsd");
            return ds;
        }
        public override DataSet crNKPhieuNhapTra_C_GetAll(Boolean _qadmin, String _maPNT)
        {
            DataSet ds = new DataSet();
            string[] s = { "crPhieuNhapTra_C_GetAll" };
            SqlHelper.FillDataset(ConnectionString, DatabaseOwner + ObjectQualifier + "spNKNhapTra_C_GETALL", ds, s, _qadmin, _maPNT);
            // // // //ds.WriteXmlSchema("crPhieuNhapTra_C_GetAll.xsd");
            return ds;
        }
        public override DataSet crNKPhieuXuat_C_GetAll(Boolean _qadmin, String _maPX)
        {
            DataSet ds = new DataSet();
            string[] s = { "crPhieuXuat_C_GetAll" };
            SqlHelper.FillDataset(ConnectionString, DatabaseOwner + ObjectQualifier + "spNKPhieuXuat_C_GETALL", ds, s, _qadmin, _maPX);
            // ds.WriteXmlSchema("crPhieuXuat_C_GetAll.xsd");
            return ds;
        }
        public override DataSet RptNKGetInPHIEUXUATTRA(Boolean _qadmin, String _maPXT)
        {
            DataSet ds = new DataSet();
            string[] s = { "CRInPHIEUXUATTRA_RPT" };
            SqlHelper.FillDataset(ConnectionString, DatabaseOwner + ObjectQualifier + "spNKXuatTra_C_GETALL ", ds, s, _qadmin, _maPXT);
            // // // //ds.WriteXmlSchema("CRInPHIEUXUATTRA_RPT.xsd");
            return ds;
        }
        public override DataSet crNKPhieuDoiThuoc_C_GetAll(Boolean _qadmin, String _maDThuoc)
        {
            DataSet ds = new DataSet();
            string[] s = { "crPhieuDoiThuoc_C_GetAll" };
            SqlHelper.FillDataset(ConnectionString, DatabaseOwner + ObjectQualifier + "spNKPhieuDoiThuoc_C_GETALL", ds, s, _qadmin, _maDThuoc);
            // // // //ds.WriteXmlSchema("crPhieuDoiThuoc_C_GetAll.xsd");
            return ds;
        }

        public override DataSet crDMCNK_GIA_RPT(string _madt, bool qadmin)
        {
            DataSet ds = new DataSet();
            string[] s = { "DMCNK_GIA_RPT" };
            SqlHelper.FillDataset(ConnectionString, DatabaseOwner + ObjectQualifier + "spDMCNK_GIA_RPT", ds, s, _madt, qadmin);
            // // // //ds.WriteXmlSchema("DMCNK_GIA_RPT.xsd");
            return ds;
        }
        public override DataSet crNKKiemKe(String _maKK, Boolean _qadmin)
        {
            DataSet ds = new DataSet();
            string[] s = { "crKiemKe" };
            SqlHelper.FillDataset(ConnectionString, DatabaseOwner + ObjectQualifier + "spNKKiemKE_HD_GETALL", ds, s, _maKK, _qadmin);
            //  ds.WriteXmlSchema("crKiemKe.xsd");
            return ds;
        }
        public override DataSet crNKKiemKe_HoiDong(String _maPhieu, Boolean _qadmin, Byte _loai)
        {
            DataSet ds = new DataSet();
            string[] s = { "crKiemKe_HoiDong" };
            SqlHelper.FillDataset(ConnectionString, DatabaseOwner + ObjectQualifier + "spNKKiemNHAP_GETALL", ds, s, _maPhieu, _qadmin, _loai);
            // // // //ds.WriteXmlSchema("crKiemKe_HoiDong.xsd");
            return ds;
        }
        public override DataSet crNKPhieuDTNhap_C_GetAll(Boolean _qadmin, String _maDuTru)
        {
            DataSet ds = new DataSet();
            string[] s = { "crPhieuDTNhap_C_GetAll" };
            SqlHelper.FillDataset(ConnectionString, DatabaseOwner + ObjectQualifier + "spNKPhieuDTNhap_C_GETALL", ds, s, _qadmin, _maDuTru);
            // // // //ds.WriteXmlSchema("crPhieuDTNhap_C_GetAll.xsd");
            return ds;
        }

        public override DataSet crNKDuoc_TheKho(String _maKho, String _maThuoc, DateTime _tuNgay, DateTime _denNgay)
        {
            DataSet ds = new DataSet();
            string[] s = { "crDuoc_TheKho" };
            SqlHelper.FillDataset(ConnectionString, DatabaseOwner + ObjectQualifier + "SPCNK_THEKHO", ds, s, _maKho, _maThuoc, _tuNgay, _denNgay);
            // // // //ds.WriteXmlSchema("crDuoc_TheKho.xsd"); 
            return ds;
        }
        public override DataSet RptGetNKBCBCNHAPTRATHUOC(string ACCOUNT, DateTime _TUNGAYYC, DateTime _DENNGAYYC, int LOAIPHIEU, string MAKHO, string MANHOM, string MACHUNGLOAI, string MAPL, string _DK)
        {
            DataSet ds = new DataSet();
            string[] s = { "CRBCNHAPTRATHUOC_RPT" };
            SqlHelper.FillDataset(ConnectionString, DatabaseOwner + ObjectQualifier + "spCNK_BCNHAPTRATHUOC ", ds, s, ACCOUNT, _TUNGAYYC, _DENNGAYYC, LOAIPHIEU, MAKHO, MANHOM, MACHUNGLOAI, MAPL, _DK);
            // // // // //ds.WriteXmlSchema("CRBCNHAPTRATHUOC_RPT.xsd");
            return ds;
        }
        public override DataSet crNKDuoc_BCNhapThuoc(String _account, DateTime _tuNgay, DateTime _denNgay, Byte _loaiPhieu, String _maKho, String _maNhom, String _maChungLoai, String _maPL, String _dK)
        {
            DataSet ds = new DataSet();
            string[] s = { "crDuoc_BCNhapThuoc" };
            SqlHelper.FillDataset(ConnectionString, DatabaseOwner + ObjectQualifier + "spCNK_BCNHAPTHUOC", ds, s, _account, _tuNgay, _denNgay, _loaiPhieu, _maKho, _maNhom, _maChungLoai, _maPL, _dK);
            // // // //ds.WriteXmlSchema("crDuoc_BCNhapThuoc.xsd");
            return ds;
        }
        public override DataSet RptGetNKBCXUATTHUOC(string ACCOUNT, DateTime _TUNGAYYC, DateTime _DENNGAYYC, int LOAIPHIEU, string MAKHO, string MANHOM, string MACHUNGLOAI, string MAPL, string _DK)
        {
            DataSet ds = new DataSet();
            string[] s = { "CRBCXuatthuoc_RPT" };
            SqlHelper.FillDataset(ConnectionString, DatabaseOwner + ObjectQualifier + "spCNK_BCXUATTHUOC ", ds, s, ACCOUNT, _TUNGAYYC, _DENNGAYYC, LOAIPHIEU, MAKHO, MANHOM, MACHUNGLOAI, MAPL, _DK);
            // // // //ds.WriteXmlSchema("CRBCXuatthuoc_RPT.xsd");
            return ds;
        }
        public override DataSet RptGetNKBCXUATTHUOC_C(string ACCOUNT, DateTime _TUNGAYYC, DateTime _DENNGAYYC, int LOAIPHIEU, string MAKHO, string MANHOM, string MACHUNGLOAI, string MAPL, string _DK)
        {
            DataSet ds = new DataSet();
            string[] s = { "CRBCXuatthuoc_C_RPT" };
            SqlHelper.FillDataset(ConnectionString, DatabaseOwner + ObjectQualifier + "spCNK_BCXUATTHUOC ", ds, s, ACCOUNT, _TUNGAYYC, _DENNGAYYC, LOAIPHIEU, MAKHO, MANHOM, MACHUNGLOAI, MAPL, _DK);
            // // // //ds.WriteXmlSchema("CRBCXuatthuoc_C_RPT.xsd");
            return ds;
        }
        public override DataSet RptNKBCNXTThuoc_C(DateTime _tuNgay, DateTime _denNgay, string _maKho, int _loaiBC, string _maNhom, string _maChungLoai, string _maPL, string _dK)
        {
            DataSet ds = new DataSet();
            string[] s = { "CRBCNXTThuoc_C_RPT" };
            SqlHelper.FillDataset(ConnectionString, DatabaseOwner + ObjectQualifier + "SPCNK_BCNHAPXUATTON", ds, s, _tuNgay, _denNgay, _maKho, _loaiBC, _maNhom, _maChungLoai, _maPL, _dK);
            // // // //ds.WriteXmlSchema("CRBCXuatthuoc_C_RPT.xsd");
            return ds;
        }


		public override DataSet RptDUOC_BCNHAPXUATTON(DateTime _tuNgay, DateTime _denNgay, string _maKho, int _loaiBC, string _maNhom, string _maChungLoai, string _maPL, string _dK)
		{
			DataSet ds = new DataSet();
			string[] s = { "SPDUOC_BCNHAPXUATTON_RPT" };
			SqlHelper.FillDataset(ConnectionString, DatabaseOwner + ObjectQualifier + "SPDUOC_BCNHAPXUATTON", ds, s, _tuNgay, _denNgay, _maKho, _loaiBC, _maNhom, _maChungLoai, _maPL, _dK);
			// // // //ds.WriteXmlSchema("CRBCXuatthuoc_C_RPT.xsd");
			return ds;
		}

		public override DataSet RptHOACHAT_BCNHAPXUATTON(DateTime _tuNgay, DateTime _denNgay, string _maKho, int _loaiBC, string _maNhom, string _maChungLoai, string _maPL, string _dK)
		{
			DataSet ds = new DataSet();
			string[] s = { "SPHOACHAT_BCNHAPXUATTON_RPT" };
			SqlHelper.FillDataset(ConnectionString, DatabaseOwner + ObjectQualifier + "SPHOACHAT_BCNHAPXUATTON", ds, s, _tuNgay, _denNgay, _maKho, _loaiBC, _maNhom, _maChungLoai, _maPL, _dK);
			// // // //ds.WriteXmlSchema("CRBCXuatthuoc_C_RPT.xsd");
			return ds;
		}

		public override DataSet RptVTYT_BCNHAPXUATTON(DateTime _tuNgay, DateTime _denNgay, string _maKho, int _loaiBC, string _maNhom, string _maChungLoai, string _maPL, string _dK)
		{
			DataSet ds = new DataSet();
			string[] s = { "SPVTYT_BCNHAPXUATTON_RPT" };
			SqlHelper.FillDataset(ConnectionString, DatabaseOwner + ObjectQualifier + "SPVTYT_BCNHAPXUATTON", ds, s, _tuNgay, _denNgay, _maKho, _loaiBC, _maNhom, _maChungLoai, _maPL, _dK);
			// // // //ds.WriteXmlSchema("CRBCXuatthuoc_C_RPT.xsd");
			return ds;
		}




        public override DataSet RptNKBCNXTThuoc_ToanBV(DateTime _Thang, string _maKho, string _dK)
        {
            DataSet ds = new DataSet();
            string[] s = { "CRBCTonKhoTheoHD_RPT" };
            SqlHelper.FillDataset(ConnectionString, DatabaseOwner + ObjectQualifier + "NK_BCNHAPXUATTON ", ds, s, _Thang, _maKho, _dK);
            // // // //ds.WriteXmlSchema("CRBCNXTThuoc_ToanBV_RPT.xsd");
            return ds;
        }
        public override DataSet RptNKBCNXTThuoc_ToanBV_Khoa(DateTime _Thang, string _maKho, string _dK)
        {
            DataSet ds = new DataSet();
            string[] s = { "CRBCTonKhoTheoHD_RPT" };
            SqlHelper.FillDataset(ConnectionString, DatabaseOwner + ObjectQualifier + "NK_BCNHAPXUATTON_KHOA ", ds, s, _Thang, _maKho, _dK);
            // // // //ds.WriteXmlSchema("CRBCNXTThuoc_ToanBV_RPT.xsd");
            return ds;
        }




        public override DataSet crNKTonKhoa_GetAll(DateTime _thang, String _maKhoa, String _dK)
        {
            DataSet ds = new DataSet();
            string[] s = { "crTonKhoa_GetAll" };
            SqlHelper.FillDataset(ConnectionString, DatabaseOwner + ObjectQualifier + "spNKTonkhoa_GetAll", ds, s, _thang, _maKhoa, _dK);
            // // // //ds.WriteXmlSchema("crTonKhoa_GetAll.xsd");
            return ds;
        }
        public override DataSet RptNKGetPhieuHuyThuoc_HoidongHuy(string _maphieu, bool qadmin, byte loai)
        {
            DataSet ds = new DataSet();
            string[] s = { "SCRPhieuHuyThuoc_HoidongHuy_RPT" };
            SqlHelper.FillDataset(ConnectionString, DatabaseOwner + ObjectQualifier + "spNKKiemNHAP_GETALL", ds, s, _maphieu, qadmin, loai);
            // // // //ds.WriteXmlSchema("PhieuHuyThuoc_HoidongHuy.xsd");
            return ds;
        }
        public override DataSet RptNKTonKhoTheoHD(DateTime _tuNgay, DateTime _denNgay, string _maKho, int _loaiBC, string _maNhom, string _maChungLoai, string _maPL, string _dK)
        {
            DataSet ds = new DataSet();
            string[] s = { "CRBCTonKhoTheoHD_RPT" };
            SqlHelper.FillDataset(ConnectionString, DatabaseOwner + ObjectQualifier + "SPCNK_BCNHAPXUATTON", ds, s, _tuNgay, _denNgay, _maKho, _loaiBC, _maNhom, _maChungLoai, _maPL, _dK);
            // // // //ds.WriteXmlSchema("CRBCTonKhoTheoHD_RPT.xsd");
            //ds.WriteXml("CRBCTonKhoTheoHD_RPT1.xsd");
            return ds;
        }
        public override DataSet crBCNKNguong(String _MaKho, String _MaNhomThuoc, String _MaChungLoai, String _MaPhanLoai, String _dK)
        {
            DataSet ds = new DataSet("crBCVTHanDung");
            //string[] s ={ "crBCVTHanDung" };
            //SqlHelper.FillDataset( SQLConnectionBD, DatabaseOwner + ObjectQualifier + "SPVTYT_BCNguongThuoc", ds, s, _MaKho, _MaNhomThuoc, _MaChungLoai, _MaPhanLoai, _dK);
            // // // //// ds.WriteXmlSchema("crBCVTNguong.xsd");
            System.Data.SqlClient.SqlCommand cmd = SqlHelper.CreateCommand(SQLConnectionBD, DatabaseOwner + ObjectQualifier + "SPCNK_BCNguongThuoc");

            cmd.CommandTimeout = 18000;
            cmd.CommandType = System.Data.CommandType.StoredProcedure;
            cmd.Parameters.AddWithValue("MaKho", _MaKho);
            cmd.Parameters.AddWithValue("MANT", _MaNhomThuoc);
            cmd.Parameters.AddWithValue("MACHUNGLOAI", _MaChungLoai);
            cmd.Parameters.AddWithValue("MALH", _MaPhanLoai);
            cmd.Parameters.AddWithValue("DK", _dK);

            System.Data.SqlClient.SqlDataAdapter sqlad = new System.Data.SqlClient.SqlDataAdapter(cmd);

            sqlad.Fill(ds);
            if (ds.Tables.Count > 0)
                ds.Tables[0].TableName = "crBCVTHanDung";
            sqlad.Dispose(); cmd.Dispose(); sqlad = null;
            cmd = null;
            // if (SQLConnectionBD.State == System.Data.ConnectionState.Closed)
            //SQLConnectionBD.Close(); SQLConnectionBD.Dispose();
            //if (_sqlConnection.State == System.Data.ConnectionState.Closed)
            {
                //_sqlConnection.Close(); _sqlConnection.Dispose();
                //_sqlConnection = null;
            }
            return ds;

        }

        public override DataSet BCNKChiTietXuatKhoaPhong(string _ACCOUNT, DateTime _tuNgay, DateTime _denNgay, int _LOAIPHIEU, string _maKho, string _maNhom, string _maChungLoai, string _maPL, string _dK)
        {
            DataSet ds = new DataSet();
            string[] s = { "CRChiTietXuatKhoaPhong_RPt" };
            SqlHelper.FillDataset(ConnectionString, DatabaseOwner + ObjectQualifier + "SPCNK_BCXUATTHUOC", ds, s, _ACCOUNT, _tuNgay, _denNgay, _LOAIPHIEU, _maKho, _maNhom, _maChungLoai, _maPL, _dK);
            // // //ds.WriteXmlSchema("CRChiTietXuatKhoaPhong_RPt.xsd");
            return ds;
        }
        public override DataSet CRBaoCaoCongTac(Byte _tuan, String _thang)
        {
            DataSet ds = new DataSet();
            string[] s = { "CRBaoCaoCongTac" };
            SqlHelper.FillDataset(ConnectionString, DatabaseOwner + ObjectQualifier + "CNK_BAOCAOCONGTAC_C_FINDS", ds, s, _tuan, _thang);
            //ds.WriteXmlSchema("CRBaoCaoCongTac.xsd");
            return ds;
        }
        public override DataSet CRBCSoLuongAoVang(String _ngayBC)
        {
            DataSet ds = new DataSet();
            string[] s = { "CRBCSoLuongAoVang" };
            SqlHelper.FillDataset(ConnectionString, DatabaseOwner + ObjectQualifier + "NK_BCTHONGKEAOVANG", ds, s, _ngayBC);
            // ds.WriteXml("CRBCSoLuongAoVang1.xsd");
            return ds;
        }
        //public abstract DataSet CRTheoDoiSDHoaChat(String _tuNgay, String _denNgay);
        public override DataSet CRTheoDoiSDHoaChat(String _tuNgay, String _denNgay)
        {
            DataSet ds = new DataSet();
            string[] s = { "CRTheoDoiSDHoaChat" };
            SqlHelper.FillDataset(ConnectionString, DatabaseOwner + ObjectQualifier + "CNK_HOACHATSD", ds, s, _tuNgay, _denNgay);
            // ds.WriteXmlSchema("CRTheoDoiSDHoaChat.xsd");
            return ds;
        }
        #endregion


        #region Get List
        //NKPhieuNhap

        public override IDataReader GetNKPhieuNhap(String _maPN, Boolean _qadmin, byte _loaiNKPhieu, Boolean _daphat)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spNKPhieuNhap_Get", _maPN, _qadmin, _loaiNKPhieu, _daphat));
        }
        public override IDataReader GetAllNKPhieuNhap(Boolean _qadmin, String _maKho, Byte _loaiNKPhieu, Boolean _daPhat, DateTime _tuNgay, DateTime _denNgay, String _dieuKienThem, Boolean _daduyet)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spNKPhieuNhap_GetAll", _qadmin, _maKho, _loaiNKPhieu, _daPhat, _tuNgay, _denNgay, _dieuKienThem, _daduyet));
        }
        public override IDataReader GetNKPhieuNhap_C(String _maPN, Byte _orderNumber)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spNKPhieuNhap_Get", _maPN, _orderNumber));
        }

        public override IDataReader GetNKPhieuXuat(String _mapx, Boolean _qadmin, byte _loaiNKPhieu, Boolean _daphat)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spNKPhieuXuat_Get", _mapx, _qadmin, _loaiNKPhieu, _daphat));
        }
        public override IDataReader GetAllNKPhieuXuat(Boolean _qadmin, String _maKho, Byte _loaiNKPhieu, Boolean _daPhat, DateTime _tuNgay, DateTime _denNgay, String _dieuKienThem, Boolean _daduyet)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spNKPhieuXuat_GetAll", _qadmin, _maKho, _loaiNKPhieu, _daPhat, _tuNgay, _denNgay, _dieuKienThem, _daduyet));
        }
        public override IDataReader GetNKPhieuXuat_C(String _mapx, Byte _orderNumber)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spNKPhieuXuat_Get", _mapx, _orderNumber));
        }

        public override IDataReader GetNKNhapTra(String _mapx, Boolean _qadmin, byte _loaiNKPhieu, byte _daphat)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spNKNhapTra_Get", _mapx, _qadmin, _loaiNKPhieu, _daphat));
        }
        public override IDataReader GetAllNKNhapTra(Boolean _qadmin, String _maKho, Byte _loaiNKPhieu, Byte _daPhat, DateTime _tuNgay, DateTime _denNgay, String _dieuKienThem)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spNKNhapTra_GetAll", _qadmin, _maKho, _loaiNKPhieu, _daPhat, _tuNgay, _denNgay, _dieuKienThem));
        }
        public override IDataReader GetNKNhapTra_C(String _mapx, Byte _orderNumber)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spNKNhapTra_Get", _mapx, _orderNumber));
        }
        public override IDataReader GetNKXuatTra(String _maPXT, Boolean _qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spNKXuatTra_GET", _maPXT, _qadmin));
        }
        public override IDataReader GetAllNKXuatTra(Boolean _qadmin, String makho, String maNCC, DateTime tungay, DateTime denngay, String dieukienthem)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spNKXuatTra_GetAll", _qadmin, makho, maNCC, tungay, denngay, dieukienthem));
        }
        public override IDataReader GetNKXuatTra_C(String _maPXT, Decimal STT)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spNKXuatTra_C_GET", _maPXT, STT));
        }
        public override IDataReader GetAllNKKiemNhap(String _maNKPhieu, Boolean _qadmin, Byte loai)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spNKKiemNHAP_GETALL", _maNKPhieu, _qadmin, loai));
        }
        public override IDataReader GetNKTonDau(String _makho)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spNKTonDAU_GET", _makho));
        }

        public override IDataReader GetNKTonDauKhoa(String makhoa)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spNKTonDAUKhoa_GET", makhoa));
        }

        public override IDataReader GetNKKiemKe(String _maKK, bool qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spNKKiemKE_GET", _maKK, qadmin));
        }
        public override IDataReader GetAllNKKiemKe(String makho, DateTime tungay, DateTime denngay, String dieukienthem, bool qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spNKKiemKe_GETALL", makho, tungay, denngay, dieukienthem, qadmin));
        }
        public override IDataReader GetNKKiemKe_C(String _maKK, Decimal _sTT)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spNKKiemKE_C_GET", _maKK, _sTT));
        }
        public override IDataReader GetNKKiemKe_HD(String _mAKK, Decimal _sTT)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spNKKiemKE_HD_GET", _mAKK, _sTT));
        }
        public override IDataReader GetNKPhieuDoiThuoc(String _maDThuoc, bool _qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spNKPhieuDoiThuoc_GET", _maDThuoc, _qadmin));
        }
        public override IDataReader GetAllNKPhieuDoiThuoc(String makho, String maNCC, DateTime tungay, DateTime denngay, String dieukienthem, bool qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spNKPhieuDoiThuoc_GETALL", makho, maNCC, tungay, denngay, dieukienthem, qadmin));
        }
        public override IDataReader GetNKPhieuDoiThuoc_C(String _maDThuoc, Decimal _sTT)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spNKPhieuDoiThuoc_C_GET", _maDThuoc, _sTT));
        }
        public override IDataReader GetAllNKTonKhoa(DateTime ngayyclinh, string makhoa, String dk)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spNKTonkhoa_GetAll", ngayyclinh, makhoa, dk));
        }
        public override IDataReader GetAllNKTonKhoaCNK(Byte tuan, string thang, DateTime tuNgay, DateTime denNgay)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "CNK_BAOCAOCONGTAC_GETS", tuan, thang, tuNgay, denNgay));
        }
        public override IDataReader FindsAllNKTonKhoaCNK(Byte tuan, string thang)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "CNK_BAOCAOCONGTAC_C_FINDS", tuan, thang));
        }
        public override IDataReader GetsNKTonKhoa(DateTime tuthang, DateTime denthang, string makhoa, String dk)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spNKTonkhoa_Gets", tuthang, denthang, makhoa, dk));
        }
        public override IDataReader GetsNKBaoCaoCongTacCNK(DateTime tuNgay, DateTime denNgay, String dk)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "CNK_BAOCAOCONGTAC_Finds", tuNgay, denNgay, dk));
        }

        #endregion

        #region Find List
        //NKPhieuNhap
        public override IDataReader FindNKPhieuNhap(string _DK, Boolean _qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spNKPhieuNhap_Finds", _DK, _qadmin));
        }
        public override IDataReader FindNKPhieuDoiThuoc(bool qadmin, string dk)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spNKPhieuDoiThuoc_FINDS", qadmin, dk));
        }
        #endregion
        #region NKPhieuXuat
        public override String InsertNKPhieuXuat(String _noiXuat, SmartDate _ngayXuat, SmartDate _ngayXuatTT, String _noiNhap, Byte _loaiNKPhieu, String _soCT, String _nvXuat, String _nvNhan, String _ghiChu, Boolean _huy, String _nguoiLap, Boolean _khoaYC, string _maMay, Boolean _daPhat, Boolean _daDuyet)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spNKPhieuXUAT_CREATE", _noiXuat, _ngayXuat.DBValue, _ngayXuatTT.DBValue, _noiNhap, _loaiNKPhieu, _soCT, _nvXuat, _nvNhan, _ghiChu, _huy, _nguoiLap, _khoaYC, _maMay, _daPhat, _daDuyet));
        }
        public override void UpdateNKPhieuXuat(String _maPX, String _noiXuat, SmartDate _ngayXuat, SmartDate _ngayXuatTT, String _noiNhap, Byte _loaiNKPhieu, String _soCT, String _nvXuat, String _nvNhan, String _ghiChu, Boolean _huy, string _maMay, String _nguoiSD, Boolean _daPhat, Boolean _daDuyet)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spNKPhieuXUAT_UPDATE", _maPX, _noiXuat, _ngayXuat.DBValue, _ngayXuatTT.DBValue, _noiNhap, _loaiNKPhieu, _soCT, _nvXuat, _nvNhan, _ghiChu, _huy, _maMay, _nguoiSD, _daPhat, _daDuyet);
        }
        public override void DeleteNKPhieuXuat(String _maPX, string _maMay, String _nguoiSD)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spNKPhieuXUAT_DELETED", _maPX, _maMay, _nguoiSD);
        }

        #region NKPhieu Xuat chi tiet

        public override String InsertNKPhieuXuat_C(String _maPX, String _maThuoc, Decimal _soLuong, SmartDate _hanSD, String _soLo, Decimal _donGia, Decimal _soLuongYC, Decimal _giaBan, String _ghiChu, String _nguoiSD, string _maMay)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spNKPhieuXUAT_C_CREATE", _maPX, _maThuoc, _soLuong, _hanSD.DBValue, _soLo, _donGia, _soLuongYC, _giaBan, _ghiChu, _nguoiSD, _maMay));
        }
        public override void UpdateNKPhieuXuat_C(String _maPX, Decimal _sTT, String _maThuoc, Decimal _soLuong, SmartDate _hanSD, String _soLo, Decimal _donGia, Decimal _soLuongYC, Decimal _giaBan, Boolean _huy, String _ghiChu, String _nguoiSD, string _maMay)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spNKPhieuXUAT_C_UPDATE", _maPX, _sTT, _maThuoc, _soLuong, _hanSD.DBValue, _soLo, _donGia, _soLuongYC, _giaBan, _huy, _ghiChu, _nguoiSD, _maMay);
        }
        public override void DeleteNKPhieuXuat_C(String _maPX, Decimal _sTT, String _nguoiSD, string _maMay)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spNKPhieuXUAT_C_DELETED", _maPX, _sTT, _nguoiSD, _maMay);
        }

        #endregion
        public override IDataReader GetNKPhieuDTNhap(String _maDuTru, bool qadmin)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spNKPhieuDTNhap_GET", _maDuTru, qadmin));
        }
        public override IDataReader GetAllNKPhieuDTNhap(Boolean _qadmin, String _maKho, DateTime _tuNgay, DateTime _denNgay, String _dKien)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spNKPhieuDTNhap_GETALL", _qadmin, _maKho, _tuNgay, _denNgay, _dKien));
        }
        public override IDataReader GetNKPhieuDTNhap_C(String _maDuTru, Decimal _sTT)
        {
            return ((IDataReader)SqlHelper.ExecuteReader(ConnectionString, DatabaseOwner + ObjectQualifier + "spNKPhieuDTNhap_C_GET", _maDuTru, _sTT));
        }
        #endregion


        #region NKPhieuNhap
        public override String InsertNKPhieuNhap(String _noiXuat, SmartDate _ngayNhap, SmartDate _ngayNhapTT, String _noiNhap, Byte _loaiNKPhieu, String _soCT, String _nvXuat, String _nvNhan, String _ghiChu, Boolean _huy, String _nguoiLap, Boolean _khoaYC, string _maMay, Boolean _daPhat, Boolean _daDuyet)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spNKPhieuNhap_CREATE", _noiXuat, _ngayNhap.DBValue, _ngayNhapTT.DBValue, _noiNhap, _loaiNKPhieu, _soCT, _nvXuat, _nvNhan, _ghiChu, _huy, _nguoiLap, _khoaYC, _maMay, _daPhat, _daDuyet));
        }
        public override void UpdateNKPhieuNhap(String _maPN, String _noiXuat, SmartDate _ngayNhap, SmartDate _ngayNhapTT, String _noiNhap, Byte _loaiNKPhieu, String _soCT, String _nvXuat, String _nvNhan, String _ghiChu, Boolean _huy, string _maMay, String _nguoiSD, Boolean _daPhat, Boolean _daDuyet)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spNKPhieuNhap_UPDATE", _maPN, _noiXuat, _ngayNhap.DBValue, _ngayNhapTT.DBValue, _noiNhap, _loaiNKPhieu, _soCT, _nvXuat, _nvNhan, _ghiChu, _huy, _maMay, _nguoiSD, _daPhat, _daDuyet);
        }
        public override void DeleteNKPhieuNhap(String _maPN, string _maMay, String _nguoiSD)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spNKPhieuNhap_DELETED", _maPN, _maMay, _nguoiSD);
        }

        #region NKPhieu Xuat chi tiet

        public override String InsertNKPhieuNhap_C(String _maPN, String _maThuoc, Decimal _soLuong, SmartDate _hanSD, String _soLo, Decimal _donGia, Decimal _soLuongYC, Decimal _giaBan, String _ghiChu, String _nguoiSD, string _maMay)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spNKPhieuNhap_C_CREATE", _maPN, _maThuoc, _soLuong, _hanSD.DBValue, _soLo, _donGia, _soLuongYC, _giaBan, _ghiChu, _nguoiSD, _maMay));
        }
        public override void UpdateNKPhieuNhap_C(String _maPN, Decimal _sTT, String _maThuoc, Decimal _soLuong, SmartDate _hanSD, String _soLo, Decimal _donGia, Decimal _soLuongYC, Decimal _giaBan, Boolean _huy, String _ghiChu, String _nguoiSD, string _maMay)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spNKPhieuNhap_C_UPDATE", _maPN, _sTT, _maThuoc, _soLuong, _hanSD.DBValue, _soLo, _donGia, _soLuongYC, _giaBan, _huy, _ghiChu, _nguoiSD, _maMay);
        }
        public override void DeleteNKPhieuNhap_C(String _maPN, Decimal _sTT, String _nguoiSD, string _maMay)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spNKPhieuNhap_C_DELETED", _maPN, _sTT, _nguoiSD, _maMay);
        }

        #endregion

        #endregion

        #region Nhap Tra


        public override String InsertNKNhapTra(String _noiNhap, SmartDate _ngayNhap, SmartDate _ngayNhapTT, String _noiXuat, Byte _loaiNKPhieu, String _soCT, String _nvXuat, String _nvNhan, String _ghiChu, String _nguoiLap, Boolean _bnTra, string _maMay, Byte _daPhat)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spNKNhapTra_CREATE", _noiNhap, _ngayNhap.DBValue, _ngayNhapTT.DBValue, _noiXuat, _loaiNKPhieu, _soCT, _nvXuat, _nvNhan, _ghiChu, _nguoiLap, _bnTra, _maMay, _daPhat));
        }
        public override void UpdateNKNhapTra(String _maPX, String _noiXuat, SmartDate _ngayNhap, SmartDate _ngayNhapTT, String _noiNhap, Byte _loaiNKPhieu, String _soCT, String _nvXuat, String _nvNhan, String _ghiChu, Boolean _huy, string _maMay, String _nguoiSD, Byte _daPhat, Boolean _bnTra)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spNKNhapTra_UPDATE", _maPX, _noiXuat, _ngayNhap.DBValue, _ngayNhapTT.DBValue, _noiNhap, _loaiNKPhieu, _soCT, _nvXuat, _nvNhan, _ghiChu, _huy, _maMay, _nguoiSD, _daPhat, _bnTra);
        }
        public override void DeleteNKNhapTra(String _maPX, string _maMay, String _nguoiSD)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spNKNhapTra_DELETED", _maPX, _maMay, _nguoiSD);
        }
        #endregion

        #region Nhap tra chi tiet
        //InsertNKNhapTra_C(String _MaPNT, String _maThuoc, Decimal _soLuong, SmartDate _hanSD,  Decimal _donGia,String _soLo,  Boolean Huy, String _ghiChu,String _maMay, String _nguoiSD);
        public override String InsertNKNhapTra_C(String _maPX, String _maThuoc, Decimal _soLuong, SmartDate _hanSD, Decimal _donGia, String _soLo, Boolean _Huy, String _ghiChu, string _maMay, String _nguoiSD, Decimal _soLuongYC)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spNKNhapTra_C_CREATE", _maPX, _maThuoc, _soLuong, _hanSD.DBValue, _donGia, _soLo, _Huy, _ghiChu, _maMay, _nguoiSD, _soLuongYC));
        }
        public override void UpdateNKNhapTra_C(String _maPX, Decimal _sTT, String _maThuoc, Decimal _soLuong, SmartDate _hanSD, String _soLo, Decimal _donGia, Decimal _soLuongYC, Decimal _giaBan, Boolean _huy, String _ghiChu, String _nguoiSD, string _maMay)
        {

            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spNKNhapTra_C_UPDATE", _maPX, _sTT, _maThuoc, _soLuong, _hanSD.DBValue, _soLo, _donGia, _soLuongYC, _giaBan, _huy, _ghiChu, _nguoiSD, _maMay);
        }
        public override void DeleteNKNhapTra_C(String _maPX, Decimal _sTT, String _nguoiSD, string _maMay)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spNKNhapTra_C_DELETED", _maPX, _sTT, _nguoiSD, _maMay);
        }

        #endregion

        #region NKKiem Nhap
        public override String InsertNKKiemNhap(String _maPhieu, String _maNV, String _maCD, Byte _loai, String _ghichu, string _maMay, String _nguoiSD, Byte _vaiTro)
        {//_maPhieu, _maNV, _maCD, _loai,_huy, _ghichu, _maMay, _nguoiSD, _vaitro
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spNKKiemNhap_CREATE", _maPhieu, _maNV, _maCD, _loai, _ghichu, _maMay, _nguoiSD, _vaiTro));
        }
        public override void UpdateNKKiemNhap(String _maPhieu, Byte _sTT, String _maNV, String _maCD, Byte _loai, Boolean _huy, String _ghichu, string _maMay, String _nguoiSD, Byte _vaiTro)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spNKKiemNhap_UPDATE", _maPhieu, _sTT, _maNV, _maCD, _loai, _huy, _ghichu, _maMay, _nguoiSD, _vaiTro);
        }
        public override void DeleteNKKiemNhap(String _maMay, String _nguoiSD, String _maNKPhieu, Byte _sTT)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spNKKiemNHAP_DELETED", _maMay, _nguoiSD, _maNKPhieu, _sTT);
        }


        #endregion

        #region Xuat Tra
        public override String InsertNKXuatTra(String _maNCC, String _soCT, SmartDate _ngayXT, String _makho, Boolean _thanhtoan, SmartDate _ngayTToan, SmartDate _ngayXuatTT, Decimal _NKTong, String _ghichu, string _maMay, String _nguoiLap, SmartDate _ngayLap, String _nVXuat, String _nVNhan, Decimal _vAT)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spNKXuatTra_CREATE", _maNCC, _soCT, _ngayXT.DBValue, _makho, _thanhtoan, _ngayTToan.DBValue, _ngayXuatTT.DBValue, _NKTong, _ghichu, _maMay, _nguoiLap, _ngayLap.DBValue, _nVXuat, _nVNhan, _vAT));
        }
        public override void UpdateNKXuatTra(String _maPXT, String _maNCC, String _soCT, SmartDate _ngayXT, String _makho, Boolean _thanhtoan, SmartDate _ngayTToan, SmartDate _ngayXuatTT, Decimal _NKTong, String _ghichu, Boolean _huy, String _nguoiSD, string _maMay, String _nVXuat, String _nVNhan, Decimal _vAT)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spNKXuatTra_UPDATE", _maPXT, _maNCC, _soCT, _ngayXT.DBValue, _makho, _thanhtoan, _ngayTToan.DBValue, _ngayXuatTT.DBValue, _NKTong, _ghichu, _huy, _nguoiSD, _maMay, _nVXuat, _nVNhan, _vAT);
        }
        public override void DeleteNKXuatTra(String _maMay, String _nguoiSD, String _maPXT)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spNKXuatTra_DELETED", _maMay, _nguoiSD, _maPXT);
        }
        #endregion

        #region Xuat tra chi tiet
        public override String InsertNKXuatTra_C(String _mathuoc, Decimal _soluong, SmartDate _hanSD, Decimal _donGia, String _soLo, String _ghichu, String _nguoiSD, string _maMay, String _maPXT, Decimal _vAT)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spNKXuatTra_C_CREATE", _mathuoc, _soluong, _hanSD.DBValue, _donGia, _soLo, _ghichu, _nguoiSD, _maMay, _maPXT, _vAT));
        }
        public override void UpdateNKXuatTra_C(Decimal _sTT, String _mathuoc, Decimal _soluong, SmartDate _hanSD, Decimal _donGia, String _soLo, Boolean _huy, String _ghichu, String _nguoiSD, string _maMay, String _maPXT, Decimal _vAT)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spNKXuatTra_C_UPDATE", _sTT, _mathuoc, _soluong, _hanSD.DBValue, _donGia, _soLo, _huy, _ghichu, _nguoiSD, _maMay, _maPXT, _vAT);
        }
        public override void DeleteNKXuatTra_C(String _maMay, String _nguoiSD, String _maPXT, Decimal _sTT)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spNKXuatTra_C_DELETED", _maMay, _nguoiSD, _maPXT, _sTT);
        }

        #endregion

        #region NKTon dau Kho

        public override String InsertNKTonDau(SmartDate _ngayNKTon, String _makho, String _nguoiSD, string _maMay)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spNKTonDau_CREATE", _ngayNKTon.DBValue, _makho, _nguoiSD, _maMay));
        }
        public override void UpdateNKTonDau(SmartDate _ngayNKTon, String _makho, String _nguoiSD, string _maMay)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spNKTonDau_UPDATE", _ngayNKTon.DBValue, _makho, _nguoiSD, _maMay);
        }

        #endregion

        #region NKTon dau Khoa

        public override String InsertNKTonDauKhoa(SmartDate _ngayNKTon, String _makhoa, String _nguoiSD, string _maMay)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spNKTonDauKhoa_CREATE", _ngayNKTon.DBValue, _makhoa, _nguoiSD, _maMay));
        }
        public override void UpdateNKTonDauKhoa(SmartDate _ngayNKTon, String _makhoa, String _nguoiSD, string _maMay)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spNKTonDauKhoa_UPDATE", _ngayNKTon.DBValue, _makhoa, _nguoiSD, _maMay);
        }

        #endregion

        #region NKKiem Ke
        public override String InsertNKKiemKe(SmartDate _ngayKK, String _makho, String _nguoiKK, String _nguoiLap, String _ghiChu, Boolean _xuly, string _maMay, string _makhoa)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spNKKiemKe_Create", _ngayKK.DBValue, _makho, _nguoiKK, _nguoiLap, _ghiChu, _xuly, _maMay, _makhoa));
        }
        public override void UpdateNKKiemKe(String _maKK, SmartDate _ngayKK, String _makho, String _nguoiKK, String _ghiChu, Boolean _xuly, string _maMay, String _nguoiSD, Boolean _huy, string _makhoa)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spNKKiemKe_Update", _maKK, _ngayKK.DBValue, _makho, _nguoiKK, _ghiChu, _xuly, _maMay, _nguoiSD, _huy, _makhoa);
        }
        public override void DeleteNKKiemKe(String _maMay, String _nguoiSD, String _maKK)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spNKKiemKE_DELETED", _maMay, _nguoiSD, _maKK);
        }
        #endregion

        #region NKKiem Ke chi tiet
        public override String InsertNKKiemKe_C(String _maKK, String _maThuoc, Decimal _soLuong, Decimal _dongia, Decimal _sLDC, String _ghiChu, Decimal _sLNKTon, String _nguoiSD, string _maMay)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spNKKiemKE_C_CREATE", _maKK, _maThuoc, _soLuong, _dongia, _sLDC, _ghiChu, _sLNKTon, _nguoiSD, _maMay));
        }
        public override void UpdateNKKiemKe_C(String _maKK, Decimal _sTT, String _maThuoc, Decimal _soLuong, Decimal _dongia, Decimal _sLDC, String _ghiChu, Decimal _sLNKTon, Boolean _huy, String _nguoiSD, string _maMay)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spNKKiemKE_C_UPDATE", _maKK, _sTT, _maThuoc, _soLuong, _dongia, _sLDC, _ghiChu, _sLNKTon, _huy, _nguoiSD, _maMay);
        }
        public override void DeleteNKKiemKe_C(String _maMay, String _nguoiSD, String _maKK, Decimal _sTT)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spNKKiemKE_C_DELETED", _maMay, _nguoiSD, _maKK, _sTT);
        }

        #endregion

        #region NKKiem Ke chi tiet Han dung
        public override String InsertNKKiemKe_HD(String _mAKK, String _maThuoc, SmartDate _hANDUNG, String _solo, Decimal _sOLUONG, Decimal _sLNKTon, Decimal _sLDC, String _ghichu, String _nguoiSD, string _maMay)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spNKKiemKE_HD_CREATE", _mAKK, _maThuoc, _hANDUNG.DBValue, _solo, _sOLUONG, _sLNKTon, _sLDC, _ghichu, _nguoiSD, _maMay));
        }
        public override void UpdateNKKiemKe_HD(String _mAKK, Decimal _sTT, String _maThuoc, SmartDate _hANDUNG, String _solo, Decimal _sOLUONG, Decimal _sLNKTon, Decimal _sLDC, String _ghichu, Boolean _huy, String _nguoiSD, string _maMay)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spNKKiemKE_HD_UPDATE", _mAKK, _sTT, _maThuoc, _hANDUNG.DBValue, _solo, _sOLUONG, _sLNKTon, _sLDC, _ghichu, _huy, _nguoiSD, _maMay);
        }
        public override void DeleteNKKiemKe_HD(String _maMay, String _nguoiSD, String _maKK, Decimal _sTT)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spNKKiemKE_HD_DELETED", _maMay, _nguoiSD, _maKK, _sTT);
        }
        #endregion

        #region NKPhieu Doi Thuoc
        public override String InsertNKPhieuDoiThuoc(String _maNCC, String _soCT, SmartDate _ngayDThuoc, String _makho, String _ghichu, String _nguoiLap, string _maMay)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spNKPhieuDoiThuoc_CREATE", _maNCC, _soCT, _ngayDThuoc.DBValue, _makho, _ghichu, _nguoiLap, _maMay));
        }
        public override void UpdateNKPhieuDoiThuoc(String _maDThuoc, String _maNCC, String _soCT, SmartDate _ngayDThuoc, String _makho, String _ghichu, Boolean _huy, String _nguoiSD, string _maMay)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spNKPhieuDoiThuoc_UPDATE", _maDThuoc, _maNCC, _soCT, _ngayDThuoc.DBValue, _makho, _ghichu, _huy, _nguoiSD, _maMay);
        }
        public override void DeleteNKPhieuDoiThuoc(String _maMay, String _nguoiSD, String _maDThuoc)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spNKPhieuDoiThuoc_DELETED", _maMay, _nguoiSD, _maDThuoc);
        }


        #endregion

        #region NKPhieu Doi Thuoc Chi tiet
        public override String InsertNKPhieuDoiThuoc_C(String _maDThuoc, String _mathuoc, Decimal _soluong, SmartDate _hanSD, SmartDate _hanSDCu, Decimal _donGia, String _soLo, String _soLoCu, String _ghichu, String _nguoiSD, string _maMay)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spNKPhieuDoiThuoc_C_CREATE", _maDThuoc, _mathuoc, _soluong, _hanSD.DBValue, _hanSDCu.DBValue, _donGia, _soLo, _soLoCu, _ghichu, _nguoiSD, _maMay));
        }
        public override void UpdateNKPhieuDoiThuoc_C(String _maDThuoc, Decimal _sTT, String _mathuoc, Decimal _soluong, SmartDate _hanSD, SmartDate _hanSDCu, Decimal _donGia, String _soLo, String _soLoCu, Boolean _huy, String _ghichu, String _nguoiSD, string _maMay)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spNKPhieuDoiThuoc_C_UPDATE", _maDThuoc, _sTT, _mathuoc, _soluong, _hanSD.DBValue, _hanSDCu.DBValue, _donGia, _soLo, _soLoCu, _huy, _ghichu, _nguoiSD, _maMay);
        }
        public override void DeleteNKPhieuDoiThuoc_C(String _maMay, String _nguoiSD, String _maDThuoc, Decimal _sTT)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spNKPhieuDoiThuoc_C_DELETED", _maMay, _nguoiSD, _maDThuoc, _sTT);
        }
        #endregion

        #region Phieu Du tru Nhap
        public override String InsertNKPhieuDTNhap(String _soCT, SmartDate _ngayPhieu, String _makho, String _nguoiDuTru, Decimal _tong, String _ghichu, String _nguoiLap, string _maMay, string _maNCC)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spNKPhieuDTNhap_CREATE", _soCT, _ngayPhieu.DBValue, _makho, _nguoiDuTru, _tong, _ghichu, _nguoiLap, _maMay, _maNCC));
        }
        public override void UpdateNKPhieuDTNhap(String _maDuTru, String _soCT, SmartDate _ngayPhieu, String _makho, String _nguoiDuTru, Decimal _tong, String _ghichu, Boolean _huy, String _nguoiSD, string _maMay, string _maNCC)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spNKPhieuDTNhap_update", _maDuTru, _soCT, _ngayPhieu.DBValue, _makho, _nguoiDuTru, _tong, _ghichu, _huy, _nguoiSD, _maMay, _maNCC);
        }
        public override void DeleteNKPhieuDTNhap(String _maMay, String _nguoiSD, String _maDuTru)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spNKPhieuDTNhap_DELETED", _maMay, _nguoiSD, _maDuTru);
        }

        #endregion

        #region Phieu Du tru Nhap chi tiet
        public override String InsertNKPhieuDTNhap_C(String _maDuTru, String _mathuoc, Decimal _soluong, Decimal _donGia, String _ghichu, String _nguoiSD, string _maMay)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spNKPhieuDTNhap_C_CREATE", _maDuTru, _mathuoc, _soluong, _donGia, _ghichu, _nguoiSD, _maMay));
        }
        public override void UpdateNKPhieuDTNhap_C(String _maDuTru, Decimal _sTT, String _mathuoc, Decimal _soluong, Decimal _donGia, Boolean _huy, String _ghichu, String _nguoiSD, string _maMay)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spNKPhieuDTNhap_C_UPDATE", _maDuTru, _sTT, _mathuoc, _soluong, _donGia, _huy, _ghichu, _nguoiSD, _maMay);
        }
        public override void DeleteNKPhieuDTNhap_C(String _maMay, String _nguoiSD, String _maDuTru, Decimal _sTT)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spNKPhieuDTNhap_C_DELETED", _maMay, _nguoiSD, _maDuTru, _sTT);
        }
        #endregion
        #region Ton Khoa

        public override String InsertNKTonKhoa(String _makhoa, String _mathuoc, SmartDate _thang, Decimal _soDK, Decimal _sLN, Decimal _sLX, Decimal _sLNT, Decimal _sLXT, Decimal _sLDC, Decimal _tonCK, Decimal _giaNhap, String _nguoiSD, string _maMay)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "spNKTonKhoa_CREATE", _makhoa, _mathuoc, _thang.DBValue, _soDK, _sLN, _sLX, _sLNT, _sLXT, _sLDC, _tonCK, _giaNhap, _nguoiSD, _maMay));
        }
        public override void UpdateNKTonKhoa(String _makhoa, String _mathuoc, SmartDate _thang, Decimal _soDK, Decimal _sLN, Decimal _sLX, Decimal _sLNT, Decimal _sLXT, Decimal _sLDC, Decimal _tonCK, Decimal _giaNhap, String _nguoiSD, string _maMay)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "spNKTonKhoa_UPDATE", _makhoa, _mathuoc, _thang.DBValue, _soDK, _sLN, _sLX, _sLNT, _sLXT, _sLDC, _tonCK, _giaNhap, _nguoiSD, _maMay);
        }
        public override String InsertNKBCCongtacCNK(Byte _tuan, String _thang, SmartDate _tungay, SmartDate _denngay, String _maNK, Decimal _sLGiatNV, Decimal _tLGiatNV, Decimal _sLGiatBN, Decimal _tLGiatBN, Int32 _laQuan, Decimal _laGa, Int32 _dovai, Int32 _bongGac, Int32 _dungcu, Int32 _taiche, Int32 _nguyHai, String _ghichu)
        {
            return System.Convert.ToString(SqlHelper.ExecuteScalar(ConnectionString, DatabaseOwner + ObjectQualifier + "CNK_BAOCAOCONGTAC_INSERT", _tuan, _thang, _tungay.DBValue, _denngay.DBValue, _maNK, _sLGiatNV, _tLGiatNV, _sLGiatBN, _tLGiatBN, _laQuan, _laGa, _dovai, _bongGac, _dungcu, _taiche, _nguyHai, _ghichu));
        }
        public override void UpdateNKBCCongtacCNK(Byte _tuan, String _thang, SmartDate _tungay, SmartDate _denngay, String _maNK, Decimal _sLGiatNV, Decimal _tLGiatNV, Decimal _sLGiatBN, Decimal _tLGiatBN, Int32 _laQuan, Decimal _laGa, Int32 _dovai, Int32 _bongGac, Int32 _dungcu, Int32 _taiche, Int32 _nguyHai, String _ghichu)
        {
            SqlHelper.ExecuteNonQuery(ConnectionString, DatabaseOwner + ObjectQualifier + "CNK_BAOCAOCONGTAC_UPDATE", _tuan, _thang, _tungay.DBValue, _denngay.DBValue, _maNK, _sLGiatNV, _tLGiatNV, _sLGiatBN, _tLGiatBN, _laQuan, _laGa, _dovai, _bongGac, _dungcu, _taiche, _nguyHai, _ghichu);
        }

        #endregion
        #endregion


		///
		public override DataSet CRTTEST()
		{
			DataSet ds = new DataSet();
            string[] s = { "CRTSPLKThaythe" };
			SqlHelper.FillDataset(ConnectionString, DatabaseOwner + ObjectQualifier + "SPLKThaythe_GETALL", ds, s, "PX041540001", 1, 1);
			//ds.WriteXmlSchema("i:\\CRTSPLKThaythe.xsd");
			return ds;
		}
		public override String DuanConnectString()
		{
			return ConfigurationManager.ConnectionStrings["SqlDataProvider"].ConnectionString + "; connection timeout=120; pooling=true; Max Pool Size=6000;Timeout=360;MultipleActiveResultSets=True";
		}

        public override void UpdateDMThuoc(string maThuoc, string parent, string maNhom, string maPL, string maChungLoai, string tenGoc, string tenTC, string tenTM, string tenTM1, string tenTM2, string tenTA, bool thuocGoc, decimal ngaydungtoida, string maNSX, string hamLuong, string maDVTHL, decimal nguong, decimal nguongNhap, string maDVT, decimal quydoi, string maThuoc2, string maDVT2, bool apDungGoi, bool handung, string lieudung, string cachdung, string khoban, string khophat, bool thuocThuT, bool thuocPhauT, byte bh50, bool thuocCLS, bool thuocNoiT, bool thuocDuoc, bool thuocBan, bool duyetNgoaiT, bool duyetNoiT, bool thuocHoiChan, string ghichu, string maMay, bool huy, string nguoiSD, string malh, string quycach, string matk, bool thuocban2, bool khongSD, string maql, byte thuocTieuHao, string matp, string duongdung, decimal gianhap, decimal gianhap43, decimal gianhap56, string maBYTe, string quyetDinh, string tenTMBH, string maBH, string maTDuong, string quyetDinhBH, string tenBYTe)
        {
            throw new NotImplementedException();
        }
        ///
    }
}


